{"failureDictionary":{"com.graphhopper.search.NameIndexTest.testCreate":50,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":303,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":153,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":167,"com.graphhopper.reader.OSMReaderTest.testFerry":343,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":38,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":39,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":253,"com.graphhopper.routing.QueryGraphTest.testOneWay":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":234,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":149,"com.graphhopper.reader.OSMReaderTest.testWithBounds":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":90,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":259,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":314,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":315,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":364,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":272,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":175,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":233,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":278,"com.graphhopper.GraphHopperTest.testPrepare":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":302,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":100,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":268,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":285,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":362,"com.graphhopper.util.InstructionListTest.testWayList":35,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":133,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":294,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":192,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":224,"com.graphhopper.GraphHopperAPITest.testDisconnected179":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":201,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":319,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":286,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":150,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":332,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":211,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":218,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":324,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":3,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":106,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":281,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":178,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":151,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":212,"com.graphhopper.reader.OSMReaderTest.testSort":12,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":297,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":317,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":230,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":55,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":99,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":307,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":340,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":95,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":323,"com.graphhopper.routing.PathTest.testWayList":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":223,"com.graphhopper.coll.OSMIDMapTest.testGet2":334,"com.graphhopper.coll.GHSortedCollectionTest.testInsert":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":244,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":284,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":349,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":148,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":292,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":227,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":64,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":251,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":299,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":46,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":331,"com.graphhopper.util.GHUtilityTest.testSort":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":155,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":288,"com.graphhopper.coll.OSMIDMapTest.testGetLong":336,"com.graphhopper.search.NameIndexTest.testPut":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":93,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":103,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":266,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":77,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":198,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":245,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":54,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":141,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":322,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":52,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":210,"com.graphhopper.storage.MMapDirectoryTest.testSynched":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":213,"com.graphhopper.GraphHopperAPITest.testLoad":338,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":350,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":306,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":112,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":208,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":102,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":363,"com.graphhopper.reader.OSMReaderTest.testBarriers":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":320,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":231,"com.graphhopper.routing.PathTest.testFound":325,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":171,"com.graphhopper.util.GHUtilityTest.testCopy":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":290,"com.graphhopper.routing.PathTest.testFindInstruction":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":282,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":70,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":49,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":357,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":139,"com.graphhopper.util.InstructionListTest.testEmptyList":33,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":109,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":293,"com.graphhopper.coll.GHSortedCollectionTest.testPoll":21,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":166,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":131,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":298,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":86,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":274,"com.graphhopper.reader.PrinctonReaderTest.testRead":341,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":65,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":207,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":217,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":239,"com.graphhopper.util.InstructionListTest.testWayList2":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":181,"com.graphhopper.reader.OSMReaderTest.testFoot":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":159,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":267,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":156,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":136,"com.graphhopper.reader.OSMReaderTest.testOneWay":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":63,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":91,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":321,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":219,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":87,"com.graphhopper.storage.RAMDirectoryTest.testSynched":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":69,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":356,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":193,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":101,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":108,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":14,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":305,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":361,"com.graphhopper.coll.OSMIDMapTest.testGet":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":280,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":358,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":271,"com.graphhopper.routing.PathBidirRefTest.testExtract":309,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":335,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":45,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":359,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":311,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":209,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":94,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":187,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":41,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":97,"com.graphhopper.util.GHUtilityTest.testSort2":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":300,"com.graphhopper.reader.OSMReaderTest.testMain":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":246,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":247,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":96,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":354,"com.graphhopper.routing.PathBidirRefTest.testExtract2":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":241,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":283,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":160,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":170,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":312,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":191,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":47,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":232,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":81,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":347,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":353,"com.graphhopper.storage.GraphHopperStorageTest.testClone":104,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":152,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":237,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":114,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":355,"com.graphhopper.routing.PathTest.testTime":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":221,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":275,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":296,"com.graphhopper.reader.OSMReaderTest.testRelation":344,"com.graphhopper.util.GHUtilityTest.testSortDirected":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":61,"com.graphhopper.storage.StorablePropertiesTest.testLoad":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":236,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":226,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":169,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":295,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":18,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":345,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":206,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":258,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":37,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":180,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":182,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":225,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":327,"com.graphhopper.util.InstructionListTest.testFind":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":269,"com.graphhopper.coll.GHSortedCollectionTest.testUpdate":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":216},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"f9775d3a-8272-11e5-9ae8-2d73cfbb6663","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:657","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(long, int)"},"status":-1},{"failures":[],"tindex":"f9775d3b-8272-11e5-9ae8-cf41d929b70b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((((((\"time(pass1): \" + ((int)(com.graphhopper.util.StopWatch.getSeconds()))) + \" pass2: \") + ((int)(com.graphhopper.util.StopWatch.getSeconds()))) + \" total:\") + ((int)(((com.graphhopper.util.StopWatch.getSeconds()) + (com.graphhopper.util.StopWatch.getSeconds()))))))"},"status":0},{"failures":[21,22,23],"tindex":"f977844c-8272-11e5-9ae8-1b10471ca83d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:81","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Integer, gnu.trove.set.hash.TIntHashSet>.put(int, (gnu.trove.set.hash.TIntHashSet = new gnu.trove.set.hash.TIntHashSet(int)))"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,2,3,4,46,8,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,263,264,264,265,265,266,266,267,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,10,11,12,13,14,15,16,17,344,345,18,346,19,347,348,20,349,350,351],"tindex":"f977844d-8272-11e5-9ae8-ab139446af1e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"variableMap":{"indexCopy":"da","index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:119","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder)"},"status":-1},{"failures":[0,5,6,352,353,354,355],"tindex":"f977d26e-8272-11e5-9ae8-ab036af00b9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:294","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.setEdgesHeader();\n    com.graphhopper.storage.CHGraphImpl.flush();\n}"},"variableMap":{"chGraphs":"chGraphs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:137","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    java.util.List<com.graphhopper.routing.util.Weighting>.add(com.graphhopper.storage.CHGraphImpl.getWeighting());\n}"},"status":-1},{"failures":[],"tindex":"f977d26f-8272-11e5-9ae8-63f74d5aa352","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:721","type":"CtLocalVariableImpl","sourcecode":"double double = double - (int * (double))"},"variableMap":{"deltaLon":"deltaLon","queryLon":"lon","iteration":"paddingTiles"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:654","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) - ((0.5 + int) * (double))"},"status":-2},{"failures":[],"tindex":"f977d270-8272-11e5-9ae8-a571ebcafeb9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:236","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.(isStoring()) && (new java.io.File(((java.lang.String) + java.lang.String)).exists()))\n    throw new java.lang.IllegalArgumentException(\"file newName already exists!\");\n"},"variableMap":{"newName":"location","this":"da","location":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:172","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess.getType().isStoring())\n    com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)));\n"},"status":-2},{"failures":[],"tindex":"f977d271-8272-11e5-9ae8-17a48c66a7da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double)"},"variableMap":{"a":"to","b":"to","distance":"dist","this":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Graph.edge(int, int, double, false)"},"status":-2},{"failures":[268,276,277,356,283,284,286,289,302,306],"tindex":"f977f982-8272-11e5-9ae8-1f65f0255b21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:96","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true)"},"status":-1},{"failures":[],"tindex":"f977f983-8272-11e5-9ae8-85a6dbcc00e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:335","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:160","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"failures":[],"tindex":"f977f984-8272-11e5-9ae8-4fcc4f05f553","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:628","type":"CtIfImpl","sourcecode":"if ((int == int) && ((com.graphhopper.routing.DijkstraOneToMany.getWeight(int)) <= double))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"f977f985-8272-11e5-9ae8-498df6a3b446","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"towerNodeDistance","orientation":"towerNodeDistance","java.lang.Math.PI":"towerNodeDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"status":0},{"failures":[],"tindex":"f977f986-8272-11e5-9ae8-6d4b1de66a07","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:117","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.OSMIDSegmentedMap.getNoEntryValue()"},"status":-2},{"failures":[357,358,359,360,361,362],"tindex":"f977f987-8272-11e5-9ae8-f7050900a2a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:246","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    byte[][int] = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.getByte((((long) + long) + int));\n}"},"status":-1},{"failures":[1],"tindex":"f977f988-8272-11e5-9ae8-b7bbc657afd5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:80","type":"CtIfImpl","sourcecode":"if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n    com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n    com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n    com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n} "},"status":-1},{"failures":[363],"tindex":"f9782099-8272-11e5-9ae8-59fd470d8dc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:256","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"E_ADDITIONAL":"minutes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:496","type":"CtAssignmentImpl","sourcecode":"int = ((java.lang.Integer.parseInt(java.lang.String)) * 60) * 24"},"status":-1},{"failures":[],"tindex":"f978209a-8272-11e5-9ae8-d34320d9f28e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[364,365,349,350,351],"tindex":"f978209b-8272-11e5-9ae8-730a8d65db05","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edgeId":"index","nextEdgeId":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:245","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromShort(byte[][][int], short, int)"},"status":-1},{"failures":[],"tindex":"f978209c-8272-11e5-9ae8-81eae56763ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:304","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[40,41,42,44,2,3,252],"tindex":"f978209d-8272-11e5-9ae8-d364b496b253","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"variableMap":{"com.graphhopper.util.PointList.EMPTY":"basePoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:349","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.clone(true)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}