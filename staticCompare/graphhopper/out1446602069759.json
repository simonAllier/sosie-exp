{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":259,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":384,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":95,"com.graphhopper.reader.OSMReaderTest.testFerry":17,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":178,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":431,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":286,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":400,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":444,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":331,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":209,"com.graphhopper.coll.CompressedArrayTest.testCompress":458,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":120,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":364,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":226,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":110,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":358,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":234,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":258,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":222,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":250,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":448,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":119,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":212,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":78,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":219,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":432,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":215,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":237,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":79,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":125,"com.graphhopper.reader.OSMReaderTest.testSort":20,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":137,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":362,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":151,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":463,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":334,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":198,"com.graphhopper.storage.RAMDataAccessTest.testHeader":269,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":294,"com.graphhopper.storage.MMapDataAccessTest.testHeader":271,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":452,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":56,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":351,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":295,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":35,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":425,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":74,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":150,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":255,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":441,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":300,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":50,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":412,"com.graphhopper.coll.CompressedArrayTest.testCompress2":457,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":168,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":390,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":299,"com.graphhopper.GraphHopperAPITest.testLoad":31,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":161,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":155,"com.graphhopper.reader.OSMReaderTest.testBarriers":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":246,"com.graphhopper.util.GHUtilityTest.testCopy":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":449,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":446,"com.graphhopper.routing.PathTest.testFindInstruction":456,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":403,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":413,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":307,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":174,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":302,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":399,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":387,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":100,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":349,"com.graphhopper.util.InstructionListTest.testWayList2":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":85,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":430,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":429,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":346,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":43,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":90,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":154,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":144,"com.graphhopper.routing.PathBidirRefTest.testExtract":220,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":414,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":287,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":340,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":59,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":113,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":284,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":89,"com.graphhopper.util.GHUtilityTest.testSort2":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":256,"com.graphhopper.reader.OSMReaderTest.testMain":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":372,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":434,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":145,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":437,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":398,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":279,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":126,"com.graphhopper.storage.GraphHopperStorageTest.testClone":157,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":333,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":379,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":348,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":359,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":377,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":424,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":327,"com.graphhopper.routing.PathTest.testTime":454,"com.graphhopper.util.InstructionListTest.testCreateGPX":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":342,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":383,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":109,"com.graphhopper.util.GHUtilityTest.testSortDirected":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":134,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":196,"com.graphhopper.GraphHopperTest.testFootOnly":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":67,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":326,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":374,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":216,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":388,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":243,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":105,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":81,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":192,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":266,"com.graphhopper.routing.QueryGraphTest.testOneWay":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":141,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":461,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":77,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":459,"com.graphhopper.reader.OSMReaderTest.testWithBounds":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":208,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":367,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":415,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":386,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":416,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":450,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":301,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":46,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":153,"com.graphhopper.search.NameIndexTest.testFlush":265,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":241,"com.graphhopper.util.InstructionListTest.testWayList":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":427,"com.graphhopper.GraphHopperAPITest.testDisconnected179":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":101,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":462,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":406,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":439,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":376,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":117,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":159,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":54,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":408,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":235,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":170,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":321,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":69,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":263,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":438,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":355,"com.graphhopper.routing.PathTest.testWayList":455,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":335,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":421,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":102,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":264,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":270,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":323,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":435,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":337,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":409,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":392,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":218,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":419,"com.graphhopper.util.GHUtilityTest.testSort":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":82,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":353,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":465,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":58,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":156,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":309,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":93,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":121,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":395,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":147,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":197,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":205,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":312,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":267,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":417,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":442,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":262,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":112,"com.graphhopper.routing.PathTest.testFound":453,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":16,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":389,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":451,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":238,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":44,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":329,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":254,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":382,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":369,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":350,"com.graphhopper.reader.PrinctonReaderTest.testRead":29,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":129,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":447,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":426,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":393,"com.graphhopper.reader.OSMReaderTest.testFoot":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":111,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":325,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":464,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":443,"com.graphhopper.reader.OSMReaderTest.testOneWay":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":354,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":131,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":173,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":107,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":160,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":378,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":433,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":225,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":315,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":187,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":148,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":122,"com.graphhopper.routing.PathBidirRefTest.testExtract2":221,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":423,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":75,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":139,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":281,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":118,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":410,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":260,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":149,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":361,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":380,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":397,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":124,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":420,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":98,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":385,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":381,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":347,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":310,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":251,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":291,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":275,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":338,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":184,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":411,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":106,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":345,"com.graphhopper.util.InstructionListTest.testFind":180,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":404,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":33},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264],"tindex":"fc94716a-8296-11e5-82c1-b365d6103f4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long <<= 1) {\n    if ((long & long) != 0)\n        long |= 1;\n    \n    long <<= 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"variableMap":{"res":"edgePointer","maxBit":"edgePointer","delta":"E_LINKA","maxBits":"nextEdge","value":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[1,12,13,14,265,266,33,267,268,269,270,271,272,122,124,151,273],"tindex":"fc97cccb-8296-11e5-82c1-2342629835ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"com.graphhopper.storage.EdgeAccess.NO_NODE":"i","nodeId":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:107","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeInt(int[][int])"},"status":-1},{"failures":[206,207,212],"tindex":"fc97cccc-8296-11e5-82c1-b3a2a3214f76","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"variableMap":{"segmentSizeInBytes":"index","indexDivisor":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:80","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"fc97cccd-8296-11e5-82c1-5f7f27619a2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:161","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"variableMap":{"red":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"fc97ccce-8296-11e5-82c1-4fb0236a85a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:133","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"variableMap":{"size":"ferryBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:213","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":0},{"failures":[],"tindex":"fc97f3df-8296-11e5-82c1-8f7d027f64cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:142","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0)) {\n    return false;\n} "},"variableMap":{"file":"file"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:235","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0))\n    return false;\n"},"status":0},{"failures":[],"tindex":"fc97f3e0-8296-11e5-82c1-377bca237fa2","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:884","type":"CtIfImpl","sourcecode":"if ((\"fastest\".equalsIgnoreCase(java.lang.String)) || (java.lang.String.isEmpty())) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n        return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    else\n        return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    \n} "},"variableMap":{"com.graphhopper.routing.util.PriorityWeighting.class":"com.graphhopper.routing.util.PriorityWeighting.class","weightingMap":"weightingMap","weighting":"weighting","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:881","type":"CtIfImpl","sourcecode":"if (\"shortest\".equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.util.ShortestWeighting(com.graphhopper.routing.util.FlagEncoder);\n} else if ((\"fastest\".equalsIgnoreCase(java.lang.String)) || (java.lang.String.isEmpty())) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n        return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    else\n        return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    \n} "},"status":-2},{"failures":[274,184],"tindex":"fc97f3e1-8296-11e5-82c1-51d45bb499a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:218","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trkpt lat=\\'\")"},"variableMap":{"track":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\").append(com.graphhopper.util.Instruction.getTime())"},"status":-1},{"failures":[],"tindex":"fc981af2-8296-11e5-82c1-2fa637566c85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:245","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:271","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"))"},"status":-2},{"failures":[],"tindex":"fc981af3-8296-11e5-82c1-79f3ce38a9d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"nodes","index":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:392","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":0},{"failures":[],"tindex":"fc981af4-8296-11e5-82c1-af6906196b6c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:467","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.reader.OSMTurnRelation)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-2},{"failures":[24,275,193,276,277,278],"tindex":"fc984205-8296-11e5-82c1-15b8c344e397","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:204","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineTurnBits(int, int)"},"status":-1},{"failures":[279,280,281,282,283,284,285,286],"tindex":"fc984206-8296-11e5-82c1-51b740fb3d98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:388","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"variableMap":{"tInt":"highwaySpeed","speed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    if (java.lang.Integer != null) {\n        if (!(com.graphhopper.reader.OSMWay.hasTag(\"service\")))\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n}"},"status":-1},{"failures":[],"tindex":"fc984207-8296-11e5-82c1-afbde92039cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:201","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"variableMap":{"finishedTo":"elevation","finishedFrom":"elevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:140","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"fc984208-8296-11e5-82c1-af5972371af1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setSkippedEdges\")"},"variableMap":{"this":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:686","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.util.EdgeIteratorState))\n    com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState);\n"},"status":-2},{"failures":[0,1,287,2,3,4,5,6,288,7,8,9,10,11,12,289,13,14,15,16,290,17,18,19,20,21,22,23,24,25,291,26,27,292,293,28,294,29,30,31,32,33,295,296,34,35,36,37,38,39,40,41,297,42,298,299,43,44,300,45,46,47,48,49,50,301,52,53,54,55,302,303,56,57,304,305,58,59,306,307,308,309,310,311,312,313,314,315,316,317,60,61,318,62,319,63,64,65,66,67,320,68,321,69,70,71,72,73,322,74,75,76,323,77,78,79,80,81,324,82,325,83,84,85,86,87,88,89,90,326,91,92,93,94,95,96,97,98,99,100,327,101,328,329,102,103,330,104,105,106,107,108,109,331,111,112,113,114,332,333,115,116,334,335,117,118,119,336,272,120,121,337,122,338,123,339,340,124,341,125,126,127,128,129,130,131,132,342,133,343,344,345,134,135,346,136,137,138,139,140,141,142,347,348,143,349,144,145,146,350,351,147,148,352,353,354,149,150,355,151,152,153,154,155,156,157,158,159,356,160,357,358,161,162,359,163,164,165,166,167,168,360,170,171,172,173,361,362,174,175,363,364,176,177,178,179,180,181,182,183,184,185,186,187,365,188,366,189,190,191,192,193,194,195,196,367,197,198,199,200,201,202,368,203,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,204,205,391,392,279,393,394,395,396,397,398,399,400,401,402,403,404,405,206,207,208,209,406,210,211,212,213,407,408,409,214,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,282,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,284,285,444,445,446,447,448,449,450,451,452,215,453,454,216,217,455,456,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264],"tindex":"fc986919-8296-11e5-82c1-ffa99625eae7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[457,458,459,460,461,462,463,464,465],"tindex":"fc98902a-8296-11e5-82c1-2be374879f29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"fc98902b-8296-11e5-82c1-836abb239d3c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"status":-2},{"failures":[],"tindex":"fc98902c-8296-11e5-82c1-b739fa1fb100","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"current","newSize":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:43","type":"CtWhileImpl","sourcecode":"while ((gnu.trove.stack.array.TIntArrayStack.size()) > 0) {\n    int = gnu.trove.stack.array.TIntArrayStack.pop();\n    if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && com.graphhopper.util.XFirstSearch.(goFurther(int))) {\n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n            if (com.graphhopper.util.XFirstSearch.checkAdjacent(com.graphhopper.util.EdgeIterator)) {\n                gnu.trove.stack.array.TIntArrayStack.push(int);\n            } \n        }\n        com.graphhopper.coll.GHBitSet.add(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"fc98b73d-8296-11e5-82c1-85b618633f23","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.contractNodes()"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"fc97f3df-8296-11e5-82c1-8f7d027f64cb","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"fc981af3-8296-11e5-82c1-79f3ce38a9d7","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.create"]},"type":"staticDiff"}]}]}