{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":120,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":99,"com.graphhopper.reader.OSMReaderTest.testFerry":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":62,"com.graphhopper.routing.QueryGraphTest.testOneWay":129,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":95,"com.graphhopper.reader.OSMReaderTest.testWithBounds":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":70,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":18,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":13,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":55,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":81,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":75,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":19,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":46,"com.graphhopper.storage.MMapDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":12,"com.graphhopper.GraphHopperTest.testPrepare":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":49,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":71,"com.graphhopper.util.InstructionListTest.testWayList2":109,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":105,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":63,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":122,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":15,"com.graphhopper.util.BitUtilLittleTest.testToBitString":110,"com.graphhopper.util.InstructionListTest.testWayList":108,"com.graphhopper.reader.OSMReaderTest.testOneWay":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":67,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":17,"com.graphhopper.GraphHopperAPITest.testDisconnected179":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":78,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":26,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":64,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":96,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":37,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":72,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":29,"com.graphhopper.coll.OSMIDMapTest.testGet":77,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":53,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":118,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":97,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":127,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":4,"com.graphhopper.reader.OSMReaderTest.testSort":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":59,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":125,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":114,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":0,"com.graphhopper.reader.OSMReaderTest.testMain":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":47,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":104,"com.graphhopper.util.PointListTest.testReverse":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":84,"com.graphhopper.routing.PathTest.testWayList":61,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":91,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":74,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":86,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":89,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":98,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":69,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":2,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":25,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":54,"com.graphhopper.GraphHopperTest.testFootAndCar":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":51,"com.graphhopper.util.BitUtilLittleTest.testToFloat":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":113,"com.graphhopper.storage.StorablePropertiesTest.testLoad":8,"com.graphhopper.GraphHopperTest.testPrepareOnly":20,"com.graphhopper.GraphHopperTest.testVia":22,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":27,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":41,"com.graphhopper.GraphHopperAPITest.testLoad":123,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":23,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":80,"com.graphhopper.GraphHopperTest.testFootOnly":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":115,"com.graphhopper.util.BitUtilLittleTest.testToInt":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":92,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":50,"com.graphhopper.reader.OSMReaderTest.testBarriers":36,"com.graphhopper.util.InstructionListTest.testFind":107,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":28,"com.graphhopper.util.GHUtilityTest.testCopy":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":116,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":101},"transformations":[{"failures":[],"tindex":"58dfd2dd-82ab-11e5-9186-c39f51879294","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    byte[] byte[] = new byte[int];\n    int int = java.io.RandomAccessFile.read(byte[]);\n    if (int <= 0)\n        throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n    \n    byte[][][int] = byte[];\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"58dff9ee-82ab-11e5-9186-f7fdac3c9864","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:100","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:67","type":"CtReturnImpl","sourcecode":"return (java.lang.String) + (java.lang.String)"},"status":-1},{"failures":[],"tindex":"58dff9ef-82ab-11e5-9186-f5964e68cb72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:137","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"E\""},"status":-2},{"failures":[8,19,21,22,30,31,23,24,26,27,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"58dff9f0-82ab-11e5-9186-6f86df50b797","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:835","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.reader.PillarInfo.setNode(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n    int = com.graphhopper.reader.OSMReader.addTowerNode(long, double, double, double);\n} else {\n    if (com.graphhopper.util.PointList.is3D())\n        com.graphhopper.util.PointList.add(double, double, double);\n    else\n        com.graphhopper.util.PointList.add(double, double);\n    \n}"},"status":-1},{"failures":[],"tindex":"58dff9f1-82ab-11e5-9186-0fdebed2f603","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:361","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLongitude(int)"},"status":-2},{"failures":[46,47,48,49,50,51,8,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,38],"tindex":"58e02102-82ab-11e5-9186-d5e21472adc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:240","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[8],"tindex":"58e02103-82ab-11e5-9186-f793fe7cab3c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"variableMap":{"edgeId":"need"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"status":-1},{"failures":[],"tindex":"58e02104-82ab-11e5-9186-5f3c72ef04ba","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:111","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[77,2,78,79,80,81,82,83,46,84,47,85,48,4,49,86,87,88,89,90,91,92,50,93,94,95,96,97,98,99,51,100,8,18,101,102,52,103,53,104,105,54,106,55,56,107,108,109,110,111,112,20,22,30,31,60,23,24,27,32,61,64,113,69,114,71,72,115,74,116,117,118,75,119,120,76,121,122,123,124,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"58e02105-82ab-11e5-9186-292f4dc2bdc9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >>> 24))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >>> 16))"},"status":-1},{"failures":[8],"tindex":"58e02106-82ab-11e5-9186-9bc86abe7da4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"latInt"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:284","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[8],"tindex":"58e02107-82ab-11e5-9186-e13e4012f155","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"a":"initialized","approx":"initialized"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:293","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[8,58,125,59,126,127],"tindex":"58e04818-82ab-11e5-9186-65d4213fe9c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.ShortestWeighting(com.graphhopper.routing.util.FlagEncoder)"},"variableMap":{"encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:889","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap)"},"status":-1},{"failures":[],"tindex":"58e04819-82ab-11e5-9186-81edce97e94e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:628","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"58e0481a-82ab-11e5-9186-3b10f23592f7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:444","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"variableMap":{"leafEntry":"tmpEntries","nodeId":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:166","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-2},{"failures":[],"tindex":"58e0481b-82ab-11e5-9186-6d27f4120b65","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:58","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    throw new java.lang.IllegalStateException(\"Value cannot be NaN\");\n"},"variableMap":{"value":"java.lang.Math.PI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:95","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[8],"tindex":"58e0481c-82ab-11e5-9186-51454bf35a57","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:154","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"longSegmentSize":"sumBytes","bufferStart":"sumBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:81","type":"CtOperatorAssignmentImpl","sourcecode":"long += int * double"},"status":-1},{"failures":[],"tindex":"58e0481d-82ab-11e5-9186-85efa31a5fc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"nextLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:234","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getLongitude(1)"},"status":-2},{"failures":[],"tindex":"58e06f2e-82ab-11e5-9186-e3a8de75daf7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"width","tmpSize":"lonSimilar"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:107","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (int > 0)\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int < ((int) - 1))\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int + 2), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int > 0)\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n    \n    if (int < ((int) - 1))\n        int += com.graphhopper.reader.dem.HeightTile.includePoint((int + (2 * (int))), java.util.concurrent.atomic.AtomicInteger);\n    \n} "},"status":-2},{"failures":[8,58,125,59,127,22,30,31,60,23,24,27,75,120,128,76,129],"tindex":"58e06f2f-82ab-11e5-9186-1d17b79da20c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:84","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getSize()) == 0)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"variableMap":{"pointList":"com.graphhopper.util.PointList.EMPTY","com.graphhopper.util.PointList.EMPTY":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:87","type":"CtIfImpl","sourcecode":"if (int == 3)\n    return com.graphhopper.util.PointList.clone(false);\nelse if (int == 1)\n    return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1));\nelse if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"status":-1},{"failures":[8,22,30,31,60,23,24,27,123],"tindex":"58e06f30-82ab-11e5-9186-79299514ce19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.Instruction.getPoints())"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}