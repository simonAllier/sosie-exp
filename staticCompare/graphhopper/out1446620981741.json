{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":100,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":44,"com.graphhopper.routing.PathTest.testFindInstruction":111,"com.graphhopper.reader.OSMReaderTest.testFerry":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":85,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":114,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":10,"com.graphhopper.routing.QueryGraphTest.testOneWay":107,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":40,"com.graphhopper.reader.OSMReaderTest.testWithBounds":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":92,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":69,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":124,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":97,"com.graphhopper.util.BitUtilBigTest.testReverse":119,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":25,"com.graphhopper.GraphHopperTest.testPrepare":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":70,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":118,"com.graphhopper.util.InstructionListTest.testWayList2":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":93,"com.graphhopper.reader.OSMReaderTest.testFoot":12,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":86,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":123,"com.graphhopper.util.InstructionListTest.testWayList":80,"com.graphhopper.reader.OSMReaderTest.testOneWay":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":46,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":5,"com.graphhopper.GraphHopperAPITest.testDisconnected179":84,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":41,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":16,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":95,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":78,"com.graphhopper.GraphHopperTest.testLoadOSM":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":76,"com.graphhopper.reader.OSMReaderTest.testSort":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":75,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":74,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":52,"com.graphhopper.util.GHUtilityTest.testSort2":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":1,"com.graphhopper.reader.OSMReaderTest.testMain":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":72,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":96,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":8,"com.graphhopper.routing.PathTest.testWayList":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":59,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":68,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":113,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":54,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":57,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":94,"com.graphhopper.storage.StorablePropertiesTest.testStore":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":67,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":91,"com.graphhopper.GraphHopperTest.testFootAndCar":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":9,"com.graphhopper.util.GHUtilityTest.testSort":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":45,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":56,"com.graphhopper.util.BitUtilLittleTest.testReverse":121,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":103,"com.graphhopper.GraphHopperTest.testPrepareOnly":26,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":2,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":64,"com.graphhopper.GraphHopperAPITest.testLoad":83,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":55,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":101,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":60,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":61,"com.graphhopper.reader.OSMReaderTest.testBarriers":15,"com.graphhopper.util.InstructionListTest.testFind":79,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":51},"transformations":[{"failures":[],"tindex":"04ef8db5-82c3-11e5-b091-63bc0108fb29","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"04efdbd6-82c3-11e5-b091-ad6619f82944","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,11,12,13,14,15,18,19,20,21,22,23,24,25,26,73,74,75,76,77,78,27,28,29,30,31,32,33,34,35,36,37,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"04efdbd7-82c3-11e5-b091-05d4a42be6a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:752","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getDimension()) != (com.graphhopper.storage.NodeAccess.getDimension()))\n    throw new java.lang.AssertionError((((\"Dimension does not match for pointList vs. nodeAccess \" + (com.graphhopper.util.PointList.getDimension())) + \" <-> \") + (com.graphhopper.storage.NodeAccess.getDimension())));\n"},"variableMap":{"pointList":"this","nodeAccess":"nodeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int))"},"status":-1},{"failures":[],"tindex":"04f002e8-82c3-11e5-b091-b34cf27046ba","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:311","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call prepareIndex only once\");\n"},"variableMap":{"initialized":"eleCalcMean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:555","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.setCalcMean(boolean)"},"status":0},{"failures":[112],"tindex":"04f002e9-82c3-11e5-b091-ab9a5a390c25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:242","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[113],"tindex":"04f002ea-82c3-11e5-b091-cb7025092b5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:230","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.putShort(((long) + long), short)"},"status":-1},{"failures":[114,115,116,117],"tindex":"04f029fb-82c3-11e5-b091-bf2837039a76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:54","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"04f029fc-82c3-11e5-b091-e950a917d9d4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:52","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flagsSizeIsLong":"reachedX"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:86","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"04f029fd-82c3-11e5-b091-53c9af627dcd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"importance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"04f029fe-82c3-11e5-b091-bfbbcc4b8265","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"fullTimeInMillis","mask":"fullTimeInMillis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:52","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.getTime()"},"status":0},{"failures":[],"tindex":"04f029ff-82c3-11e5-b091-7de590bbb941","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:136","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:306","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n    return ;\n"},"status":0},{"failures":[],"tindex":"04f05110-82c3-11e5-b091-6dcbb7e6474b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"counter":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:163","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":0},{"failures":[],"tindex":"04f05111-82c3-11e5-b091-6988db13319d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:50","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer();\n    for ( ; int < int ; int++) {\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        if ((double > 90) || (double < (-90)))\n            java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n        \n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        if ((double > 180) || (double < (-180)))\n            java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n        \n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n                java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n            } \n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n                java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n            } \n        }\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"problem with node \" + int) , java.lang.Exception);\n}"},"status":0},{"failures":[28,29,30,31,32,33,35,36],"tindex":"04f05112-82c3-11e5-b091-7d49e12b9191","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1149","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"04f07823-82c3-11e5-b091-8917b27dcf0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"lon","tmp":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:659","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) - double"},"status":0},{"failures":[],"tindex":"04f07824-82c3-11e5-b091-aba9fa1c81e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:51","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.size()"},"status":0},{"failures":[],"tindex":"04f07825-82c3-11e5-b091-8b872a11254c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:542","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.CalcShortcutHandler.int"},"status":-2},{"failures":[118,119,120,121],"tindex":"04f07826-82c3-11e5-b091-032a07c21fd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:133","type":"CtReturnImpl","sourcecode":"return (long) / 4"},"variableMap":{"size":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:188","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"04f07827-82c3-11e5-b091-27bc20fe3040","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"currEdge","currEdge":"currEdge","nEdge":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:67","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry)"},"status":0},{"failures":[39,122,123,46,55,124,125,62],"tindex":"04f09f38-82c3-11e5-b091-3307ef6b809f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:126","type":"CtAssignmentImpl","sourcecode":"long = 0"},"variableMap":{"size":"parts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:176","type":"CtOperatorAssignmentImpl","sourcecode":"long *= int[][int]"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"04f07823-82c3-11e5-b091-8917b27dcf0e","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2"]},"type":"branch"}]},{"transformation":"04f029fe-82c3-11e5-b091-bfbbcc4b8265","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.Path.getTime"]},"type":"staticDiff"}]},{"transformation":"04f07824-82c3-11e5-b091-aba9fa1c81e8","diffs":[{"methodsDiff":{"delete":["java.util.List<com.graphhopper.util.EdgeIteratorState>.size"]},"type":"staticDiff"}]},{"transformation":"04f05111-82c3-11e5-b091-6988db13319d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.getAdjNode","com.graphhopper.util.PointAccess.getLatitude","com.graphhopper.util.PointAccess.getLongitude","com.graphhopper.util.EdgeIterator.next","java.util.List<java.lang.String>.add","com.graphhopper.util.EdgeExplorer.setBaseNode"]},"branchesDiff":{"delete":["c6","l4","l5","t0","t1","t2","t3"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b"],"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).b","com.graphhopper.storage.GHNodeAccess_double_getLatitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).e1","com.graphhopper.util.Helper_double_intToDegree(int).e2"],"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b"],"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":["com.graphhopper.storage.GHNodeAccess_double_getLongitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).b","com.graphhopper.storage.GHNodeAccess_double_getLatitude(int).b","com.graphhopper.util.Helper_double_intToDegree(int).e1","com.graphhopper.util.Helper_double_intToDegree(int).e2"]},"type":"branch"}]},{"transformation":"04f07827-82c3-11e5-b091-27bc20fe3040","diffs":[{"methodsDiff":{"delete":["gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put"]},"type":"staticDiff"}]},{"transformation":"04f029ff-82c3-11e5-b091-7de590bbb941","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}