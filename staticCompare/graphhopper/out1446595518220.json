{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":356,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":366,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.reader.OSMReaderTest.testFerry":2,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":90,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":258,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":386,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":414,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":312,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":381,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":166,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":200,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":282,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":335,"com.graphhopper.GraphHopperTest.testPrepare":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":178,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":323,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":350,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":234,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":249,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":384,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":343,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":38,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":308,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":387,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":300,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":338,"com.graphhopper.GraphHopperTest.testLoadOSM":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":39,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":260,"com.graphhopper.reader.OSMReaderTest.testSort":5,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":277,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":219,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":179,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":371,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":81,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":291,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":341,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":274,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":71,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":298,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":75,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":121,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":127,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":421,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":426,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":118,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":418,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":201,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":191,"com.graphhopper.reader.OSMReaderTest.testBarriers":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":108,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":278,"com.graphhopper.util.GHUtilityTest.testCopy":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":347,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":428,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":245,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":417,"com.graphhopper.routing.PathTest.testFindInstruction":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":109,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":422,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":242,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":220,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":205,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":329,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":407,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":151,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":286,"com.graphhopper.util.InstructionListTest.testWayList2":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":409,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":47,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":113,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":385,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":141,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":318,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":119,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":235,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":190,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":287,"com.graphhopper.routing.PathBidirRefTest.testExtract":321,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":423,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":257,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":144,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":68,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":172,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":412,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":52,"com.graphhopper.util.GHUtilityTest.testSort2":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":354,"com.graphhopper.reader.OSMReaderTest.testMain":4,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":395,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":288,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":390,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":394,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":176,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":131,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":402,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":261,"com.graphhopper.storage.GraphHopperStorageTest.testClone":193,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":399,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":284,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":203,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":429,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":152,"com.graphhopper.routing.PathTest.testTime":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":268,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":239,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":165,"com.graphhopper.util.GHUtilityTest.testSortDirected":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":273,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":368,"com.graphhopper.GraphHopperTest.testFootOnly":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":397,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":161,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":41,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":363,"com.graphhopper.routing.QueryGraphTest.testOneWay":374,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":281,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":248,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":379,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":37,"com.graphhopper.reader.OSMReaderTest.testWithBounds":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":408,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":158,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":311,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":369,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":56,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":424,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":130,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":123,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":189,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":342,"com.graphhopper.util.InstructionListTest.testWayList":95,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":383,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":153,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":148,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":164,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":181,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":27,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":195,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":134,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":419,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":336,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":213,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":353,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":332,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":106,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":360,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":183,"com.graphhopper.routing.PathTest.testWayList":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":157,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":396,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":361,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":349,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":365,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":250,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":389,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":114,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":194,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":307,"com.graphhopper.util.GHUtilityTest.testSort":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":170,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":415,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":143,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":192,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":240,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":404,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":292,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":370,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":319,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":104,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":425,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":359,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":171,"com.graphhopper.routing.PathTest.testFound":301,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":339,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":120,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":156,"com.graphhopper.util.InstructionListTest.testEmptyList":93,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":74,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":290,"com.graphhopper.reader.PrinctonReaderTest.testRead":82,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":264,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":125,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":416,"com.graphhopper.reader.OSMReaderTest.testFoot":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":169,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":377,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":44,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":411,"com.graphhopper.reader.OSMReaderTest.testOneWay":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":296,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":202,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":266,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":137,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":333,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":163,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":197,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":337,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":388,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":326,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":89,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":293,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":367,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":187,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":382,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":78,"com.graphhopper.routing.PathBidirRefTest.testExtract2":322,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":48,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":72,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":215,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":279,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":430,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":182,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":420,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":40,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":297,"com.graphhopper.GraphHopperTest.testFootAndCar":28,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":406,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":330,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":283,"com.graphhopper.GraphHopperTest.testPrepareOnly":17,"com.graphhopper.GraphHopperTest.testVia":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":246,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":351,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":11,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":254,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":97,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":214,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":162,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":272,"com.graphhopper.util.InstructionListTest.testFind":92,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":100},"transformations":[{"failures":[],"tindex":"bb7ec000-8287-11e5-ba1b-cb4b2bca4672","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:770","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.GraphHopperStorage.loadExisting()))\n    return false;\n"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:862","type":"CtReturnImpl","sourcecode":"return \"true\".equals(com.graphhopper.storage.GraphHopperStorage.getProperties().get(\"prepare.done\"))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"bb7f0e21-8287-11e5-ba1b-35854d6b014b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:197","type":"CtAssignmentImpl","sourcecode":"long[] = new long[int]"},"status":-1},{"failures":[17,30,31,77,78,79],"tindex":"bb7f0e22-8287-11e5-ba1b-a17d7575377c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.flush()"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,80,11,12,13,14,15,81,82,83,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,241,242,243,244,245,246,247,53,54,248,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,249,250,77,251,252,253,78,254,255,256,257,79,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,73,350,351,352,353,74,75,354,355,76,356,357,358,359,360,361,362,362,363,363,364,364,365,365,366,366,367,367,368,368,369,369,370,370,371,371,372,372,373,373,374,374,375,375,376,376,377,377],"tindex":"bb7f3533-8287-11e5-ba1b-63f21858b260","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.flagEncoders\", com.graphhopper.routing.util.EncodingManager.toDetailsString())"},"status":-1},{"failures":[],"tindex":"bb80bbd4-8287-11e5-ba1b-cb0c4becb2f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:56","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":0},{"failures":[],"tindex":"bb80bbd5-8287-11e5-ba1b-57ca48f22d37","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:311","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"variableMap":{"pointIndex":"adjNode","index":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:110","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    boolean = true;\n    boolean = true;\n} "},"status":-2},{"failures":[4,7,8,33,95,96,100,107,128,134,139,145,166,172,177,184,189,210,216,221,37,39,57,59,79,261,282,288,293,305,358,362,365,366,369,371,372,373,375,377],"tindex":"bb80bbd6-8287-11e5-ba1b-9f9edd51fdf1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"count"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:873","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-1},{"failures":[25],"tindex":"bb80e2e7-8287-11e5-ba1b-934cb73300d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:336","type":"CtIfImpl","sourcecode":"if (int == com.graphhopper.util.InstructionList.(getSize()))\n    int--;\n"},"variableMap":{"this":"fullInstructions","foundInstruction":"pathIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:80","type":"CtIfImpl","sourcecode":"if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n    com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n    com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n    com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n} "},"status":-1},{"failures":[],"tindex":"bb80e2e8-8287-11e5-ba1b-535f8838fd10","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:219","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"variableMap":{"a_lat_deg":"b_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:234","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"bb80e2e9-8287-11e5-ba1b-f79cfeaef371","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:605","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()"},"status":-2},{"failures":[378],"tindex":"bb80e2ea-8287-11e5-ba1b-4500bbc1a83a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:161","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"variableMap":{"red":"charI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:105","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"bb80e2eb-8287-11e5-ba1b-47816eccb3be","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:633","type":"CtReturnImpl","sourcecode":"return ((\"distance:\" + com.graphhopper.routing.Path.(getDistance())) + \", edges:\") + (gnu.trove.list.TIntList.size())"},"status":-2},{"failures":[8,379,379,380,380,381,381],"tindex":"bb8109fc-8287-11e5-ba1b-cd09535225f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:216","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((((((com.graphhopper.util.PointList.java.lang.String) + \" index:\") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"lat","com.graphhopper.util.PointList.ERR_MSG":"line","index":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:112","type":"CtIfImpl","sourcecode":"if ((java.lang.String.substring(0, 1).charAt(0)) == 'S')\n    int = -int;\n"},"status":-1},{"failures":[],"tindex":"bb8109fd-8287-11e5-ba1b-a30b6e08aa91","series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:121","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException((\"Pointer to access NameIndex cannot be negative:\" + long));\n"},"variableMap":{"pointer":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:129","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(long, byte[], 1)"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,382,15,16,17,24,25,26,27,28,29,30,31,32,33,34,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430],"tindex":"bb8109fe-8287-11e5-ba1b-f93511e7efce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:144","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"bb8109ff-8287-11e5-ba1b-8d1f28b15de2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"distance","weight":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:67","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.getMinWeight(double)"},"status":-2},{"failures":[],"tindex":"bb813110-8287-11e5-ba1b-cf48fb09da10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"approx"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":0},{"failures":[],"tindex":"bb813111-8287-11e5-ba1b-290e7d29f4a5","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"variableMap":{"hasOther":"closed","hasRel":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:172","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[9],"tindex":"bb813112-8287-11e5-ba1b-7b97b2437fba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"fromWayID"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:925","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.reader.OSMRelation.Member.ref()"},"status":-1},{"failures":[],"tindex":"bb813113-8287-11e5-ba1b-076cc7b23c6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:382","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"bb80bbd4-8287-11e5-ba1b-cb0c4becb2f0","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.Helper_void_cleanHack().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"}]},{"transformation":"bb813110-8287-11e5-ba1b-cf48fb09da10","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2"],"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double).b","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).e1","com.graphhopper.util.DistancePlaneProjection_double_calcNormalizedDist(double).b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2"],"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).e1","com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double,double,double,double).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2","com.graphhopper.util.DistancePlaneProjection_double_calcNormalizedDist(double).b","com.graphhopper.util.DistancePlaneProjection_double_calcNormalizedDist(double,double,double,double).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2"]},"type":"branch"}]}]}