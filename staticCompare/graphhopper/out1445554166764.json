{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":28,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":31,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":17,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":35,"com.graphhopper.routing.PathTest.testFindInstruction":39,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":32,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":38,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":9,"com.graphhopper.routing.QueryGraphTest.testOneWay":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":15,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":19,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":26,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":7,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":12,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":16,"com.graphhopper.util.InstructionListTest.testFind":22,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":21},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"25a663de-790f-11e5-a7d9-4988606b35fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"variableMap":{"gridCellWidth":"a_lon","x1":"a_lon","x2":"a_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:230","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-1},{"failures":[],"tindex":"25a68aef-790f-11e5-a7d9-e18e8a18b34b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:520","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\""},"variableMap":{"graphHopperFolder":"ghLocation","osmFile":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:405","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"25a68af0-790f-11e5-a7d9-c7043bc4a6fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"status":-2},{"failures":[],"tindex":"25a68af1-790f-11e5-a7d9-55a36df11cf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:230","type":"CtForImpl","sourcecode":"for (int int = com.graphhopper.coll.GHBitSet.next(0) ; int >= 0 ; int = com.graphhopper.coll.GHBitSet.next((int + 1))) {\n    int[][int] = int;\n}"},"status":-2},{"failures":[],"tindex":"25a6b202-790f-11e5-a7d9-63ed66e17f8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.clone(false)"},"variableMap":{"pointList":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:91","type":"CtIfImpl","sourcecode":"if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"status":-2},{"failures":[],"tindex":"25a6b203-790f-11e5-a7d9-cdf49d7751d0","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:100","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    if ((com.graphhopper.storage.EdgeEntry) != null) {\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.storage.EdgeEntry.int, int), com.graphhopper.storage.EdgeEntry, int);\n    } \n} else {\n    if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"25a6b204-790f-11e5-a7d9-6759e21b2ba8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"lonSize","dLat":"initializedCounter","tmpErr":"lonSize","x1":"initializedCounter","sLon":"initializedCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = -1;\n    int int = -1;\n    if (com.graphhopper.coll.GHBitSet.contains(int)) {\n        if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n            int = int;\n            int = int + 1;\n        } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n            int = int;\n            int = int + (int);\n        } \n    } else {\n        if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n            int = int + 1;\n            int = int;\n        } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n            int = int + (int);\n            int = int;\n        } \n    }\n    if (int >= 0) {\n        if ((int[][int]) >= 0) {\n            if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n                continue;\n            } \n        } \n        com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)));\n        int[][int] = int[][int];\n        com.graphhopper.coll.GHBitSet.add(int);\n        int++;\n    } \n}"},"status":-2},{"failures":[],"tindex":"25a6b205-790f-11e5-a7d9-492f96fdeb2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"nextLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:188","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"25a6b206-790f-11e5-a7d9-8521bc6fcb3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize())"},"variableMap":{"pointList":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:153","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[],"tindex":"25a6d917-790f-11e5-a7d9-919e009279dd","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"nodes","bLen":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:291","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (com.graphhopper.storage.NodeAccess.is3D())\n        com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int), com.graphhopper.storage.NodeAccess.getElevation(int));\n    else\n        com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int));\n    \n}"},"status":-2},{"failures":[],"tindex":"25a6d918-790f-11e5-a7d9-4de5efc5c22e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"variableMap":{"need":"com.graphhopper.reader.OSMReader.TOWER_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:517","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"status":-2},{"failures":[],"tindex":"25a6d919-790f-11e5-a7d9-b5e47b243c9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:146","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"variableMap":{"tmp":"currLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:315","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"25a6d91a-790f-11e5-a7d9-43bbbd008bfc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:99","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"25a6d91b-790f-11e5-a7d9-79a002dc7078","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:190","type":"CtAssignmentImpl","sourcecode":"double = -double"},"variableMap":{"eleDelta":"y1","decEleSum":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:62","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.frac((double / double))"},"status":-2},{"failures":[],"tindex":"25a6d91c-790f-11e5-a7d9-e791a05164dc","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"segSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:151","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isIntBased()) {\n    for (int int = 0 ; int < int ; int += 4) {\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.storage.DataAccess.getInt((long + int)), int);\n    }\n} else {\n    com.graphhopper.storage.DataAccess.getBytes(long, byte[], int);\n}"},"status":-2},{"failures":[],"tindex":"25a6d91d-790f-11e5-a7d9-2b8682dfee0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1086","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureWriteAccess()"},"status":-2},{"failures":[],"tindex":"25a7002e-790f-11e5-a7d9-9bcbad8bda7a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:119","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String))"},"variableMap":{"versionHint":"loadedCHWeightings"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:278","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String))"},"status":-2},{"failures":[],"tindex":"25a7002f-790f-11e5-a7d9-3f3d48bb4bf4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"variableMap":{"i":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:609","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[],"tindex":"25a70030-790f-11e5-a7d9-ab575da62eb0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:243","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.isInfinite(double)) || (java.lang.Double.isNaN(double))) || (double < 0))\n    throw new java.lang.IllegalStateException((\"Invalid speed stored in edge! \" + double));\n"},"variableMap":{"speed":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:764","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.storage.index.TIntIterator.hasNext()) {\n    int int = com.graphhopper.storage.index.TIntIterator.next();\n    double double = com.graphhopper.storage.NodeAccess.getLat(int);\n    double double = com.graphhopper.storage.NodeAccess.getLon(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if (double < double) {\n        double = double;\n    } \n}"},"status":-2},{"failures":[],"tindex":"25a70031-790f-11e5-a7d9-07ab54488fbd","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"variableMap":{"defaultUTurnCost":"java.lang.Double.POSITIVE_INFINITY","turnCosts":"java.lang.Double.POSITIVE_INFINITY","edgeId":"maxTurnCosts","prevOrNextEdgeId":"maxTurnCosts","weight":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:643","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}