{"failureDictionary":{"com.graphhopper.search.NameIndexTest.testCreate":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":126,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":150,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":375,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":159,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":302,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":312,"com.graphhopper.reader.OSMReaderTest.testFerry":61,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":30,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":31,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":173,"com.graphhopper.routing.QueryGraphTest.testOneWay":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":198,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":274,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":308,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":9,"com.graphhopper.reader.OSMReaderTest.testWithBounds":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":237,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":95,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":260,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":96,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":165,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":372,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":376,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":348,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":276,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":40,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":199,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":329,"com.graphhopper.GraphHopperTest.testPrepare":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":125,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":337,"com.graphhopper.search.NameIndexTest.testFlush":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":132,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":355,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":108,"com.graphhopper.util.InstructionListTest.testWayList":37,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":370,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":117,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":293,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":33,"com.graphhopper.GraphHopperAPITest.testDisconnected179":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":188,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":162,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":10,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":306,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":109,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":114,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":309,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":59,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":175,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":3,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":262,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":182,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":50,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":343,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":254,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":317,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":279,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":310,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":361,"com.graphhopper.reader.OSMReaderTest.testSort":64,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":120,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":221,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":367,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":130,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":155,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":336,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":60,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":81,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":330,"com.graphhopper.routing.PathTest.testWayList":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":258,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":187,"com.graphhopper.coll.OSMIDMapTest.testGet2":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":208,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":344,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":115,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":307,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":371,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":232,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":234,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":342,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":291,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":215,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":122,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":377,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":53,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":89,"com.graphhopper.util.GHUtilityTest.testSort":28,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":112,"com.graphhopper.coll.OSMIDMapTest.testGetLong":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":212,"com.graphhopper.search.NameIndexTest.testPut":77,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":263,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":340,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":299,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":166,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":104,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":324,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":222,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":174,"com.graphhopper.storage.MMapDirectoryTest.testSynched":270,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":238,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":7,"com.graphhopper.GraphHopperAPITest.testLoad":22,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":244,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":349,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":171,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":339,"com.graphhopper.reader.OSMReaderTest.testBarriers":65,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":228,"com.graphhopper.routing.PathTest.testFound":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":266,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":272,"com.graphhopper.util.GHUtilityTest.testCopy":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":113,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":378,"com.graphhopper.routing.PathTest.testFindInstruction":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":105,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":240,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":79,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":265,"com.graphhopper.util.InstructionListTest.testEmptyList":35,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":116,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":301,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":368,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":121,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":256,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":356,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":242,"com.graphhopper.reader.PrinctonReaderTest.testRead":58,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":369,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":235,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":170,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":181,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":203,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":218,"com.graphhopper.util.InstructionListTest.testWayList2":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":282,"com.graphhopper.reader.OSMReaderTest.testFoot":62,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":8,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":315,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":373,"com.graphhopper.reader.OSMReaderTest.testOneWay":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":213,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":179,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":192,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":331,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":183,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":365,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":257,"com.graphhopper.storage.RAMDirectoryTest.testSynched":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":239,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":359,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":379,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":294,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":338,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":345,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":286,"com.graphhopper.coll.OSMIDMapTest.testGet":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":204,"com.graphhopper.routing.PathBidirRefTest.testExtract":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":135,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":327,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":19,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":46,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":102,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":172,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":264,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":288,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":42,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":334,"com.graphhopper.util.GHUtilityTest.testSort2":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":123,"com.graphhopper.reader.OSMReaderTest.testMain":63,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":211,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":74,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":168,"com.graphhopper.routing.PathBidirRefTest.testExtract2":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":205,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":223,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":280,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":93,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":305,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":292,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":76,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":363,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":196,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":251,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":178,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":140,"com.graphhopper.storage.StorablePropertiesTest.testStore":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":311,"com.graphhopper.storage.GraphHopperStorageTest.testClone":341,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":374,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":214,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":366,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":201,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":217,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":351,"com.graphhopper.GraphHopperTest.testFootAndCar":51,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":14,"com.graphhopper.routing.PathTest.testTime":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":185,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":320,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":277,"com.graphhopper.reader.OSMReaderTest.testRelation":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":119,"com.graphhopper.util.GHUtilityTest.testSortDirected":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":231,"com.graphhopper.storage.StorablePropertiesTest.testLoad":268,"com.graphhopper.GraphHopperTest.testPrepareOnly":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":190,"com.graphhopper.GraphHopperTest.testVia":48,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":304,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":118,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":70,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":287,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":275,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":169,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":39,"com.graphhopper.GraphHopperTest.testFootOnly":55,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":362,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":281,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":68,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":295,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":283,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":85,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":189,"com.graphhopper.util.InstructionListTest.testFind":34,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":322},"transformations":[{"failures":[],"tindex":"0bf857f1-8274-11e5-b4ee-edf5126a8b47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:726","type":"CtIfImpl","sourcecode":"if (int > 0)\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n"},"status":0},{"failures":[],"tindex":"0bf8a612-8274-11e5-b4ee-c9e87d502ea2","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"variableMap":{"heights":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:65","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DataAccess = com.graphhopper.storage.Directory.find(\"turn_costs\")"},"status":0},{"failures":[0,1],"tindex":"0bf8a613-8274-11e5-b4ee-71f3cb8f0bf6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:58","type":"CtAssignmentImpl","sourcecode":"long = -1"},"variableMap":{"lastTime":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"0bf8cd24-8274-11e5-b4ee-fb3052dead05","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:89","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.LinkedHashMap<java.lang.String, java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:144","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = com.graphhopper.util.Translation.asMap()"},"status":-2},{"failures":[],"tindex":"0bf8cd25-8274-11e5-b4ee-0dd35656a5f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:214","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.init(int, int)"},"status":-2},{"failures":[2],"tindex":"0bf8cd26-8274-11e5-b4ee-15ae182d696e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue()"},"status":-1},{"failures":[3,4,5,6,7,8],"tindex":"0bf8cd27-8274-11e5-b4ee-1d033ce97054","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"variableMap":{"gradient":"lat","yend":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:83","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - (int)))"},"status":-1},{"failures":[9,10],"tindex":"0bf8f438-8274-11e5-b4ee-df3568ade234","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"midLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[11,12,13,14,15,16],"tindex":"0bf8f439-8274-11e5-b4ee-b7e18d2dfcc5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"nodeEntryBytes","speed":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:175","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((1 * 4))"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,11,41,42,43,44,45,46,47,48,49,50,51,52,12,53,54,13,55,56,57,58,59,60,61,62,63,64,65,66,3,67,68,0,69,70,71,72,73,74,75,6,7,8,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,163,164,165,166,167,168,169,170,171,172,14,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,15,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,16,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374],"tindex":"0bf8f43a-8274-11e5-b4ee-9bf9eb649109","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:118","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"variableMap":{"versionHint":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:118","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"0bf9425b-8274-11e5-b4ee-d78af78fb7f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:223","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[55,375],"tindex":"0bf9425c-8274-11e5-b4ee-2199003fcfb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"0bf9425d-8274-11e5-b4ee-55a1833abd44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:697","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[66,3,104,151,14,199,15,248,376,16,358],"tindex":"0bf9425e-8274-11e5-b4ee-9be793830c85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (com.graphhopper.storage.BaseGraph.int)) + (com.graphhopper.storage.BaseGraph.int))))"},"status":-1},{"failures":[377,378],"tindex":"0bf9696f-8274-11e5-b4ee-ff7abcf626ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:113","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n        int = int;\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"0bf96970-8274-11e5-b4ee-f5ec58c04a00","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:320","type":"CtReturnImpl","sourcecode":"return \"destination: \" + java.lang.String"},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:67","type":"CtReturnImpl","sourcecode":"return (java.lang.String) + (java.lang.String)"},"status":-2},{"failures":[107,108,117,121,133,379],"tindex":"0bf96971-8274-11e5-b4ee-63a632444a37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.CHEdgeIteratorState.isShortcut())\n    return com.graphhopper.util.CHEdgeIteratorState.getWeight();\n"},"status":-1},{"failures":[],"tindex":"0bf96972-8274-11e5-b4ee-5d90a34c8bed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:497","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        return com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode;\n    case 2 :\n        return com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode;\n    case 1 :\n        return com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode;\n    case 0 :\n        return com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode;\n    case -1 :\n        return com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode;\n    case -2 :\n        return com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode;\n    case -3 :\n        return com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode;\n    default :\n        return com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode;\n}"},"variableMap":{"com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.BEST":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","classvalue":"classvalue","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.UNCHANGED","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:489","type":"CtTryImpl","sourcecode":"try {\n    int = java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.NumberFormatException e) {\n    return com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode;\n}"},"status":-2},{"failures":[],"tindex":"0bf99083-8274-11e5-b4ee-9ffac702757a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidirRef:65","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.EdgeEntry) == null) || ((com.graphhopper.storage.EdgeEntry) == null))\n    return this;\n"},"variableMap":{"edgeTo":"currEdge","edgeEntry":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:132","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.storage.EdgeEntry) == null) || com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded())) || (!com.graphhopper.routing.Dijkstra.(finished())))\n    return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n"},"status":-2},{"failures":[],"tindex":"0bf99084-8274-11e5-b4ee-a5a675191ff4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:194","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"variableMap":{"str":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0bf857f1-8274-11e5-b4ee-edf5126a8b47","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}