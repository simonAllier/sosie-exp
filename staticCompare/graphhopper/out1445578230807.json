{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":39,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":28,"com.graphhopper.reader.OSMReaderTest.testMain":59,"com.graphhopper.reader.OSMReaderTest.testFerry":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":14,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":52,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":37,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":24,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":47,"com.graphhopper.reader.OSMReaderTest.testWithBounds":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":3,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":23,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":19,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":69,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":27,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":45,"com.graphhopper.GraphHopperTest.testPrepare":80,"com.graphhopper.GraphHopperTest.testFootAndCar":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":11,"com.graphhopper.reader.OSMReaderTest.testFoot":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":34,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":31,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":53,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":32,"com.graphhopper.reader.OSMReaderTest.testOneWay":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":36,"com.graphhopper.GraphHopperAPITest.testDisconnected179":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":6,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":51,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":22,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.GraphHopperTest.testPrepareOnly":72,"com.graphhopper.GraphHopperTest.testVia":79,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":25,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":16,"com.graphhopper.GraphHopperAPITest.testLoad":41,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":63,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":40,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":4,"com.graphhopper.GraphHopperTest.testFootOnly":87,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":54,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":10,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":78,"com.graphhopper.reader.OSMReaderTest.testBarriers":61,"com.graphhopper.GraphHopperTest.testLoadOSM":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":73,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":26,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":76,"com.graphhopper.reader.OSMReaderTest.testSort":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":74},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"2cf06965-7947-11e5-b69c-07a22205a25d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setBounds(-180, 180, -90, 90)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.bounds(new com.graphhopper.util.shapes.BBox(double , double , double , double))"},"status":-1},{"failures":[],"tindex":"2cf09076-7947-11e5-b69c-a7b0f90e4f06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"lat","azimuth":"oldLat","java.lang.Math.PI":"oldLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:203","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double)"},"status":-2},{"failures":[],"tindex":"2cf09077-7947-11e5-b69c-11a643a36989","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:181","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"silent":"empty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:58","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"2cf09078-7947-11e5-b69c-f5a9a4d1fd7c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"status":-2},{"failures":[],"tindex":"2cf0b789-7947-11e5-b69c-af09a27855e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:46","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.this(10, false)"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:92","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = com.graphhopper.util.PointList"},"status":-2},{"failures":[],"tindex":"2cf0b78a-7947-11e5-b69c-87d2ec48b7c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:102","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"variableMap":{"orientation":"shortTripsSpeed","resultOrientation":"shortTripsSpeed","baseOrientation":"longTripsSpeed","java.lang.Math.PI":"longTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:529","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception ex) {\n}"},"status":-2},{"failures":[],"tindex":"2cf0b78b-7947-11e5-b69c-01a4b248cfb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:186","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n        if (java.lang.String == null)\n            java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n        \n        if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"2cf0b78c-7947-11e5-b69c-63cf547b9387","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.TranslationMap:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation)"},"variableMap":{"translations":"translations","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:123","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Translation = java.util.Map<java.lang.String, com.graphhopper.util.Translation>.get(java.lang.String.substring(0, 2))"},"status":-2},{"failures":[],"tindex":"2cf0b78d-7947-11e5-b69c-7f907648dc1d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"variableMap":{"maxLatTmp":"maxLat","minLatTmp":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:141","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(java.lang.Math.abs(com.graphhopper.util.shapes.BBox.double), java.lang.Math.abs(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"2cf0de9e-7947-11e5-b69c-3148a8f10b4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"i","weights":"latitudes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:239","type":"CtAssignmentImpl","sourcecode":"double[][int] = double[][int]"},"status":-2},{"failures":[],"tindex":"2cf0de9f-7947-11e5-b69c-73e5481f56ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:298","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    int int = 0;\n    for (java.lang.String java.lang.String : java.lang.String.split(\";\")) {\n        if (java.lang.String.trim().isEmpty())\n            continue;\n        \n        if (int > 0)\n            java.lang.String += \", \";\n        \n        java.lang.String += java.lang.String.trim();\n        int++;\n    }\n} "},"variableMap":{"str":"ghLocation","destination":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:612","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(load(java.lang.String))) {\n    com.graphhopper.GraphHopper.printInfo();\n    com.graphhopper.GraphHopper.process(java.lang.String);\n} else {\n    com.graphhopper.GraphHopper.printInfo();\n}"},"status":-2},{"failures":[],"tindex":"2cf0dea0-7947-11e5-b69c-49a490e340f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:188","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.CHEdgeIteratorState)(java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int))).getWeight()"},"status":-2},{"failures":[],"tindex":"2cf0dea1-7947-11e5-b69c-05e560b909ad","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"visitedCountFrom","retBucket":"visitedCountFrom","i":"visitedCountFrom","bucketSize":"visitedCountFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:222","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"2cf0dea2-7947-11e5-b69c-2171e8516c98","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"variableMap":{"radiusInMeter":"a_lat","com.graphhopper.util.DistanceCalcEarth.C":"b_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:231","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"2cf0dea3-7947-11e5-b69c-a5fb90a507f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:100","type":"CtTryImpl","sourcecode":"try {\n    long = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.reallocateMemory(long, long);\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)));\n}"},"status":-2},{"failures":[],"tindex":"2cf105b4-7947-11e5-b69c-015a703318ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":-2},{"failures":[],"tindex":"2cf105b5-7947-11e5-b69c-b798111ecf18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:449","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"status":-2},{"failures":[],"tindex":"2cf105b6-7947-11e5-b69c-077dd2ecd6d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:116","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"))"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:119","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setPoints(com.graphhopper.util.PointList)"},"status":-2},{"failures":[],"tindex":"2cf105b7-7947-11e5-b69c-75482168348e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:217","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"2cf105b8-7947-11e5-b69c-1fc88094a30d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}