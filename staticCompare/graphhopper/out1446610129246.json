{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":54,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":61,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":25,"com.graphhopper.routing.PathTest.testFindInstruction":91,"com.graphhopper.routing.QueryGraphTest.testOneWay":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":107,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":1,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":21,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":4,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":3,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":98,"com.graphhopper.GraphHopperTest.testPrepare":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":50,"com.graphhopper.util.InstructionListTest.testWayList2":84,"com.graphhopper.reader.OSMReaderTest.testFoot":72,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":28,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":62,"com.graphhopper.util.InstructionListTest.testWayList":83,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":82,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":112,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":78,"com.graphhopper.util.PointListTest.testAddPL":95,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":115,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":106,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":22,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":93,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":89,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":14,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":103,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":40,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":109,"com.graphhopper.GraphHopperTest.testLoadOSM":43,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":35,"com.graphhopper.reader.OSMReaderTest.testSort":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":116,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":73,"com.graphhopper.reader.OSMReaderTest.testMain":63,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":80,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":99,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":86,"com.graphhopper.routing.PathTest.testWayList":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":6,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":49,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":77,"com.graphhopper.GraphHopperTest.testFootAndCar":41,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":26,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":59,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":8,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":57,"com.graphhopper.GraphHopperTest.testPrepareOnly":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":96,"com.graphhopper.GraphHopperTest.testVia":38,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":44,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":15,"com.graphhopper.GraphHopperAPITest.testLoad":94,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":7,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":74,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":56,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":85,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":13,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":88,"com.graphhopper.reader.OSMReaderTest.testBarriers":65,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":79,"com.graphhopper.util.InstructionListTest.testFind":81,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":31},"transformations":[{"failures":[],"tindex":"c0568e13-82a9-11e5-97c9-e77067bad64b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:98","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[0,1,2,3],"tindex":"c056b524-82a9-11e5-97c9-376b9d782092","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"E_FLAGS","edgeTo":"E_FLAGS","edgeFrom":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((long + (int)) + 4), com.graphhopper.util.BitUtil.getIntHigh(long))"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"c056b525-82a9-11e5-97c9-cbca2ebfc414","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:144","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.shapes.GHPoint"},"status":-1},{"failures":[],"tindex":"c056b526-82a9-11e5-97c9-3382b409b7a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:134","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.Instruction.int)) {\n    if (!(boolean)) {\n        java.lang.String = com.graphhopper.util.Translation.tr(\"roundaboutEnter\");\n    } else {\n        java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"roundaboutExit\", com.graphhopper.util.RoundaboutInstruction.getExitNumber()) : com.graphhopper.util.Translation.tr(\"roundaboutExitOnto\", com.graphhopper.util.RoundaboutInstruction.getExitNumber(), java.lang.String);\n    }\n} else {\n    throw new java.lang.IllegalStateException((int + \"no Roundabout indication\"));\n}"},"status":-2},{"failures":[37,52,61],"tindex":"c056b527-82a9-11e5-97c9-7b18e4b18333","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:450","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState : java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false);\n}"},"status":-1},{"failures":[66,41,45,67,68,69,70,71,72],"tindex":"c056dc38-82a9-11e5-97c9-81a720ae551f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"encoded","mask":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:316","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[41,45,68,71],"tindex":"c056dc39-82a9-11e5-97c9-0f2cc3dc7406","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:594","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.CHGraphImpl.long"},"variableMap":{"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT_LONG":"encoded","weightLong":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:298","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[73,74,75,76,77],"tindex":"c056dc3a-82a9-11e5-97c9-35cc465a6cf1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:37","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.lang.String)"},"variableMap":{"fromStr":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:206","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(((java.lang.String) + (java.lang.String)))"},"status":-1},{"failures":[],"tindex":"c056dc3b-82a9-11e5-97c9-6594cb8af64b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:351","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n}"},"status":0},{"failures":[78,79],"tindex":"c056dc3c-82a9-11e5-97c9-37a585ebf126","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:125","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[0,1,2,3],"tindex":"c056dc3d-82a9-11e5-97c9-f14c87ee0228","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[],"tindex":"c057034e-82a9-11e5-97c9-ebf3eb645637","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:158","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"variableMap":{"x1":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:178","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.QueryResult.getQueryPoint().double"},"status":-2},{"failures":[36,37,80],"tindex":"c057034f-82a9-11e5-97c9-1b112fe1a01c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:233","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"variableMap":{"newName":"str","name":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:113","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Boolean.parseBoolean(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"status":-1},{"failures":[81,82,83,84,85,38,39,40,41,42,43,44,45,86,87,88,89,90,91,92,93,94],"tindex":"c0570350-82a9-11e5-97c9-871bbdfe7886","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1))"},"variableMap":{"pointList":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:153","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-1},{"failures":[],"tindex":"c0570351-82a9-11e5-97c9-fb3c88e87385","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:49","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[95,38,39,40,41,42,43,44,45,94],"tindex":"c0570352-82a9-11e5-97c9-6fbd369b03e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:163","type":"CtAssignmentImpl","sourcecode":"double[][int] = com.graphhopper.util.PointList.getElevation(int)"},"variableMap":{"tmp":"i","i":"tmp","elevations":"longitudes","points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:161","type":"CtAssignmentImpl","sourcecode":"double[][int] = com.graphhopper.util.PointList.getLongitude(int)"},"status":-1},{"failures":[],"tindex":"c0570353-82a9-11e5-97c9-ff0a08ce1793","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:299","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"c0572a64-82a9-11e5-97c9-b793cc3ccad7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:481","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.pow(10, int)"},"variableMap":{"exponent":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:59","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-1},{"failures":[118],"tindex":"c0572a65-82a9-11e5-97c9-bb58e4f4abfb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:274","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.StringBuilder.append(\", \");\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c056dc3b-82a9-11e5-97c9-6594cb8af64b","diffs":[{"branches":{"com.graphhopper.util.PointListTest.testReverse":["com.graphhopper.util.PointList_int_getSize().b","com.graphhopper.util.NumHelper_boolean_equalsEps(double,double,double).b","com.graphhopper.util.PointList_boolean_is3D().b","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).t2","com.graphhopper.util.NumHelper_boolean_equalsEps(double,double).b","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e3","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e4","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e5","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e6","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).l7","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e2"],"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":["com.graphhopper.util.PointList_void_reverse().l2","com.graphhopper.util.PointList_void_reverse().e1"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.routing.AbstractRoutingAlgorithm_void_setWeightLimit(double).b","com.graphhopper.routing.VirtualEdgeIterator_void_add(com.graphhopper.util.EdgeIteratorState).b","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).e6","com.graphhopper.routing.Path_gnu.trove.list.TIntList_calcNodes().e1","com.graphhopper.storage.EdgeAccess_com.graphhopper.util.EdgeIteratorState_getEdgeProps(int,int).e1","com.graphhopper.util.AngleCalc_double_alignOrientation(double,double).b","com.graphhopper.storage.EdgeEntry_int_compareTo(com.graphhopper.storage.EdgeEntry).b","com.graphhopper.routing.util.TraversalMode_int_createTraversalId(com.graphhopper.util.EdgeIteratorState,boolean).b","com.graphhopper.routing.Path_java.lang.String_getDebugInfo().b","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).b","com.graphhopper.util.AngleCalc_double_alignOrientation(double,double).t1","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).e1","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).e2","com.graphhopper.routing.DijkstraBidirectionRef_com.graphhopper.routing.Path_extractPath().t1","com.graphhopper.routing.AbstractBidirAlgo_void_runAlgo().b","com.graphhopper.routing.Path$2_void_next(com.graphhopper.util.EdgeIteratorState,int).b","com.graphhopper.routing.Path_int_getFromNode().e1","com.graphhopper.routing.VirtualEdgeIteratorState_double_getDistance().b","com.graphhopper.routing.util.AbstractFlagEncoder_double_getSpeed(long).b","com.graphhopper.GHResponse_com.graphhopper.util.PMap_getHints().b","com.graphhopper.routing.DijkstraBidirectionRef_com.graphhopper.routing.Path_extractPath().b","com.graphhopper.routing.DijkstraBidirectionRef_java.lang.String_getName().b","com.graphhopper.util.EdgeIterator$Edge_boolean_isValid(int).b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).l7","com.graphhopper.routing.util.TraversalMode_boolean_hasUTurnSupport().b","com.graphhopper.routing.Path_long_calcMillis(double,long,boolean).b","com.graphhopper.routing.AbstractRoutingAlgorithm_com.graphhopper.routing.AbstractRoutingAlgorithm(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder,com.graphhopper.routing.util.Weighting,com.graphhopper.routing.util.TraversalMode).b","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).l6","com.graphhopper.storage.GraphHopperStorage_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).b","com.graphhopper.routing.Path_com.graphhopper.routing.Path_setEdgeEntry(com.graphhopper.storage.EdgeEntry).b","com.graphhopper.routing.QueryGraph_boolean_enforceHeadingByEdgeId(int,int,boolean).e1","com.graphhopper.util.GHUtility_com.graphhopper.util.EdgeIteratorState_getEdge(com.graphhopper.storage.Graph,int,int).l2","com.graphhopper.util.PointList_double_getLat(int).b","com.graphhopper.routing.DijkstraBidirectionRef_com.graphhopper.routing.Path_createAndInitPath().b","com.graphhopper.routing.DijkstraBidirectionRef_double_getCurrentFromWeight().b","com.graphhopper.storage.EdgeAccess_com.graphhopper.util.EdgeIteratorState_getEdgeProps(int,int).t2","com.graphhopper.routing.Path_int_getFromNode().b","com.graphhopper.routing.VirtualEdgeIteratorState_boolean_getBoolean(int,boolean,boolean).b","com.graphhopper.routing.DijkstraBidirectionRef_void_initTo(int,double).t2","com.graphhopper.routing.AbstractBidirAlgo_void_runAlgo().l4","com.graphhopper.routing.DijkstraBidirectionRef_void_initTo(int,double).t1","com.graphhopper.routing.QueryGraph_void_addVirtualEdges(gnu.trove.map.TIntObjectMap,com.graphhopper.routing.util.EdgeFilter,boolean,int,int).t1","com.graphhopper.routing.QueryGraph_void_addVirtualEdges(gnu.trove.map.TIntObjectMap,com.graphhopper.routing.util.EdgeFilter,boolean,int,int).t2","com.graphhopper.routing.VirtualEdgeIterator_boolean_next().b","com.graphhopper.routing.DijkstraBidirectionRef_boolean_finished().e1","com.graphhopper.routing.Path_void_forEveryEdge(com.graphhopper.routing.Path$EdgeVisitor).b","com.graphhopper.routing.QueryGraph_int_getPosOfReverseEdge(int).b","com.graphhopper.storage.BaseGraph_void_checkAdjNodeBounds(int).e1","com.graphhopper.routing.Path_com.graphhopper.routing.Path(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.routing.DijkstraBidirectionRef_void_initFrom(int,double).e2","com.graphhopper.routing.AlgorithmOptions_com.graphhopper.routing.util.FlagEncoder_getFlagEncoder().b","com.graphhopper.util.PointList_double_getLon(int).b","com.graphhopper.GraphHopper_java.util.List_getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse).e14","com.graphhopper.routing.Path_long_getTime().b","com.graphhopper.routing.AbstractBidirAlgo_com.graphhopper.routing.AbstractBidirAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder,com.graphhopper.routing.util.Weighting,com.graphhopper.routing.util.TraversalMode).b","com.graphhopper.GraphHopper_java.util.List_getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse).e10","com.graphhopper.GraphHopper_java.util.List_getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse).e13","com.graphhopper.GraphHopper_java.util.List_getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse).e12","com.graphhopper.storage.EdgeAccess_com.graphhopper.util.EdgeIteratorState_getEdgeProps(int,int).b","com.graphhopper.routing.DijkstraBidirectionRef_double_getCurrentToWeight().b","com.graphhopper.routing.QueryGraph_boolean_enforceHeadingByEdgeId(int,int,boolean).b","com.graphhopper.GHResponse_com.graphhopper.GHResponse_setDebugInfo(java.lang.String).b","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_double_getDistance().b","com.graphhopper.routing.Path_gnu.trove.list.TIntList_calcNodes().b","com.graphhopper.routing.DijkstraBidirectionRef_boolean_fillEdgesFrom().b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.PathBidirRef_setEdgeEntryTo(com.graphhopper.storage.EdgeEntry).b","com.graphhopper.util.StopWatch_java.lang.String_toString().t1","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().l4","com.graphhopper.storage.BaseGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).e1","com.graphhopper.routing.DijkstraBidirectionRef_com.graphhopper.routing.DijkstraBidirectionRef(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder,com.graphhopper.routing.util.Weighting,com.graphhopper.routing.util.TraversalMode).b","com.graphhopper.routing.DijkstraBidirectionRef_void_initCollections(int).b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().l5","com.graphhopper.routing.DijkstraBidirectionRef_void_initFrom(int,double).t1","com.graphhopper.routing.Path_void_reverseOrder().b","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).t6","com.graphhopper.routing.QueryGraph_boolean_isVirtualEdge(int).b","com.graphhopper.routing.AbstractRoutingAlgorithm_com.graphhopper.storage.EdgeEntry_createEdgeEntry(int,double).b","com.graphhopper.routing.AbstractRoutingAlgorithm_boolean_accept(com.graphhopper.util.EdgeIterator,int).b","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).b","com.graphhopper.routing.Path_void_forEveryEdge(com.graphhopper.routing.Path$EdgeVisitor).l2","com.graphhopper.routing.util.TraversalMode_boolean_isEdgeBased().b","com.graphhopper.util.AngleCalc_double_calcOrientation(double,double,double,double).b","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).t1","com.graphhopper.routing.DijkstraBidirectionRef_void_initFrom(int,double).b","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).l3","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).l4","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).b","com.graphhopper.routing.util.TraversalMode_int_createTraversalId(com.graphhopper.util.EdgeIteratorState,boolean).e1","com.graphhopper.routing.DijkstraBidirectionRef_boolean_finished().b","com.graphhopper.routing.AlgorithmOptions_java.lang.String_getAlgorithm().b","com.graphhopper.storage.GraphHopperStorage_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).b","com.graphhopper.routing.VirtualEdgeIteratorState_boolean_getBoolean(int,boolean,boolean).t1","com.graphhopper.storage.EdgeEntry_com.graphhopper.storage.EdgeEntry(int,int,double).b","com.graphhopper.routing.RoutingAlgorithmFactorySimple_com.graphhopper.routing.RoutingAlgorithm_createAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.AlgorithmOptions).t1","com.graphhopper.routing.QueryGraph_boolean_enforceHeading(int,double,boolean).t4","com.graphhopper.routing.QueryGraph_boolean_enforceHeading(int,double,boolean).t5","com.graphhopper.routing.QueryGraph_boolean_enforceHeading(int,double,boolean).t2","com.graphhopper.routing.AbstractBidirAlgo_com.graphhopper.routing.Path_calcPath(int,int).b","com.graphhopper.storage.EdgeEntry_int_compareTo(com.graphhopper.storage.EdgeEntry).t1","com.graphhopper.routing.Path_void_processEdge(int,int).b","com.graphhopper.routing.AlgorithmOptions_com.graphhopper.routing.util.Weighting_getWeighting().b","com.graphhopper.storage.BaseGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).b","com.graphhopper.routing.Path_void_reverseOrder().e1","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().b","com.graphhopper.routing.VirtualEdgeIteratorState_boolean_isBackward(com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).e1","com.graphhopper.routing.VirtualEdgeIteratorState_com.graphhopper.util.PointList_fetchWayGeometry(int).e1","com.graphhopper.storage.EdgeAccess_double_getDist(long).b","com.graphhopper.routing.AlgorithmOptions_void_assertNotNull(java.lang.Object,java.lang.String).e1","com.graphhopper.routing.DijkstraBidirectionRef_boolean_fillEdgesTo().e1","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).e2","com.graphhopper.routing.DijkstraBidirectionRef_void_initTo(int,double).b","com.graphhopper.routing.util.EncodedDoubleValue_double_getDoubleValue(long).b","com.graphhopper.routing.AlgorithmOptions_void_assertNotNull(java.lang.Object,java.lang.String).b","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t1","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).e1","com.graphhopper.routing.QueryGraph_boolean_enforceHeading(int,double,boolean).e5","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t6","com.graphhopper.routing.QueryGraph_void_clearUnfavoredStatus().b","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).t1","com.graphhopper.GraphHopper_java.util.List_getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse).t11","com.graphhopper.util.GHUtility_com.graphhopper.util.EdgeIteratorState_getEdge(com.graphhopper.storage.Graph,int,int).e1","com.graphhopper.routing.DijkstraBidirectionRef_boolean_isWeightLimitExceeded().b","com.graphhopper.routing.Path_com.graphhopper.routing.Path_setWeight(double).b","com.graphhopper.routing.VirtualEdgeIteratorState_boolean_isForward(com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.routing.AbstractRoutingAlgorithm_void_checkAlreadyRun().e1","com.graphhopper.routing.QueryGraph_void_addVirtualEdges(gnu.trove.map.TIntObjectMap,com.graphhopper.routing.util.EdgeFilter,boolean,int,int).b","com.graphhopper.routing.AbstractBidirAlgo_void_runAlgo().e2","com.graphhopper.storage.EdgeEntry_int_compareTo(com.graphhopper.storage.EdgeEntry).e1","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).t3","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).t4","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).t5","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e1","com.graphhopper.routing.util.AbstractFlagEncoder_boolean_isBackward(long).b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).t2","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).t5","com.graphhopper.routing.Path_void_addEdge(int).b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).t3","com.graphhopper.routing.AbstractBidirAlgo_void_runAlgo().t1","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).t4","com.graphhopper.routing.AbstractBidirAlgo_void_runAlgo().t2","com.graphhopper.routing.VirtualEdgeIterator_com.graphhopper.routing.VirtualEdgeIterator(int).b","com.graphhopper.routing.util.FastestWeighting_double_calcWeight(com.graphhopper.util.EdgeIteratorState,boolean,int).e1","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e6","com.graphhopper.routing.util.FastestWeighting_double_calcWeight(com.graphhopper.util.EdgeIteratorState,boolean,int).e2","com.graphhopper.util.StopWatch_java.lang.String_toString().b","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).e1","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).e2","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).e3","com.graphhopper.routing.VirtualEdgeIterator_com.graphhopper.util.EdgeIterator_reset().b","com.graphhopper.routing.QueryGraph_com.graphhopper.storage.NodeAccess_getNodeAccess().b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).t1","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).t2","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).t3","com.graphhopper.routing.Path_com.graphhopper.util.EdgeIteratorState_getFinalEdge().b","com.graphhopper.routing.AlgorithmOptions_com.graphhopper.routing.util.TraversalMode_getTraversalMode().b","com.graphhopper.routing.VirtualEdgeIteratorState_int_getBaseNode().b","com.graphhopper.util.GHUtility_com.graphhopper.util.EdgeIteratorState_getEdge(com.graphhopper.storage.Graph,int,int).b","com.graphhopper.routing.VirtualEdgeIterator_int_count().b","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).e4","com.graphhopper.routing.util.AbstractFlagEncoder_double_getReverseSpeed(long).b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().e1","com.graphhopper.routing.VirtualEdgeIterator_long_getFlags().b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().e3","com.graphhopper.routing.util.AbstractFlagEncoder_double_getSpeed(long).e1","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().e2","com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch(java.lang.String).b","com.graphhopper.routing.AbstractBidirAlgo_int_getVisitedNodes().b","com.graphhopper.routing.QueryGraph$3_boolean_execute(int).b","com.graphhopper.GHResponse_com.graphhopper.GHResponse_setDebugInfo(java.lang.String).t1","com.graphhopper.routing.AbstractRoutingAlgorithm_boolean_accept(com.graphhopper.util.EdgeIterator,int).t1","com.graphhopper.routing.QueryGraph_int_getPosOfReverseEdge(int).t1","com.graphhopper.routing.util.FastestWeighting_double_calcWeight(com.graphhopper.util.EdgeIteratorState,boolean,int).b","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_boolean_getBoolean(int,boolean,boolean).b","com.graphhopper.routing.AbstractRoutingAlgorithm_boolean_accept(com.graphhopper.util.EdgeIterator,int).e1","com.graphhopper.routing.Path_com.graphhopper.routing.Path_setEndNode(int).b","com.graphhopper.routing.AbstractRoutingAlgorithm_void_checkAlreadyRun().b","com.graphhopper.util.PointList$1_double_getLat(int).b","com.graphhopper.routing.DijkstraBidirectionRef_boolean_fillEdgesTo().b","com.graphhopper.routing.Path_double_getWeight().b","com.graphhopper.storage.BaseGraph_void_checkAdjNodeBounds(int).b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.PathBidirRef(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_boolean_isBackward(com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.routing.Path_void_forEveryEdge(com.graphhopper.routing.Path$EdgeVisitor).e1","com.graphhopper.routing.util.FastestWeighting_double_calcWeight(com.graphhopper.util.EdgeIteratorState,boolean,int).t2","com.graphhopper.routing.VirtualEdgeIteratorState_int_getEdge().b","com.graphhopper.routing.VirtualEdgeIteratorState_com.graphhopper.util.PointList_fetchWayGeometry(int).t2","com.graphhopper.routing.VirtualEdgeIteratorState_com.graphhopper.util.PointList_fetchWayGeometry(int).t1","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).b","com.graphhopper.routing.VirtualEdgeIteratorState_int_getAdjNode().b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().t3","com.graphhopper.storage.EdgeAccess_double_getDist(long).e1","com.graphhopper.routing.VirtualEdgeIterator_boolean_getBoolean(int,boolean,boolean).b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.PathBidirRef_setSwitchToFrom(boolean).b","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).b","com.graphhopper.routing.QueryGraph_void_clearUnfavoredStatus().l1","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).e2","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).e1","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer().b","com.graphhopper.routing.VirtualEdgeIteratorState_void_setVirtualEdgePreference(boolean).b","com.graphhopper.routing.Path_long_calcMillis(double,long,boolean).e1","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).t2","com.graphhopper.routing.DijkstraBidirectionRef_boolean_fillEdgesFrom().e1","com.graphhopper.routing.Path_long_calcMillis(double,long,boolean).e3","com.graphhopper.routing.Path_long_calcMillis(double,long,boolean).e2","com.graphhopper.routing.RoutingAlgorithmFactorySimple_com.graphhopper.routing.RoutingAlgorithm_createAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.AlgorithmOptions).b","com.graphhopper.routing.Path_com.graphhopper.routing.Path_setFromNode(int).b","com.graphhopper.routing.VirtualEdgeIteratorState_long_getFlags().b","com.graphhopper.routing.VirtualEdgeIterator_int_getAdjNode().b","com.graphhopper.routing.VirtualEdgeIterator_double_getDistance().b","com.graphhopper.util.AngleCalc_double_alignOrientation(double,double).e2","com.graphhopper.routing.VirtualEdgeIterator_int_getEdge().b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).b","com.graphhopper.routing.Path_com.graphhopper.routing.Path_setFound(boolean).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.PointList.add"]},"branchesDiff":{"delete":["l0"]},"type":"staticDiff"}]},{"transformation":"c0568e13-82a9-11e5-97c9-e77067bad64b","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.close"]},"type":"staticDiff"}]}]}