{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testMain":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":22,"com.graphhopper.reader.OSMReaderTest.testFerry":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":57,"com.graphhopper.reader.OSMReaderTest.testWithBounds":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":40,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":43,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":29,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":10,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":34,"com.graphhopper.reader.OSMReaderTest.testFoot":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":23,"com.graphhopper.reader.OSMReaderTest.testOneWay":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":16,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":32,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":63,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":1,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":21,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":47,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":2,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":38,"com.graphhopper.reader.OSMReaderTest.testSort":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":11},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"c7963055-793e-11e5-966e-4dcb79bb549a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"variableMap":{"systemProperty":"classBicycleSpecific"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:565","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\");\n    if (java.lang.String != null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n    \n}"},"status":-1},{"failures":[],"tindex":"c7967e76-793e-11e5-966e-f96b8c9d45d5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:310","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.GHTreeMapComposed.pollKey()"},"status":-2},{"failures":[],"tindex":"c7967e77-793e-11e5-966e-798188e916a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"variableMap":{"keys":"keys","i":"i","child":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"c7967e78-793e-11e5-966e-5d2e04cb0623","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:39","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lon\"))"},"variableMap":{"parser":"parser"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:38","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lat\"))"},"status":-2},{"failures":[],"tindex":"c796a589-793e-11e5-966e-29148c9875db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.flush()"},"status":-2},{"failures":[],"tindex":"c796a58a-793e-11e5-966e-b3b706bc570c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:197","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = ((((((double) + \",\") + (double)) + \",\") + (double)) + \",\") + (double)"},"status":-2},{"failures":[],"tindex":"c796a58b-793e-11e5-966e-43d1a3964344","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:740","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setEncodingManager(com.graphhopper.routing.util.EncodingManager.create(java.lang.String))"},"status":-2},{"failures":[],"tindex":"c796a58c-793e-11e5-966e-4fe5418c28a1","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"shift","child":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-2},{"failures":[],"tindex":"c796a58d-793e-11e5-966e-1535fd40a653","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:146","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:310","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"c796cc9e-793e-11e5-966e-9df209c7d12c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:88","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.Path.calcPoints();\n    if (com.graphhopper.util.PointList.isEmpty())\n        com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n    \n    if (boolean) {\n        int = com.graphhopper.util.PointList.getSize();\n        com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n    } \n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointList);\n} "},"status":-2},{"failures":[],"tindex":"c796cc9f-793e-11e5-966e-bb956eb80094","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:289","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"c796cca0-793e-11e5-966e-ebe9b8396496","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:895","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.util.BitUtil.toInt(byte[], int))"},"status":-2},{"failures":[],"tindex":"c796cca1-793e-11e5-966e-d10040cf3964","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:757","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setWayGeometry_(com.graphhopper.storage.BaseGraph.fetchWayGeometry_(long, true, 0, -1, -1), long, false)"},"status":-2},{"failures":[],"tindex":"c796cca2-793e-11e5-966e-d541bc3b3da7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:267","type":"CtIfImpl","sourcecode":"if (long > (this.long))\n    throw new java.lang.IllegalStateException(\"Use ensureCapacity to increase capacity!\");\n"},"variableMap":{"bytes":"sumBytes","capacity":"sumBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:64","type":"CtIfImpl","sourcecode":"if (java.util.zip.ZipEntry.isDirectory()) {\n    new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir();\n} else {\n    double double = 1;\n    if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n        double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n    \n    java.io.File java.io.File = new java.io.File(java.io.File , java.util.zip.ZipEntry.getName());\n    java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n    try {\n        int int;\n        while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n            java.io.FileOutputStream.write(byte[], 0, int);\n            long += int * double;\n            if (com.graphhopper.util.ProgressListener != null)\n                com.graphhopper.util.ProgressListener.update(long);\n            \n        }\n    } finally {\n        java.io.FileOutputStream.close();\n    }\n}"},"status":-2},{"failures":[],"tindex":"c796f3b3-793e-11e5-966e-59d52f466f6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:85","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.max((10 * 4), long)"},"variableMap":{"bytes":"bytePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:87","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":-2},{"failures":[],"tindex":"c796f3b4-793e-11e5-966e-e37f4369e5d2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:233","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getLatitude(1)"},"variableMap":{"nextLat":"ele","points":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:769","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getElevation(int)"},"status":-2},{"failures":[],"tindex":"c796f3b5-793e-11e5-966e-590f53834ac1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:54","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>.add(new com.graphhopper.reader.OSMRelation.Member(javax.xml.stream.XMLStreamReader));\n} "},"status":-2},{"failures":[],"tindex":"c7971ac6-793e-11e5-966e-b3ced26efc49","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:255","type":"CtAssignmentImpl","sourcecode":"double = 30"},"variableMap":{"speed":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:250","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-2},{"failures":[],"tindex":"c7971ac7-793e-11e5-966e-63667581d680","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe = ((sun.misc.Unsafe)(java.lang.reflect.Field.get(null)))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}