{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"cd116176-7949-11e5-b441-954283d338fc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:535","type":"CtReturnImpl","sourcecode":"return (int / 2) == (int / 2)"},"variableMap":{"edgeKey1":"maxTurnCosts","edgeKey2":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:637","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.routing.util.EncodedValue.getValue(long)) == (int)"},"status":-2},{"failures":[],"tindex":"cd118887-7949-11e5-b441-0b8fcc2b416b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"edgeId":"initLeafSize","maxEdgesCount":"initLeafSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"status":-2},{"failures":[],"tindex":"cd118888-7949-11e5-b441-ebe851a692cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SynchedDAWrapper:117","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"inner":"da","da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:76","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"status":-2},{"failures":[],"tindex":"cd118889-7949-11e5-b441-a32ff80f5fdc","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:96","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"incorrect loc2id index version\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())))"},"status":-2},{"failures":[],"tindex":"cd11888a-7949-11e5-b441-356a146823f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-2},{"failures":[],"tindex":"cd11888b-7949-11e5-b441-c1df71bf17f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"variableMap":{"latSize":"nodeIndex","size":"nodeIndex","lonSize":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:327","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-2},{"failures":[],"tindex":"cd11af9c-7949-11e5-b441-b30b2bcdfaed","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"toRemoveSet"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:640","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"status":-2},{"failures":[],"tindex":"cd11af9d-7949-11e5-b441-91258da38ce4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:873","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-2},{"failures":[],"tindex":"cd11af9e-7949-11e5-b441-bb6eb5e1755d","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:318","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-2},{"failures":[],"tindex":"cd11af9f-7949-11e5-b441-ddfa1ecb5562","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"connectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.push(int)"},"status":-2},{"failures":[],"tindex":"cd11afa0-7949-11e5-b441-e16c6867ae82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"nodeEntryBytes","index":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:722","type":"CtForImpl","sourcecode":"for (long long = 0 ; long < (int) ; long += 4) {\n    com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)));\n}"},"status":-2},{"failures":[],"tindex":"cd11afa1-7949-11e5-b441-9b701a192c01","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"cd11afa2-7949-11e5-b441-bf5480d6dc16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:149","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess))"},"status":-2},{"failures":[],"tindex":"cd11afa3-7949-11e5-b441-af04e1b0cfec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:176","type":"CtInvocationImpl","sourcecode":"java.util.zip.Deflater.setInput(byte[], int, int)"},"status":-2},{"failures":[],"tindex":"cd11d6b4-7949-11e5-b441-e5406a1d96f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"indexM","newBaseIndex":"indexM"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:93","type":"CtIfImpl","sourcecode":"if (\"0.0\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: cannot get version!?\");\n} else {\n    java.lang.String java.lang.String = java.lang.String;\n    if (int >= 0)\n        java.lang.String = java.lang.String.substring(0, int);\n    \n    com.graphhopper.util.Constants.boolean = java.lang.String.toLowerCase().contains(\"-snapshot\");\n    com.graphhopper.util.Constants.java.lang.String = java.lang.String;\n}"},"status":-2},{"failures":[],"tindex":"cd11d6b5-7949-11e5-b441-3d0dd32a2b4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:83","type":"CtTryImpl","sourcecode":"try {\n    if (int == (com.graphhopper.reader.OSMReader.int))\n        return java.util.Collections.emptyList();\n    \n    int int = com.graphhopper.util.EdgeIterator.int;\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n            int = com.graphhopper.util.EdgeIterator.getEdge();\n            break;\n        } \n    }\n    if (int == (com.graphhopper.util.EdgeIterator.int))\n        return java.util.Collections.emptyList();\n    \n    final java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = new java.util.ArrayList<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>();\n    com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getEdge();\n        long long = com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(int);\n        if ((((int != int) && ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))) && (long != (this.long))) || ((((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type)) && (long == (this.long))) && (long >= 0))) {\n            final com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = new com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry();\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long = com.graphhopper.routing.util.TurnCostEncoder.getTurnFlags(true, 0);\n            java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.add(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n            if ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))\n                break;\n            \n        } \n    }\n    return java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>;\n} catch (java.lang.Exception e) {\n    throw new java.lang.IllegalStateException((\"Could not built turn table entry for relation of node with osmId:\" + (this.long)) , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"cd11d6b6-7949-11e5-b441-85ae837940e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:74","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int = java.lang.Integer.parseInt(java.lang.String[][int]);\n} else if (int == 1) {\n    int = java.lang.Integer.parseInt(java.lang.String[][int]);\n} else {\n    double = java.lang.Double.parseDouble(java.lang.String[][int]);\n}"},"status":-2},{"failures":[],"tindex":"cd11d6b7-7949-11e5-b441-8f8091c1e986","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:269","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-2},{"failures":[],"tindex":"cd11d6b8-7949-11e5-b441-ed6140e13237","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:296","type":"CtReturnImpl","sourcecode":"return int - int"},"variableMap":{"tmp":"length","initializedCounter":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:132","type":"CtReturnImpl","sourcecode":"return java.lang.String.trim().split(java.lang.String).int"},"status":-2},{"failures":[],"tindex":"cd11fdc9-7949-11e5-b441-85caf04064a4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1066","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:143","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}