{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":260,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":426,"com.graphhopper.GraphHopperAPITest.testNoLoad":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":96,"com.graphhopper.reader.OSMReaderTest.testFerry":17,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":179,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":342,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":454,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":475,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":282,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":474,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":419,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":305,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":210,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":486,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":481,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":121,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":377,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":111,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":368,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":235,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":333,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":452,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":290,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":120,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":213,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":289,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":450,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":248,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":220,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":287,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":216,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":238,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":80,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":126,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":398,"com.graphhopper.reader.OSMReaderTest.testSort":20,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":298,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":374,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":334,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":199,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":355,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":241,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":136,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":36,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":445,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":75,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":361,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":151,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":256,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":468,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":51,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":429,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":301,"com.graphhopper.coll.CompressedArrayTest.testCompress2":487,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":343,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":345,"com.graphhopper.GraphHopperAPITest.testLoad":31,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":423,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":162,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":156,"com.graphhopper.reader.OSMReaderTest.testBarriers":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":407,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":247,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":441,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":482,"com.graphhopper.routing.PathTest.testFindInstruction":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":38,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":420,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":406,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":175,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":415,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":101,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":353,"com.graphhopper.util.InstructionListTest.testWayList2":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":86,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":451,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":467,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":350,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":360,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":379,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":44,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":91,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":155,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":145,"com.graphhopper.routing.PathBidirRefTest.testExtract":221,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":432,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":457,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":341,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":114,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":471,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":90,"com.graphhopper.util.GHUtilityTest.testSort2":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":257,"com.graphhopper.reader.OSMReaderTest.testMain":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":383,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":458,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":463,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":300,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":404,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":127,"com.graphhopper.storage.GraphHopperStorageTest.testClone":158,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":332,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":389,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":352,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":296,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":443,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":323,"com.graphhopper.routing.PathTest.testTime":293,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":440,"com.graphhopper.util.InstructionListTest.testCreateGPX":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":395,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":110,"com.graphhopper.util.GHUtilityTest.testSortDirected":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":135,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":275,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":197,"com.graphhopper.GraphHopperTest.testFootOnly":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":472,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":385,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":106,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":82,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":193,"com.graphhopper.routing.QueryGraphTest.testOneWay":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":142,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":477,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":318,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":485,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":78,"com.graphhopper.reader.OSMReaderTest.testWithBounds":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":417,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":328,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":433,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":319,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":434,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":416,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":483,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":309,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":47,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":154,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":242,"com.graphhopper.util.InstructionListTest.testWayList":183,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":375,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":447,"com.graphhopper.GraphHopperAPITest.testDisconnected179":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":102,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":77,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":466,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":413,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":344,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":109,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":462,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":160,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":55,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":424,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":236,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":171,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":448,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":232,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":321,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":390,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":70,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":422,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":437,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":264,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":465,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":359,"com.graphhopper.routing.PathTest.testWayList":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":335,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":438,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":384,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":265,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":461,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":338,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":425,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":403,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":219,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":283,"com.graphhopper.util.GHUtilityTest.testSort":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":83,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":357,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":460,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":59,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":302,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":122,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":408,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":148,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":206,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":299,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":435,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":469,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":263,"com.graphhopper.util.TranslationMapTest.testToString":278,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":113,"com.graphhopper.routing.PathTest.testFound":292,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":16,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":399,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":61,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":484,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":459,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":239,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":45,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":326,"com.graphhopper.util.InstructionListTest.testEmptyList":273,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":255,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":394,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":380,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":378,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":354,"com.graphhopper.reader.PrinctonReaderTest.testRead":29,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":130,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":411,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":480,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":446,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":439,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":453,"com.graphhopper.reader.OSMReaderTest.testFoot":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":112,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":204,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":470,"com.graphhopper.reader.OSMReaderTest.testOneWay":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":358,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":132,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":174,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":312,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":479,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":233,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":401,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":108,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":161,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":279,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":388,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":455,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":226,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":188,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":215,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":473,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":327,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":396,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":149,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":362,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":123,"com.graphhopper.routing.PathBidirRefTest.testExtract2":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":240,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":87,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":285,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":316,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":76,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":140,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":444,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":119,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":427,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":231,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":414,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":150,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":373,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":391,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":170,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":409,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":99,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":397,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":392,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":393,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":351,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":252,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":339,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":185,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":372,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":428,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":107,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":349,"com.graphhopper.util.InstructionListTest.testFind":181,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":33},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"tindex":"530e12a1-826f-11e5-a30d-f3b858cbe8a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:621","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.trimTo(long)"},"variableMap":{"nodes":"edges","nodeCap":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[0,1,266,2,3,4,5,6,267,7,8,9,10,11,12,268,13,14,15,16,269,17,18,19,20,21,22,23,24,25,270,26,27,271,28,31,32,272,181,273,274,182,183,275,276,277,184,185,278,279,280,281,282,283,284,285,286,287,288,289,290,291,216,292,293,217,218,294,295,219,220],"tindex":"530e60c2-826f-11e5-a30d-7b958812c8c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(\"he\", com.graphhopper.util.Translation)"},"variableMap":{"translations":"translations","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:87","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, com.graphhopper.util.Translation>.put(com.graphhopper.util.Translation.getLanguage(), com.graphhopper.util.Translation)"},"status":-1},{"failures":[],"tindex":"530e60c3-826f-11e5-a30d-af37118e05bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:999","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.reader.dem.ElevationProvider = com.graphhopper.reader.dem.ElevationProvider"},"variableMap":{"eleProvider":"tmpProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:559","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.setDAType(com.graphhopper.storage.DAType)"},"status":0},{"failures":[0,1,267,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,270,26,27,271,28],"tindex":"530e87d4-826f-11e5-a30d-2b2b63c40daa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:727","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-1},{"failures":[],"tindex":"530e87d5-826f-11e5-a30d-2d7547bf9516","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:119","type":"CtInvocationImpl","sourcecode":"java.util.zip.ZipInputStream.getNextEntry()"},"variableMap":{"zip":"zis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:91","type":"CtAssignmentImpl","sourcecode":"java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry()"},"status":-2},{"failures":[296],"tindex":"530e87d6-826f-11e5-a30d-d5ce6cb26314","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"status":-1},{"failures":[],"tindex":"530e87d7-826f-11e5-a30d-271fc9015f38","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:482","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * double))) / double"},"variableMap":{"factor":"lat","value":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:66","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"530e87d8-826f-11e5-a30d-bbfa9b4af289","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"variableMap":{"val":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"status":-1},{"failures":[23],"tindex":"530eaee9-826f-11e5-a30d-fd02758a5baa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:547","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider = new com.graphhopper.reader.dem.SRTMProvider()"},"variableMap":{"tmpProvider":"eleProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:999","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.reader.dem.ElevationProvider = com.graphhopper.reader.dem.ElevationProvider"},"status":-1},{"failures":[],"tindex":"530eaeea-826f-11e5-a30d-8742e3f00da3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"javax.xml.stream.XMLStreamConstants.START_ELEMENT","newSize":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:54","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>.add(new com.graphhopper.reader.OSMRelation.Member(javax.xml.stream.XMLStreamReader));\n} "},"status":-2},{"failures":[],"tindex":"530eaeeb-826f-11e5-a30d-7305b4f413cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:44","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"530eaeec-826f-11e5-a30d-7f2c2a98562a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"javax.xml.stream.XMLStreamConstants.START_ELEMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:60","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"k\");\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"v\");\n    if ((java.lang.String != null) && ((java.lang.String.length()) > 0))\n        com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.String);\n    \n} "},"status":-2},{"failures":[213],"tindex":"530ed5fd-826f-11e5-a30d-2f534730bd5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"prevConnectedId","guess":"prevConnectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.min(int[][int], int[][int])"},"status":-1},{"failures":[266,2,3,4,5,6,7,8,9,10,11,12,14,15,29,30,31,33,34,297,298,299,300,301,35,302,36,37,38,39,40,41,42,303,43,304,305,306,44,45,307,46,47,48,49,50,51,52,308,309,53,310,54,55,56,311,312,57,58,313,314,315,59,60,316,317,61,62,318,63,319,64,65,66,67,68,320,69,321,70,71,72,73,74,322,75,76,90,95,96,97,98,99,100,101,323,102,324,325,326,103,104,327,105,106,107,108,109,110,111,328,329,112,330,113,114,115,331,332,116,117,333,334,335,118,119,120,336,337,121,122,338,123,339,124,340,341,125,342,343,344,126,345,127,128,129,130,131,132,133,346,134,347,348,349,135,136,350,137,138,139,140,141,142,143,351,352,144,353,145,146,147,354,355,148,149,356,357,358,150,151,359,152,360,361,362,363,153,364,154,155,156,157,158,159,160,365,161,366,367,368,162,163,369,164,165,166,167,168,169,170,370,371,171,372,172,173,174,373,374,175,176,375,376,377,177,178,179,180,201,378,379,380,381,382,383,384,385,386,387,296,388,389,390,391,392,393,394,395,396,397,398,399,400,205,206,401,402,403,404,405,406,280,407,408,281,409,410,411,412,413,414,415,416,282,417,418,419,420,421,422,423,424,425,215,426,427,428,429,430,431,432,433,434,435,436,283,284,437,438,439,440,441,442,285,443,444,445,446,447,448,449,450,451,452,286,453,454,287,455,456,457,458,459,460,461,462,288,463,464,465,466,467,468,469,470,471,472,473,289,474,475,476,477,478,479,480,481,290,482,483,484,221,222,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"tindex":"530ed5fe-826f-11e5-a30d-c174ac9bd136","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:229","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-1},{"failures":[378,403,449],"tindex":"530efd0f-826f-11e5-a30d-d1546dc98dae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"directionBitMask","len":"directionBitMask","start":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:235","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.Set<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"530f2420-826f-11e5-a30d-f13866630feb","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:310","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.GHTreeMapComposed.pollKey()"},"status":-2},{"failures":[],"tindex":"530f2421-826f-11e5-a30d-19ff2ad9937f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PMap.this(5)"},"variableMap":{"this":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:46","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":-2},{"failures":[23,485,486],"tindex":"530f2422-826f-11e5-a30d-7d6047ea63b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:288","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int += 2) {\n    short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n    if ((short < (-1000)) || (short > 12000))\n        short = java.lang.Short.short;\n    \n    com.graphhopper.storage.DataAccess.setShort(int, short);\n}"},"status":-1},{"failures":[],"tindex":"530f2423-826f-11e5-a30d-db8eef8d382f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Math.abs(double)) + 1.0E-10"},"variableMap":{"y":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[487],"tindex":"530f2424-826f-11e5-a30d-e3bf94ad6ad7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:88","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    com.graphhopper.coll.CompressedArray.flush();\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"530e60c3-826f-11e5-a30d-af37118e05bc","diffs":[{"methodsDiff":{"delete":["com.graphhopper.reader.dem.ElevationProvider.setDAType"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.reader.dem.ElevationProvider$1_com.graphhopper.reader.dem.ElevationProvider_setDAType(com.graphhopper.storage.DAType).b"]},"type":"branch"}]}]}