{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":70,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":359,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":319,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.reader.OSMReaderTest.testFerry":175,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":278,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":279,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":307,"com.graphhopper.routing.QueryGraphTest.testOneWay":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":118,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":252,"com.graphhopper.reader.OSMReaderTest.testWithBounds":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":170,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":296,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":313,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":76,"com.graphhopper.geohash.LinearKeyAlgoTest.testEncode":189,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":75,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":234,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":2,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":119,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":334,"com.graphhopper.GraphHopperTest.testPrepare":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":358,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":18,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":322,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":341,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":50,"com.graphhopper.util.InstructionListTest.testWayList":283,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":350,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":217,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":109,"com.graphhopper.GraphHopperAPITest.testDisconnected179":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":63,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":250,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":342,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":253,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":289,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":374,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":172,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":103,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":90,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":7,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":24,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":169,"com.graphhopper.geohash.LinearKeyAlgoTest.testDecode":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":337,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":237,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":41,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":254,"com.graphhopper.reader.OSMReaderTest.testSort":178,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":353,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":185,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":114,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":242,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":137,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":208,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":363,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":291,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":206,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":365,"com.graphhopper.routing.PathTest.testWayList":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":128,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":340,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":251,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":348,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":143,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":211,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":135,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":355,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":196,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":11,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":373,"com.graphhopper.util.GHUtilityTest.testSort":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":258,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":344,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":269,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":320,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":157,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":195,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":129,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":314,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":305,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":267,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":214,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":270,"com.graphhopper.GraphHopperAPITest.testLoad":199,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":362,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":97,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":139,"com.graphhopper.reader.OSMReaderTest.testBarriers":179,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":115,"com.graphhopper.routing.PathTest.testFound":367,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":60,"com.graphhopper.util.GHUtilityTest.testCopy":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":346,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":197,"com.graphhopper.routing.PathTest.testFindInstruction":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":140,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":150,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":210,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":27,"com.graphhopper.util.InstructionListTest.testEmptyList":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":349,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":219,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":48,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":354,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":166,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":328,"com.graphhopper.reader.PrinctonReaderTest.testRead":288,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":96,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":102,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":123,"com.graphhopper.util.InstructionListTest.testWayList2":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":240,"com.graphhopper.reader.OSMReaderTest.testFoot":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":262,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":259,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":53,"com.graphhopper.reader.OSMReaderTest.testOneWay":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":171,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":304,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":104,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":69,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":332,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":190,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":19,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":72,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":180,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":370,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":327,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":324,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":336,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":227,"com.graphhopper.routing.PathBidirRefTest.testExtract":292,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":325,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":205,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":286,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":303,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":174,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":204,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":202,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":266,"com.graphhopper.util.GHUtilityTest.testSort2":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":68,"com.graphhopper.reader.OSMReaderTest.testMain":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":130,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":311,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":131,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":126,"com.graphhopper.routing.PathBidirRefTest.testExtract2":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":125,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":339,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":238,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":294,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":249,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":116,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":161,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":99,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":330,"com.graphhopper.storage.GraphHopperStorageTest.testClone":22,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":255,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":121,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":31,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":198,"com.graphhopper.GraphHopperTest.testFootAndCar":8,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":62,"com.graphhopper.routing.PathTest.testTime":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":106,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":329,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":142,"com.graphhopper.util.GHUtilityTest.testSortDirected":277,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":110,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":222,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":351,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":184,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":290,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":212,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":312,"com.graphhopper.GraphHopperTest.testFootOnly":14,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":42,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":285,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":239,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":183,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":191,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":71,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":216,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":369,"com.graphhopper.util.InstructionListTest.testFind":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":265},"transformations":[{"failures":[],"tindex":"5a12fbcf-790c-11e5-a595-3d28c72a6048","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"variableMap":{"dist":"weight2goal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:47","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[0,1],"tindex":"5a1322e0-790c-11e5-a595-539ccc23a25b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:271","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"))"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:259","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-1},{"failures":[],"tindex":"5a1322e1-790c-11e5-a595-419557b1a72c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:168","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,0],"tindex":"5a1349f2-790c-11e5-a595-81762074a5e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"bytes","edgeId":"bytes","com.graphhopper.storage.EdgeAccess.NO_NODE":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"5a1349f3-790c-11e5-a595-132eb16e618a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:98","type":"CtLocalVariableImpl","sourcecode":"byte byte = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:116","type":"CtLocalVariableImpl","sourcecode":"byte byte = ((byte)(1 << 7))"},"status":-2},{"failures":[188,189,190,191,192,193,194,195],"tindex":"5a137104-790c-11e5-a595-ebdd0e4cc899","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:58","type":"CtAssignmentImpl","sourcecode":"double = ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / (int)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,12,13,14,196,197,198,199,177,178,179,180,181,183,184],"tindex":"5a137105-790c-11e5-a595-0b24be5ba122","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"currentIndex","edgeId":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:96","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n    if (int < 0)\n        int = int;\n    \n    continue;\n} else if (int < 0) {\n    continue;\n} "},"status":-1},{"failures":[3,200,201,202,203,204,205,4,5,6,6,7,7,8,8,9,10,11,11,12,14,14,206,207,17,208,18,19,20,21,22,23,24,25,26,27,28,209,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,210,80,92,93,94,95,211,212,96,97,213,214,98,215,99,100,101,102,103,104,105,106,107,108,109,216,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,217,190,191,192,193,195,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,137,269,138,139,140,141,142,143,144,145,146,147,148,270,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,199,287,288,289,175,176,177,178,179,180,181,182,183,290,184,185,186,187,0,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,315,315,316,316,317,317,318,318,319,319,320,320,321,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374],"tindex":"5a137106-790c-11e5-a595-bb0e877d5a33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:115","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"5a139817-790c-11e5-a595-2570da4a1202","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:187","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"segmentSizeInBytes":"low","indexDivisor":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"5a139818-790c-11e5-a595-b1df4b3db5d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:538","type":"CtLocalVariableImpl","sourcecode":"double double = double - (double)"},"variableMap":{"orientation":"lat","prevOrientation":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:83","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - (int)))"},"status":-2},{"failures":[],"tindex":"5a139819-790c-11e5-a595-2bb94c7599fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:799","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"variableMap":{"s":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:439","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int).trim()"},"status":-2},{"failures":[],"tindex":"5a13981a-790c-11e5-a595-adb1452ad939","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:45","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-2},{"failures":[],"tindex":"5a13981b-790c-11e5-a595-1315866bb8be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"minLat","toHeight":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:155","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"5a13bf2c-790c-11e5-a595-5fabcfa5f27b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1064","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.index.QueryResult = com.graphhopper.storage.index.QueryResult"},"status":-2},{"failures":[],"tindex":"5a13bf2d-790c-11e5-a595-a555d42f5901","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:590","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"5a13bf2e-790c-11e5-a595-1b033781ce5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"contractedNeighbors","bytes":"contractedNeighbors","segmentSizeInBytes":"contractedNeighbors"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:557","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.CHEdgeIterator.isShortcut())\n    int++;\n"},"status":-2},{"failures":[],"tindex":"5a13bf2f-790c-11e5-a595-edfb388ef69a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:277","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('(')"},"status":-2},{"failures":[],"tindex":"5a13bf30-790c-11e5-a595-bf2045103dc9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:141","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double)) {\n    continue;\n} "},"variableMap":{"lat":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:309","type":"CtIfImpl","sourcecode":"if ((double < 0) || (java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalArgumentException((((\"Speed cannot be negative or NaN: \" + double) + \", flags:\") + (com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.toBitString(long))));\n"},"status":-2},{"failures":[],"tindex":"5a13bf31-790c-11e5-a595-d1f8f3135eee","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:225","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"variableMap":{"bm":"cap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:148","type":"CtForImpl","sourcecode":"for (long long = 0 ; long < long ; long += int) {\n    if (com.graphhopper.storage.AbstractDataAccess.isIntBased()) {\n        for (int int = 0 ; int < int ; int += 4) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.storage.DataAccess.getInt((long + int)), int);\n        }\n    } else {\n        com.graphhopper.storage.DataAccess.getBytes(long, byte[], int);\n    }\n    if (boolean) {\n        for (int int = 0 ; int < int ; int += 4) {\n            com.graphhopper.storage.DataAccess.setInt((long + int), com.graphhopper.util.BitUtil.toInt(byte[], int));\n        }\n    } else {\n        com.graphhopper.storage.DataAccess.setBytes(long, byte[], int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"5a13bf32-790c-11e5-a595-d593c0588548","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"shortTripsSpeed","java.lang.Math.PI":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:540","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}