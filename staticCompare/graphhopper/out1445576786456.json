{"failureDictionary":{"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":14,"com.graphhopper.reader.OSMReaderTest.testMain":21,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":27,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":19,"com.graphhopper.GHResponseTest.testToString":5,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":1,"com.graphhopper.GraphHopperTest.testPrepareOnly":17,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":12,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":3,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":24,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":0,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":2,"com.graphhopper.GraphHopperAPITest.testLoad":4,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":10,"com.graphhopper.GraphHopperTest.testFootOnly":20,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":8,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":25,"com.graphhopper.reader.OSMReaderTest.testBarriers":23,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":16,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.GraphHopperTest.testPrepare":7,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":13,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":15,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.reader.OSMReaderTest.testSort":22},"transformations":[{"failures":[0,1,2],"tindex":"d00b9dbf-7943-11e5-a5ab-8797cc6ed41d","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1201","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Writes are not allowed!\");\n"},"variableMap":{"allowWrites":"forceClean"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:296","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.Helper.cleanHack();\n"},"status":-1},{"failures":[3],"tindex":"d00bc4d0-7943-11e5-a5ab-0d34ce7b88f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:394","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\nelse\n    java.lang.String += \", \" + java.lang.String;\n"},"variableMap":{"name":"highway","refName":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:162","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String == null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if (java.lang.String.startsWith(\"grade\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"d00bebe1-7943-11e5-a5ab-5fe52a749889","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:361","type":"CtAssignmentImpl","sourcecode":"long[] = long[]"},"variableMap":{"mKeys":"keys","nkeys":"keys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:73","type":"CtAssignmentImpl","sourcecode":"long[] = java.util.Arrays.copyOf(long[], int)"},"status":0},{"failures":[4,5,6,7,8,9,10,11,12],"tindex":"d00bebe2-7943-11e5-a5ab-91f673af6d17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:61","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.isEmpty()) {\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(0).getPoints();\n    com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D());\n} "},"status":-1},{"failures":[4,13,14,15,16,17,18,6,7,8,9,10,11,19,12,20,21,22,23,24,0,25,26],"tindex":"d00bebe3-7943-11e5-a5ab-2b91713ad359","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:96","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n    if (int < 0)\n        int = int;\n    \n    continue;\n} else if (int < 0) {\n    continue;\n} "},"status":-1},{"failures":[27],"tindex":"d00c12f4-7943-11e5-a5ab-85a55bad4596","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:159","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"d00c12f5-7943-11e5-a5ab-15ccc496e373","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:177","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PMap.merge(com.graphhopper.util.PMap.getMap())"},"variableMap":{"read":"hintsMap","this":"hintsMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:223","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PMap"},"status":-2},{"failures":[],"tindex":"d00c12f6-7943-11e5-a5ab-51d7e0d9fa6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:388","type":"CtForEachImpl","sourcecode":"for (int int : java.util.List<java.lang.Integer>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + int));\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.VirtualEdgeIteratorState.fetchWayGeometry(3);\n    double double;\n    if (boolean) {\n        int int = com.graphhopper.util.PointList.getSize();\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n    } else {\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n    }\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double);\n    double double = double - double;\n    if ((java.lang.Math.abs(double)) > 1.74) {\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + com.graphhopper.routing.QueryGraph.(getPosOfReverseEdge(int))));\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"d00c3a07-7943-11e5-a5ab-ad5dea86190c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:868","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"d00c3a08-7943-11e5-a5ab-9fd0241a18c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int)"},"variableMap":{"this":"ea","newEdgeId":"E_LINKB","fromNodeId":"E_DIST"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:656","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.init(com.graphhopper.storage.EdgeAccess.int, com.graphhopper.storage.EdgeAccess.int, com.graphhopper.storage.EdgeAccess.int, com.graphhopper.storage.EdgeAccess.int, com.graphhopper.storage.EdgeAccess.int, com.graphhopper.storage.EdgeAccess.int, false)"},"status":-2},{"failures":[],"tindex":"d00c3a09-7943-11e5-a5ab-db5278e2dde6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:111","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"d00c3a0a-7943-11e5-a5ab-8d677e972ecf","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:29","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.this(10)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.this(new byte[int])"},"status":-2},{"failures":[],"tindex":"d00c611b-7943-11e5-a5ab-9fd296322bd6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"parent":"parent","cl":"parent","tmpPrev":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:189","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"d00c611c-7943-11e5-a5ab-133dd8c032d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:82","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[],"tindex":"d00c611d-7943-11e5-a5ab-51d9f7102eab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((7 * 4), com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.shapes.BBox.double))"},"variableMap":{"nodes":"nodes","minEle":"maxEle","bounds":"bounds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:182","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.shapes.BBox.hasElevation()) {\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((7 * 4)));\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((8 * 4)));\n} "},"status":-2},{"failures":[],"tindex":"d00c611e-7943-11e5-a5ab-9975dde7849c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"variableMap":{"line":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PMap.has(\"version\")) {\n    if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n        throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n    } \n} "},"status":-2},{"failures":[],"tindex":"d00c882f-7943-11e5-a5ab-5336fa56d434","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:98","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.parseDouble(java.lang.String)"},"variableMap":{"str":"value","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:94","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":-2},{"failures":[],"tindex":"d00c8830-7943-11e5-a5ab-01a0ba73a00f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:749","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"d00c8831-7943-11e5-a5ab-cbe8bbf46a84","series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"variableMap":{"names":"heights"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:297","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"d00c8832-7943-11e5-a5ab-6ff6671148e9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:126","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.util.PMap com.graphhopper.util.PMap = new com.graphhopper.util.PMap(java.lang.String);\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    if (com.graphhopper.util.PMap.has(\"version\")) {\n        if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n            throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n        } \n    } \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}