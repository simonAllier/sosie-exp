{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"ff4f3235-7921-11e5-a4e1-3bc354fdbfe9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"status":-2},{"failures":[],"tindex":"ff4f5946-7921-11e5-a4e1-a9761326420a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:288","type":"CtSwitchImpl","sourcecode":"switch (com.graphhopper.reader.OSMElement.getType()) {\n    case com.graphhopper.reader.OSMElement.int :\n        if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n            com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n        } \n        break;\n    case com.graphhopper.reader.OSMElement.int :\n        if (long < 0) {\n            com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n            long = long;\n        } \n        com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n        break;\n    case com.graphhopper.reader.OSMElement.int :\n        if (long < 0) {\n            com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n            long = long;\n        } \n        com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n        break;\n}"},"status":-2},{"failures":[],"tindex":"ff4f5947-7921-11e5-a4e1-49890d2da1f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-2},{"failures":[],"tindex":"ff4f5948-7921-11e5-a4e1-35b376e46daf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:55","type":"CtReturnImpl","sourcecode":"return byte[].int"},"variableMap":{"bytes":"b","length":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:69","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.BitUtilBig.((long)(toInt(byte[], int))) << 32) | (com.graphhopper.util.BitUtilBig.(toInt(byte[], (int + 4))) & 4294967295L)"},"status":-2},{"failures":[],"tindex":"ff4f5949-7921-11e5-a4e1-a5c713daf316","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1148","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.flush()"},"status":-2},{"failures":[],"tindex":"ff4f594a-7921-11e5-a4e1-f5c6c60b91ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:130","type":"CtLocalVariableImpl","sourcecode":"int int = (byte[][0]) & 255"},"status":-2},{"failures":[],"tindex":"ff4f805b-7921-11e5-a4e1-7398a244aa94","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"variableMap":{"high":"counter","guess":"counter","low":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:301","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-2},{"failures":[],"tindex":"ff4f805c-7921-11e5-a4e1-a1aee9bd0fbd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:458","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"nextPillarId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:599","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"ff4f805d-7921-11e5-a4e1-d9e84f3623a5","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"encoded","highKey":"encoded","key":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:317","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"ff4f805e-7921-11e5-a4e1-e1f73a168b0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:199","type":"CtIfImpl","sourcecode":"if (int > 1000)\n    throw new java.lang.IllegalStateException(\"something went wrong: there seems to be no end of the turn cost-list!?\");\n"},"variableMap":{"i":"visitedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:76","type":"CtWhileImpl","sourcecode":"while (true) {\n    (int)++;\n    if (com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded()) || com.graphhopper.routing.Dijkstra.(finished()))\n        break;\n    \n    int int = com.graphhopper.storage.EdgeEntry.int;\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n            continue;\n        \n        int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false);\n        double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double);\n        if (java.lang.Double.isInfinite(double))\n            continue;\n        \n        com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.get(int);\n        if (com.graphhopper.storage.EdgeEntry == null) {\n            com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n            com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n            com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n            java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n        } else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n            java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n            com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n            com.graphhopper.storage.EdgeEntry.double = double;\n            com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n            java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n        } else\n            continue;\n        \n        com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n    }\n    if (java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.isEmpty())\n        break;\n    \n    com.graphhopper.storage.EdgeEntry = java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.poll();\n    if ((com.graphhopper.storage.EdgeEntry) == null)\n        throw new java.lang.AssertionError(\"Empty edge cannot happen\");\n    \n}"},"status":-2},{"failures":[],"tindex":"ff4fa76f-7921-11e5-a4e1-c94f8cf1a00b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:74","type":"CtIfImpl","sourcecode":"if (boolean)\n    double += double;\n"},"status":-2},{"failures":[],"tindex":"ff4fa770-7921-11e5-a4e1-c57a0fb45c58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:489","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:483","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.valueCollection()"},"status":-2},{"failures":[],"tindex":"ff4fa771-7921-11e5-a4e1-f15fdae13f43","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:104","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:108","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = java.util.List<byte[]>.get(int)"},"status":-2},{"failures":[],"tindex":"ff4fa772-7921-11e5-a4e1-498742ac1532","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"ff4fa773-7921-11e5-a4e1-c5b01141cbed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:52","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"variableMap":{"r":"distance","angle":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:109","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-2},{"failures":[],"tindex":"ff4fa774-7921-11e5-a4e1-c1f12d8c756a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:244","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"status":-2},{"failures":[],"tindex":"ff4fa775-7921-11e5-a4e1-cfdcfe17b006","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:724","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int)) {\n    int = (-int) - 3;\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    if (int >= 0) {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n        com.graphhopper.util.PointList.clear();\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    } \n    int = int;\n} "},"status":-2},{"failures":[],"tindex":"ff4fce86-7921-11e5-a4e1-19a311bda751","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:212","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n    return (long) | (long);\n"},"variableMap":{"acceptBit":"acceptBit","ferryBit":"acceptBit","footTag":"sacScale"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:284","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"cycleway\")) && (com.graphhopper.reader.OSMWay.hasTag(\"sac_scale\", \"hiking\")))\n        return long;\n    \n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-2},{"failures":[],"tindex":"ff4fce87-7921-11e5-a4e1-a960b1e40448","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:208","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \";\\n \""},"variableMap":{"str":"dir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:284","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_right\")"},"status":-2},{"failures":[],"tindex":"ff4fce88-7921-11e5-a4e1-337ed95d4602","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:49","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}