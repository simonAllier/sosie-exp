{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":40,"com.graphhopper.routing.PathTest.testFindInstruction":57,"com.graphhopper.util.BitUtilLittleTest.testToLong":83,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":31,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":74,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":24,"com.graphhopper.storage.RAMDataAccessTest.testHeader":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":13,"com.graphhopper.storage.MMapDataAccessTest.testHeader":28,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":89,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":4,"com.graphhopper.storage.MMapDataAccessTest.testCopy":16,"com.graphhopper.routing.PathTest.testWayList":56,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":38,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":70,"com.graphhopper.coll.OSMIDMapTest.testGet2":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":44,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":86,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":67,"com.graphhopper.coll.CompressedArrayTest.testCompress":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":42,"com.graphhopper.util.BitUtilLittleTest.testToDouble":82,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":68,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":81,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":26,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":1,"com.graphhopper.util.AngleCalcTest.testOrientation":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":11,"com.graphhopper.GraphHopperTest.testFootAndCar":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":41,"com.graphhopper.util.InstructionListTest.testWayList2":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":64,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":15,"com.graphhopper.search.NameIndexTest.testFlush":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":33,"com.graphhopper.coll.OSMIDMapTest.testGetLong":80,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":93,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":92,"com.graphhopper.coll.IntIntBinHeapTest.test0":29,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":88,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":72,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":76,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":75,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":90,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":21,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":71,"com.graphhopper.GraphHopperTest.testPrepareOnly":19,"com.graphhopper.coll.CompressedArrayTest.testCompress2":84,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":34,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":63,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":55,"com.graphhopper.GraphHopperAPITest.testLoad":54,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":43,"com.graphhopper.coll.OSMIDMapTest.testGet":77,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":51,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":2,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":3,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":79,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":50,"com.graphhopper.util.AngleCalcTest.testCombined":61,"com.graphhopper.GraphHopperTest.testLoadOSM":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":45,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":49,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":46},"transformations":[{"failures":[],"tindex":"ce74c119-82a9-11e5-ae2c-69dcd70ca363","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:153","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = com.graphhopper.util.InstructionList.get((com.graphhopper.util.InstructionList.(size()) - 1))"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:148","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = com.graphhopper.util.InstructionList.get((int + 1))"},"status":0},{"failures":[],"tindex":"ce74e82a-82a9-11e5-ae2c-8f3288b88f87","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:249","type":"CtLocalVariableImpl","sourcecode":"int int = gnu.trove.list.TIntList.get(int)"},"status":-2},{"failures":[],"tindex":"ce74e82b-82a9-11e5-ae2c-b54daa6c1a1b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:87","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = java.util.Arrays.asList(\"OsmSchema-V0.6\", \"DenseNodes\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:111","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"builddate\") , com.graphhopper.util.Helper.java.nio.charset.Charset))"},"status":-2},{"failures":[],"tindex":"ce74e82c-82a9-11e5-ae2c-81cbe293ef96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:52","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"variableMap":{"r":"minEle","angle":"minEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:184","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((7 * 4)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"ce750f3d-82a9-11e5-ae2c-5d627781dc4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:345","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.put(byte[], 0, int)"},"variableMap":{"bb":"bb","values":"values","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:373","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":-1},{"failures":[17],"tindex":"ce750f3e-82a9-11e5-ae2c-152f747b3ffb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:109","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DAType.MemRef) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef)"},"status":-1},{"failures":[18,19,20,21,22,0,1,23,6,7,24,25,26,13,14,27,28],"tindex":"ce750f3f-82a9-11e5-ae2c-3f9323132f2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:72","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"compressionLevel":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.io.RandomAccessFile.readInt()"},"status":-1},{"failures":[3],"tindex":"ce750f40-82a9-11e5-ae2c-f7d1b4cd9400","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:289","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"ce750f41-82a9-11e5-ae2c-07f60cde6c79","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:293","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-2},{"failures":[29],"tindex":"ce750f42-82a9-11e5-ae2c-f9793d91e1a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:525","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"variableMap":{"nodeB":"size","edgeId":"size","nodeA":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:68","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum key.\");\n}"},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,22,54],"tindex":"ce753653-82a9-11e5-ae2c-19c35dc3a393","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:171","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[55,56,57,58,59,60,61,62],"tindex":"ce753654-82a9-11e5-ae2c-13b0b5e95630","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:40","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"variableMap":{"toLat":"lat1","fromLat":"lat1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:66","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))"},"status":-1},{"failures":[],"tindex":"ce753655-82a9-11e5-ae2c-4d1df172ae5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"adjNode","from":"adjNode","end":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:188","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(com.graphhopper.storage.EdgeEntry.int, com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[],"tindex":"ce753656-82a9-11e5-ae2c-b958ca42200c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:614","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int)))"},"variableMap":{"com.graphhopper.routing.QueryGraph.VE_BASE_REV":"virtNode","virtualEdges":"virtualEdges","i":"com.graphhopper.routing.QueryGraph.VE_ADJ_REV"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:683","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = boolean ? java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int))) : java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int)))"},"status":-2},{"failures":[],"tindex":"ce753657-82a9-11e5-ae2c-116539643de8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"tmpWeight","speed":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":-2},{"failures":[],"tindex":"ce753658-82a9-11e5-ae2c-bbbeb30c4d41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:423","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.flush()"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"ce755d69-82a9-11e5-ae2c-31cfa2dcdd5e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:173","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)))"},"variableMap":{"name":"highway","location":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:733","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[77,78,79,80,81,82,83],"tindex":"ce755d6a-82a9-11e5-ae2c-47f812cde5b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:55","type":"CtReturnImpl","sourcecode":"return byte[].int"},"variableMap":{"bytes":"b","length":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:69","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.BitUtilLittle.((long)(toInt(byte[], (int + 4)))) << 32) | (com.graphhopper.util.BitUtilLittle.(toInt(byte[], int)) & 4294967295L)"},"status":-1},{"failures":[84,85,86,87,88,89,90,91,92,93],"tindex":"ce755d6b-82a9-11e5-ae2c-29bca2955cc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:234","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-1},{"failures":[],"tindex":"ce755d6c-82a9-11e5-ae2c-718d104aca7b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:254","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round((((100 - (double)) / 100) * (com.graphhopper.coll.GHTreeMapComposed.getSize())))"},"variableMap":{"sortedNodes":"sortedNodes","nodesContractedPercentage":"logMessagesPercentage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:235","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round(java.lang.Math.max(10, (((com.graphhopper.coll.GHTreeMapComposed.getSize()) / 100) * (double))))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"ce74c119-82a9-11e5-ae2c-69dcd70ca363","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.InstructionList.get"]},"type":"staticDiff"}]}]}