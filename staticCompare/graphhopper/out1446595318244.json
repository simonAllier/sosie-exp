{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":10,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":170,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":178,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":5,"com.graphhopper.reader.OSMReaderTest.testFerry":51,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":167,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":100,"com.graphhopper.routing.QueryGraphTest.testOneWay":177,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":81,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":105,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":133,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":130,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":29,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":132,"com.graphhopper.GraphHopperTest.testPrepare":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":163,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":189,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":110,"com.graphhopper.util.InstructionListTest.testWayList":46,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":111,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":104,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":197,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":125,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":158,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":101,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":13,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":193,"com.graphhopper.GraphHopperTest.testLoadOSM":156,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":20,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":191,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":73,"com.graphhopper.util.PointListTest.testReverse":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":165,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":174,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":117,"com.graphhopper.routing.PathTest.testWayList":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":109,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":198,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":142,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":115,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":181,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":182,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":79,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":93,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":128,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":176,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":78,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":75,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":157,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":92,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":39,"com.graphhopper.GraphHopperAPITest.testLoad":126,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":200,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":35,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":58,"com.graphhopper.util.GHUtilityTest.testCopy":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":160,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":71,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":183,"com.graphhopper.routing.PathTest.testFindInstruction":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":82,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":9,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":161,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":22,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":129,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":96,"com.graphhopper.util.InstructionListTest.testWayList2":47,"com.graphhopper.reader.OSMReaderTest.testFoot":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":11,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":179,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":33,"com.graphhopper.reader.OSMReaderTest.testOneWay":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":15,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":97,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":140,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":106,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":25,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":27,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":190,"com.graphhopper.routing.PathBidirRefTest.testExtract":187,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":185,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":148,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":152,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":151,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":131,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":150,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":137,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":85,"com.graphhopper.routing.PathBidirRefTest.testExtract2":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":108,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":1,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":53,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":76,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":23,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":202,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":88,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":184,"com.graphhopper.GraphHopperTest.testFootAndCar":50,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":94,"com.graphhopper.routing.PathTest.testTime":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":90,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":112,"com.graphhopper.GraphHopperTest.testVia":49,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":6,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":171,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":48,"com.graphhopper.GraphHopperTest.testFootOnly":186,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":127,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":19,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":120,"com.graphhopper.util.InstructionListTest.testFind":44,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":57,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":34},"transformations":[{"failures":[0],"tindex":"444ad972-8287-11e5-a022-61a2dc60fca6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:706","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\")"},"status":-1},{"failures":[],"tindex":"444b0083-8287-11e5-a022-c9cadbfd9f83","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"variableMap":{"y1":"tmp","x1":"tmp","y2":"tmp","x2":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:153","type":"CtIfImpl","sourcecode":"if (double >= 64) {\n    int = 64;\n} else if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"444b0084-8287-11e5-a022-eff524fcf027","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:103","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMIntDataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"444b0085-8287-11e5-a022-5db2c3f924e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"this","newGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.this(java.util.Collections.<com.graphhopper.routing.util.Weighting>emptyList(), com.graphhopper.storage.Directory, com.graphhopper.routing.util.EncodingManager, boolean, com.graphhopper.storage.GraphExtension)"},"status":-2},{"failures":[],"tindex":"444b0086-8287-11e5-a022-0bc120bcedd3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:123","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.toLong(byte[])"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"444b2797-8287-11e5-a022-9144f777e06e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"tmpValue","highKey":"flags","key":"tmpValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-1},{"failures":[126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,46,148,149,150,151,152,49,153,154,50,155,156,157,158,107,110,159,160,161,111,114,115,162,163,164,165,116,166,167,168,169,170,171,172,173,174,175,176,177,178,179,122],"tindex":"444b2798-8287-11e5-a022-e5d3f9bb1c5a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:453","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:236","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"status":-1},{"failures":[180],"tindex":"444b2799-8287-11e5-a022-dd27c9016f88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:802","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[],"tindex":"444b279a-8287-11e5-a022-e3eaae2e6153","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:76","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":0},{"failures":[148,149,150,151,152,181],"tindex":"444b279b-8287-11e5-a022-cd452de96b4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:680","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"variableMap":{"costs":"heading_penalty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:74","type":"CtIfImpl","sourcecode":"if (boolean)\n    double += double;\n"},"status":-1},{"failures":[182,183,184],"tindex":"444b4eac-8287-11e5-a022-03c89a9c4a6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:113","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n        int = int;\n        break;\n    } \n}"},"variableMap":{"max":"removed","freeIndex":"removed","searchIndex":"removed","points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:122","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.trimToSize(((com.graphhopper.util.PointList.getSize()) - int))"},"status":-1},{"failures":[126,148,149,150,151,152,185,49,153,154,155,156,157,186,187,188,189,190,191,106,192,193,107,109,110,159,194,195,196,160,197,198,111,113,114,115,199,162,163,164,200,116],"tindex":"444b4ead-8287-11e5-a022-0b700df31a77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"currEdge","edgeEntry":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:83","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[158],"tindex":"444b4eae-8287-11e5-a022-413a21af8671","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SimpleFSLockFactory:52","type":"CtIfImpl","sourcecode":"if ((java.io.File) == null)\n    throw new java.lang.RuntimeException(\"Set lockDir before creating locks\");\n"},"variableMap":{"lockDir":"cacheDir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:150","type":"CtTryImpl","sourcecode":"try {\n    this.java.io.File = java.io.File.getCanonicalFile();\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":-2},{"failures":[156,157],"tindex":"444b4eaf-8287-11e5-a022-c581e45d3643","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:775","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"444b4eb0-8287-11e5-a022-5f7811a543e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:281","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"444b4eb1-8287-11e5-a022-05b64f68f0bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:256","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(float))\n    continue;\n"},"status":0},{"failures":[201,86,202],"tindex":"444b75c2-8287-11e5-a022-27a938ceabd5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:188","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMElement.hasTag(java.lang.String))\n    return com.graphhopper.reader.OSMElement.getTag(java.lang.String);\n"},"status":-1},{"failures":[],"tindex":"444b75c3-8287-11e5-a022-bbd34058937b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:131","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"444b75c4-8287-11e5-a022-5fa4dfcd15f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:292","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.routing.AStar.AStarEdge.double) + (com.graphhopper.routing.AStar.AStarEdge.double)"},"status":-2},{"failures":[],"tindex":"444b75c5-8287-11e5-a022-9bbdea6db535","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:624","type":"CtReturnImpl","sourcecode":"return 3"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"444b4eb1-8287-11e5-a022-05b64f68f0bc","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}