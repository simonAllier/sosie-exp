{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":78,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":21,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":23,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":42,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":28,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":69,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":51,"com.graphhopper.GraphHopperTest.testPrepare":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":24,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":53,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":16,"com.graphhopper.util.InstructionListTest.testWayList":33,"com.graphhopper.reader.OSMReaderTest.testOneWay":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":20,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":97,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":87,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":63,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":5,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":40,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":11,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":67,"com.graphhopper.GraphHopperTest.testLoadOSM":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":82,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":64,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":90,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":80,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":52,"com.graphhopper.util.PointListTest.testReverse":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":6,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":2,"com.graphhopper.storage.MMapDataAccessTest.testCopy":4,"com.graphhopper.routing.PathTest.testWayList":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":27,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":56,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":88,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":45,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":22,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":95,"com.graphhopper.GraphHopperTest.testFootAndCar":41,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":54,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":96,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":49,"com.graphhopper.util.InstructionListTest.testCreateGPX":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":3,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":10,"com.graphhopper.GraphHopperTest.testVia":83,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":29,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":62,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":89,"com.graphhopper.GraphHopperAPITest.testLoad":31,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":84,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":76,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":0,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":48,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":71,"com.graphhopper.reader.OSMReaderTest.testBarriers":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":18,"com.graphhopper.util.GHUtilityTest.testCopy":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":68},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"1740bbc1-8279-11e5-aaa8-39ac5caa24ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:148","type":"CtForImpl","sourcecode":"for (long long = 0 ; long < long ; long += int) {\n    if (com.graphhopper.storage.AbstractDataAccess.isIntBased()) {\n        for (int int = 0 ; int < int ; int += 4) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.storage.DataAccess.getInt((long + int)), int);\n        }\n    } else {\n        com.graphhopper.storage.DataAccess.getBytes(long, byte[], int);\n    }\n    if (boolean) {\n        for (int int = 0 ; int < int ; int += 4) {\n            com.graphhopper.storage.DataAccess.setInt((long + int), com.graphhopper.util.BitUtil.toInt(byte[], int));\n        }\n    } else {\n        com.graphhopper.storage.DataAccess.setBytes(long, byte[], int);\n    }\n}"},"status":-1},{"failures":[],"tindex":"1740e2d2-8279-11e5-aaa8-ab48042ef023","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:230","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"newName mustn\\'t be empty!\");\n"},"variableMap":{"newName":"com.graphhopper.routing.util.EncodingManager.FOOT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:156","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"1740e2d3-8279-11e5-aaa8-9f120993ae31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:60","type":"CtReturnImpl","sourcecode":"return double / (double)"},"variableMap":{"distance":"java.lang.Double.NaN","maxSpeed":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:540","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[6,7,8],"tindex":"1740e2d4-8279-11e5-aaa8-b100237859b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:226","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"variableMap":{"sacScale":"tt"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:203","type":"CtIfImpl","sourcecode":"if ((((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\")))) && (!(java.lang.String.equals(\"grade2\")))) && (!(java.lang.String.equals(\"grade3\"))))\n    return 0;\n"},"status":-1},{"failures":[1,9,10,11,12,13],"tindex":"174109e5-8279-11e5-aaa8-711f890de08a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:93","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"174109e6-8279-11e5-aaa8-9b617560b36a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"swapIndex","weights":"latitudes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:239","type":"CtAssignmentImpl","sourcecode":"double[][int] = double[][int]"},"status":-1},{"failures":[29,56,57],"tindex":"174109e7-8279-11e5-aaa8-03edcac00e65","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"turnCostsEntryIndex","frontIndex":"turnCostsEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:71","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"174109e8-8279-11e5-aaa8-4fe4e182d711","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"variableMap":{"size":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:745","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseIntIntArray.get(int)"},"status":-1},{"failures":[74,75,76],"tindex":"174109e9-8279-11e5-aaa8-07592c579da9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:83","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"=\")"},"variableMap":{"tagTxt":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:222","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<time>\").append(java.text.SimpleDateFormat.format((long + (com.graphhopper.util.GPXEntry.getTime()))))"},"status":-1},{"failures":[18,19,21,22,24,27,77,78,79,37,80,38,81,82,83,39,40,41,84,85,86],"tindex":"174130fa-8279-11e5-aaa8-93292d50c792","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:573","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.QueryGraph.getPosOfReverseEdge(int)"},"status":-1},{"failures":[87,0,1,2,3],"tindex":"174130fb-8279-11e5-aaa8-672853ea45cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)))"},"status":-1},{"failures":[88,89,90,91],"tindex":"174130fc-8279-11e5-aaa8-cb535e5baf44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:59","type":"CtIfImpl","sourcecode":"if ((int) != int) {\n    int = 2;\n} "},"variableMap":{"clockwise2":"speed","clockwise":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    int = java.lang.Integer;\n    if ((java.lang.Integer != null) && (java.lang.Integer > java.lang.Integer)) {\n        if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n            int = java.lang.Integer;\n        else\n            int = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[42,92,64,44,93],"tindex":"174130fd-8279-11e5-aaa8-b30cbfc7ebcb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"elevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:80","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"174130fe-8279-11e5-aaa8-7d40cabd465a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"variableMap":{"entry":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","configuration":"configuration","com.graphhopper.routing.util.EncodingManager.MOTORCYCLE":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","fe":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:150","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"1741580f-8279-11e5-aaa8-81136dfb0fe5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:441","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) == null)\n    throw new java.lang.IllegalStateException(\"GraphHopper storage not initialized\");\n"},"variableMap":{"ghStorage":"cl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:267","type":"CtIfImpl","sourcecode":"if (java.io.Closeable != null)\n    java.io.Closeable.close();\n"},"status":-2},{"failures":[94,95],"tindex":"17415810-8279-11e5-aaa8-e39c8e4e359e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"retBucket","noOfStates":"retBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    return com.graphhopper.coll.OSMIDSegmentedMap.((int)(getNoEntryValue()));\n} "},"status":-1},{"failures":[],"tindex":"17415811-8279-11e5-aaa8-d95a02e9e9cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"status":0},{"failures":[96],"tindex":"17415812-8279-11e5-aaa8-4f782f5a2ba7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:445","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Cannot load properties to fetch EncodingManager configuration at: \" + (com.graphhopper.storage.Directory.getLocation())))"},"status":-1},{"failures":[],"tindex":"17415813-8279-11e5-aaa8-0db58a9c6a72","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:210","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.util.shapes.GHPoint(double , (double / double))"},"status":-2},{"failures":[97],"tindex":"17415814-8279-11e5-aaa8-0b8e20b1dbb8","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"nextLat","x":"nextLat","absY":"nextLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:237","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLatitude(0)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"17415811-8279-11e5-aaa8-d95a02e9e9cc","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}