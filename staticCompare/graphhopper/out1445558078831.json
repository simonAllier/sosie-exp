{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":46,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":35,"com.graphhopper.reader.OSMReaderTest.testMain":49,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":4,"com.graphhopper.reader.OSMReaderTest.testFerry":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":44,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":16,"com.graphhopper.util.BitUtilBigTest.testFromBitString":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":31,"com.graphhopper.reader.OSMReaderTest.testWithBounds":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":10,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":26,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":34,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":63,"com.graphhopper.GraphHopperTest.testPrepare":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":3,"com.graphhopper.GraphHopperTest.testFootAndCar":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":2,"com.graphhopper.util.BitUtilBigTest.testToBitString":84,"com.graphhopper.reader.OSMReaderTest.testFoot":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":39,"com.graphhopper.reader.OSMReaderTest.testOneWay":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":43,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":13,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":29,"com.graphhopper.GraphHopperTest.testPrepareOnly":66,"com.graphhopper.GraphHopperTest.testVia":74,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":32,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":56,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":23,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":53,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":11,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":5,"com.graphhopper.GraphHopperTest.testFootOnly":82,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":17,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":72,"com.graphhopper.reader.OSMReaderTest.testBarriers":51,"com.graphhopper.GraphHopperTest.testLoadOSM":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":67,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":70,"com.graphhopper.reader.OSMReaderTest.testSort":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":68},"transformations":[{"failures":[],"tindex":"416ebb94-7918-11e5-9bee-6f0eafc2edfe","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:68","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = 500;\n    int int = (int / int) + 1;\n    int int = 0;\n    for (int int = 0 ; int < int ; int++) {\n        int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)));\n        int += int;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, 0, (int - 1));\n}"},"variableMap":{"size":"origPoints","removed":"origPoints","this":"douglasPeucker","approx":"enableInstructions","points":"fullPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:49","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<com.graphhopper.routing.Path>.size()) ; int++) {\n    com.graphhopper.routing.Path com.graphhopper.routing.Path = java.util.List<com.graphhopper.routing.Path>.get(int);\n    long += com.graphhopper.routing.Path.getTime();\n    double += com.graphhopper.routing.Path.getDistance();\n    double += com.graphhopper.routing.Path.getWeight();\n    if (boolean) {\n        com.graphhopper.util.InstructionList com.graphhopper.util.InstructionList = com.graphhopper.routing.Path.calcInstructions(com.graphhopper.util.Translation);\n        if (!(com.graphhopper.util.InstructionList.isEmpty())) {\n            if (com.graphhopper.util.PointList.isEmpty()) {\n                com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(0).getPoints();\n                com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D());\n            } \n            for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : com.graphhopper.util.InstructionList) {\n                if (boolean) {\n                    int += com.graphhopper.util.Instruction.getPoints().size();\n                    com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints());\n                } \n                com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction);\n                com.graphhopper.util.PointList.add(com.graphhopper.util.Instruction.getPoints());\n            }\n            if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n                com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n                com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n                com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n            } \n        } \n    } else if (boolean) {\n        com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.Path.calcPoints();\n        if (com.graphhopper.util.PointList.isEmpty())\n            com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n        \n        if (boolean) {\n            int = com.graphhopper.util.PointList.getSize();\n            com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n        } \n        com.graphhopper.util.PointList.add(com.graphhopper.util.PointList);\n    } \n    boolean = boolean && (com.graphhopper.routing.Path.isFound());\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"416f09b5-7918-11e5-9bee-2124710c7c4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:104","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"variableMap":{"distance":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:94","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"416f09b6-7918-11e5-9bee-557e67363855","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"a":"empty","approx":"empty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[84,85],"tindex":"416f09b7-7918-11e5-9bee-79508cdd5270","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:129","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[],"tindex":"416f09b8-7918-11e5-9bee-dd6d3d1f7518","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:87","type":"CtIfImpl","sourcecode":"if (int != 3) {\n    throw new java.lang.RuntimeException((((((\"incorrect read!? from:\" + int) + \", to:\") + int) + \", dist:\") + double));\n} "},"variableMap":{"dist":"deltaLat","from":"iteration","counter":"iteration","to":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:730","type":"CtForImpl","sourcecode":"for (int int = (-int) + 1 ; int <= (int - 1) ; int++) {\n    double double = double + (int * (double));\n    double double = double - (int * (double));\n    double double = double + (int * (double));\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(com.graphhopper.storage.index.TIntHashSet, double, double);\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(com.graphhopper.storage.index.TIntHashSet, double, double);\n}"},"status":-2},{"failures":[],"tindex":"416f30c9-7918-11e5-9bee-f7a2ca824ede","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:128","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"daType":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"416f30ca-7918-11e5-9bee-1d99060512ee","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"maxEdgesCount","segmentSizePower":"maxEdgesCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:785","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-2},{"failures":[],"tindex":"416f30cb-7918-11e5-9bee-b3c788fff60f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"variableMap":{"intLen":"segSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:146","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[],"tindex":"416f57dc-7918-11e5-9bee-799f7bf99a0c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"angle","x":"com.graphhopper.util.AngleCalc.PI_4","absY":"angle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:49","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"416f57dd-7918-11e5-9bee-0761d32661a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator)"},"status":-2},{"failures":[],"tindex":"416f57de-7918-11e5-9bee-93c4812575a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.ConsistentWeightApproximator.setSourceNode(int)"},"status":-2},{"failures":[],"tindex":"416f57df-7918-11e5-9bee-2ba12c848472","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"variableMap":{"size":"com.graphhopper.reader.OSMElement.RELATION","i":"com.graphhopper.reader.OSMElement.RELATION"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:77","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member : java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>) {\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) == (com.graphhopper.reader.OSMElement.int)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"416f7ef0-7918-11e5-9bee-2b0bbb8f6e81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:286","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.routing.DijkstraBidirectionRef.boolean"},"variableMap":{"dijkstra":"this","finishedFrom":"finishedTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:82","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-2},{"failures":[],"tindex":"416f7ef1-7918-11e5-9bee-c1699164000f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"a_lat","incDist2DSum":"a_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:231","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"416f7ef2-7918-11e5-9bee-5f3674cb6ae5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:192","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"416f7ef3-7918-11e5-9bee-d1e189dd7e92","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"N_LEVEL","hash":"N_LEVEL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:663","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"416fa604-7918-11e5-9bee-8b55d5e15547","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:321","type":"CtForEachImpl","sourcecode":"for (int int : int[]) {\n    com.graphhopper.util.TIntList.add(int);\n}"},"status":-2},{"failures":[],"tindex":"416fa605-7918-11e5-9bee-a77ffcb8eedb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:116","type":"CtLocalVariableImpl","sourcecode":"byte byte = ((byte)(1 << 7))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:98","type":"CtLocalVariableImpl","sourcecode":"byte byte = 0"},"status":-2},{"failures":[],"tindex":"416fa606-7918-11e5-9bee-d35376ffaa53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.removeDA(com.graphhopper.storage.DataAccess, com.graphhopper.storage.DataAccess.getName(), false)"},"status":-2},{"failures":[],"tindex":"416fa607-7918-11e5-9bee-5fb74b9e879a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:235","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.round(java.lang.Math.max(10, (((com.graphhopper.coll.GHTreeMapComposed.getSize()) / 100) * (double))))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}