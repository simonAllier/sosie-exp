{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":22,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":41,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":73,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":46,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":57,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":65,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":68,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":81,"com.graphhopper.reader.OSMReaderTest.testWithBounds":23,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":19,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":80,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":52,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":24,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":69,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":50,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":74,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":40,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":42,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":66,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":67,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.util.BitUtilLittleTest.testToBitString":56,"com.graphhopper.util.InstructionListTest.testWayList":26,"com.graphhopper.reader.OSMReaderTest.testOneWay":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":30,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":44,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":51,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":58,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":72,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":43,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":31,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":21,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":59,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":82,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":18,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":62,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":77,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":63,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":20,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":32,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":33,"com.graphhopper.routing.util.EncodedValueTest.testSwap":70,"com.graphhopper.reader.OSMReaderTest.testBarriers":0,"com.graphhopper.util.InstructionListTest.testFind":60,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":76,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":39,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":47,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":49},"transformations":[{"failures":[],"tindex":"037674fa-8299-11e5-9932-9d934c2bec26","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:534","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"variableMap":{"intIndex":"nodeA","len":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:525","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"status":-2},{"failures":[0],"tindex":"03769c0b-8299-11e5-9932-4d0fb15ea56f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"nodeFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,0,17,18,19,20,21,22,23,24,25],"tindex":"03769c0c-8299-11e5-9932-c39eac157743","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:615","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.process(java.lang.String)"},"status":-1},{"failures":[],"tindex":"03769c0d-8299-11e5-9932-0f12811ebc39","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"variableMap":{"gridCellWidth":"fwdIncline","x1":"fwdIncline","x2":"fwdIncline"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:229","type":"CtLocalVariableImpl","sourcecode":"double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)))"},"status":-2},{"failures":[26,27,28,29],"tindex":"03769c0e-8299-11e5-9932-df34104cd63a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"end"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:92","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"0376c31f-8299-11e5-9932-fd50f235f950","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:984","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable.selectEdgeAccess()"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:707","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIterator.detach(false))"},"status":-2},{"failures":[30,31,32,33,34,35,36],"tindex":"0376c320-8299-11e5-9932-0ded4d8727b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"resolution","edgeTo":"resolution","edgeFrom":"resolution"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.initLatLonSize(int)"},"status":-1},{"failures":[37,38,39,19],"tindex":"0376c321-8299-11e5-9932-b3c85204ad07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:643","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-1},{"failures":[40,41,42],"tindex":"0376c322-8299-11e5-9932-8d5fb1237d91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:55","type":"CtAssignmentImpl","sourcecode":"this.double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double)"},"status":-1},{"failures":[19],"tindex":"0376c323-8299-11e5-9932-7f24d33ac651","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:226","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"0376c324-8299-11e5-9932-fdc25dd443c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"variableMap":{"splitIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","entrySize":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:361","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"status":-1},{"failures":[56,57],"tindex":"0376ea35-8299-11e5-9932-37b898087515","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:300","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"variableMap":{"str":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:120","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    if ((byte & byte) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    byte <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"0376ea36-8299-11e5-9932-b11209b82e95","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:62","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"0376ea37-8299-11e5-9932-31c442ed7fd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"variableMap":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"enableInstructions","v":"enableInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:587","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.util.CmdArgs.getBool(\"osmreader.instructions\", boolean)"},"status":0},{"failures":[],"tindex":"0376ea38-8299-11e5-9932-e5ab4d9caf77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:93","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.min(int[][int], int[][int])"},"variableMap":{"start":"i","prevConnectedId":"element","nodeLowLink":"elem"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:191","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[58],"tindex":"0376ea39-8299-11e5-9932-8f3b00419400","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:201","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.clear()"},"variableMap":{"properties":"tmpMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:118","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    java.util.Map<java.lang.String, java.lang.Object>.put(\"turn_angle\", com.graphhopper.util.Helper.round(double, 2));\n"},"status":-1},{"failures":[43,59,49,52],"tindex":"0376ea3a-8299-11e5-9932-cdb5f177cb25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"speed","guess":"speed","low":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:371","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[60],"tindex":"0377114b-8299-11e5-9932-cdd8ea56be65","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:345","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointList, int)"},"variableMap":{"i":"foundInstruction","fullPL":"points","basePoints":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:295","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < com.graphhopper.util.InstructionList.(getSize()) ; int++) {\n    com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(int).getPoints();\n    for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n        double double = com.graphhopper.util.PointList.getLatitude(int);\n        double double = com.graphhopper.util.PointList.getLongitude(int);\n        if (!((int == 0) && (int == 0))) {\n            double double;\n            int int = int;\n            if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n                double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n                if (int > 0)\n                    int++;\n                \n            } else {\n                double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n                if (int > 0)\n                    int++;\n                \n            }\n            if (double < double) {\n                double = double;\n                int = int;\n            } \n        } \n        double = double;\n        double = double;\n    }\n}"},"status":-1},{"failures":[11,44,61,62,63,64,46,65,66,67,68,48,69,70,71,72,73,51,74,75,76,77,53,78,79,80,55,81,82],"tindex":"0377114c-8299-11e5-9932-a1ba2c6cbfa7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:82","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[],"tindex":"0377114d-8299-11e5-9932-23a469ec7b35","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getBaseNode()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0376ea37-8299-11e5-9932-31c442ed7fd8","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getBool"]},"type":"staticDiff"}]}]}