{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":40,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":353,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":237,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":85,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":32,"com.graphhopper.reader.OSMReaderTest.testFerry":162,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":365,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":366,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":258,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":286,"com.graphhopper.routing.QueryGraphTest.testOneWay":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":22,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":81,"com.graphhopper.reader.OSMReaderTest.testWithBounds":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":37,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":323,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":4,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":346,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":182,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":336,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":62,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":272,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":49,"com.graphhopper.GraphHopperTest.testPrepare":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":211,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":178,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":339,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":195,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":377,"com.graphhopper.util.InstructionListTest.testWayList":249,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":204,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":298,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":369,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":245,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":158,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":321,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":79,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":196,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":82,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":177,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":224,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":168,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":41,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":280,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":154,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":332,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":191,"com.graphhopper.GraphHopperTest.testLoadOSM":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":351,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":65,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":83,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":134,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":260,"com.graphhopper.reader.OSMReaderTest.testSort":165,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":206,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":305,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":139,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":215,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":233,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":285,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":349,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":121,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":217,"com.graphhopper.routing.PathTest.testWayList":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":267,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":374,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":28,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":80,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":202,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":310,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":312,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":77,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":31,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":208,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":372,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":223,"com.graphhopper.util.GHUtilityTest.testSort":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":87,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":325,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":330,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":359,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":295,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":309,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":5,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":276,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":358,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":99,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":100,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":259,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":315,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":156,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":316,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":128,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":10,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":101,"com.graphhopper.reader.OSMReaderTest.testBarriers":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":246,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":289,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":270,"com.graphhopper.routing.PathTest.testFound":354,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":200,"com.graphhopper.util.GHUtilityTest.testCopy":253,"com.graphhopper.routing.PathTest.testFindInstruction":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":102,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":106,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":291,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":335,"com.graphhopper.util.InstructionListTest.testEmptyList":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":203,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":293,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":344,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":116,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":132,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":368,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":184,"com.graphhopper.reader.PrinctonReaderTest.testRead":176,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":262,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":328,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":275,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":290,"com.graphhopper.util.InstructionListTest.testWayList2":250,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":68,"com.graphhopper.reader.OSMReaderTest.testFoot":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":91,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":88,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":89,"com.graphhopper.reader.OSMReaderTest.testOneWay":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":19,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":129,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":326,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":360,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":263,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":187,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":341,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":52,"com.graphhopper.coll.SparseLongLongArrayTest.testBinarySearch":370,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":124,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":334,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":167,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":213,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":181,"com.graphhopper.routing.PathBidirRefTest.testExtract":225,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":302,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":150,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":364,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":373,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":74,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":96,"com.graphhopper.util.GHUtilityTest.testSort2":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":38,"com.graphhopper.reader.OSMReaderTest.testMain":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":29,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":277,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":7,"com.graphhopper.routing.PathBidirRefTest.testExtract2":226,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":306,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":92,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":239,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":78,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":59,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":112,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":282,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":261,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":84,"com.graphhopper.storage.GraphHopperStorageTest.testClone":126,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":48,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":274,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":130,"com.graphhopper.GraphHopperTest.testFootAndCar":155,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":340,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":12,"com.graphhopper.routing.PathTest.testTime":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":265,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":103,"com.graphhopper.util.GHUtilityTest.testSortDirected":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":17,"com.graphhopper.GraphHopperTest.testPrepareOnly":144,"com.graphhopper.GraphHopperTest.testVia":152,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":296,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":205,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":171,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":348,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":8,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":231,"com.graphhopper.GraphHopperTest.testFootOnly":160,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":251,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":343,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":67,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":170,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":69,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":219,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":268,"com.graphhopper.util.InstructionListTest.testFind":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":97},"transformations":[{"failures":[],"tindex":"923f6f9f-827a-11e5-baa1-cb0720cc0e9e","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:491","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"variableMap":{"len":"nextEdge","start":"nextEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:527","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"923f96b0-827a-11e5-baa1-7f1a3eab2dd4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:117","type":"CtForImpl","sourcecode":"for (int int = (byte[].int) - 1 ; int >= 0 ; int--) {\n    byte byte = byte[][int];\n    for (int int = 0 ; int < 8 ; int++) {\n        if ((byte & byte) == 0)\n            java.lang.StringBuilder.append('0');\n        else\n            java.lang.StringBuilder.append('1');\n        \n        byte <<= 1;\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256],"tindex":"923fbdc1-827a-11e5-baa1-a1b7643a9a31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:327","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-1},{"failures":[],"tindex":"92405a02-827a-11e5-baa1-35cc99be7d10","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:382","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long)"},"status":-2},{"failures":[],"tindex":"92405a03-827a-11e5-baa1-617fa4452532","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:984","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable.selectEdgeAccess()"},"variableMap":{"this":"outEdgeExplorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:221","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AStarBidirection.fillEdges(com.graphhopper.routing.AStar.AStarEdge, java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>, gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>, com.graphhopper.util.EdgeExplorer, false)"},"status":-2},{"failures":[97,100],"tindex":"92405a04-827a-11e5-baa1-993c5971fbc9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:115","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"92408115-827a-11e5-baa1-fd3ec36ee8c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"variableMap":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:65","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[],"tindex":"92408116-827a-11e5-baa1-9901188b06b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:460","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Instruction.int"},"variableMap":{"com.graphhopper.util.Instruction.USE_ROUNDABOUT":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:347","type":"CtLocalVariableImpl","sourcecode":"int int = (double[].int) / 3"},"status":-2},{"failures":[],"tindex":"92408117-827a-11e5-baa1-7fd88864d54e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"variableMap":{"prepared":"binary"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:166","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextPBF();\nelse\n    com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextXML();\n"},"status":-2},{"failures":[180,189],"tindex":"92408118-827a-11e5-baa1-b72749d13ddd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"degree","speed":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:556","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[0,1,2,3,257,4,5,6,7,8,9,10,11,12,258,259,260,261,13,14,262,15,263,264,265,266,267,16,268,17,18,19,20,269,270,271,21,22,272,273,274,23,275,24,25,26,27,28,276,29,277,30,278,279,31,280,281,282,283,284,285,286,287,288,289,290,291,44,292,293,294,295,296,297,298,52,53,54,55,57,299,300,301,302,303,304,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,99,305,100,306,307,308,101,102,309,103,310,311,312,313,314,104,315,105,106,107,108,109,316,317,110,111,318,319,320,112,321,113,114,115,116,117,322,118,323,119,324,325,120,121,122,326,123,327,328,329,124,125,330,126,331,332,333,334,335,127,336,128,129,130,131,337,338,339,132,133,340,341,342,134,343,135,136,137,138,139,344,140,345,141,346,347,142,143,144,145,146,147,148,149,150,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,348,171,172,173,174,175,349,176,177,178,179,180,181,182,183,184,350,185,186,187,188,189,351,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,352,206,207,208,209,210,211,353,212,213,214,215,216,217,218,354,355,219,220,221,222,223,224,225,226,356,356,227,227,228,228,229,229,230,230,357,357,231,231,232,232,358,358,233,233,234,234,235,235,236,236,237,237,359,359,238,238,360,361,362,239,240,241,242,363,243,244,245,246,364,365,366,247,367,248,249,250,251,368,252,253,254,255,256,369],"tindex":"9240a829-827a-11e5-baa1-8f63e105feac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"segmentsToCreate","index":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:109","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[370,371,372],"tindex":"9240cf3a-827a-11e5-baa1-1b8e85b05f12","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:325","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long[][int] = -1;\n}"},"variableMap":{"values":"a","n":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:406","type":"CtIfImpl","sourcecode":"if ((long[][int]) < long) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-1},{"failures":[],"tindex":"9240cf3b-827a-11e5-baa1-478fe2781304","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean)"},"status":-1},{"failures":[],"tindex":"9240cf3c-827a-11e5-baa1-830f520a4682","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"type":"dataAccessType","defaultType":"com.graphhopper.storage.DAType.RAM_STORE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:263","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"9240cf3d-827a-11e5-baa1-3d2ebdb9535c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:408","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"9240f64e-827a-11e5-baa1-7fc33b24d426","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:235","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.prepare()"},"status":-2},{"failures":[373,374,375,376,377],"tindex":"9240f64f-827a-11e5-baa1-63920c623c3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:77","type":"CtIfImpl","sourcecode":"if (long == (int)) {\n    throw new java.lang.IllegalArgumentException((\"Illegal key \" + long));\n} "},"variableMap":{"noNumberValue":"segmentSizeInBytes","key":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:183","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int)"},"status":-1},{"failures":[],"tindex":"9240f650-827a-11e5-baa1-d72c2287341b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:492","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 10000.0))) / 10000.0"},"variableMap":{"value":"currDistToGoal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:46","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"9240f651-827a-11e5-baa1-29ff6e02f60b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:257","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"variableMap":{"this":"this","speed":"speed","encoded":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[373,374,375,376,377],"tindex":"92411d62-827a-11e5-baa1-0fd735e60e55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"segmentSizeInBytes","capacity":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:187","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int);\n    java.io.RandomAccessFile.write(byte[]);\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"9240f651-827a-11e5-baa1-29ff6e02f60b","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed"]},"type":"staticDiff"}]}]}