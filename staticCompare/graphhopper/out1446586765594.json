{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":35,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":73,"com.graphhopper.routing.PathTest.testFindInstruction":5,"com.graphhopper.reader.OSMReaderTest.testFerry":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":25,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":9,"com.graphhopper.routing.QueryGraphTest.testOneWay":20,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":134,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":69,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":33,"com.graphhopper.reader.OSMReaderTest.testWithBounds":114,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":15,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":49,"com.graphhopper.coll.CompressedArrayTest.testCompress":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":43,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":50,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":8,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":51,"com.graphhopper.GraphHopperTest.testPrepare":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":34,"com.graphhopper.util.InstructionListTest.testWayList2":120,"com.graphhopper.reader.OSMReaderTest.testFoot":104,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":18,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":130,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":136,"com.graphhopper.util.InstructionListTest.testWayList":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":75,"com.graphhopper.reader.OSMReaderTest.testOneWay":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":30,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":118,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":23,"com.graphhopper.GraphHopperAPITest.testDisconnected179":102,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":97,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":70,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":125,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":7,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":108,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":3,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":109,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":62,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":1,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":93,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":89,"com.graphhopper.GraphHopperTest.testLoadOSM":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":87,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":86,"com.graphhopper.reader.OSMReaderTest.testSort":106,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":81,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":113,"com.graphhopper.reader.OSMReaderTest.testMain":105,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":46,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":61,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":135,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":138,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":38,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":0,"com.graphhopper.routing.PathTest.testWayList":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":53,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":110,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":56,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":32,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":48,"com.graphhopper.GraphHopperTest.testFootAndCar":94,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":126,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":44,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":74,"com.graphhopper.coll.IntIntBinHeapTest.testSize":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":55,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":16,"com.graphhopper.GraphHopperTest.testPrepareOnly":83,"com.graphhopper.coll.CompressedArrayTest.testCompress2":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":24,"com.graphhopper.GraphHopperTest.testVia":91,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":10,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":98,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":127,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":63,"com.graphhopper.GraphHopperAPITest.testLoad":101,"com.graphhopper.util.BitUtilLittleTest.testToShort":141,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":95,"com.graphhopper.util.BitUtilBigTest.testToShort":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":54,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":14,"com.graphhopper.GraphHopperTest.testFootOnly":99,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":59,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":60,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":2,"com.graphhopper.reader.OSMReaderTest.testBarriers":107,"com.graphhopper.util.InstructionListTest.testFind":117,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":80},"transformations":[{"failures":[],"tindex":"5a85b48d-8273-11e5-b306-af1530dac909","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:149","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"5a8602ae-8273-11e5-b306-b905a14e6ccb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"index","edgeId":"index","nextEdgeId":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:139","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int), com.graphhopper.util.PointAccess.getElevation(int));\nelse\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int));\n"},"status":-1},{"failures":[122],"tindex":"5a8602af-8273-11e5-b306-cf869770aec9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:219","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"5a8629c0-8273-11e5-b306-051858179a24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:209","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.InstructionList = com.graphhopper.util.InstructionList"},"variableMap":{"instructions":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.this(0, null)"},"status":-2},{"failures":[],"tindex":"5a8629c1-8273-11e5-b306-a15ff919d66e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:590","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, true, com.graphhopper.util.EdgeIterator.int)"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"prevOrNextEdgeId","incomingEdges":"edgeState","prepareWeighting":"superWeighting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:73","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-2},{"failures":[123,124,125],"tindex":"5a8629c2-8273-11e5-b306-47b475332607","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:116","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[126,127],"tindex":"5a8650d3-8273-11e5-b306-2f9ba5f952fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:160","type":"CtIfImpl","sourcecode":"if (double > (float[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n            int++;\n        } \n        if (double > (float[][int])) {\n            int[][int] = int[][int];\n            float[][int] = float[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n} else {\n    while ((float[][(int / 2)]) > double) {\n        int[][int] = int[][(int / 2)];\n        float[][int] = float[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    float[][int] = ((float)(double));\n}"},"status":-1},{"failures":[],"tindex":"5a8650d4-8273-11e5-b306-151f762f6030","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:551","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[82,83,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"5a8650d5-8273-11e5-b306-af6094752d88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:303","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)))"},"status":-1},{"failures":[],"tindex":"5a8650d6-8273-11e5-b306-fd52d715092f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:224","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"variableMap":{"shift":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:48","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[],"tindex":"5a8677e7-8273-11e5-b306-a1f7d15b5ef9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:162","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"EOF reached\");\n"},"variableMap":{"eof":"initialized"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:168","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"status":0},{"failures":[],"tindex":"5a8677e8-8273-11e5-b306-778141ff80e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:315","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"5a8677e9-8273-11e5-b306-7b8717880048","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[13,24,40,41,44,45,47,48,50,108,109],"tindex":"5a8677ea-8273-11e5-b306-2f706296cb66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.eleToInt(double))"},"status":-1},{"failures":[83,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,100,101,102],"tindex":"5a8677eb-8273-11e5-b306-03ca500a976e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1098","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.LocationIndex) != null)\n    throw new java.lang.IllegalStateException(\"Cannot initialize locationIndex twice!\");\n"},"variableMap":{"locationIndex":"locationIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1161","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.LocationIndex) != null)\n    com.graphhopper.storage.index.LocationIndex.close();\n"},"status":-1},{"failures":[],"tindex":"5a869efc-8273-11e5-b306-4915843d14ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:296","type":"CtReturnImpl","sourcecode":"return int - int"},"variableMap":{"tmp":"shift","initializedCounter":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:159","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":0},{"failures":[128],"tindex":"5a869efd-8273-11e5-b306-11c69551d161","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:165","type":"CtLocalVariableImpl","sourcecode":"int int = int * 2"},"variableMap":{"i":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:302","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"status":-1},{"failures":[54,129,61,68,130,75,131,132,133,134,135,136,137,138,139,140],"tindex":"5a869efe-8273-11e5-b306-0f74f2984e58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"midLat","x":"minLatTmp","absY":"midLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:171","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"5a86c60f-8273-11e5-b306-a7920bcb7b50","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:102","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath()"},"status":-1},{"failures":[141,142],"tindex":"5a86c610-8273-11e5-b306-6bb0011f46e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromShort(byte[], short, 0)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"5a8677e7-8273-11e5-b306-a1f7d15b5ef9","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"5a869efc-8273-11e5-b306-4915843d14ca","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.EncodedValue.getBits"]},"type":"staticDiff"}]}]}