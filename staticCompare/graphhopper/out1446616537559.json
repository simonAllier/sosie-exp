{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":110,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":306,"com.graphhopper.reader.OSMReaderTest.testFerry":37,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":144,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":352,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":235,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":137,"com.graphhopper.coll.CompressedArrayTest.testCompress":394,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":326,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":278,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":374,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":376,"com.graphhopper.GraphHopperTest.testPrepare":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":116,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":285,"com.graphhopper.GHRequestTest.testCorrectInit":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":101,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":154,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":185,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":93,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":98,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":170,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":88,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":260,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":131,"com.graphhopper.GraphHopperTest.testLoadOSM":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":171,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":354,"com.graphhopper.reader.OSMReaderTest.testSort":40,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":371,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":297,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":8,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":339,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":70,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":36,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":385,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":220,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":211,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":392,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":95,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":245,"com.graphhopper.coll.CompressedArrayTest.testCompress2":393,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":353,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":236,"com.graphhopper.GraphHopperAPITest.testLoad":52,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":279,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":269,"com.graphhopper.reader.OSMReaderTest.testBarriers":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":97,"com.graphhopper.util.GHUtilityTest.testCopy":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":310,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":217,"com.graphhopper.routing.PathTest.testFindInstruction":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":227,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":214,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":298,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":283,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":127,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":379,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":380,"com.graphhopper.util.InstructionListTest.testWayList2":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":334,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":179,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":132,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":369,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":33,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":237,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":186,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":268,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":381,"com.graphhopper.routing.PathBidirRefTest.testExtract":77,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":351,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":262,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":208,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":332,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":15,"com.graphhopper.util.GHUtilityTest.testSort2":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":107,"com.graphhopper.reader.OSMReaderTest.testMain":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":244,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":399,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":383,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":336,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":249,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":355,"com.graphhopper.storage.StorablePropertiesTest.testStore":10,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":32,"com.graphhopper.storage.GraphHopperStorageTest.testClone":271,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":335,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":378,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":281,"com.graphhopper.util.BitUtilBigTest.testToFloat":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":312,"com.graphhopper.routing.PathTest.testTime":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":362,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":325,"com.graphhopper.util.GHUtilityTest.testSortDirected":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":367,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":67,"com.graphhopper.GraphHopperTest.testFootOnly":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":201,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":187,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":321,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":173,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":62,"com.graphhopper.routing.QueryGraphTest.testOneWay":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":375,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":396,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":169,"com.graphhopper.reader.OSMReaderTest.testWithBounds":49,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":68,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":327,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":196,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":248,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":241,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":267,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":92,"com.graphhopper.util.InstructionListTest.testWayList":155,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":300,"com.graphhopper.GraphHopperAPITest.testDisconnected179":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":313,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":250,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":167,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":308,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":359,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":341,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":57,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":273,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":129,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":291,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":204,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":114,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":263,"com.graphhopper.routing.PathTest.testWayList":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":115,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":344,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":232,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":272,"com.graphhopper.util.BitUtilBigTest.testToBitString":27,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":87,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":31,"com.graphhopper.util.GHUtilityTest.testSort":150,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":261,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":270,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":216,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":191,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":346,"com.graphhopper.util.BitUtilBigTest.testToInt":29,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":133,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":160,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":7,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":242,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":350,"com.graphhopper.routing.PathTest.testFound":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":331,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":89,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":238,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":30,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":316,"com.graphhopper.util.InstructionListTest.testEmptyList":153,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":105,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":384,"com.graphhopper.reader.PrinctonReaderTest.testRead":34,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":315,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":305,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":243,"com.graphhopper.reader.OSMReaderTest.testFoot":38,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":329,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":176,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":398,"com.graphhopper.reader.OSMReaderTest.testOneWay":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":390,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":280,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":360,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":126,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":289,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":323,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":206,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":119,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":163,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":146,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":319,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":387,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":12,"com.graphhopper.routing.PathBidirRefTest.testExtract2":78,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":180,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":212,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":293,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":373,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":111,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":172,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":391,"com.graphhopper.GraphHopperTest.testFootAndCar":58,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":309,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":123,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":377,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":20,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":218,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":102,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":47,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":348,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":157,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":292,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":322,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":366,"com.graphhopper.storage.EdgeTest.testCloneFull":23,"com.graphhopper.util.InstructionListTest.testFind":152,"com.graphhopper.coll.GHTBitSetTest.testCopy":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":6},"transformations":[{"failures":[],"tindex":"abff0c03-82b8-11e5-82f0-339837b7daa4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:381","type":"CtIfImpl","sourcecode":"if (int == (-(java.lang.Integer.int)))\n    return -(java.lang.Double.double);\n"},"variableMap":{"java.lang.Double.MAX_VALUE":"weight","java.lang.Integer.MAX_VALUE":"prevOrNextEdgeId","storedInt":"prevOrNextEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"status":0},{"failures":[0],"tindex":"abff3314-82b8-11e5-82f0-9b5b5f4cdf23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:465","type":"CtInvocationImpl","sourcecode":"super.rename(java.lang.String)"},"status":-1},{"failures":[],"tindex":"abff3315-82b8-11e5-82f0-9f1150c3672c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:95","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"variableMap":{"orientation":"azimuth","resultOrientation":"azimuth","baseOrientation":"azimuth","java.lang.Math.PI":"azimuth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:141","type":"CtIfImpl","sourcecode":"if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"abff5a26-82b8-11e5-82f0-0d7af8e9dccb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:143","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('\\n')"},"variableMap":{"writer":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:141","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('=')"},"status":-1},{"failures":[],"tindex":"abff5a27-82b8-11e5-82f0-bbe0d934deef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:40","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Class.forName(\"sun.misc.Cleaner\");\n    java.lang.Class.forName(\"java.nio.DirectByteBuffer\").getMethod(\"cleaner\");\n    boolean = true;\n} catch (java.lang.Exception e) {\n    boolean = false;\n}"},"variableMap":{"v":"binary"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:229","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    javax.xml.stream.XMLStreamReader.close();\n"},"status":-2},{"failures":[],"tindex":"abff5a28-82b8-11e5-82f0-7fc8aef47f04","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"variableMap":{"size":"com.graphhopper.reader.OSMElement.RELATION","i":"com.graphhopper.reader.OSMElement.RELATION"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:77","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member : java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>) {\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) == (com.graphhopper.reader.OSMElement.int)) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"abff5a29-82b8-11e5-82f0-f50733d68d31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"variableMap":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"prepared","v":"prepared"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:32","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[14,15,16,17,18,19,20,21],"tindex":"abff813a-82b8-11e5-82f0-f564e2646ab6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:155","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.shapes.GHPoint>.add(com.graphhopper.util.shapes.GHPoint)"},"status":-1},{"failures":[22],"tindex":"abff813b-82b8-11e5-82f0-d3110aae19e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:83","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHTBitSet)(com.graphhopper.coll.GHBitSet)).gnu.trove.set.hash.TIntHashSet.addAll(this.gnu.trove.set.hash.TIntHashSet)"},"status":-1},{"failures":[],"tindex":"abff813c-82b8-11e5-82f0-155357e5d442","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:233","type":"CtAssignmentImpl","sourcecode":"long = 0"},"status":-2},{"failures":[],"tindex":"abff813d-82b8-11e5-82f0-c10b003ec9ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:165","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    int[][int] = int[][int];\n    int[][int] = int[][int];\n    int = int;\n} else {\n    break;\n}"},"variableMap":{"elem":"keys","keys":"keys","i":"value","key":"key","child":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n            int++;\n        } \n        if (int > (int[][int])) {\n            int[][int] = int[][int];\n            int[][int] = int[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    int[][int] = int;\n} else {\n    while ((int[][(int / 2)]) > int) {\n        int[][int] = int[][(int / 2)];\n        int[][int] = int[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    int[][int] = int;\n}"},"status":-2},{"failures":[],"tindex":"abffa84e-82b8-11e5-82f0-61a1478c874a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"time","len":"time","start":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"status":-2},{"failures":[],"tindex":"abffa84f-82b8-11e5-82f0-55216db19684","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"variableMap":{"dist":"shrinkFactor","com.graphhopper.util.DistanceCalcEarth.R":"b_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:137","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"abffa850-82b8-11e5-82f0-2dd39ce37596","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(0, byte[], int)"},"status":-1},{"failures":[23],"tindex":"abffa851-82b8-11e5-82f0-1d404ca72e3a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"this":"de"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:49","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[24,25,26],"tindex":"abffcf62-82b8-11e5-82f0-6345bb02a17a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:95","type":"CtReturnImpl","sourcecode":"return \"bike\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:189","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMElement.getTag(java.lang.String)"},"status":-1},{"failures":[27,28,29,30,31,32,33],"tindex":"abffcf63-82b8-11e5-82f0-132d46450baa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,14,15,16,17,18,19,55,20,56,57,58,2,3,4,5,59,60,61,61,62,62,63,63,64,64,65,65,66,66,67,67,68,68,69,69,70,70,71,71,72,72,73,73,74,74,75,75,76,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,6,220,221,222,7,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,8,264,9,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,11,345,346,347,12,348,349,350,351,13,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392],"tindex":"abffcf64-82b8-11e5-82f0-0de4a23fd8c6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:191","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.chWeightings\", com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString())"},"status":-1},{"failures":[167,176,177,195,204,205,393,394,395,396,397,398,399],"tindex":"abfff675-82b8-11e5-82f0-b1bcc77ed087","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:139","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"variableMap":{"precision":"maxLatTmp","lat":"maxLatTmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:167","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}