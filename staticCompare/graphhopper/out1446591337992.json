{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":41,"com.graphhopper.search.NameIndexTest.testCreate":94,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":192,"com.graphhopper.reader.OSMReaderTest.testFerry":314,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":333,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":334,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":216,"com.graphhopper.routing.QueryGraphTest.testOneWay":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":241,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":356,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":188,"com.graphhopper.reader.OSMReaderTest.testWithBounds":326,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":277,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":300,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":79,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":176,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":162,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":348,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":57,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":242,"com.graphhopper.GraphHopperTest.testPrepare":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":40,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":47,"com.graphhopper.search.NameIndexTest.testFlush":92,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":126,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":23,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":141,"com.graphhopper.util.InstructionListTest.testWayList":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":32,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":337,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":179,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":231,"com.graphhopper.GraphHopperAPITest.testDisconnected179":347,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":204,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":186,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":29,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":189,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":72,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":218,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":82,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":302,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":225,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":368,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":359,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":294,"com.graphhopper.GraphHopperTest.testLoadOSM":362,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":165,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":132,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":190,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":219,"com.graphhopper.reader.OSMReaderTest.testSort":317,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":81,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":261,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":56,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":265,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":45,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":107,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":63,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":100,"com.graphhopper.routing.PathTest.testWayList":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":298,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":230,"com.graphhopper.coll.OSMIDMapTest.testGet2":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":251,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":22,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":311,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":30,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":272,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":209,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":274,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":177,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":258,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":37,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":363,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":71,"com.graphhopper.util.GHUtilityTest.testSort":344,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":26,"com.graphhopper.coll.OSMIDMapTest.testGetLong":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":255,"com.graphhopper.search.NameIndexTest.testPut":91,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":18,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":303,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":149,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":287,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":208,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":264,"com.graphhopper.coll.CompressedArrayTest.testCompress2":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":260,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":262,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":217,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":146,"com.graphhopper.storage.MMapDirectoryTest.testSynched":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":278,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":312,"com.graphhopper.GraphHopperAPITest.testLoad":346,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":284,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":120,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":213,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":110,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":268,"com.graphhopper.reader.OSMReaderTest.testBarriers":318,"com.graphhopper.routing.PathTest.testFound":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":238,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":367,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":28,"com.graphhopper.util.GHUtilityTest.testCopy":343,"com.graphhopper.routing.PathTest.testFindInstruction":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":269,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":280,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":93,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":95,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":117,"com.graphhopper.util.InstructionListTest.testEmptyList":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":31,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":147,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":139,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":36,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":296,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":282,"com.graphhopper.reader.PrinctonReaderTest.testRead":309,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":275,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":212,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":4,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":246,"com.graphhopper.util.InstructionListTest.testWayList2":339,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":168,"com.graphhopper.reader.OSMReaderTest.testFoot":315,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":198,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":195,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":256,"com.graphhopper.reader.OSMReaderTest.testOneWay":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":273,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":301,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":74,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":102,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":235,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":226,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":297,"com.graphhopper.storage.RAMDirectoryTest.testSynched":305,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":279,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":180,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":116,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":319,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":172,"com.graphhopper.coll.OSMIDMapTest.testGet":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":50,"com.graphhopper.routing.PathBidirRefTest.testExtract":61,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":155,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":87,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":332,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":355,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":193,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":304,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":174,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":353,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":352,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":351,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":203,"com.graphhopper.util.GHUtilityTest.testSort2":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":38,"com.graphhopper.reader.OSMReaderTest.testMain":316,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":254,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":104,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":210,"com.graphhopper.routing.PathBidirRefTest.testExtract2":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":178,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":90,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":239,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":291,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":42,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":55,"com.graphhopper.storage.StorablePropertiesTest.testStore":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":206,"com.graphhopper.storage.GraphHopperStorageTest.testClone":112,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":191,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":244,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":0,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":122,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":129,"com.graphhopper.GraphHopperTest.testFootAndCar":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":215,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":372,"com.graphhopper.routing.PathTest.testTime":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":228,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":163,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":34,"com.graphhopper.reader.OSMReaderTest.testRelation":322,"com.graphhopper.storage.StorablePropertiesTest.testLoad":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":271,"com.graphhopper.util.GHUtilityTest.testSortDirected":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":233,"com.graphhopper.GraphHopperTest.testPrepareOnly":349,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":150,"com.graphhopper.GraphHopperTest.testVia":357,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":33,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":324,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":323,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":161,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":211,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":133,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":340,"com.graphhopper.GraphHopperTest.testFootOnly":366,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":371,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":167,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":321,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":169,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":307,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":67,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":232,"com.graphhopper.util.InstructionListTest.testFind":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":259},"transformations":[{"failures":[],"tindex":"ffe15b03-827d-11e5-ac91-4dd7e4201c0d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"calcPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:126","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"ffe18214-827d-11e5-ac91-b9fa5d11927b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[],"tindex":"ffe1a925-827d-11e5-ac91-b59806fb3b8d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:607","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.CHGraphImpl.double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"b_lon_deg","weight":"a_lat_deg","com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT":"a_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:118","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.DistanceCalcEarth.calcNormalizedEdgeDistanceNew(double, double, double, double, double, double, false)"},"status":-2},{"failures":[],"tindex":"ffe1a926-827d-11e5-ac91-c7e0e9f302bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.freeMemory(long)"},"status":0},{"failures":[0],"tindex":"ffe1a927-827d-11e5-ac91-99ce1fa746c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-1},{"failures":[],"tindex":"ffe1a928-827d-11e5-ac91-99531076ed17","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:370","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.WORST":"com.graphhopper.routing.util.PriorityCode.VERY_NICE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:529","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"ffe1d039-827d-11e5-ac91-d7f32252c630","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:78","type":"CtReturnImpl","sourcecode":"return long * (double)"},"variableMap":{"flags":"flags","factor":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:646","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"ffe1d03a-827d-11e5-ac91-292eef5d6fa9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:536","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.PREFER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:168","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[1],"tindex":"ffe1d03b-827d-11e5-ac91-ff53ed9a94a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.VLongStorage = null"},"status":-1},{"failures":[],"tindex":"ffe1d03c-827d-11e5-ac91-4d16d4b9f628","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"variableMap":{"allBits":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:407","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":0},{"failures":[],"tindex":"ffe1d03d-827d-11e5-ac91-136d82a0ea33","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:180","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"variableMap":{"type":"daType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:173","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":0},{"failures":[2,3],"tindex":"ffe1f74e-827d-11e5-ac91-3fdc5a03b55e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"edgeIdFrom","hash":"edgeIdFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:98","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-1},{"failures":[4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,2,314,315,316,317,318,319,320,3,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368],"tindex":"ffe1f74f-827d-11e5-ac91-e194d2d5eff4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:173","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"RAM_STORE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n"},"variableMap":{"dataAccess":"location","type":"type","com.graphhopper.storage.DAType.RAM_STORE":"type","com.graphhopper.storage.DAType.RAM":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:118","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[349,356,357,358,361,362,364,366],"tindex":"ffe21e60-827d-11e5-ac91-a34b14e98984","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.createCHPreparations()"},"status":-1},{"failures":[],"tindex":"ffe21e61-827d-11e5-ac91-732a75ddd337","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:371","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setWeight\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:44","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (com.graphhopper.util.XFirstSearch.(checkAdjacent(com.graphhopper.util.EdgeIterator)) && (!(com.graphhopper.coll.GHBitSet.contains(int)))) {\n        com.graphhopper.coll.GHBitSet.add(int);\n        com.graphhopper.util.SimpleIntDeque.push(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"ffe21e62-827d-11e5-ac91-39cb01fe5e48","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:131","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"No encoding manager specified or loaded\");\n"},"variableMap":{"encodingManager":"encodingManager"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:221","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), com.graphhopper.routing.util.EncodingManager.hashCode())"},"status":0},{"failures":[369,370,371,372,314,315,316,317,318,319,320,3,321,324,325,326,329,348,349,356,357,358,359,360,361,362,364,365,366,367],"tindex":"ffe21e63-827d-11e5-ac91-5ffb03eac3dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:285","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << int"},"variableMap":{"delta":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:479","type":"CtLocalVariableImpl","sourcecode":"long long = long[][int]"},"status":-1},{"failures":[],"tindex":"ffe21e64-827d-11e5-ac91-d771db740d0f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[146,147,148,149,150,151,174,199],"tindex":"ffe24575-827d-11e5-ac91-858882e931ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:118","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"orientation":"foundDist","java.lang.Math.PI":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator))) {\n        continue;\n    } \n    for (int int = 0, int int ; int < 2 ; int++) {\n        if (int == 0) {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n        } else {\n            int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        }\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n        if (double < 0)\n            continue;\n        \n        if (double < double) {\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            double = double;\n        } \n        if (int > 0)\n            continue;\n        \n        int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n            double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n            if (double < double) {\n                com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n                com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n                com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n                if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n                    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n                \n                double = double;\n            } \n        } \n    }\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"ffe1a926-827d-11e5-ac91-c7e0e9f302bc","diffs":[{"methodsDiff":{"delete":["sun.misc.Unsafe.freeMemory"]},"type":"staticDiff"}]},{"transformation":"ffe18214-827d-11e5-ac91-b9fa5d11927b","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.EncodedValue.getBits"]},"type":"staticDiff"}]}]}