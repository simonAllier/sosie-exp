{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":116,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":126,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":135,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":365,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":11,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":12,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":261,"com.graphhopper.routing.QueryGraphTest.testOneWay":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":284,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":348,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":178,"com.graphhopper.reader.OSMReaderTest.testWithBounds":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":209,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":60,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":350,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":252,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":83,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":321,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":160,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":285,"com.graphhopper.GraphHopperTest.testPrepare":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":115,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":79,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":328,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":98,"com.graphhopper.util.InstructionListTest.testWayList":16,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":343,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":107,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":144,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":362,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":4,"com.graphhopper.GraphHopperAPITest.testDisconnected179":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":274,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":249,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":361,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":224,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":176,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":104,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":179,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":37,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":78,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":234,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":356,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":268,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":374,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":48,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":316,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":226,"com.graphhopper.GraphHopperTest.testLoadOSM":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":163,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":180,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":263,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":334,"com.graphhopper.reader.OSMReaderTest.testSort":24,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":110,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":280,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":88,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":120,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":131,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":21,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":239,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":244,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":69,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":304,"com.graphhopper.routing.PathTest.testWayList":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":273,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":294,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":317,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":105,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":177,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":344,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":277,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":206,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":315,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":174,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":301,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":112,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":353,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":77,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":358,"com.graphhopper.util.GHUtilityTest.testSort":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":368,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":298,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":235,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":313,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":141,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":219,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":152,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":253,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":295,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":56,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":150,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":196,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":262,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":210,"com.graphhopper.GraphHopperAPITest.testLoad":19,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":50,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":349,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":216,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":322,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":258,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":312,"com.graphhopper.reader.OSMReaderTest.testBarriers":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":200,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":247,"com.graphhopper.routing.PathTest.testFound":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":303,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":156,"com.graphhopper.util.GHUtilityTest.testCopy":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":367,"com.graphhopper.routing.PathTest.testFindInstruction":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":95,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":212,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":302,"com.graphhopper.util.InstructionListTest.testEmptyList":14,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":106,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":139,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":341,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":111,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":228,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":214,"com.graphhopper.reader.PrinctonReaderTest.testRead":36,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":90,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":267,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":289,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":248,"com.graphhopper.util.InstructionListTest.testWayList2":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":166,"com.graphhopper.reader.OSMReaderTest.testFoot":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":372,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":185,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":346,"com.graphhopper.reader.OSMReaderTest.testOneWay":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":233,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":278,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":306,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":269,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":338,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":211,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":332,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":145,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":311,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":370,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":26,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":290,"com.graphhopper.routing.PathBidirRefTest.testExtract":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":153,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":45,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":351,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":236,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":172,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":41,"com.graphhopper.util.GHUtilityTest.testSort2":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":113,"com.graphhopper.reader.OSMReaderTest.testMain":23,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":297,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":255,"com.graphhopper.routing.PathBidirRefTest.testExtract2":68,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":373,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":164,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":58,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":189,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":360,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":175,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":282,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":223,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":240,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":117,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":181,"com.graphhopper.storage.GraphHopperStorageTest.testClone":314,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":300,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":287,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":324,"com.graphhopper.GraphHopperTest.testFootAndCar":49,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":260,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":359,"com.graphhopper.routing.PathTest.testTime":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":109,"com.graphhopper.util.GHUtilityTest.testSortDirected":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":286,"com.graphhopper.GraphHopperTest.testPrepareOnly":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":276,"com.graphhopper.GraphHopperTest.testVia":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":142,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":108,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":31,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":159,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":256,"com.graphhopper.GraphHopperTest.testFootOnly":2,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":18,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":165,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":29,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":1,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":167,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":73,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":275,"com.graphhopper.util.InstructionListTest.testFind":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":266},"transformations":[{"failures":[],"tindex":"01bef764-828d-11e5-9a0b-e579b85b2394","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:103","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false))"},"status":0},{"failures":[],"tindex":"01bef765-828d-11e5-9a0b-5364d7da621d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:141","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.hash.TIntIntHashMap.clear()"},"status":0},{"failures":[],"tindex":"01bf1e76-828d-11e5-9a0b-d9718dbf2c02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:135","type":"CtIfImpl","sourcecode":"if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[0,1],"tindex":"01bf1e77-828d-11e5-9a0b-cfc548640637","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:529","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception ex) {\n}"},"status":-1},{"failures":[2],"tindex":"01bf1e78-828d-11e5-9a0b-31ae4fbf3d22","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:775","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,0,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,2,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,134,134,135,135,136,136,137,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347],"tindex":"01bf1e79-828d-11e5-9a0b-114df3838c9b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"segmentSizeInBytes","maxGeoRef":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"status":-1},{"failures":[0,22,23,24,25,26,27,28,29,31,32,33,34,35,38,39,348,46,47,48,49,50,51,52,53,2,54],"tindex":"01bf458a-828d-11e5-9a0b-b7b9ee9f6227","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"freeIndex":"tmpIndex","currentIndex":"tmpIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:635","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int);\n} else if (int > (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int);\n} else {\n}"},"status":-1},{"failures":[0,22,23,24,25,26,27,28,29,31,32,33,34,35,38,39,348,46,47,48,49,50,51,52,53,2,54],"tindex":"01bf458b-828d-11e5-9a0b-47d651b0da52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:124","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.reset()"},"status":-1},{"failures":[],"tindex":"01bf458c-828d-11e5-9a0b-6fe0b01be53c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"variableMap":{"line":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"01bf6c9d-828d-11e5-9a0b-8996cdbbcd00","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:489","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"variableMap":{"high":"hash","len":"hash","start":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:91","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[30,349],"tindex":"01bf6c9e-828d-11e5-9a0b-e791ad2fb153","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:190","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[238,245],"tindex":"01bf6c9f-828d-11e5-9a0b-fd95f888b7b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"01bf6ca0-828d-11e5-9a0b-d11e402545e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:248","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:364","type":"CtReturnImpl","sourcecode":"return ((((((((((com.graphhopper.storage.GraphHopperStorage.isCHPossible() ? \"CH|\" : \"\") + (com.graphhopper.routing.util.EncodingManager)) + \"|\") + (com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType())) + \"|\") + (com.graphhopper.storage.BaseGraph.com.graphhopper.storage.NodeAccess.getDimension())) + \"D\") + \"|\") + (com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension)) + \"|\") + (com.graphhopper.storage.GraphHopperStorage.getProperties().versionsToString())"},"status":0},{"failures":[13,14,15,16,17,18,41,69,70,73,74,77,78,84,85],"tindex":"01bf6ca1-828d-11e5-9a0b-ad234d473324","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:64","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, 0)"},"status":-1},{"failures":[35,58,59,61,63,64,212,227,277,292,350,351,323,338],"tindex":"01bf93b2-828d-11e5-9a0b-0b21ff9d6f3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:90","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"variableMap":{"visitedCountFrom":"i","visitedCountTo":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"status":-1},{"failures":[39,51,52,53,193,195,196,251,255,260,261,305,306,307],"tindex":"01bf93b3-828d-11e5-9a0b-21cc67b283f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:195","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), int)"},"status":-1},{"failures":[352,353,354,355,356,357,358,359,360,361,362],"tindex":"01bf93b4-828d-11e5-9a0b-6b8345f97e7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"paveType","segmentSizeIntsPower":"paveType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:421","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[28,124,193,363,203,225,364,303],"tindex":"01bf93b5-828d-11e5-9a0b-6bdc78e5f96d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:267","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-1},{"failures":[8,11,12,13,15,16,17,19,36,37,40,41,42,43,44,45,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,77,78,81,82,83,84,85,87,89,90,91,93,94,96,99,100,101,102,103,104,105,106,107,112,113,114,115,118,119,120,121,133,143,155,165,175,182,192,193,200,201,203,204,208,215,217,223,225,228,230,235,249,253,260,265,266,268,269,273,280,282,288,290,293,295,300,365,366,364,367,368,369,370,371,303,372,373,374,305,311,312,314,315,319,326,328,334,336,339,341,346],"tindex":"01bf93b6-828d-11e5-9a0b-3590d8f06e54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:318","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.flagsDefault(boolean, boolean)"},"status":-1},{"failures":[],"tindex":"01bfbac7-828d-11e5-9a0b-63983ad3d9c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:207","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"01bef764-828d-11e5-9a0b-e579b85b2394","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.detach","com.graphhopper.storage.index.QueryResult.setClosestEdge"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":["com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e1","com.graphhopper.storage.index.QueryResult_void_setClosestEdge(com.graphhopper.util.EdgeIteratorState).b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e2","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).b"],"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":["com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e1","com.graphhopper.storage.index.QueryResult_void_setClosestEdge(com.graphhopper.util.EdgeIteratorState).b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e2","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).b"]},"type":"branch"}]},{"transformation":"01bf6ca0-828d-11e5-9a0b-d11e402545e8","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointAccess.getDimension","com.graphhopper.storage.Directory.getDefaultType","com.graphhopper.storage.GraphHopperStorage.isCHPossible","com.graphhopper.storage.GraphHopperStorage.getDirectory","com.graphhopper.storage.StorableProperties.versionsToString","com.graphhopper.storage.GraphHopperStorage.getProperties"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.DAType_com.graphhopper.storage.DAType$MemRef_getMemRef().b","com.graphhopper.storage.GraphExtension$NoOpExtension_java.lang.String_toString().b","com.graphhopper.routing.util.EncodingManager_java.lang.String_toString().l2","com.graphhopper.storage.GraphHopperStorage_boolean_isCHPossible().b","com.graphhopper.storage.DAType_java.lang.String_toString().e3","com.graphhopper.storage.DAType_java.lang.String_toString().e5","com.graphhopper.routing.util.EncodingManager_java.lang.String_toString().t1","com.graphhopper.storage.DAType_java.lang.String_toString().e4","com.graphhopper.storage.DAType_java.lang.String_toString().e1","com.graphhopper.storage.DAType_java.lang.String_toString().b","com.graphhopper.routing.util.EncodingManager_java.lang.String_toString().b","com.graphhopper.routing.util.EncodingManager_java.lang.String_toString().e1","com.graphhopper.storage.DAType_java.lang.String_toString().t2","com.graphhopper.storage.StorableProperties_java.lang.String_versionsToString().b","com.graphhopper.storage.StorableProperties_java.lang.String_get(java.lang.String).e1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.storage.DAType_com.graphhopper.storage.DAType$MemRef_getMemRef().b","com.graphhopper.storage.GraphExtension$NoOpExtension_java.lang.String_toString().b","com.graphhopper.routing.util.EncodingManager_java.lang.String_toString().l2","com.graphhopper.storage.GraphHopperStorage_boolean_isCHPossible().b","com.graphhopper.storage.DAType_java.lang.String_toString().e3","com.graphhopper.storage.DAType_java.lang.String_toString().e5","com.graphhopper.routing.util.EncodingManager_java.lang.String_toString().t1","com.graphhopper.storage.DAType_java.lang.String_toString().e4","com.graphhopper.storage.DAType_java.lang.String_toString().e1","com.graphhopper.storage.DAType_java.lang.String_toString().b","com.graphhopper.routing.util.EncodingManager_java.lang.String_toString().b","com.graphhopper.routing.util.EncodingManager_java.lang.String_toString().e1","com.graphhopper.storage.DAType_java.lang.String_toString().t2","com.graphhopper.storage.StorableProperties_java.lang.String_get(java.lang.String).e1","com.graphhopper.storage.StorableProperties_java.lang.String_versionsToString().b"]},"type":"branch"}]},{"transformation":"01bfbac7-828d-11e5-9a0b-63983ad3d9c7","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setInt"]},"type":"staticDiff"}]}]}