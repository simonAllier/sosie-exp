{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":10,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":70,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":3,"com.graphhopper.reader.OSMReaderTest.testMain":41,"com.graphhopper.routing.PathTest.testFindInstruction":68,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":76,"com.graphhopper.util.PointListTest.testReverse":64,"com.graphhopper.routing.QueryGraphTest.testOneWay":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":53,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":26,"com.graphhopper.routing.PathTest.testWayList":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":84,"com.graphhopper.reader.OSMReaderTest.testWithBounds":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":11,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":45,"com.graphhopper.GraphHopperTest.testPrepare":35,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":60,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":63,"com.graphhopper.GraphHopperTest.testFootAndCar":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":46,"com.graphhopper.util.InstructionListTest.testWayList2":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":4,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":72,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":6,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":77,"com.graphhopper.util.InstructionListTest.testWayList":55,"com.graphhopper.util.InstructionListTest.testCreateGPX":56,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":80,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":12,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":52,"com.graphhopper.GraphHopperTest.testVia":34,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":40,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":1,"com.graphhopper.util.DouglasPeuckerTest.testParse":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":18,"com.graphhopper.GraphHopperAPITest.testLoad":47,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":82,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":58,"com.graphhopper.GraphHopperTest.testFootOnly":85,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":15,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":24,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":33,"com.graphhopper.util.InstructionListTest.testFind":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":51,"com.graphhopper.GraphHopperTest.testLoadOSM":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":79,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":30,"com.graphhopper.reader.OSMReaderTest.testSort":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":29},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"3772eaac-792f-11e5-bfdd-57e49df7c709","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:89","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"377311bd-792f-11e5-bfdd-4f26e97c0020","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:102","type":"CtTryImpl","sourcecode":"try {\n    if (int >= (java.util.List<byte[]>.size())) {\n        return null;\n    } \n    byte[] byte[] = java.util.List<byte[]>.get(int);\n    com.graphhopper.storage.VLongStorage com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(com.graphhopper.coll.CompressedArray.com.graphhopper.coll.CompressedArray.decompress(byte[]));\n    long long = com.graphhopper.storage.VLongStorage.getLength();\n    for (int int = 0 ; (com.graphhopper.storage.VLongStorage.getPosition()) < long ; int++) {\n        long long = com.graphhopper.storage.VLongStorage.readVLong();\n        if (int == int) {\n            com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n            com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n            return com.graphhopper.util.shapes.GHPoint;\n        } \n    }\n    return null;\n} catch (java.lang.ArrayIndexOutOfBoundsException ex) {\n    throw new java.lang.RuntimeException((((((((\"index \" + long) + \"=> segNo:\") + int) + \", entry=\") + int) + \", segments:\") + (java.util.List<byte[]>.size())) , java.lang.ArrayIndexOutOfBoundsException);\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"377311be-792f-11e5-bfdd-697ab4e7a08a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:589","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative but was \" + double));\n"},"variableMap":{"weight":"orientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:102","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"377338cf-792f-11e5-bfdd-2f1684292373","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:492","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getLatitude((int - (int)))"},"variableMap":{"virtualNodes":"this","nodeId":"index","mainNodes":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:186","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getLatitude(int)"},"status":-2},{"failures":[0,2,48,4,6,7,8,9,11,12,14,49,16,18,19,20,21,50,51,52,53,28,29,30,31,32,34,36,37,54,55,56,57,58,59,60,61,62,63,64,41,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,44,45,81,46,82,83,84,47],"tindex":"377338d0-792f-11e5-bfdd-85a9b3e0a809","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:129","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[37,85],"tindex":"377338d1-792f-11e5-bfdd-9f1ed818a3b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"car\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:261","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"377338d2-792f-11e5-bfdd-317dd2e1367c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:286","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"cycleway\")) && (com.graphhopper.reader.OSMWay.hasTag(\"sac_scale\", \"hiking\")))\n    return long;\n"},"status":0},{"failures":[],"tindex":"37735fe3-792f-11e5-bfdd-f981089ce86e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:477","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-2},{"failures":[],"tindex":"37735fe4-792f-11e5-bfdd-795e463d9c8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:809","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null)"},"status":-2},{"failures":[],"tindex":"37735fe5-792f-11e5-bfdd-394651afe215","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:364","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.nio.ByteBuffer.get(byte[], 0, int);\n    java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1));\n    java.nio.ByteBuffer.position(0);\n    java.nio.ByteBuffer.get(byte[], int, int);\n} else {\n    java.nio.ByteBuffer.get(byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"37735fe6-792f-11e5-bfdd-29f3f012fe0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:218","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int++)"},"variableMap":{"unpavedBit":"encoded","shift":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:295","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"37735fe7-792f-11e5-bfdd-75d7c56dc621","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"nEdge","fromHeap":"fromHeap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:100","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-2},{"failures":[],"tindex":"377386f8-792f-11e5-bfdd-79df6a411218","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.poll_element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.peek_key()"},"status":-2},{"failures":[],"tindex":"377386f9-792f-11e5-bfdd-4d5ad4423045","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.ViaInstruction:39","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"377386fa-792f-11e5-bfdd-c35a87eeba1d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:116","type":"CtLocalVariableImpl","sourcecode":"byte byte = ((byte)(1 << 7))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:60","type":"CtLocalVariableImpl","sourcecode":"byte byte = byte[][int]"},"status":-2},{"failures":[],"tindex":"377386fb-792f-11e5-bfdd-4d489c9771ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:199","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"variableMap":{"factor":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:70","type":"CtIfImpl","sourcecode":"if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n    double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n"},"status":-2},{"failures":[],"tindex":"377386fc-792f-11e5-bfdd-bb58fb9919bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"minNetworkSize","maxGeoRef":"removedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:181","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.TIntList, int)"},"status":-2},{"failures":[],"tindex":"3773ae0d-792f-11e5-bfdd-b746f604d426","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:317","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\",\"))\n    return \"destinations: \" + java.lang.String;\nelse\n    return \"destination: \" + java.lang.String;\n"},"variableMap":{"str":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:215","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"3773ae0e-792f-11e5-bfdd-97a4e30123e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:59","type":"CtIfImpl","sourcecode":"if ((int) != int) {\n    int = 2;\n} "},"variableMap":{"clockwise2":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","clockwise":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:592","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[],"tindex":"3773ae0f-792f-11e5-bfdd-692659b08219","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtIfImpl","sourcecode":"if (\"from\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} else if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}