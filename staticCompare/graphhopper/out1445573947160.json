{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":270,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":36,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":156,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":256,"com.graphhopper.reader.OSMReaderTest.testFerry":325,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":303,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":304,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":1,"com.graphhopper.routing.QueryGraphTest.testOneWay":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":202,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":313,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":152,"com.graphhopper.reader.OSMReaderTest.testWithBounds":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":277,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":267,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":276,"com.graphhopper.coll.CompressedArrayTest.testCompress":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":174,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":252,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":275,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":123,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":305,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":54,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":285,"com.graphhopper.GraphHopperTest.testPrepare":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":35,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":42,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":237,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":18,"com.graphhopper.util.InstructionListTest.testWayList":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":27,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":293,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":291,"com.graphhopper.GraphHopperAPITest.testDisconnected179":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":263,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":320,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":150,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":153,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":69,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":340,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":117,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":288,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":316,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":226,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":110,"com.graphhopper.GraphHopperTest.testLoadOSM":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":154,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":182,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":243,"com.graphhopper.reader.OSMReaderTest.testSort":328,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":75,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":198,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":51,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":84,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":40,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":324,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":60,"com.graphhopper.routing.PathTest.testWayList":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":287,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":211,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":83,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":151,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":195,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":92,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":217,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":68,"com.graphhopper.util.GHUtilityTest.testSort":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":264,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":214,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":118,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":223,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":175,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":212,"com.graphhopper.coll.CompressedArrayTest.testCompress2":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":81,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":144,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":321,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":239,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":95,"com.graphhopper.GraphHopperAPITest.testLoad":341,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":101,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":231,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":180,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":222,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":86,"com.graphhopper.reader.OSMReaderTest.testBarriers":329,"com.graphhopper.routing.PathTest.testFound":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":279,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":323,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":260,"com.graphhopper.util.GHUtilityTest.testCopy":299,"com.graphhopper.routing.PathTest.testFindInstruction":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":87,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":97,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":265,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":168,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":249,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":112,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":238,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":99,"com.graphhopper.reader.PrinctonReaderTest.testRead":339,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":179,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":186,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":206,"com.graphhopper.util.InstructionListTest.testWayList2":295,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":129,"com.graphhopper.reader.OSMReaderTest.testFoot":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":282,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":159,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":215,"com.graphhopper.reader.OSMReaderTest.testOneWay":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":196,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":188,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":246,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":96,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":241,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":139,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":221,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":272,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":330,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":45,"com.graphhopper.routing.PathBidirRefTest.testExtract":58,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":147,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":302,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":312,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":157,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":119,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":311,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":135,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":280,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":309,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":166,"com.graphhopper.util.GHUtilityTest.testSort2":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":268,"com.graphhopper.reader.OSMReaderTest.testMain":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":177,"com.graphhopper.routing.PathBidirRefTest.testExtract2":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":208,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":284,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":127,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":163,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":138,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":121,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":108,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":37,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":155,"com.graphhopper.storage.GraphHopperStorageTest.testClone":224,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":216,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":205,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":233,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":240,"com.graphhopper.GraphHopperTest.testFootAndCar":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":262,"com.graphhopper.routing.PathTest.testTime":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":204,"com.graphhopper.util.GHUtilityTest.testSortDirected":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":194,"com.graphhopper.GraphHopperTest.testPrepareOnly":306,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":171,"com.graphhopper.GraphHopperTest.testVia":314,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":28,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":334,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":122,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":178,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":296,"com.graphhopper.GraphHopperTest.testFootOnly":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":128,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":333,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":130,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":64,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":271,"com.graphhopper.util.InstructionListTest.testFind":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":185},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"33af4b07-793d-11e5-8293-fb58c43b1670","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:162","type":"CtReturnImpl","sourcecode":"return int <= int ? long + (int) : long + (int)"},"status":-1},{"failures":[343,344],"tindex":"33af7218-793d-11e5-8293-e1593db241f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.writeVLong(long)"},"status":-1},{"failures":[],"tindex":"33af7219-793d-11e5-8293-4dccc8f1fad9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:303","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((int[][int]) == int) {\n        return int;\n    } \n}"},"variableMap":{"mSize":"key","value":"key","mValues":"a"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:414","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"33af721a-793d-11e5-8293-db313e9f2ed7","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"flags","flags":"flags","dir":"backwardBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:718","type":"CtReturnImpl","sourcecode":"return boolean ? long | (long) : long & (~(long))"},"status":-2},{"failures":[],"tindex":"33af992b-793d-11e5-8293-557a5ac02dae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:670","type":"CtLocalVariableImpl","sourcecode":"int int = (com.graphhopper.reader.TLongList.size()) - 1"},"status":-2},{"failures":[],"tindex":"33af992c-793d-11e5-8293-29283935dbfd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger)"},"variableMap":{"daPointer":"daPointer","this":"this","counter":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:116","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger)"},"status":-2},{"failures":[],"tindex":"33af992d-793d-11e5-8293-f91f9539fa98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:78","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (com.graphhopper.storage.BaseGraph.int)) + (com.graphhopper.storage.BaseGraph.int))))"},"variableMap":{"that":"that","nodes":"nodes","nodeEntryBytes":"nodeId","N_LAT":"nodeId","nodeId":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (com.graphhopper.storage.BaseGraph.int)) + (com.graphhopper.storage.BaseGraph.int))))"},"status":-2},{"failures":[],"tindex":"33af992e-793d-11e5-8293-6df4287cc2fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:173","type":"CtIfImpl","sourcecode":"if (double > 100)\n    throw new java.lang.IllegalArgumentException(\"setNodesContracted can be 100% maximum\");\n"},"variableMap":{"nodesContracted":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:82","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-2},{"failures":[],"tindex":"33af992f-793d-11e5-8293-11852b81b418","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:49","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"33af9930-793d-11e5-8293-a705df691ec7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1123","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties()"},"status":-2},{"failures":[],"tindex":"33af9931-793d-11e5-8293-df67f3df7a56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:179","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"33afc042-793d-11e5-8293-fdb257e062be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:373","type":"CtIfImpl","sourcecode":"if ((java.lang.Integer != null) && (java.lang.Integer > java.lang.Integer)) {\n    if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n        int = java.lang.Integer;\n    else\n        int = java.lang.Integer;\n    \n} "},"variableMap":{"highwaySpeed":"highwaySpeed","pushingSections":"pushingSections","highwayTag":"highwayTag","surfaceSpeed":"surfaceSpeed","speed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    int = java.lang.Integer;\n    if ((java.lang.Integer != null) && (java.lang.Integer > java.lang.Integer)) {\n        if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n            int = java.lang.Integer;\n        else\n            int = java.lang.Integer;\n        \n    } \n} "},"status":-2},{"failures":[],"tindex":"33afc043-793d-11e5-8293-6be7248b3270","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:670","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((double != 0) || (java.lang.Double.isInfinite(double)))\n        throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n    \n} else {\n    if (double >= (int))\n        throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n    \n}"},"variableMap":{"maxTurnCosts":"size","costs":"ele","restricted":"is3D"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:130","type":"CtIfImpl","sourcecode":"if (boolean)\n    double[][int] = double;\nelse if (!(java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalStateException((\"This is a 2D list we cannot store elevation: \" + double));\n"},"status":-2},{"failures":[],"tindex":"33afc044-793d-11e5-8293-676a43a7ec8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:275","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_left\")"},"variableMap":{"dir":"dir","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:272","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_left\")"},"status":-2},{"failures":[],"tindex":"33afc045-793d-11e5-8293-b9864b32ed62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"variableMap":{"latSize":"arrayLength","size":"arrayLength","lonSize":"arrayLength"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"status":-2},{"failures":[],"tindex":"33afc046-793d-11e5-8293-39d23ed15aed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"hash":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:185","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-2},{"failures":[],"tindex":"33afc047-793d-11e5-8293-c1afa87a70af","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:227","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphHopperStorage.isFrozen())\n    throw new java.lang.IllegalStateException(\"do not optimize after graph was frozen\");\n"},"variableMap":{"this":"cl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:268","type":"CtInvocationImpl","sourcecode":"java.io.Closeable.close()"},"status":-2},{"failures":[],"tindex":"33afc048-793d-11e5-8293-dd70db1db210","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:147","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey())"},"status":-2},{"failures":[],"tindex":"33afe759-793d-11e5-8293-5553291f2253","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:331","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalStateException((\"Speed was negative!? \" + double));\n"},"variableMap":{"speedVal":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"33afe75a-793d-11e5-8293-83ef4195a22b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:943","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"variableMap":{"enableIfAssert":"locked"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:242","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}