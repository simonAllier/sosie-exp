{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":40,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":7,"com.graphhopper.reader.OSMReaderTest.testWithBounds":108,"com.graphhopper.reader.PrinctonReaderTest.testRead":110,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":32,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":21,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":91,"com.graphhopper.GraphHopperTest.testPrepare":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":13,"com.graphhopper.reader.OSMReaderTest.testFoot":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":54,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":81,"com.graphhopper.reader.OSMReaderTest.testOneWay":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":60,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":76,"com.graphhopper.GraphHopperAPITest.testDisconnected179":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":59,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":3,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":71,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":30,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":111,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":10,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":23,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":16,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":53,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":42,"com.graphhopper.GraphHopperTest.testLoadOSM":100,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":89,"com.graphhopper.reader.OSMReaderTest.testSort":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":6,"com.graphhopper.util.GHUtilityTest.testSort2":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":8,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":79,"com.graphhopper.reader.OSMReaderTest.testMain":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":67,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":25,"com.graphhopper.routing.PathTest.testWayList":28,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":63,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":46,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":73,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":90,"com.graphhopper.GraphHopperTest.testFootAndCar":113,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":29,"com.graphhopper.util.GHUtilityTest.testSort":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":45,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":64,"com.graphhopper.GraphHopperTest.testVia":96,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":83,"com.graphhopper.GraphHopperAPITest.testLoad":112,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":11,"com.graphhopper.GraphHopperTest.testFootOnly":114,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":75,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":107,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":72,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":35,"com.graphhopper.reader.OSMReaderTest.testBarriers":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":14,"com.graphhopper.util.GHUtilityTest.testCopy":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":61},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"fb78e6df-792a-11e5-9082-1fa8a96d403b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"nodeOther","maxGeoRef":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[96,97,98,113,99,100,101,114,112,115],"tindex":"fb790df0-792a-11e5-9082-3d0bfa73e88f","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:708","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"variableMap":{"fullyLoaded":"enableInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.GHResponse.setInstructions(com.graphhopper.util.InstructionList);\n"},"status":-1},{"failures":[],"tindex":"fb790df1-792a-11e5-9082-b788a42cd944","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.printInfo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:857","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.prepare()"},"status":-2},{"failures":[],"tindex":"fb790df2-792a-11e5-9082-0576a8285d28","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:230","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"variableMap":{"encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:229","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(com.graphhopper.routing.util.AbstractFlagEncoder.toString()))\n    return com.graphhopper.routing.util.AbstractFlagEncoder;\n"},"status":-2},{"failures":[],"tindex":"fb790df3-792a-11e5-9082-e5ecdad5934a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:136","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"fb790df4-792a-11e5-9082-5be7b1db0d63","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"N_LAT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:56","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-2},{"failures":[],"tindex":"fb793505-792a-11e5-9082-9b8bf0c6078a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:935","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl(com.graphhopper.storage.BaseGraph.getNodes())"},"status":-2},{"failures":[],"tindex":"fb793506-792a-11e5-9082-85bef1a22383","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:166","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DAType com.graphhopper.storage.DAType"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:202","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.storage.DAType com.graphhopper.storage.DAType = ((com.graphhopper.storage.DAType)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"fb793507-792a-11e5-9082-ff3646f84c6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:182","type":"CtInvocationImpl","sourcecode":"java.text.SimpleDateFormat.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\"))"},"status":-2},{"failures":[],"tindex":"fb793508-792a-11e5-9082-c389ea32c782","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:160","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    for (int int = int + 1 ; int < int ; int++) {\n        com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n        int++;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int);\n    int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int);\n}"},"status":-2},{"failures":[],"tindex":"fb793509-792a-11e5-9082-31fbcf5c5d4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:303","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.GraphStorage.getDirectory().getLocation()"},"status":-2},{"failures":[],"tindex":"fb79350a-792a-11e5-9082-9f9be355b122","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:497","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 100))) / 100.0"},"variableMap":{"value":"normedDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:51","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.DistanceCalcEarth.double) * java.lang.Math.(java.lang.Math.sqrt(double))"},"status":-2},{"failures":[],"tindex":"fb79350b-792a-11e5-9082-11157ccd67b0","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"variableMap":{"cap":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:247","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"fb795c1c-792a-11e5-9082-0bf400280443","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:428","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n        return true;\n    \n}"},"status":-2},{"failures":[],"tindex":"fb795c1d-792a-11e5-9082-9fa5c8ddfcad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:796","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase()"},"variableMap":{"key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:150","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"RAM\""},"status":-2},{"failures":[],"tindex":"fb795c1e-792a-11e5-9082-ab8da81f1b6a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"exitNumber"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"status":-2},{"failures":[],"tindex":"fb795c1f-792a-11e5-9082-dfbc90ed3808","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"variableMap":{"wayTypeEncoder":"relationCodeEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-2},{"failures":[],"tindex":"fb795c20-792a-11e5-9082-1934418efc8c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"fb795c21-792a-11e5-9082-b1b068603d15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:901","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double, com.graphhopper.util.Helper.intToEle(com.graphhopper.util.BitUtil.toInt(byte[], int)))"},"status":-2},{"failures":[],"tindex":"fb795c22-792a-11e5-9082-7589b7a17f1a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:143","type":"CtWhileImpl","sourcecode":"while ((int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))) != (int)) {\n    int = int;\n    if ((int++) > 1000) {\n        throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n    } \n}"},"variableMap":{"turnCosts":"edges","tmp":"edgeCount","previousEntryIndex":"edgeCount","i":"edgeCount","turnCostsEntryBytes":"edgeCount","TC_NEXT":"edgeCount","NO_TURN_ENTRY":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}