{"failureDictionary":{"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":15,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":18,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":49,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":31,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":71,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":64,"com.graphhopper.reader.PrinctonReaderTest.testRead":7,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":67,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":1,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":74,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":4,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":80,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":57,"com.graphhopper.reader.OSMReaderTest.testFoot":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":70,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":73,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":72,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":45,"com.graphhopper.reader.OSMReaderTest.testOneWay":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":55,"com.graphhopper.util.AngleCalcTest.checkAzimuthConsitency":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":59,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":81,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":79,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":24,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":78,"com.graphhopper.GraphHopperTest.testVia":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":23,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":38,"com.graphhopper.util.HelperTest.testUnzip":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":51,"com.graphhopper.GraphHopperAPITest.testLoad":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":33,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":28,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":5,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":54,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":11,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":17,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":42,"com.graphhopper.util.GHUtilityTest.testCopy":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":60},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"c932f585-7951-11e5-a548-b9083a4356aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"c9331c96-7951-11e5-a548-5d75d19e6b96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:120","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long)"},"status":-1},{"failures":[],"tindex":"c93343a7-7951-11e5-a548-d183e2f897cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:127","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long);\n"},"status":-2},{"failures":[76],"tindex":"c93343a8-7951-11e5-a548-91a5120b2902","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:273","type":"CtReturnImpl","sourcecode":"return ((short)(int[][][int][int]))"},"variableMap":{"index":"bufferIndex","bufferIndex":"bufferIndex","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:272","type":"CtIfImpl","sourcecode":"if ((long * 2) == long)\n    return ((short)(int[][][int][int]));\nelse\n    return ((short)((int[][][int][int]) >> 16));\n"},"status":-1},{"failures":[77,78,79],"tindex":"c93343a9-7951-11e5-a548-9710e6a63213","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:497","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 100))) / 100.0"},"variableMap":{"value":"orientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:121","type":"CtReturnImpl","sourcecode":"return java.lang.Math.toDegrees(double)"},"status":-1},{"failures":[80],"tindex":"c9336aba-7951-11e5-a548-351931f99aaa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:361","type":"CtAssignmentImpl","sourcecode":"long[] = long[]"},"variableMap":{"mKeys":"keys","nkeys":"keys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:73","type":"CtAssignmentImpl","sourcecode":"long[] = java.util.Arrays.copyOf(long[], int)"},"status":-1},{"failures":[81],"tindex":"c9336abb-7951-11e5-a548-0dbf8ffa211f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:173","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"c9336abc-7951-11e5-a548-6f9e9b9ea74e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:149","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.checkOne()"},"status":0},{"failures":[82],"tindex":"c9336abd-7951-11e5-a548-e99832ab2a7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:53","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists()))\n    java.io.File.mkdirs();\n"},"status":-1},{"failures":[],"tindex":"c9336abe-7951-11e5-a548-1728ea06b618","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:926","type":"CtIfImpl","sourcecode":"if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-2},{"failures":[],"tindex":"c93391cf-7951-11e5-a548-9377d3ec3a38","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:79","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.String += (java.lang.String) + \" \";\n} "},"variableMap":{"str":"chWeightingStr","name":"chWeightingStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:805","type":"CtIfImpl","sourcecode":"if (java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.isEmpty())\n    for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n        com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(new com.graphhopper.routing.util.WeightingMap(java.lang.String), com.graphhopper.routing.util.FlagEncoder);\n        java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null);\n    }\n"},"status":-2},{"failures":[],"tindex":"c93391d0-7951-11e5-a548-332c067da872","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:297","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"destination\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:362","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"c93391d1-7951-11e5-a548-d3b70ebb04e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:221","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-2},{"failures":[],"tindex":"c933b8e2-7951-11e5-a548-a166e5e6e77a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:57","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"c933b8e3-7951-11e5-a548-058adfefe6ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:94","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(\"sign\", com.graphhopper.util.Instruction.getSign())"},"variableMap":{"instruction":"value","instrJson":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:126","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"c933b8e4-7951-11e5-a548-795a301dd11d","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.printInfo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:762","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) && com.graphhopper.GraphHopper.(isAllowWrites())) {\n    com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n    com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, false);\n    if (!(com.graphhopper.storage.Lock.tryLock()))\n        throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n    \n} "},"status":-2},{"failures":[],"tindex":"c933b8e5-7951-11e5-a548-f10e4d3f958b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:700","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.clear()"},"variableMap":{"pointList":"clonePL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:350","type":"CtIfImpl","sourcecode":"if (boolean)\n    for (int int = 0 ; int < (int) ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n    }\nelse\n    for (int int = 0 ; int < (int) ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int]);\n    }\n"},"status":-2},{"failures":[],"tindex":"c933dff6-7951-11e5-a548-f9f1c5c5df7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"nodeId","lastIndex":"nodeId","fromIndex":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:711","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[],"tindex":"c933dff7-7951-11e5-a548-43ee5d37c4e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:113","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((java.lang.Math.pow(2, int)) / 360))"},"variableMap":{"allBits":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:751","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int, int, long)"},"status":-2},{"failures":[],"tindex":"c933dff8-7951-11e5-a548-c16df5f503c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:137","type":"CtReturnImpl","sourcecode":"return false"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}