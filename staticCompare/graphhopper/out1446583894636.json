{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":25,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":321,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":161,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":12,"com.graphhopper.reader.OSMReaderTest.testFerry":228,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":223,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":224,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":270,"com.graphhopper.routing.QueryGraphTest.testOneWay":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":141,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":249,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":339,"com.graphhopper.storage.VLongStorageTest.testWrite":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":157,"com.graphhopper.reader.OSMReaderTest.testWithBounds":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":259,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":275,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":260,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":340,"com.graphhopper.coll.CompressedArrayTest.testCompress":1,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":288,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":344,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":192,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":242,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":140,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":38,"com.graphhopper.GraphHopperTest.testPrepare":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":320,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":82,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":284,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":303,"com.graphhopper.util.InstructionListTest.testWayList":215,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":312,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":212,"com.graphhopper.GraphHopperAPITest.testDisconnected179":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":264,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":19,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":155,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":158,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":226,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":338,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":234,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":127,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":28,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":41,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":252,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":88,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":299,"com.graphhopper.GraphHopperTest.testLoadOSM":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":195,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":102,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":159,"com.graphhopper.reader.OSMReaderTest.testSort":231,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":315,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":238,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":137,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":107,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":46,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":325,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":227,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":329,"com.graphhopper.routing.PathTest.testWayList":335,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":148,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":302,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":156,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":310,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":134,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":97,"com.graphhopper.reader.OSMNodeTest.testSetTags":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":54,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":154,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":317,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":8,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":337,"com.graphhopper.util.GHUtilityTest.testSort":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":163,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":77,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":85,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":282,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":176,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":149,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":276,"com.graphhopper.coll.CompressedArrayTest.testCompress2":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":268,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":45,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":348,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":57,"com.graphhopper.GraphHopperAPITest.testLoad":208,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":324,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":119,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":48,"com.graphhopper.reader.OSMReaderTest.testBarriers":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":138,"com.graphhopper.routing.PathTest.testFound":331,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":256,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":347,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":16,"com.graphhopper.util.GHUtilityTest.testCopy":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":308,"com.graphhopper.routing.PathTest.testFindInstruction":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":49,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":58,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":21,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":311,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":178,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":108,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":71,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":99,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":290,"com.graphhopper.reader.PrinctonReaderTest.testRead":225,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":131,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":17,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":126,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":143,"com.graphhopper.util.InstructionListTest.testWayList2":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":198,"com.graphhopper.reader.OSMReaderTest.testFoot":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":167,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":164,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":165,"com.graphhopper.reader.OSMReaderTest.testOneWay":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":75,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":267,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":128,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":294,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":27,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":83,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":90,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":233,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":298,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":287,"com.graphhopper.routing.PathBidirRefTest.testExtract":327,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":210,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":248,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":266,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":162,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":120,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":78,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":204,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":245,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":171,"com.graphhopper.util.GHUtilityTest.testSort2":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":23,"com.graphhopper.reader.OSMReaderTest.testMain":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":150,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":146,"com.graphhopper.routing.PathBidirRefTest.testExtract2":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":145,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":301,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":168,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":182,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":207,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":190,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":67,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":123,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":322,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":292,"com.graphhopper.storage.GraphHopperStorageTest.testClone":86,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":36,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":142,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":94,"com.graphhopper.GraphHopperTest.testFootAndCar":253,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":349,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":18,"com.graphhopper.routing.PathTest.testTime":332,"com.graphhopper.util.InstructionListTest.testCreateGPX":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":169,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":51,"com.graphhopper.util.GHUtilityTest.testSortDirected":222,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":181,"com.graphhopper.GraphHopperTest.testVia":250,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":313,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":7,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":117,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":274,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":217,"com.graphhopper.GraphHopperTest.testFootOnly":255,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":343,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":197,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":236,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":26,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":133,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":333,"com.graphhopper.util.InstructionListTest.testFind":213,"com.graphhopper.storage.EdgeTest.testCloneFull":351,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":305,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":170},"transformations":[{"failures":[0,1],"tindex":"ab4ac124-826c-11e5-b9cf-cd8c8f2d7f3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:199","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.Inflater.setInput(byte[]);\n    final byte[] byte[] = new byte[1024];\n    while (!(java.util.zip.Inflater.finished())) {\n        int int = java.util.zip.Inflater.inflate(byte[]);\n        java.io.ByteArrayOutputStream.write(byte[], 0, int);\n    }\n} finally {\n    java.util.zip.Inflater.end();\n}"},"status":-1},{"failures":[2,3,4,5],"tindex":"ab4ae835-826c-11e5-b9cf-c59542fa5595","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:300","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-1},{"failures":[],"tindex":"ab4ae836-826c-11e5-b9cf-d90013e47347","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[6],"tindex":"ab4ae837-826c-11e5-b9cf-c394d7fbba28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:158","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[7,8],"tindex":"ab4ae838-826c-11e5-b9cf-5bf156c66b30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtIfImpl","sourcecode":"if ((java.lang.String.equals(\"walk\")) || (java.lang.String.endsWith(\":living_street\")))\n    return 6;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:128","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Double.parseDouble(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"status":-1},{"failures":[9,10,0,1],"tindex":"ab4ae839-826c-11e5-b9cf-13fc56932657","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:139","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 28"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,2,243,244,245,246,247,248,249,250,251,252,253,254,3,4,5,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"tindex":"ab4ae83a-826c-11e5-b9cf-f756665d1ea2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:129","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Switching order multiple times is not supported\");\n"},"variableMap":{"reverseOrder":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:127","type":"CtIfImpl","sourcecode":"if (boolean)\n    long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long);\n"},"status":-1},{"failures":[],"tindex":"ab4b0f4b-826c-11e5-b9cf-35fcac392587","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:567","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.Graph.getClass().equals(java.lang.Object.getClass())) {\n    com.graphhopper.storage.BaseGraph._copyTo(((com.graphhopper.storage.BaseGraph)(com.graphhopper.storage.Graph)));\n    return com.graphhopper.storage.Graph;\n} else {\n    return com.graphhopper.util.GHUtility.copyTo(this, com.graphhopper.storage.Graph);\n}"},"status":-2},{"failures":[],"tindex":"ab4b0f4c-826c-11e5-b9cf-e71e5e2a101f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:220","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"ab4b0f4d-826c-11e5-b9cf-7fcd0c8d1e20","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"currentEntry":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"ab4b0f4e-826c-11e5-b9cf-5dd7a4d4de94","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:95","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.putAll(com.graphhopper.util.Instruction.getExtraInfoJSON())"},"status":0},{"failures":[339,340,234],"tindex":"ab4b365f-826c-11e5-b9cf-476c5d10d60c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(byte[].int)"},"status":-1},{"failures":[339,340,234],"tindex":"ab4b3660-826c-11e5-b9cf-d976bc9997c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.setSeaLevel(true)"},"variableMap":{"demProvider":"demProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:235","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile = new com.graphhopper.reader.dem.HeightTile(int , int , int , double , 1)"},"status":-1},{"failures":[228,341],"tindex":"ab4b3661-826c-11e5-b9cf-3dba8e4f4e5a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:150","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"variableMap":{"x1":"lastLat","x2":"lastLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:365","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-1},{"failures":[342,217],"tindex":"ab4b3662-826c-11e5-b9cf-734df03aea12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"status":-1},{"failures":[228,229,235,241,253,343,344,345,346,347,348,268,349,350,294,302,315,326],"tindex":"ab4c20c3-826c-11e5-b9cf-57e8acf256b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:260","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"ab4c20c4-826c-11e5-b9cf-5154b5aba9cc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:108","type":"CtReturnImpl","sourcecode":"return \"FASTEST|\" + (com.graphhopper.routing.util.FlagEncoder)"},"status":-2},{"failures":[],"tindex":"ab4c20c5-826c-11e5-b9cf-0f77dba3fe69","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"variableMap":{"line":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:132","type":"CtIfImpl","sourcecode":"if (double < (double * 3)) {\n    java.lang.String = \"NE\";\n} else if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[351],"tindex":"ab4c20c6-826c-11e5-b9cf-1d96b5bbabbf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:150","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge) == null)\n    throw new java.lang.AssertionError(\"Empty edge cannot happen\");\n"},"variableMap":{"currEdge":"tmpPrev"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:50","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.storage.EdgeEntry != null) {\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone();\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n}"},"status":-1},{"failures":[352,233],"tindex":"ab4c20c7-826c-11e5-b9cf-d91daf589407","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:85","type":"CtIfImpl","sourcecode":"if (\"ele\".equals(java.lang.String)) {\n    if (java.lang.Object == null)\n        java.lang.Object = null;\n    else if (java.lang.Object instanceof java.lang.String) {\n        java.lang.String java.lang.String = ((java.lang.String)(java.lang.Object));\n        java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\");\n        if (java.lang.String.isEmpty())\n            java.lang.Object = null;\n        else\n            try {\n                java.lang.Object = java.lang.Double.parseDouble(java.lang.String);\n            } catch (java.lang.NumberFormatException ex) {\n                return ;\n            }\n        \n    } else\n        java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue();\n    \n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}