{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":19,"com.graphhopper.util.BitUtilBigTest.testToDouble":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":100,"com.graphhopper.routing.PathTest.testFindInstruction":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":116,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":16,"com.graphhopper.routing.QueryGraphTest.testOneWay":26,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":96,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":117,"com.graphhopper.util.shapes.CircleTest.testContains":52,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":63,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":21,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":0,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":41,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":15,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":44,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":24,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":105,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":103,"com.graphhopper.GraphHopperAPITest.testDisconnected179":35,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":90,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":71,"com.graphhopper.coll.OSMIDMapTest.testGet":38,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":6,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":65,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":98,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":5,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":3,"com.graphhopper.reader.OSMReaderTest.testSort":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":57,"com.graphhopper.reader.OSMReaderTest.testMain":109,"com.graphhopper.util.BitUtilLittleTest.testToLong":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":89,"com.graphhopper.util.shapes.CircleTest.testIntersectCircleCircle":51,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":49,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":68,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":94,"com.graphhopper.coll.OSMIDMapTest.testGet2":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":80,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":59,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":31,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":113,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.util.BitUtilBigTest.testToFloat":77,"com.graphhopper.util.BitUtilBigTest.testToBitString":76,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":75,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":101,"com.graphhopper.coll.OSMIDMapTest.testGetLong":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":106,"com.graphhopper.util.BitUtilBigTest.testToInt":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":82,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":66,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":22,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.util.BitUtilBigTest.testToLong":37,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":91,"com.graphhopper.GraphHopperAPITest.testLoad":34,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":81,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":20,"com.graphhopper.GraphHopperTest.testFootOnly":14,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":87,"com.graphhopper.util.InstructionListTest.testFind":50,"com.graphhopper.reader.OSMReaderTest.testBarriers":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":46,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":115},"transformations":[{"failures":[],"tindex":"e3a1439a-8271-11e5-9db5-1d172abf0573","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:56","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar"},"variableMap":{"aStar":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:43","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStarBidirection com.graphhopper.routing.AStarBidirection = new com.graphhopper.routing.AStarBidirection(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStarBidirection.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStarBidirection;\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.DijkstraOneToMany(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"e3a16aab-8271-11e5-9db5-d5b7dac8157b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"high","noOfStates":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:418","type":"CtIfImpl","sourcecode":"if ((long[][int]) == long) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"e3a191bc-8271-11e5-9db5-23aefc09c703","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"variableMap":{"dMinLon":"a_lat_deg","dMinLat":"b_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:131","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"e3a191bd-8271-11e5-9db5-352fdfe1f34b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:713","type":"CtReturnImpl","sourcecode":"return (java.util.List<com.graphhopper.storage.index.QueryResult>) != null"},"status":-1},{"failures":[36,37,38,39,40,41],"tindex":"e3a191be-8271-11e5-9db5-95be98ec8fb5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:112","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"variableMap":{"high":"value","low":"value","guess":"value","guessedKey":"value","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromLong(byte[], long, 0)"},"status":-1},{"failures":[42,37],"tindex":"e3a191bf-8271-11e5-9db5-3f38efeb80b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"x1":"offset","sLon":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:82","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"e3a191c0-8271-11e5-9db5-3f46e9e87284","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:258","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"variableMap":{"item":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))"},"status":-2},{"failures":[43],"tindex":"e3a1b8d1-8271-11e5-9db5-6dd816b2160a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:231","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[44,45,46],"tindex":"e3a1b8d2-8271-11e5-9db5-6d4857de07f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\n"},"variableMap":{"configLocation":"classBicycleSpecific","fileStr":"classBicycleSpecific"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:565","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n} else {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\");\n    if (java.lang.String != null)\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n    \n}"},"status":-1},{"failures":[47,48,49,50,51,52,53],"tindex":"e3a1b8d3-8271-11e5-9db5-554e478c0c4f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:608","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"sinDeltaLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:80","type":"CtReturnImpl","sourcecode":"return (double * double) + (((double * double) * java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(double)))) * java.lang.Math.(java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(double))))"},"status":-1},{"failures":[2,4,5,10,54,55,56,29,30,31,57,32,58,59,60],"tindex":"e3a1b8d4-8271-11e5-9db5-21e1616e0a17","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:309","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.PathBidirRef = com.graphhopper.routing.PathBidirRef"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:260","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean)"},"status":-1},{"failures":[],"tindex":"e3a1b8d5-8271-11e5-9db5-ab922776eacd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:40","type":"CtLocalVariableImpl","sourcecode":"double double = (java.lang.Math.abs(double)) + 1.0E-10"},"variableMap":{"y":"decDist2DSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"status":0},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"e3a1b8d6-8271-11e5-9db5-4b42e98daf6f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"address","pointer":"address","maxCapacity":"address","baseCapacity":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.freeMemory(long)"},"status":-1},{"failures":[],"tindex":"e3a1dfe7-8271-11e5-9db5-53829502e6d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"com.graphhopper.util.EdgeIterator.NO_EDGE","dLat":"com.graphhopper.util.EdgeIterator.NO_EDGE","tmpErr":"com.graphhopper.util.EdgeIterator.NO_EDGE","x1":"com.graphhopper.util.EdgeIterator.NO_EDGE","sLon":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:140","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[68,70,71,72],"tindex":"e3a1dfe8-8271-11e5-9db5-fd0bd8e6d4bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"variableMap":{"intLen":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:150","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-1},{"failures":[73,74,75,62,76,77,78],"tindex":"e3a1dfe9-8271-11e5-9db5-8738259fb34c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"e3a1dfea-8271-11e5-9db5-67a680d35a2d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:85","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntDoubleBinHeap.peek_element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:102","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntDoubleBinHeap.poll_element()"},"status":-2},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,47,92,93,94,95,96,97,98,99,100,101,102,103,104,105,49,106,107,108,1,2,3,4,5,6,7,8,9,10,11,12,13,14,29,30,31,32,34,109,110,111],"tindex":"e3a1dfeb-8271-11e5-9db5-6d47992db934","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"depth","green":"depth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:611","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    com.graphhopper.storage.index.LocationIndexTree.fillIDs((long >>> (byte[][int])), int, gnu.trove.set.hash.TIntHashSet, (int + 1));\n} "},"status":-1},{"failures":[112,113,114,115,116],"tindex":"e3a206fc-8271-11e5-9db5-a10ad23bc36d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"variableMap":{"orientation":"speed","java.lang.Math.PI":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:317","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed()"},"status":-1},{"failures":[117],"tindex":"e3a206fd-8271-11e5-9db5-7d9af1f25206","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:124","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphBuilder.build()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:94","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphBuilder.setCHGraph(com.graphhopper.routing.util.Weighting).create()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}