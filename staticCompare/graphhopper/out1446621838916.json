{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":28,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":87,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":411,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":139,"com.graphhopper.reader.OSMReaderTest.testFerry":117,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":106,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":293,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":491,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":472,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":445,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":471,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":448,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":193,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":65,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":478,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":284,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":375,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":159,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":351,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":317,"com.graphhopper.GraphHopperTest.testPrepare":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":488,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":19,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":110,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":267,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":479,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":105,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":281,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":470,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":486,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":16,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":245,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":59,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":218,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":492,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":6,"com.graphhopper.GraphHopperTest.testLoadOSM":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":246,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":295,"com.graphhopper.reader.OSMReaderTest.testSort":120,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":67,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":312,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":370,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":335,"com.graphhopper.util.PointListTest.testReverse":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":172,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":92,"com.graphhopper.routing.DijkstraTest.initializationError":380,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":132,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":326,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":177,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":183,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":464,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":240,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":333,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":24,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":506,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":436,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":13,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":203,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":414,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":419,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":452,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":426,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":422,"com.graphhopper.GraphHopperAPITest.testLoad":34,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":408,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":352,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":70,"com.graphhopper.reader.OSMReaderTest.testBarriers":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":184,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":434,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":438,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":15,"com.graphhopper.util.GHUtilityTest.testCopy":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":143,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":459,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":264,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":480,"com.graphhopper.routing.PathTest.testFindInstruction":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":475,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":185,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":449,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":416,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":261,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":432,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":371,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":356,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":443,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":385,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":382,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":289,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":144,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":321,"com.graphhopper.util.InstructionListTest.testWayList2":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":231,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":447,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":254,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":376,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":189,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":489,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":487,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":310,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":336,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":494,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":195,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":268,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":341,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":122,"com.graphhopper.routing.AStarTest.initializationError":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":322,"com.graphhopper.routing.PathBidirRefTest.testExtract":72,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":417,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":495,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":291,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":220,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":237,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":165,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":467,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":485,"com.graphhopper.util.GHUtilityTest.testSort2":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":25,"com.graphhopper.reader.OSMReaderTest.testMain":119,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":394,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":202,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":496,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":502,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":440,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":430,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":296,"com.graphhopper.storage.GraphHopperStorageTest.testClone":344,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":168,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":401,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":319,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":354,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":462,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":145,"com.graphhopper.routing.PathTest.testTime":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":458,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":407,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":158,"com.graphhopper.util.GHUtilityTest.testSortDirected":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":308,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":89,"com.graphhopper.GraphHopperTest.testFootOnly":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":230,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":468,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":269,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":396,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":74,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":428,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":154,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":248,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":84,"com.graphhopper.routing.QueryGraphTest.testOneWay":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":474,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":223,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":244,"com.graphhopper.reader.OSMReaderTest.testWithBounds":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":446,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":64,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":160,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":418,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":225,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":450,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":444,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":481,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":206,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":280,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":199,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":340,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":10,"com.graphhopper.util.InstructionListTest.testWayList":111,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":373,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":483,"com.graphhopper.GraphHopperAPITest.testDisconnected179":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":146,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":242,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":505,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":141,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":441,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":421,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":157,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":500,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":44,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":346,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":210,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":409,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":81,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":364,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":484,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":22,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":378,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":233,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":402,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":234,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":388,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":455,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":32,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":424,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":504,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":334,"com.graphhopper.routing.PathTest.testWayList":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":173,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":456,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":395,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":17,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":499,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":286,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":410,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":190,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":429,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":58,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":453,"com.graphhopper.util.GHUtilityTest.testSort":102,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":330,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":473,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":498,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":219,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":420,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":273,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":285,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":435,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":61,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":274,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":180,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":451,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":46,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":415,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":200,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":290,"com.graphhopper.routing.PathTest.testFound":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":164,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":137,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":386,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":221,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":482,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":497,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":7,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":196,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":149,"com.graphhopper.util.InstructionListTest.testEmptyList":109,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":460,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":406,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":391,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":389,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":325,"com.graphhopper.reader.PrinctonReaderTest.testRead":115,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":372,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":138,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":439,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":477,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":465,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":457,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":431,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":490,"com.graphhopper.reader.OSMReaderTest.testFoot":118,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":251,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":466,"com.graphhopper.reader.OSMReaderTest.testOneWay":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":331,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":353,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":301,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":368,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":213,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":476,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":4,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":156,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":348,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":82,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":493,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":75,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":277,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":114,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":71,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":469,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":152,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":383,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":328,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":287,"com.graphhopper.routing.PathBidirRefTest.testExtract2":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":255,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":266,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":461,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":241,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":366,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":314,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":463,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":124,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":175,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":29,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":442,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":332,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":369,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":403,"com.graphhopper.GraphHopperTest.testFootAndCar":45,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":437,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":292,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":142,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":384,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":404,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":318,"com.graphhopper.GraphHopperTest.testPrepareOnly":134,"com.graphhopper.GraphHopperTest.testVia":42,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":265,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":503,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":20,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":127,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":236,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":288,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":113,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":365,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":413,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":155,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":307,"com.graphhopper.routing.AStarBidirectionTest.initializationError":381,"com.graphhopper.util.InstructionListTest.testFind":108,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":176},"transformations":[{"failures":[],"tindex":"03d866d8-82c5-11e5-8d03-df5fe3ece0ed","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"lat","shrinkFactor":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:142","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.max(((((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 360) * (com.graphhopper.util.DistanceCalcEarth.double)), ((((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) / 360) * (com.graphhopper.util.DistanceCalc.calcCircumference(double))))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"03d88de9-82c5-11e5-8d03-41fb8b07d1fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:90","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"variableMap":{"elevation":"finishedTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:74","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    if ((com.graphhopper.storage.EdgeEntry) != null) {\n        gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, int, com.graphhopper.storage.EdgeEntry.int), com.graphhopper.storage.EdgeEntry, int);\n    } \n} else {\n    if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"03d88dea-82c5-11e5-8d03-4b18a58aa90f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"variableMap":{"systemProperty":"graphHopperLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:634","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String))"},"status":0},{"failures":[],"tindex":"03d88deb-82c5-11e5-8d03-497d77245196","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"tmpNode","b":"tmpNode","this":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:280","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int)"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,0,74,1,75,76,77,78,79,2,3,4,5,80,81,82,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,34,35,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,36,37,38,39,40,41,135,42,43,44,45,46,47,136,48,49,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"03d8b4fc-82c5-11e5-8d03-e1761265791b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:191","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.chWeightings\", com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString())"},"status":-1},{"failures":[378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,71,411,412,413,414,415,416,417,418,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,84,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,134,45,49,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,419,182,420,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,241,259,266,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,421,295,422,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,423,339,424,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"03d8b4fd-82c5-11e5-8d03-05b72587d5dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:151","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[83,425,36,37,38,40,43,44],"tindex":"03d8dc0e-82c5-11e5-8d03-53223696fd25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:360","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.PointList.reverse();\n"},"status":-1},{"failures":[118,123,45,49,137],"tindex":"03d8dc0f-82c5-11e5-8d03-655e908cd86a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:257","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[384,426,60,61,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,408,409,410,71,411,412,413,414,415,416,417,418,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505],"tindex":"03d8dc10-82c5-11e5-8d03-8b341ea4ac6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"_default"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:90","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"03d90321-82c5-11e5-8d03-b3430644c95d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:295","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.close(java.io.RandomAccessFile)"},"status":0},{"failures":[49],"tindex":"03d90322-82c5-11e5-8d03-538b3a5da7df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:889","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap)"},"variableMap":{"weightingMap":"weightingMap","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:886","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n    return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\nelse\n    return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n"},"status":-1},{"failures":[],"tindex":"03d90323-82c5-11e5-8d03-c35e31555c2d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:636","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph"},"variableMap":{"baseGraph":"toGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:298","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph"},"status":-2},{"failures":[],"tindex":"03d90324-82c5-11e5-8d03-d993c6a0ddd7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"variableMap":{"width":"tmpNo","lonSimilar":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:159","type":"CtIfImpl","sourcecode":"if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"status":-2},{"failures":[50,51,54,55,56,57,58,59,394,108,110,111,112,113,42],"tindex":"03d90325-82c5-11e5-8d03-39238ec28a81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:736","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-1},{"failures":[],"tindex":"03d90326-82c5-11e5-8d03-13fdbd60f37a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:93","type":"CtInvocationImpl","sourcecode":"java.util.zip.ZipInputStream.closeEntry()"},"status":0},{"failures":[],"tindex":"03d92a37-82c5-11e5-8d03-1752d4feadb9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"fromLon","incDist2DSum":"fromLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:41","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"status":-2},{"failures":[],"tindex":"03d92a38-82c5-11e5-8d03-a3627ed11e7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:88","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"03d92a39-82c5-11e5-8d03-8373550e3ec3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"bytePos","frontIndex":"bytePos"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:93","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[],"tindex":"03d92a3a-82c5-11e5-8d03-0f1a4ca35f81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"variableMap":{"flags":"wayBitMask","mask":"wayBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:564","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[506],"tindex":"03d92a3b-82c5-11e5-8d03-7dd3c83f1ca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:666","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"03d90321-82c5-11e5-8d03-b3430644c95d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.close"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":["com.graphhopper.util.Helper_void_close(java.io.Closeable).e1","com.graphhopper.util.Helper_void_close(java.io.Closeable).b"],"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":["com.graphhopper.util.Helper_void_close(java.io.Closeable).t1","com.graphhopper.util.Helper_void_close(java.io.Closeable).b"]},"type":"branch"}]},{"transformation":"03d88dea-82c5-11e5-8d03-4b18a58aa90f","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.LockFactory.setLockDir"]},"type":"staticDiff"}]}]}