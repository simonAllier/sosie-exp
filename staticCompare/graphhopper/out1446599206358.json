{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":211,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":3,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":172,"com.graphhopper.search.NameIndexTest.testCreate":285,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":188,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":209,"com.graphhopper.reader.OSMReaderTest.testFerry":77,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":0,"com.graphhopper.routing.QueryGraphTest.testOneWay":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":137,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":276,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":55,"com.graphhopper.reader.OSMReaderTest.testWithBounds":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":141,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":116,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":208,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":110,"com.graphhopper.coll.CompressedArrayTest.testCompress":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":32,"com.graphhopper.util.BitUtilBigTest.testReverse":160,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":292,"com.graphhopper.GraphHopperTest.testPrepare":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":256,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":14,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":288,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":194,"com.graphhopper.search.NameIndexTest.testFlush":283,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":164,"com.graphhopper.util.BitUtilLittleTest.testToBitString":155,"com.graphhopper.util.InstructionListTest.testWayList":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":168,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":268,"com.graphhopper.GraphHopperAPITest.testDisconnected179":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":132,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":233,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":165,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":207,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":265,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":72,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":118,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":97,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":187,"com.graphhopper.GraphHopperTest.testLoadOSM":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":57,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":223,"com.graphhopper.reader.OSMReaderTest.testSort":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":169,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":87,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":111,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":226,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":217,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":176,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":200,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":219,"com.graphhopper.routing.PathTest.testWayList":204,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":115,"com.graphhopper.coll.OSMIDMapTest.testGet2":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":251,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":167,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":236,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":47,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":250,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":13,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":152,"com.graphhopper.util.BitUtilBigTest.testToBitString":158,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":206,"com.graphhopper.util.GHUtilityTest.testSort":274,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":249,"com.graphhopper.coll.OSMIDMapTest.testGetLong":280,"com.graphhopper.search.NameIndexTest.testPut":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":255,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":235,"com.graphhopper.coll.CompressedArrayTest.testCompress2":149,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":253,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":128,"com.graphhopper.GraphHopperAPITest.testLoad":91,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":175,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":240,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":122,"com.graphhopper.reader.OSMReaderTest.testBarriers":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":213,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":11,"com.graphhopper.util.GHUtilityTest.testCopy":273,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":153,"com.graphhopper.routing.PathTest.testFindInstruction":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":140,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":143,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":12,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":180,"com.graphhopper.reader.PrinctonReaderTest.testRead":264,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":114,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":184,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":73,"com.graphhopper.util.InstructionListTest.testWayList2":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":38,"com.graphhopper.reader.OSMReaderTest.testFoot":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":214,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":212,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":63,"com.graphhopper.reader.OSMReaderTest.testOneWay":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":262,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":243,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":287,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":130,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":183,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":49,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":221,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":82,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":174,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":161,"com.graphhopper.coll.OSMIDMapTest.testGet":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":196,"com.graphhopper.routing.PathBidirRefTest.testExtract":198,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":241,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":263,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":70,"com.graphhopper.util.GHUtilityTest.testSort2":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":210,"com.graphhopper.reader.OSMReaderTest.testMain":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":237,"com.graphhopper.routing.PathBidirRefTest.testExtract2":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":138,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":36,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":48,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":30,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":257,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":182,"com.graphhopper.storage.StorablePropertiesTest.testStore":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":290,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":295,"com.graphhopper.storage.GraphHopperStorageTest.testClone":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":58,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":215,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":225,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":222,"com.graphhopper.GraphHopperTest.testFootAndCar":98,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":24,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":33,"com.graphhopper.util.BitUtilLittleTest.testReverse":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":75,"com.graphhopper.util.GHUtilityTest.testSortDirected":275,"com.graphhopper.GraphHopperTest.testPrepareOnly":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":133,"com.graphhopper.GraphHopperTest.testVia":22,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":193,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":31,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":238,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":28,"com.graphhopper.GraphHopperTest.testFootOnly":103,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":271,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":37,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":85,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":39,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":202,"com.graphhopper.util.InstructionListTest.testFind":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":166,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":131},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"51ca453f-8290-11e5-a577-0f1b423e8899","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:153","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"variableMap":{"size":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:58","type":"CtReturnImpl","sourcecode":"return (int) < (java.util.List<com.graphhopper.util.EdgeIteratorState>.size())"},"status":-1},{"failures":[23,12,13,14,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,17,18,19,20,21,95,22,96,97,98,99,100,101,102,103,104],"tindex":"51ca6c50-8290-11e5-a577-4f42b6eb86bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"minLon","orientation":"lon","java.lang.Math.PI":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:108","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[105,106,107,108],"tindex":"51ca6c51-8290-11e5-a577-8762ef083415","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"nodes","index":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphHopperStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-1},{"failures":[109,103],"tindex":"51ca6c52-8290-11e5-a577-712096c3d79d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[105,106,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,90],"tindex":"51ca9363-8290-11e5-a577-b95ed53d8bea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:161","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"variableMap":{"red":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:49","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[149,150],"tindex":"51ca9364-8290-11e5-a577-1952feb0df10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:145","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 35"},"status":-1},{"failures":[151,152,153],"tindex":"51ca9365-8290-11e5-a577-23dcd884976f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:274","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.StringBuilder.append(\", \");\n"},"status":-1},{"failures":[],"tindex":"51ca9366-8290-11e5-a577-65c794e3cda3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:416","type":"CtReturnImpl","sourcecode":"return ((((((\"t(dijk):\" + (com.graphhopper.util.Helper.round2(double))) + \", t(period):\") + (com.graphhopper.util.Helper.round2(double))) + \", t(lazy):\") + (com.graphhopper.util.Helper.round2(double))) + \", t(neighbor):\") + (com.graphhopper.util.Helper.round2(double))"},"status":0},{"failures":[],"tindex":"51ca9367-8290-11e5-a577-59c01fc32d62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"currentIndex","nextEdgeId":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:66","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"51ca9368-8290-11e5-a577-cb88e9fe9431","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:77","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member : java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>) {\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) == (com.graphhopper.reader.OSMElement.int)) {\n        return true;\n    } \n}"},"status":0},{"failures":[154,38,60,155,156,157,158,159,160],"tindex":"51caba79-8290-11e5-a577-8f380537e599","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"value","nodeFlags":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:233","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[161],"tindex":"51caba7a-8290-11e5-a577-7bf0bbe313fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"s","capacity":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int)"},"status":-1},{"failures":[162,163,164,165,166,11,167,23,168,169,12,13,170,171,14,172,173,174,175,176,15,177,178,179,180,181,182,183,184,185,186,187],"tindex":"51caba7b-8290-11e5-a577-6d29a0755a0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,188,10,162,189,163,164,165,166,190,191,11,192,167,23,168,193,169,12,13,170,171,14,173,174,175,176,15,194,195,177,196,178,179,180,182,197,183,184,185,186,187,198,199,200,201,202,203,204,205,206,207,105,106,208,110,111,112,107,108,209,113,24,114,115,116,210,117,211,118,119,212,213,120,121,214,215,216,217,218,219,26,220,221,122,27,123,124,125,222,126,127,128,223,224,129,130,225,226,227,228,229,29,30,230,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,231,50,51,232,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,233,234,16,235,236,237,238,239,240,241,71,242,131,72,132,133,134,243,135,136,137,244,245,138,139,246,247,248,249,250,74,251,252,253,254,140,75,141,142,143,255,144,256,145,146,257,258,147,148,259,260,261,262,263,264,265,77,78,79,80,81,82,83,84,85,86,87,88,89,90,266,267,268,269,270,271,272,273,274,275,91,92,93,94,17,18,19,20,21,95,276,22,96,97,98,99,100,101,102,103,104],"tindex":"51caba7c-8290-11e5-a577-fbc5e8172bd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:327","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-1},{"failures":[],"tindex":"51cae18d-8290-11e5-a577-47f9d4a4242f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:69","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[][].int) ; int++) {\n    int[] int[] = int[][][int];\n    com.graphhopper.storage.RAMIntDataAccess.int[][][int] = java.util.Arrays.copyOf(int[], int[].int);\n}"},"status":-2},{"failures":[],"tindex":"51cae18e-8290-11e5-a577-a77dc9ef97c6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:296","type":"CtReturnImpl","sourcecode":"return int - int"},"variableMap":{"tmp":"noNumberValue","initializedCounter":"noNumberValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:133","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[277,2,3,5,6,7,8,188,10,174,200,201,202,203,204,205,206,207,278,279,280,281,282,283,284,285,286,287,26,220,288,289,129,227,228,33,35,231,50,51,52,55,57,290,237,71,291,292,138,248,249,74,253,293,294,147,261,262,295,79,82,83,267,268,269,270,271,94,22,99,100,101,102,103],"tindex":"51cae18f-8290-11e5-a577-ffa9b35f12e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:275","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-1},{"failures":[],"tindex":"51cae190-8290-11e5-a577-af9f2d3ecedb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:102","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File.getCanonicalFile()"},"variableMap":{"cacheDir":"lockDir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:50","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-2},{"failures":[],"tindex":"51cae191-8290-11e5-a577-658760b7f436","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"variableMap":{"prepared":"updatedInGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:662","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getAdjNode()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) && (com.graphhopper.util.CHEdgeIterator.canBeOverwritten(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long))) {\n    if ((com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double) >= (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.CHEdgeIterator, false, com.graphhopper.util.EdgeIterator.int)))\n        continue NEXT_SC;\n    \n    if (((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) || ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) {\n        throw new java.lang.IllegalStateException((((((((((((((((((\"Shortcut cannot update itself! \" + (com.graphhopper.util.CHEdgeIterator.getEdge())) + \", skipEdge1:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", skipEdge2:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", edge \") + com.graphhopper.util.CHEdgeIterator) + \":\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.CHEdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", sc:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut) + \", skippedEdge1: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", skippedEdge2: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", neighbors:\") + (com.graphhopper.util.GHUtility.getNeighbors(com.graphhopper.util.CHEdgeIterator))));\n    } \n    com.graphhopper.util.CHEdgeIterator.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n    com.graphhopper.util.CHEdgeIterator.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIterator.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIterator.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIterator.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    boolean = true;\n    break;\n} "},"status":0},{"failures":[],"tindex":"51cb08a2-8290-11e5-a577-1de6fcf8d3f9","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"graph","newGraph":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:112","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.TurnCostExtension())"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"51ca9368-8290-11e5-a577-cb88e9fe9431","diffs":[{"methodsDiff":{"delete":["com.graphhopper.reader.OSMRelation.Member.type"]},"branchesDiff":{"delete":["l1","t0"]},"type":"staticDiff"}]},{"transformation":"51ca9366-8290-11e5-a577-65c794e3cda3","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.round2"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.util.Helper_double_round2(double).b"],"com.graphhopper.GraphHopperTest.testFootOnly":["com.graphhopper.util.Helper_double_round2(double).b"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":["com.graphhopper.util.Helper_double_round2(double).b"]},"type":"branch"}]},{"transformation":"51cae191-8290-11e5-a577-658760b7f436","diffs":[{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.CHGraphImpl$CHEdgeIteratorImpl_boolean_canBeOverwritten(long).b","com.graphhopper.routing.ch.PrepareEncoder_boolean_canBeOverwritten(long,long).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.routing.ch.PreparationWeighting.calcWeight","com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount","com.graphhopper.util.EdgeIteratorState.setDistance","com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState","com.graphhopper.util.EdgeIteratorState.setFlags","com.graphhopper.util.CHEdgeIteratorState.setWeight","com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges","com.graphhopper.routing.ch.PrepareContractionHierarchies.getCoords","com.graphhopper.util.GHUtility.getNeighbors","com.graphhopper.util.EdgeIteratorState.getEdge"]},"branchesDiff":{"delete":["t0","t1","t2"]},"type":"staticDiff"}]}]}