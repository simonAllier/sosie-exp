{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":25,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":6,"com.graphhopper.GraphHopperTest.testFootOnly":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":26,"com.graphhopper.util.GHUtilityTest.testCopy":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":10},"transformations":[{"failures":[],"tindex":"11bee88d-7940-11e5-9485-2d5ec9bde64e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"car\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:159","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"11bf0f9e-7940-11e5-9485-47243d04722a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:184","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\");\n    if (java.lang.String != null) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n        long long = 0;\n        switch (java.lang.String.charAt(0)) {\n            case 'n' :\n                if (\"node\".equals(java.lang.String)) {\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n                } \n                break;\n            case 'w' :\n                {\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n                }\n            case 'r' :\n                long = java.lang.Long.parseLong(java.lang.String);\n                return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n        }\n    } \n} "},"variableMap":{"javax.xml.stream.XMLStreamConstants.START_ELEMENT":"javax.xml.stream.XMLStreamConstants.START_ELEMENT","parser":"parser","event":"javax.xml.stream.XMLStreamConstants.START_ELEMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:182","type":"CtWhileImpl","sourcecode":"while (int != (javax.xml.stream.XMLStreamConstants.int)) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\");\n        if (java.lang.String != null) {\n            java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n            long long = 0;\n            switch (java.lang.String.charAt(0)) {\n                case 'n' :\n                    if (\"node\".equals(java.lang.String)) {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n                    } \n                    break;\n                case 'w' :\n                    {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n                    }\n                case 'r' :\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n            }\n        } \n    } \n    int = javax.xml.stream.XMLStreamReader.next();\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"11bf0f9f-7940-11e5-9485-c7743d372521","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:280","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(long))"},"status":-1},{"failures":[],"tindex":"11bf36b0-7940-11e5-9485-4dbeefa89739","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:92","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.mark(10)"},"variableMap":{"ips":"is"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:109","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(java.io.InputStream , com.graphhopper.util.Helper.java.nio.charset.Charset))) {\n    int int = java.lang.Integer.parseInt(java.lang.String.substring(1, 3));\n    if ((java.lang.String.substring(0, 1).charAt(0)) == 'S')\n        int = -int;\n    \n    int int = java.lang.Integer.parseInt(java.lang.String.substring(4, 7));\n    if ((java.lang.String.substring(3, 4).charAt(0)) == 'W')\n        int = -int;\n    \n    int int = com.graphhopper.reader.dem.SRTMProvider.calcIntKey(int, int);\n    java.lang.String java.lang.String = com.graphhopper.reader.dem.TIntObjectHashMap<java.lang.String>.put(int, java.lang.String);\n    if (java.lang.String != null)\n        throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n    \n}"},"status":-2},{"failures":[],"tindex":"11bf36b1-7940-11e5-9485-d911fb691771","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:708","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-2},{"failures":[],"tindex":"11bf36b2-7940-11e5-9485-8929770322a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"variableMap":{"hasOther":"store","hasRel":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:57","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"11bf36b3-7940-11e5-9485-71849bcbaba9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:257","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-2},{"failures":[],"tindex":"11bf36b4-7940-11e5-9485-fdbdaac897d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:410","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long))"},"status":-2},{"failures":[],"tindex":"11bf36b5-7940-11e5-9485-db07ca3cadb9","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHResponse:184","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getEle(int)"},"variableMap":{"i":"i","list":"pillarNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:845","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"11bf5dc6-7940-11e5-9485-c3f0c125241b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:309","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String.trim()"},"variableMap":{"str":"str","d":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:205","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"E\""},"status":-2},{"failures":[],"tindex":"11bf5dc7-7940-11e5-9485-cf5937506c25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:121","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[],"tindex":"11bf5dc8-7940-11e5-9485-25e7e961f316","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"lazySW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":-2},{"failures":[],"tindex":"11bf5dc9-7940-11e5-9485-3105a1096254","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:87","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"currFrom":"edgeEntry","edgeEntry":"edgeEntry","bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:314","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[],"tindex":"11bf5dca-7940-11e5-9485-7bd5d6ecb7ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:72","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.byte[][][int] = java.util.Arrays.copyOf(byte[], byte[].int)"},"status":-2},{"failures":[],"tindex":"11bf5dcb-7940-11e5-9485-67cfb7d13797","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:852","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"status":-2},{"failures":[],"tindex":"11bf84dc-7940-11e5-9485-1d14caba6190","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:427","type":"CtInvocationImpl","sourcecode":"java.lang.Object.getClass().getMethod(\"clean\").invoke(java.lang.Object)"},"variableMap":{"cleaner":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:94","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":-2},{"failures":[],"tindex":"11bf84dd-7940-11e5-9485-3f6c34efa5ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:76","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[],"tindex":"11bf84de-7940-11e5-9485-27d5dbb3044f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:944","type":"CtIfImpl","sourcecode":"if (double <= (double))\n    return false;\n"},"variableMap":{"equalNormedDelta":"weightLimit","tmpNormedDist":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:210","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.routing.AStar.AStarEdge.double) + (com.graphhopper.routing.AStar.AStarEdge.double)) > (double)"},"status":-2},{"failures":[],"tindex":"11bf84df-7940-11e5-9485-9b03afa2c76d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:473","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"11bf84e0-7940-11e5-9485-13aac3efae2e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"variableMap":{"edgeId":"need"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}