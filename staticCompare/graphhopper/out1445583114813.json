{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":40,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":26,"com.graphhopper.routing.PathTest.testFindInstruction":63,"com.graphhopper.reader.OSMReaderTest.testFerry":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":50,"com.graphhopper.routing.QueryGraphTest.testOneWay":47,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":57,"com.graphhopper.reader.OSMReaderTest.testWithBounds":77,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":0,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":3,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":37,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":1,"com.graphhopper.GraphHopperTest.testPrepare":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":58,"com.graphhopper.util.InstructionListTest.testWayList2":66,"com.graphhopper.reader.OSMReaderTest.testFoot":69,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":30,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":51,"com.graphhopper.util.InstructionListTest.testWayList":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":28,"com.graphhopper.reader.OSMReaderTest.testOneWay":79,"com.graphhopper.GraphHopperAPITest.testDisconnected179":36,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":60,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":87,"com.graphhopper.GraphHopperTest.testLoadOSM":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":29,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":85,"com.graphhopper.reader.OSMReaderTest.testSort":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":84,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":34,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":76,"com.graphhopper.reader.OSMReaderTest.testMain":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":14,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":61,"com.graphhopper.routing.PathTest.testWayList":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":6,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":73,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":9,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":56,"com.graphhopper.GraphHopperTest.testFootAndCar":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":27,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":8,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":43,"com.graphhopper.GraphHopperTest.testPrepareOnly":81,"com.graphhopper.GraphHopperTest.testVia":89,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":38,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":96,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":16,"com.graphhopper.GraphHopperAPITest.testLoad":35,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":7,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":41,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":67,"com.graphhopper.GraphHopperTest.testFootOnly":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":12,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":13,"com.graphhopper.util.InstructionListTest.testFind":64,"com.graphhopper.reader.OSMReaderTest.testBarriers":72,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":33},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"8c093173-7952-11e5-9d97-7dff8d6236ce","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int), com.graphhopper.util.PointAccess.getElevation(int))"},"status":-1},{"failures":[],"tindex":"8c095884-7952-11e5-9d97-b7ca1391b80c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"variableMap":{"segments":"newSegs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:117","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-2},{"failures":[],"tindex":"8c097f95-7952-11e5-9d97-f3b8f898818e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:102","type":"CtIfImpl","sourcecode":"if (double > ((+(java.lang.Math.double)) + double))\n    double = double - (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[],"tindex":"8c097f96-7952-11e5-9d97-83f642e10d08","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:186","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.UnsafeDataAccess.getSegments()"},"variableMap":{"this":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:593","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-2},{"failures":[],"tindex":"8c097f97-7952-11e5-9d97-118e304c2fe8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:193","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"variableMap":{"turnCostIndex":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","nextTurnCostIndex":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:157","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"8c097f98-7952-11e5-9d97-2f15d37e8d59","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"variableMap":{"parent":"ee","ase":"ee","currEdge":"ee"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double)"},"status":-2},{"failures":[],"tindex":"8c09a6a9-7952-11e5-9d97-1363b3cb6f58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"mode","edgeTo":"baseNode","edgeFrom":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:911","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-2},{"failures":[],"tindex":"8c09a6aa-7952-11e5-9d97-0317de913f13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-2},{"failures":[],"tindex":"8c09a6ab-7952-11e5-9d97-e559de6bdc55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","trackType":"highway","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:532","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    if (double < (int)) {\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n} else {\n    if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double >= (int)) && (!(\"track\".equals(java.lang.String))))) {\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n}"},"status":-2},{"failures":[],"tindex":"8c09cdbc-7952-11e5-9d97-37dfe2102a94","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"variableMap":{"importance":"high","hash":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[],"tindex":"8c09cdbd-7952-11e5-9d97-e35ee4e8be64","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"from","b":"skippedEdge2","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:94","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"8c09cdbe-7952-11e5-9d97-1f3b73d7d782","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"variableMap":{"length":"noNumberValue","factor":"noNumberValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:133","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"8c09cdbf-7952-11e5-9d97-dbe2997fc879","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"orientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"status":-2},{"failures":[],"tindex":"8c09cdc0-7952-11e5-9d97-8986b8c4a280","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"status":-2},{"failures":[],"tindex":"8c09f4d1-7952-11e5-9d97-4bc32d3a5a81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"variableMap":{"edge":"edge","flagEncoder":"flagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FlagEncoder.getReverseSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":-2},{"failures":[],"tindex":"8c09f4d2-7952-11e5-9d97-c7ff890d6997","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"nextPillarId","to":"nextPillarId","lonSize":"nextPillarId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:598","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(com.graphhopper.reader.OSMNode.getId(), ((int) + 3))"},"status":-2},{"failures":[],"tindex":"8c09f4d3-7952-11e5-9d97-01679162c9fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:78","type":"CtReturnImpl","sourcecode":"return long"},"variableMap":{"cap":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"8c09f4d4-7952-11e5-9d97-cb9f2a0582e5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"nextNodeBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:188","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":-2},{"failures":[],"tindex":"8c09f4d5-7952-11e5-9d97-95a88f10d786","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"edgeTo","cl":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:163","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[],"tindex":"8c0a1be6-7952-11e5-9d97-919f6fcaf34a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"variableMap":{"size":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}