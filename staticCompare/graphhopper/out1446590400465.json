{"failureDictionary":{"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":60,"com.graphhopper.reader.OSMReaderTest.testFerry":93,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":41,"com.graphhopper.util.HelperTest.testCountBitValue":88,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":6,"com.graphhopper.reader.OSMReaderTest.testWithBounds":28,"com.graphhopper.storage.MMapDataAccessTest.testSegments":49,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":61,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":71,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":4,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":72,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":78,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":3,"com.graphhopper.reader.OSMReaderTest.testFoot":20,"com.graphhopper.search.NameIndexTest.testFlush":66,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":56,"com.graphhopper.reader.OSMReaderTest.testOneWay":29,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":2,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":89,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":50,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":70,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":81,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":47,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":23,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":24,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":55,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":83,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":74,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.reader.OSMReaderTest.testSort":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":77,"com.graphhopper.storage.RAMDataAccessTest.testSegments":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":19,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":27,"com.graphhopper.util.GHUtilityTest.testSort2":99,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":32,"com.graphhopper.reader.OSMReaderTest.testMain":21,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":64,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":79,"com.graphhopper.storage.RAMDataAccessTest.testHeader":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":38,"com.graphhopper.storage.MMapDataAccessTest.testHeader":48,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":84,"com.graphhopper.storage.MMapDataAccessTest.testCopy":87,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":80,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":17,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":53,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":33,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":25,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":69,"com.graphhopper.storage.StorablePropertiesTest.testStore":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":37,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":65,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":57,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":36,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":39,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":86,"com.graphhopper.util.GHUtilityTest.testSort":100,"com.graphhopper.util.InstructionListTest.testCreateGPX":96,"com.graphhopper.util.AngleCalcTest.checkAzimuthConsitency":0,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":85,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":90,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":42,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":1,"com.graphhopper.GraphHopperTest.testPrepareOnly":5,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":63,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":95,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":31,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":92,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":35,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":40,"com.graphhopper.GraphHopperTest.testFootOnly":15,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":97,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":26,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":82,"com.graphhopper.reader.OSMReaderTest.testBarriers":30,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":43,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":54,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":62},"transformations":[{"failures":[],"tindex":"d1112c7c-827b-11e5-9b3c-bd58910ddae8","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:665","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:542","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((((\"adjNode \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \")\"))"},"status":-2},{"failures":[0,1,2],"tindex":"d1112c7d-827b-11e5-9b3c-e3da49fdbdc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"status":-1},{"failures":[3],"tindex":"d111538e-827b-11e5-9b3c-3bf99118762d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:136","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already closed\")"},"status":-1},{"failures":[],"tindex":"d111538f-827b-11e5-9b3c-a32ba04c6deb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:299","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"getFlags\")"},"variableMap":{"this":"outEdgeExplorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraBidirectionRef.fillEdges(com.graphhopper.storage.EdgeEntry, java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>, gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>, com.graphhopper.util.EdgeExplorer, false)"},"status":-2},{"failures":[],"tindex":"d1115390-827b-11e5-9b3c-4d804484f2be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:758","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.is3D() ? com.graphhopper.util.PointList.getElevation(0) : java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"d1115391-827b-11e5-9b3c-41e803c5e815","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"skippedEdge1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:696","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"d1115392-827b-11e5-9b3c-b1d48c33e7fc","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"unvisitedDeadEnds","nodeThis":"subnetworks","edgeId":"minOneWayNetworkSize","nodeOther":"subnetworks"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:75","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.FlagEncoder>) {\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter = new com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter(com.graphhopper.routing.util.FlagEncoder);\n    if ((int) > 0)\n        int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter);\n    \n    java.util.List<gnu.trove.list.array.TIntArrayList> java.util.List<gnu.trove.list.array.TIntArrayList> = com.graphhopper.routing.util.PrepareRoutingSubnetworks.findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter);\n    com.graphhopper.routing.util.PrepareRoutingSubnetworks.keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter, java.util.List<gnu.trove.list.array.TIntArrayList>);\n    int = java.lang.Math.max(java.util.List<gnu.trove.list.array.TIntArrayList>.size(), int);\n}"},"status":-1},{"failures":[],"tindex":"d1117aa3-827b-11e5-9b3c-9386ae610cdb","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:232","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-2},{"failures":[30,31],"tindex":"d1117aa4-827b-11e5-9b3c-63bbd1e47a68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:91","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"variableMap":{"size":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:389","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0)"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,3,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,5,11,12,13,14],"tindex":"d1117aa5-827b-11e5-9b3c-eb33a53f0a3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:102","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeUTF(\"GH\")"},"status":-1},{"failures":[67,68,69,70,71,72,73,74],"tindex":"d1117aa6-827b-11e5-9b3c-6d5dfc4fa114","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[],"tindex":"d1117aa7-827b-11e5-9b3c-7369835e5d53","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"turnRestrictionBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:608","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-2},{"failures":[],"tindex":"d1117aa8-827b-11e5-9b3c-b1b2a6b9d534","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"tmpLat","speed":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:180","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.util.DistanceCalc.calcCrossingPointToEdge(double, double, double, double, double, double);\n    double double = com.graphhopper.util.PointList.getElevation(((int) + 1));\n    com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(com.graphhopper.util.shapes.GHPoint.double , com.graphhopper.util.shapes.GHPoint.double , ((double + double) / 2));\n} else\n    com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(double , double , double);\n"},"status":-2},{"failures":[38,39,75,76,77,78,79,80,81,82,83,84,85,86,87,62,63,64,65],"tindex":"d111a1b9-827b-11e5-9b3c-63b070b9ea89","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:159","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"variableMap":{"size":"segmentSizePower","i":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:359","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[88,89,90,91,92],"tindex":"d111a1ba-827b-11e5-9b3c-2d2d9e70dc1d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"intVal","i":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:89","type":"CtIfImpl","sourcecode":"if (double == int)\n    return int;\n"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,93,20,21,22,30,23,24,25,26,31,27,28,94,29],"tindex":"d111a1bb-827b-11e5-9b3c-bd876209de6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:592","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.addTowerNode(com.graphhopper.reader.OSMNode.getId(), double, double, double);\n} else if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.PillarInfo.setNode(int, double, double, double);\n    com.graphhopper.reader.OSMReader.getNodeMap().put(com.graphhopper.reader.OSMNode.getId(), ((int) + 3));\n    (int)++;\n} "},"status":-1},{"failures":[95,96,97],"tindex":"d111a1bc-827b-11e5-9b3c-e59c6be4317f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:116","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" lat=\")"},"variableMap":{"txt":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\")"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,93,20,21,22,30,23,24,25,26,31,27,28,94,98,29],"tindex":"d111a1bd-827b-11e5-9b3c-e3527947f073","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:187","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int))"},"variableMap":{"wayNodes":"osmNodeIds","this":"this","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:379","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long long = gnu.trove.list.TLongList.get(int);\n    long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long);\n    if (long > 0) {\n        if ((long & long) > 0) {\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n            long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n            if (int > 0) {\n                if (int < 0)\n                    int = 0;\n                \n                long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n                long[][((long[].int) - 1)] = long;\n                gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            } else {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n                gnu.trove.list.TLongList.set(0, long);\n            }\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[99,100],"tindex":"d111c8ce-827b-11e5-9b3c-bbd46abd69e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1014","type":"CtLocalVariableImpl","sourcecode":"int int = gnu.trove.list.array.TIntArrayList.binarySearch(int)"},"variableMap":{"this":"oldToNewNodeList","value":"old"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:265","type":"CtLocalVariableImpl","sourcecode":"int int = gnu.trove.list.TIntList.get(int)"},"status":-1},{"failures":[],"tindex":"d111c8cf-827b-11e5-9b3c-55915cbb75c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:425","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"d111c8cf-827b-11e5-9b3c-55915cbb75c9","diffs":[{"branches":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":["com.graphhopper.util.Helper_void_cleanHack().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.Helper.cleanHack"]},"type":"staticDiff"}]}]}