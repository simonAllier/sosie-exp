{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":6,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":14,"com.graphhopper.routing.PathTest.testFindInstruction":2,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":20,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":23,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":5,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":26,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":9,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":21,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":25},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"ead4a109-793c-11e5-9ce2-69ce87260424","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"r_lat","tmp":"r_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:229","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-1},{"failures":[],"tindex":"ead4c81a-793c-11e5-9ce2-114bb2f2e4b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"blockByDefault"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:144","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"ead4c81b-793c-11e5-9ce2-ef6348372c2e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"minOneWayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:237","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"ead4c81c-793c-11e5-9ce2-8bb86ccaf25f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:117","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.storage.index.QueryResult.getSnappedPoint()"},"variableMap":{"res":"obj"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"ead4ef2d-793c-11e5-9ce2-ff7be328ed93","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:165","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"ead4ef2e-793c-11e5-9ce2-035c64bc753a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"flags","highKey":"flags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:86","type":"CtIfImpl","sourcecode":"if (double < ((com.graphhopper.routing.util.EncodedDoubleValue.double) / 2))\n    return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setLowSpeed(long, double, true);\n"},"status":-2},{"failures":[],"tindex":"ead4ef2f-793c-11e5-9ce2-bb687042e5f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:200","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.write(byte[])"},"status":-2},{"failures":[],"tindex":"ead4ef30-793c-11e5-9ce2-cd828d40fd94","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:144","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"ead4ef31-793c-11e5-9ce2-3988751a26b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"initLeafSize":"maxGeoRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"status":-2},{"failures":[],"tindex":"ead51642-793c-11e5-9ce2-e59c7c82b1ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setSegmentSize(int)"},"variableMap":{"baseGraph":"that","bytes":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:71","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.isRequireNodeField())\n    com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n"},"status":-2},{"failures":[],"tindex":"ead51643-793c-11e5-9ce2-2d890b1b38ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"this":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"ead51644-793c-11e5-9ce2-633affacfae7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:624","type":"CtReturnImpl","sourcecode":"return 3"},"status":-2},{"failures":[],"tindex":"ead51645-793c-11e5-9ce2-c1777c39311b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:269","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int))"},"status":-2},{"failures":[],"tindex":"ead51646-793c-11e5-9ce2-1977be2753f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:379","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long long = com.graphhopper.reader.TLongList.get(int);\n    long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long);\n    if (long > 0) {\n        if ((long & long) > 0) {\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n            long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n            if (int > 0) {\n                if (int < 0)\n                    int = 0;\n                \n                long[] long[] = com.graphhopper.reader.TLongList.toArray(int, ((int - int) + 1));\n                long[][((long[].int) - 1)] = long;\n                TLongList TLongList = new TLongArrayList(long[]);\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.TLongList, long, long));\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            } else {\n                java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n                com.graphhopper.reader.TLongList.set(0, long);\n            }\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"ead53d57-793c-11e5-9ce2-37cce8729db6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:178","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:97","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"status":-2},{"failures":[],"tindex":"ead53d58-793c-11e5-9ce2-6daaee48a4a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"variableMap":{"cp":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:215","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"ead53d59-793c-11e5-9ce2-5dba6dc27594","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:102","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FastestWeighting.toString().equals(com.graphhopper.routing.util.FastestWeighting.toString())"},"status":-2},{"failures":[],"tindex":"ead53d5a-793c-11e5-9ce2-b96ce633213e","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:250","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"variableMap":{"heights":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:108","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInMemory()) {\n    if (com.graphhopper.storage.DAType.isInteg()) {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    } else {\n        if (com.graphhopper.storage.DAType.isStoring())\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n        else\n            com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n        \n    }\n} else if (com.graphhopper.storage.DAType.isMMap()) {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites());\n} else {\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.UnsafeDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder);\n}"},"status":-2},{"failures":[],"tindex":"ead5646b-793c-11e5-9ce2-e10200331e3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:76","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[],"tindex":"ead5646c-793c-11e5-9ce2-790223479036","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:304","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"b":"exited","updateBestPath":"exited"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:69","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}