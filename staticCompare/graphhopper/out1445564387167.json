{"failureDictionary":{"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":95,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":36,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":23,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":107,"com.graphhopper.routing.PathTest.testFindInstruction":7,"com.graphhopper.reader.OSMReaderTest.testFerry":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":26,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":11,"com.graphhopper.routing.QueryGraphTest.testOneWay":22,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamHorizontal":93,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":34,"com.graphhopper.reader.OSMReaderTest.testWithBounds":74,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":17,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":126,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":135,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":10,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":131,"com.graphhopper.GraphHopperTest.testPrepare":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":35,"com.graphhopper.util.InstructionListTest.testWayList2":156,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":123,"com.graphhopper.reader.OSMReaderTest.testFoot":64,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":20,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":111,"com.graphhopper.util.InstructionListTest.testWayList":153,"com.graphhopper.reader.OSMReaderTest.testOneWay":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":31,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":152,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":42,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightDown":100,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.util.PointListTest.testAddPL":144,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":59,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":125,"com.graphhopper.util.PointListTest.testEquals":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":104,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":9,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":68,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":5,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":3,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":55,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftDown":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":119,"com.graphhopper.GraphHopperTest.testLoadOSM":58,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":105,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":89,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":48,"com.graphhopper.reader.OSMReaderTest.testSort":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":137,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":47,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":115,"com.graphhopper.reader.OSMReaderTest.testMain":65,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":133,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":86,"com.graphhopper.util.PointListTest.testReverse":145,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":154,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":132,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":2,"com.graphhopper.routing.PathTest.testWayList":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":83,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":40,"com.graphhopper.util.PointListTest.testIterable":147,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":78,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineLeftUp":99,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":97,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":81,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":41,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":140,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":143,"com.graphhopper.GraphHopperTest.testFootAndCar":56,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":124,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":129,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":108,"com.graphhopper.util.InstructionListTest.testCreateGPX":155,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":24,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":80,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":18,"com.graphhopper.GraphHopperTest.testPrepareOnly":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":43,"com.graphhopper.GraphHopperTest.testVia":53,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":12,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":60,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":158,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":72,"com.graphhopper.util.DouglasPeuckerTest.testParse":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":88,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":79,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":16,"com.graphhopper.GraphHopperTest.testFootOnly":61,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamLineRightUp":101,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":157,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":84,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":85,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":4,"com.graphhopper.reader.OSMReaderTest.testBarriers":67,"com.graphhopper.util.InstructionListTest.testFind":150,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":77,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":29,"com.graphhopper.util.GHUtilityTest.testCopy":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":116},"transformations":[{"failures":[],"tindex":"f17bf8f9-7926-11e5-829e-77b7d3054cc0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:545","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:159","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"f17c200a-7926-11e5-829e-dddb9fc2cb24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:79","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.String += (java.lang.String) + \" \";\n} "},"variableMap":{"str":"name","name":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:110","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"f17c200b-7926-11e5-829e-3355f8d0918b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"variableMap":{"segmentSizeInBytes":"size","indexDivisor":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:134","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[158,155,157],"tindex":"f17c471c-7926-11e5-829e-bb0be792cba0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/gpx>\")"},"status":-1},{"failures":[],"tindex":"f17c471d-7926-11e5-829e-2586b2712459","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","dLat":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","tmpErr":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","x1":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","sLon":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:144","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"f17c471e-7926-11e5-829e-33e6c9bd36cf","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:615","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.process(java.lang.String)"},"variableMap":{"ghLocation":"graphHopperFolder","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:524","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setGraphHopperLocation(java.lang.String)"},"status":-2},{"failures":[],"tindex":"f17c471f-7926-11e5-829e-1575da9babaa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:177","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[]"},"variableMap":{"bytes":"bytes","tmp":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:876","type":"CtAssignmentImpl","sourcecode":"byte[] = new byte[(int * (com.graphhopper.storage.NodeAccess.getDimension())) * 4]"},"status":-2},{"failures":[],"tindex":"f17c4720-7926-11e5-829e-950e70cf7f90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:204","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"f17c4721-7926-11e5-829e-5d7dae2d6298","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:285","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << int"},"variableMap":{"delta":"edgeToRemove"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:214","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-2},{"failures":[],"tindex":"f17c4722-7926-11e5-829e-67148aecc801","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:761","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.PointList.getSize()"},"status":-2},{"failures":[],"tindex":"f17c4723-7926-11e5-829e-dfd2aaf63ee3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:596","type":"CtAssignmentImpl","sourcecode":"long = ((long)((double * (com.graphhopper.storage.CHGraphImpl.double)))) << 2"},"variableMap":{"weight":"speed","weightLong":"encoded","com.graphhopper.storage.CHGraphImpl.WEIGHT_FACTOR":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:656","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"f17c6e34-7926-11e5-829e-4f915487f475","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:226","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"status":-2},{"failures":[],"tindex":"f17c6e35-7926-11e5-829e-01a98d1bcca5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:703","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"f17c6e36-7926-11e5-829e-776b0bdee3b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:561","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"tram\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"f17c6e37-7926-11e5-829e-8d732ccdd816","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"iteration","edgeId":"iteration","com.graphhopper.storage.EdgeAccess.NO_NODE":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:718","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int++) {\n    double double = double + (int * (double));\n    double double = double - (int * (double));\n    double double = double + (int * (double));\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(com.graphhopper.storage.index.TIntHashSet, double, double);\n    if (int > 0)\n        com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(com.graphhopper.storage.index.TIntHashSet, double, double);\n    \n}"},"status":-2},{"failures":[],"tindex":"f17c6e38-7926-11e5-829e-fb64ec9e1015","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"tmpNode","segmentSizePower":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:827","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":-2},{"failures":[],"tindex":"f17c6e39-7926-11e5-829e-b9958eaed380","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:134","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double))"},"status":-2},{"failures":[],"tindex":"f17c6e3a-7926-11e5-829e-156d2d6c1bc0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"end","nextEdgeId":"end"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:92","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"f17c954b-7926-11e5-829e-6beb1a1c3496","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"status":-2},{"failures":[],"tindex":"f17c954c-7926-11e5-829e-6f862171810d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"variableMap":{"gridCellWidth":"queryLon","x1":"tmpLat","x2":"tmpLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:100","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}