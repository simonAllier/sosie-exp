{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":56,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":356,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":349,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":49,"com.graphhopper.reader.OSMReaderTest.testFerry":363,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":6,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":7,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":339,"com.graphhopper.routing.QueryGraphTest.testOneWay":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":328,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":271,"com.graphhopper.reader.OSMReaderTest.testWithBounds":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":256,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":248,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":345,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":146,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":255,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":254,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":292,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":189,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":327,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":102,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":62,"com.graphhopper.GraphHopperTest.testPrepare":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":260,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":32,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":92,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":108,"com.graphhopper.util.InstructionListTest.testWayList":4,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":240,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":117,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":183,"com.graphhopper.GraphHopperAPITest.testDisconnected179":361,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":140,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":269,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":272,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":164,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":167,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":148,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":77,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":63,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":191,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":225,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":213,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":171,"com.graphhopper.GraphHopperTest.testLoadOSM":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":279,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":295,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":273,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":318,"com.graphhopper.reader.OSMReaderTest.testSort":365,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":119,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":147,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":372,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":82,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":239,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":299,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":199,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":127,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":362,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":156,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":220,"com.graphhopper.routing.PathTest.testWayList":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":334,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":115,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":241,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":270,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":341,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":323,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":154,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":15,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":312,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":305,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":338,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":121,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":163,"com.graphhopper.util.GHUtilityTest.testSort":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":54,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":205,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":224,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":350,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":209,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":310,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":266,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":87,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":346,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":264,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":197,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":233,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":317,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":151,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":22,"com.graphhopper.GraphHopperAPITest.testLoad":165,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":207,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":227,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":72,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":150,"com.graphhopper.reader.OSMReaderTest.testBarriers":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":326,"com.graphhopper.routing.PathTest.testFound":360,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":289,"com.graphhopper.util.GHUtilityTest.testCopy":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":113,"com.graphhopper.routing.PathTest.testFindInstruction":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":17,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":204,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":55,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":38,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":116,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":285,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":45,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":27,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":184,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":206,"com.graphhopper.reader.PrinctonReaderTest.testRead":166,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":101,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":176,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":84,"com.graphhopper.util.InstructionListTest.testWayList2":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":297,"com.graphhopper.reader.OSMReaderTest.testFoot":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":280,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":277,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":337,"com.graphhopper.reader.OSMReaderTest.testOneWay":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":201,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":75,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":217,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":78,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":238,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":203,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":235,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":306,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":33,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":57,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":367,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":94,"com.graphhopper.routing.PathBidirRefTest.testExtract":129,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":267,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":0,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":13,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":133,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":316,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":219,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":303,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":10,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":257,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":66,"com.graphhopper.util.GHUtilityTest.testSort2":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":249,"com.graphhopper.reader.OSMReaderTest.testMain":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":88,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":335,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":313,"com.graphhopper.routing.PathBidirRefTest.testExtract2":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":332,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":296,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":67,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":281,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":69,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":290,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":369,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":153,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":374,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":74,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":181,"com.graphhopper.storage.GraphHopperStorageTest.testClone":35,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":243,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":274,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":331,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":229,"com.graphhopper.GraphHopperTest.testFootAndCar":169,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":246,"com.graphhopper.routing.PathTest.testTime":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":18,"com.graphhopper.util.GHUtilityTest.testSortDirected":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":330,"com.graphhopper.GraphHopperTest.testPrepareOnly":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":322,"com.graphhopper.GraphHopperTest.testVia":177,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":288,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":118,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":371,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":302,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":314,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":344,"com.graphhopper.GraphHopperTest.testFootOnly":170,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":188,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":68,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":370,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":298,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":81,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":251,"com.graphhopper.util.InstructionListTest.testFind":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":283},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"4b965bf8-828e-11e5-8dfb-b596a8e357e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:92","type":"CtReturnImpl","sourcecode":"return (long * (int)) + long"},"variableMap":{"latIndex":"flags","lonIndex":"flags","lonUnits":"com.graphhopper.routing.util.AbstractFlagEncoder.K_BACKWARD"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:713","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.AbstractFlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.AbstractFlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    case com.graphhopper.routing.util.FlagEncoder.int :\n        return boolean ? long | (long) : long & (~(long));\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"));\n}"},"status":-1},{"failures":[168,169,170,171,172,173,174,175],"tindex":"4b96aa19-828e-11e5-8dfb-a1adeb965f04","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:257","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"4b96aa1a-828e-11e5-8dfb-3d53ead78420","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:296","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.Helper.cleanHack();\n"},"status":-2},{"failures":[],"tindex":"4b96aa1b-828e-11e5-8dfb-5bc00ae71bdb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:86","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"4b96aa1c-828e-11e5-8dfb-495d2c546d4b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:166","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"4b96aa1d-828e-11e5-8dfb-3398b2fd9dcb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:797","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"variableMap":{"str":"ret","key":"ret"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:104","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[8,10,12,176],"tindex":"4b96aa1e-828e-11e5-8dfb-998cac18cf9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"favoredHeading","orientation":"favoredHeading","java.lang.Math.PI":"edgeOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:405","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double)"},"status":-1},{"failures":[],"tindex":"4b96d12f-828e-11e5-8dfb-259a2c73fb9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:376","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(44.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:152","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[177,178,179,180,92,93,99,100,101,104,106,107,108,109,110,111,113,116,117,119,120,121,122,123,124,126,127,128],"tindex":"4b96d130-828e-11e5-8dfb-abccba7a4cbf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"dist","shortTripsSpeed":"dist","durationInHours":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[181],"tindex":"4b96d131-828e-11e5-8dfb-6d6ab2c241d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"status":-1},{"failures":[0,182,183,184,185,1,186,187,2,3,4,5,188,6,7,189,168,8,9,10,11,12,13,190,177,178,191,169,179,180,192,193,170,194,14,195,196,197,198,199,15,16,17,200,18,19,201,202,20,21,22,203,204,205,206,23,207,24,208,209,210,211,212,25,26,213,214,27,215,28,29,216,217,218,30,219,220,31,221,222,223,32,33,34,224,35,36,225,226,37,38,39,227,228,229,230,40,231,41,232,233,234,235,236,42,43,237,238,44,239,45,46,240,241,242,47,243,48,49,50,244,51,52,245,246,53,54,55,247,248,249,250,56,251,57,252,253,254,255,256,58,59,257,258,60,259,61,62,260,261,262,63,263,264,265,266,267,268,64,269,270,271,272,273,274,65,275,276,277,278,279,280,281,282,283,66,284,285,286,287,288,67,289,290,291,292,293,294,295,296,68,297,298,299,300,301,302,303,304,305,69,306,307,308,309,310,70,311,71,312,313,314,315,72,316,73,317,318,74,75,76,319,77,78,320,321,79,80,81,322,323,324,325,82,326,83,327,328,329,330,331,84,85,332,333,86,334,87,88,335,336,337,89,338,176,339,340,341,342,343,344,345,346,90,347,91,348,349,350,351,92,352,93,94,95,96,97,353,98,99,100,101,102,354,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,355,119,120,121,122,123,124,356,357,125,126,127,128,129,130,133,143,144,145,146,358,147,148,149,150,359,152,156,157,360,158,159,160,161,162,163,164,165,361,362,166,167,363,175,364,365,366,367,368,369,370,371,372,373,374,375],"tindex":"4b96d132-828e-11e5-8dfb-65f048625f7c","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"E_NODEA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:46","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[166,167],"tindex":"4b96f843-828e-11e5-8dfb-9b4c8fc8ec92","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:55","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.parseInt(java.io.BufferedReader.readLine())"},"status":-1},{"failures":[8,9,10,11,12,13,177,178,191,169,179,180,193,170,92,93,98,99,100,101,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,355,119,120,121,122,123,124,357,125,126,127,128,165,361],"tindex":"4b96f844-828e-11e5-8dfb-153efded8024","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"variableMap":{"prepared":"updateBestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:224","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n"},"status":-1},{"failures":[],"tindex":"4b96f845-828e-11e5-8dfb-fb9238d761d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:129","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CmdArgs.merge(com.graphhopper.util.CmdArgs)"},"variableMap":{"args":"properties","tmp":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:51","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":0},{"failures":[],"tindex":"4b971f56-828e-11e5-8dfb-13f5e40f6986","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:115","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"variableMap":{"numTiles":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:447","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n    if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n        com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n        java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n        for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n            com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n        }\n    } \n} "},"status":-2},{"failures":[],"tindex":"4b971f57-828e-11e5-8dfb-4f1ef2d232b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:245","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)"},"status":0},{"failures":[],"tindex":"4b971f58-828e-11e5-8dfb-278ed7a9255e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:108","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"4b971f59-828e-11e5-8dfb-f9315e31699f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:192","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return new com.graphhopper.util.shapes.GHPoint(double , double);\n"},"status":0},{"failures":[203,204,206,227,228,230,247,248,250,322,323,325,144,146,147,148,375],"tindex":"4b971f5a-828e-11e5-8dfb-e3ec6d963a95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:676","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"edgeToRemove"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:684","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-1},{"failures":[162],"tindex":"4b97466b-828e-11e5-8dfb-25c2453f03e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:332","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.DistanceCalc.calcDenormalizedDist(double)) > double)\n    return null;\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"4b971f59-828e-11e5-8dfb-f9315e31699f","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"4b971f57-828e-11e5-8dfb-4f1ef2d232b0","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay"]},"type":"staticDiff"}]}]}