{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":151,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":159,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":66,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":16,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":92,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":249,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":199,"com.graphhopper.reader.OSMReaderTest.testWithBounds":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":122,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":311,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":301,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":104,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":33,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":72,"com.graphhopper.GraphHopperTest.testPrepare":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":150,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":28,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":286,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":36,"com.graphhopper.util.InstructionListTest.testWayList":3,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":145,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":87,"com.graphhopper.GraphHopperAPITest.testDisconnected179":295,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":261,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":198,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":200,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":20,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":27,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":126,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":73,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":2,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":279,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":228,"com.graphhopper.GraphHopperTest.testLoadOSM":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":137,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":186,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":201,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":236,"com.graphhopper.reader.OSMReaderTest.testSort":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":125,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":246,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":32,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":213,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":155,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":96,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":24,"com.graphhopper.routing.PathTest.testWayList":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":143,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":158,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":304,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":218,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":278,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":255,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":41,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":12,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":26,"com.graphhopper.util.GHUtilityTest.testSort":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":68,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":54,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":276,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":168,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":226,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":234,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":253,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":175,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":299,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":117,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":288,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":50,"com.graphhopper.GraphHopperAPITest.testLoad":5,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":114,"com.graphhopper.GHRequestTest.testGetHint":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":154,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":282,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":21,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":47,"com.graphhopper.reader.OSMReaderTest.testBarriers":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":269,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":181,"com.graphhopper.util.GHUtilityTest.testCopy":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":258,"com.graphhopper.routing.PathTest.testFindInstruction":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":48,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":221,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":69,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":166,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":292,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":52,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":222,"com.graphhopper.reader.PrinctonReaderTest.testRead":19,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":259,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":310,"com.graphhopper.util.InstructionListTest.testWayList2":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":302,"com.graphhopper.reader.OSMReaderTest.testFoot":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":70,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":205,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":83,"com.graphhopper.reader.OSMReaderTest.testOneWay":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":231,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":239,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":291,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":220,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":171,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":266,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":281,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":99,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":250,"com.graphhopper.routing.PathBidirRefTest.testExtract":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":30,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":178,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":111,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":271,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":232,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":194,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":270,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":107,"com.graphhopper.util.GHUtilityTest.testSort2":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":148,"com.graphhopper.reader.OSMReaderTest.testMain":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":63,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":252,"com.graphhopper.routing.PathBidirRefTest.testExtract2":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":272,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":121,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":197,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":247,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":51,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":202,"com.graphhopper.storage.GraphHopperStorageTest.testClone":277,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":64,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":81,"com.graphhopper.GraphHopperTest.testFootAndCar":0,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":313,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":268,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":13,"com.graphhopper.util.GHUtilityTest.testSortDirected":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":215,"com.graphhopper.GraphHopperTest.testPrepareOnly":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":243,"com.graphhopper.GraphHopperTest.testVia":112,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":169,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":146,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":193,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":183,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":160,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":4,"com.graphhopper.GraphHopperTest.testFootOnly":118,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":314,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":188,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":101,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":189,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":25,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":60,"com.graphhopper.util.InstructionListTest.testFind":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":211},"transformations":[{"failures":[0],"tindex":"22b06f66-8279-11e5-8210-8ff9552a539e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:254","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":-1},{"failures":[1,2],"tindex":"22b09677-8279-11e5-8210-79a2a8823a68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:847","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.GHUtility.sortDFS(com.graphhopper.storage.GraphHopperStorage, com.graphhopper.storage.GraphHopperStorage)"},"status":-1},{"failures":[],"tindex":"22b09678-8279-11e5-8210-61897fe3d80b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:433","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.createEdgeExplorer()"},"variableMap":{"baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:554","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter.com.graphhopper.routing.util.EdgeFilter)"},"status":-2},{"failures":[3,4,5,6,7,8,9,10],"tindex":"22b09679-8279-11e5-8210-e9e8fa44918d","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:226","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[11,12,13],"tindex":"22b0967a-8279-11e5-8210-5b076aba09fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"bucketSize","dLat":"currentBucket","tmpErr":"currentBucket","x1":"currentBucket","sLon":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:76","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.VLongStorage[][int]) == null) {\n    long[][int] = long;\n    if ((int) > 0) {\n        com.graphhopper.storage.VLongStorage[][((int) - 1)].trimToSize();\n    } \n    com.graphhopper.storage.VLongStorage[][int] = new com.graphhopper.storage.VLongStorage(int);\n} else {\n    long long = long - (long);\n    com.graphhopper.storage.VLongStorage[][int].writeVLong(long);\n}"},"status":-1},{"failures":[],"tindex":"22b0967b-8279-11e5-8210-b39ae3525d28","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:980","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"22b0967c-8279-11e5-8210-d57d0f0922b7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:200","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rte>\")"},"variableMap":{"track":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:direction>\").append(java.lang.String)"},"status":0},{"failures":[],"tindex":"22b0bd8d-8279-11e5-8210-a5d09caa1f94","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"valueIfKeyNotFound"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:101","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[14],"tindex":"22b0bd8e-8279-11e5-8210-917a7689cd47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:284","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[15,16,5,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,9,35,10,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"22b0bd8f-8279-11e5-8210-c3e83dca341f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:330","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long);\n}"},"status":-1},{"failures":[84],"tindex":"22b0bd90-8279-11e5-8210-fdb9042d6523","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"latSize","capacity":"latSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"status":-1},{"failures":[85,45],"tindex":"22b0bd91-8279-11e5-8210-e9015304683d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[],"tindex":"22b0bd92-8279-11e5-8210-9b091cc48374","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"dLat","y2":"tmpErr","x1":"x1","x2":"err"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"22b0e4a3-8279-11e5-8210-cb931e8dd4de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"variableMap":{"com.graphhopper.storage.DAType.MMAP":"this","type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DAType.this(com.graphhopper.storage.DAType.getMemRef(), com.graphhopper.storage.DAType.isStoring(), com.graphhopper.storage.DAType.isInteg(), com.graphhopper.storage.DAType.isAllowWrites(), boolean)"},"status":-2},{"failures":[86,87,15,88,89,90,91,16,92,93,94,3,95,4,5,96,14,17,97,1,98,99,100,85,101,102,103,18,19,20,104,105,106,107,108,109,110,111,112,113,2,0,114,115,116,117,118,119,120,121,21,122,123,124,125,126,22,23,7,24,127,25,128,129,130,26,27,28,131,29,30,132,133,8,134,31,32,135,136,33,137,138,34,9,35,10,36,139,140,141,37,142,38,143,144,145,146,39,147,40,41,148,149,150,151,152,153,154,155,42,156,157,158,159,160,161,162,43,163,164,165,166,167,168,169,170,171,172,84,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,45,213,46,47,48,214,215,216,217,218,219,49,220,221,222,223,224,225,226,51,227,228,229,52,230,53,231,54,232,233,234,235,55,236,56,57,58,237,238,239,240,241,242,59,243,244,245,246,247,248,249,61,250,251,252,62,253,63,254,64,255,65,66,67,256,257,258,259,260,261,68,262,263,264,265,266,267,268,70,269,270,271,71,272,72,273,73,274,74,275,75,76,77,276,277,278,279,280,281,78,282,283,284,285,286,287,288,80,289,290,291,81,292,82,293,83,294],"tindex":"22b0e4a4-8279-11e5-8210-fb8cff1d128f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"edgeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:311","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[5,295,14,17,97,1,98,99,100,85,101,102,296,103,297,18,104,105,106,107,108,109,110,111,298,112,113,2,0,114,115,116,117,118,119,299,144,40,41,150,300,172,84,173,174,181,182,183,301,184,185,186,187,188,302,189,190,191,192,193,194,195,303,196,197,198,304,199,200,201,202,203,305,204,205,206,207,208,209,210,306,211,212,45,307,308,55,309,310,311,312,74,313,314],"tindex":"22b10bb5-8279-11e5-8210-c7fdc111ba0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:59","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHNodeAccess.is3D()) {\n    com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.eleToInt(double));\n    com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double, double);\n} else {\n    com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double);\n}"},"status":-1},{"failures":[315,115],"tindex":"22b10bb6-8279-11e5-8210-97d7deb17ba3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:96","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"status":-1},{"failures":[],"tindex":"22b10bb7-8279-11e5-8210-39763da6622f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"status":0},{"failures":[93,94,3,95,4,5,106,107,108,109,110,111,112,0,118,7,24,127,25,128,129,130,26,27,28,29,133,8,31,32,135,136,34,9,35,10,36,139,140,141,37,142,38,147,40,41,148,149,150,153,154,155,42,45,226,52,231,55,249,62,254,268,71,273,74,288,81,293],"tindex":"22b10bb8-8279-11e5-8210-6185dfe789cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:533","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.EdgeAccess.isInBounds(int)))\n    throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" out of bounds\"));\n"},"status":-1},{"failures":[],"tindex":"22b10bb9-8279-11e5-8210-f39a00a7a595","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:661","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureWriteAccess()"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"22b10bb9-8279-11e5-8210-f39a00a7a595","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.ensureWriteAccess"]},"type":"staticDiff"}]}]}