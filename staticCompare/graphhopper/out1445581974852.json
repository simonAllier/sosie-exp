{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":289,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":360,"com.graphhopper.reader.OSMReaderTest.testFerry":21,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":57,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":216,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":121,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":327,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":378,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":77,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":307,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":388,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":295,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":280,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":161,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":206,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":331,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":347,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":272,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":190,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":320,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":146,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":267,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":312,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":310,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":174,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":352,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":191,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":219,"com.graphhopper.reader.OSMReaderTest.testSort":24,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":237,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":96,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":389,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":341,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":142,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":251,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":358,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":185,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":258,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":285,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":125,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":108,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":217,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":220,"com.graphhopper.GraphHopperAPITest.testLoad":41,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":350,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":78,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":68,"com.graphhopper.reader.OSMReaderTest.testBarriers":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":112,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":238,"com.graphhopper.util.GHUtilityTest.testCopy":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":364,"com.graphhopper.routing.PathTest.testFindInstruction":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":150,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":97,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":82,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":213,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":365,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":246,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":357,"com.graphhopper.util.InstructionListTest.testWayList2":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":384,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":199,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":145,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":235,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":322,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":123,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":162,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":67,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":247,"com.graphhopper.routing.PathBidirRefTest.testExtract":333,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":261,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":383,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":183,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":260,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":382,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":8,"com.graphhopper.util.GHUtilityTest.testSort2":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":286,"com.graphhopper.reader.OSMReaderTest.testMain":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":386,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":135,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":349,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":221,"com.graphhopper.storage.GraphHopperStorageTest.testClone":70,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":385,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":244,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":366,"com.graphhopper.routing.PathTest.testTime":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":201,"com.graphhopper.reader.OSMReaderTest.testRelation":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":377,"com.graphhopper.util.GHUtilityTest.testSortDirected":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":233,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":339,"com.graphhopper.GraphHopperTest.testFootOnly":265,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":176,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":163,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":373,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":343,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":193,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":335,"com.graphhopper.routing.QueryGraphTest.testOneWay":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":189,"com.graphhopper.reader.OSMReaderTest.testWithBounds":34,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":144,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":370,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":379,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":171,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":134,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":387,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":127,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":66,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":271,"com.graphhopper.util.InstructionListTest.testWayList":46,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":99,"com.graphhopper.GraphHopperAPITest.testDisconnected179":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":367,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":362,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":218,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":225,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":391,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":72,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":308,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":90,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":283,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":304,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":109,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":293,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":348,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":353,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":59,"com.graphhopper.routing.PathTest.testWayList":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":390,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":369,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":294,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":278,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":337,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":207,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":211,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":118,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":319,"com.graphhopper.util.GHUtilityTest.testSort":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":195,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":255,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":147,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":152,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":166,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":210,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":252,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":340,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":323,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":106,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":292,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":214,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":205,"com.graphhopper.routing.PathTest.testFound":313,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":268,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":124,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":204,"com.graphhopper.util.InstructionListTest.testEmptyList":44,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":284,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":250,"com.graphhopper.reader.PrinctonReaderTest.testRead":38,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":359,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":129,"com.graphhopper.reader.OSMReaderTest.testFoot":22,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":381,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":196,"com.graphhopper.reader.OSMReaderTest.testOneWay":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":256,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":79,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":226,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":141,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":305,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":375,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":300,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":309,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":298,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":49,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":321,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":253,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":338,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":36,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":2,"com.graphhopper.routing.PathBidirRefTest.testExtract2":334,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":354,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":269,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":175,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":186,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":239,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":392,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":192,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":257,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":302,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":243,"com.graphhopper.GraphHopperTest.testPrepareOnly":4,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":153,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":281,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":32,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":212,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":48,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":91,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":178,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":374,"com.graphhopper.util.InstructionListTest.testFind":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":1},"transformations":[{"failures":[],"tindex":"e48fe15d-794f-11e5-b809-dd515426f381","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"currentIndex","NO_TURN_ENTRY":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"e48fe15e-794f-11e5-b809-2926a76703da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:607","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadWayGeometryHeader()"},"variableMap":{"clonedG":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:416","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setEdgesHeader()"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,5,6,16,17,18,19,20],"tindex":"e490086f-794f-11e5-b809-71a21aae26c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:350","type":"CtIfImpl","sourcecode":"if (boolean)\n    for (int int = 0 ; int < (int) ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n    }\nelse\n    for (int int = 0 ; int < (int) ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int]);\n    }\n"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,0,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,1,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,2,212,213,214,215,3,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,4,7,8,9,260,10,261,262,11,12,13,14,15,5,263,264,6,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,16,16,335,335,336,336,337,337,17,17,338,338,339,339,18,18,340,340,341,341,19,19,342,342,20,20,343,343,344,344,345,345],"tindex":"e4900870-794f-11e5-b809-ab75b51b59aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"variableMap":{"names":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:112","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[],"tindex":"e4900871-794f-11e5-b809-45f5a7734cc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:193","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"variableMap":{"turnCostIndex":"length","nextTurnCostIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:824","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList != null) && (!(com.graphhopper.util.PointList.isEmpty()))) {\n    if ((com.graphhopper.util.PointList.getDimension()) != (com.graphhopper.storage.NodeAccess.getDimension()))\n        throw new java.lang.IllegalArgumentException(((((\"Cannot use pointlist which is \" + (com.graphhopper.util.PointList.getDimension())) + \"D for graph which is \") + (com.graphhopper.storage.NodeAccess.getDimension())) + \"D\"));\n    \n    int int = com.graphhopper.util.PointList.getSize();\n    int int = com.graphhopper.storage.NodeAccess.getDimension();\n    int int = com.graphhopper.storage.BaseGraph.nextGeoRef((int * int));\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), int);\n    long long = ((long)(int)) * 4;\n    byte[] byte[] = new byte[((int * int) * 4) + 4];\n    com.graphhopper.storage.BaseGraph.ensureGeometry(long, byte[].int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], int, 0);\n    if (boolean)\n        com.graphhopper.util.PointList.reverse();\n    \n    int int = 4;\n    boolean boolean = com.graphhopper.storage.NodeAccess.is3D();\n    for (int int = 0 ; int < int ; int++) {\n        double double = com.graphhopper.util.PointList.getLatitude(int);\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n        int += 4;\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n        int += 4;\n        if (boolean) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n            int += 4;\n        } \n    }\n    com.graphhopper.storage.DataAccess.setBytes(long, byte[], byte[].int);\n} else {\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), 0);\n}"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,31,32,33,34,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,0,60,61,62,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,1,104,105,106,107,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,346,347,348,349,350,351,352,353,354,355,356,357,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,2,212,213,214,215,3,216,217,219,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,4,7,8,9,260,10,261,11,12,13,14,15,5,264,6,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,16,16,335,335,336,336,337,337,17,17,338,338,339,339,18,18,340,340,341,341,19,19,342,342,20,20,343,343,344,344,345,345],"tindex":"e4902f82-794f-11e5-b809-7f16f086a280","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"segmentSizeInBytes","child":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"status":-1},{"failures":[23,24,25,41,42,167,168,170,172,173,174,175,176,178,180,181,182,183,184,185,186,187,189,190,191,192,193,195,197,198,199,200,201,202,203,209,7,8,9,260,10,261,11,12,13,14,15,5,6,265,276,279,284,285,288,294,16,335,336,337,17,338,339,18,340,341,19,342,20,343,345],"tindex":"e4905693-794f-11e5-b809-9d1a8a60d007","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,32,34,35,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,57,58,0,64,66,67,68,70,71,72,73,74,75,77,78,79,80,81,82,84,85,86,88,90,92,93,94,95,96,97,98,100,101,102,103,1,358,109,111,112,113,115,116,117,118,119,120,122,123,124,125,126,127,129,130,131,133,135,137,138,139,140,141,142,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,164,165,166,167,168,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,359,360,361,362,363,364,365,366,367,368,204,369,370,371,372,373,374,375,376,377,378,379,380,381,205,382,383,384,385,386,387,388,389,390,391,392,206,209,210,211,2,212,213,214,3,219,221,222,223,225,226,227,228,229,230,232,233,234,235,236,237,239,240,241,243,245,247,248,249,250,251,252,253,255,256,257,258,259,4,7,8,9,260,10,261,11,12,13,14,15,5,264,6,265,266,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,324,325,326,327,328,329,330,331,334,335,336,337,17,339,18,340,19,344,345],"tindex":"e4905694-794f-11e5-b809-fbc46d51077e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:285","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << int"},"variableMap":{"delta":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:197","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-1},{"failures":[],"tindex":"e4905695-794f-11e5-b809-ff62b55eea4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:93","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"e4905696-794f-11e5-b809-299a5c10a2d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"length","tmpSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:132","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((int[].int) * 4) ; int += 4) {\n    com.graphhopper.storage.DataAccess.setHeader(int, com.graphhopper.storage.AbstractDataAccess.getHeader(int));\n}"},"status":-2},{"failures":[21,22,23,24,26,27,28,34,35,37,259,4,262,11,12,13,14,15,5,264,6,265,266],"tindex":"e4907da7-794f-11e5-b809-9f636c8f6f8b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"event","child":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:70","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-1},{"failures":[],"tindex":"e4907da8-794f-11e5-b809-d958b9d0c730","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:97","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList)"},"status":-2},{"failures":[],"tindex":"e4907da9-794f-11e5-b809-338524c55440","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:393","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"variableMap":{"latSize":"value","index":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:594","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    com.graphhopper.storage.index.TIntHashSet.add(-(int + 1));\n} else {\n    long long = ((long)(int)) * 4;\n    for (long long = long + 4 ; long < long ; long += 4) {\n        com.graphhopper.storage.index.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long));\n    }\n}"},"status":-2},{"failures":[],"tindex":"e4907daa-794f-11e5-b809-eb4bc3fd424a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"toWayID"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:926","type":"CtIfImpl","sourcecode":"if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-2},{"failures":[],"tindex":"e4907dab-794f-11e5-b809-2f7b12d93dea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:708","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"variableMap":{"fullyLoaded":"isPusingSection"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:601","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"e4907dac-794f-11e5-b809-b5832cd31c96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:381","type":"CtForEachImpl","sourcecode":"for (java.nio.ByteBuffer java.nio.ByteBuffer : java.util.List<java.nio.ByteBuffer>) {\n    long += java.nio.ByteBuffer.capacity();\n}"},"status":-2},{"failures":[],"tindex":"e490a4bd-794f-11e5-b809-05ca30b3a91d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:151","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.InstructionList.get(int).fillGPXList(java.util.List<com.graphhopper.util.GPXEntry>, long, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction, boolean)"},"status":-2},{"failures":[],"tindex":"e490a4be-794f-11e5-b809-e517901fe19d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:128","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return this;\n"},"status":-2},{"failures":[],"tindex":"e490a4bf-794f-11e5-b809-61d445f55e57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:569","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTags()) {\n    long long = com.graphhopper.routing.util.EncodingManager.handleNodeTags(com.graphhopper.reader.OSMNode);\n    if (long != 0)\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n    \n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}