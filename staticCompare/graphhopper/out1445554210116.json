{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":209,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":171,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":115,"com.graphhopper.reader.OSMReaderTest.testFerry":248,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":269,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":270,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":161,"com.graphhopper.routing.QueryGraphTest.testOneWay":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":36,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":245,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":97,"com.graphhopper.reader.OSMReaderTest.testWithBounds":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":124,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":227,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":177,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":146,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":237,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":35,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":185,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":208,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":138,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":173,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":191,"com.graphhopper.util.InstructionListTest.testWayList":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":200,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":274,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":120,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":5,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":96,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":98,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":222,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":262,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":231,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":25,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":135,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":188,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":78,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":99,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":153,"com.graphhopper.reader.OSMReaderTest.testSort":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":203,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":230,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":258,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":213,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":263,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":215,"com.graphhopper.routing.PathTest.testWayList":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":214,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":190,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":51,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":88,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":205,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":221,"com.graphhopper.util.GHUtilityTest.testSort":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":102,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":67,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":16,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":235,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":152,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":54,"com.graphhopper.GraphHopperAPITest.testLoad":6,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":212,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":226,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":233,"com.graphhopper.reader.OSMReaderTest.testBarriers":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":130,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":4,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":196,"com.graphhopper.util.GHUtilityTest.testCopy":266,"com.graphhopper.routing.PathTest.testFindInstruction":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":48,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":56,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":122,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":199,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":65,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":179,"com.graphhopper.reader.PrinctonReaderTest.testRead":261,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":19,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":137,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":37,"com.graphhopper.util.InstructionListTest.testWayList2":276,"com.graphhopper.reader.OSMReaderTest.testFoot":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":129,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":103,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":104,"com.graphhopper.reader.OSMReaderTest.testOneWay":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":23,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":26,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":156,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":126,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":139,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":144,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":253,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":187,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":176,"com.graphhopper.routing.PathBidirRefTest.testExtract":223,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":244,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":264,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":236,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":132,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":131,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":241,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":110,"com.graphhopper.util.GHUtilityTest.testSort2":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":206,"com.graphhopper.reader.OSMReaderTest.testMain":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":40,"com.graphhopper.routing.PathBidirRefTest.testExtract2":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":107,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":89,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":74,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":61,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":22,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":100,"com.graphhopper.storage.GraphHopperStorageTest.testClone":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":43,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":157,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":49,"com.graphhopper.util.GHUtilityTest.testSortDirected":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":31,"com.graphhopper.GraphHopperTest.testPrepareOnly":238,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":94,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":201,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":18,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":165,"com.graphhopper.GraphHopperTest.testFootOnly":14,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":80,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":256,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":81,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":30,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":217,"com.graphhopper.util.InstructionListTest.testFind":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":109},"transformations":[{"failures":[0,1],"tindex":"3f7d61c7-790f-11e5-ac95-db388b24b95f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"com.graphhopper.routing.util.AbstractFlagEncoder.K_FORWARD","edgeFrom":"com.graphhopper.routing.util.AbstractFlagEncoder.K_FORWARD"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:115","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, 0), com.graphhopper.routing.util.AbstractFlagEncoder.int, false)"},"status":-1},{"failures":[2,3,4,5],"tindex":"3f7d61c8-790f-11e5-ac95-f11107168efe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:407","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n    int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\nelse\n    int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14],"tindex":"3f7d88d9-790f-11e5-ac95-cdf73dca1e51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:132","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.DouglasPeucker = com.graphhopper.util.DouglasPeucker"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,6,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,0,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,7,8,9,10,11,12,246,13,14,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"tindex":"3f7d88da-790f-11e5-ac95-b17e32809bc5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"E_FLAGS","guess":"E_FLAGS","low":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:51","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"3f7d88db-790f-11e5-ac95-4f37dadb552a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:70","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int += com.graphhopper.util.Instruction.getPoints().size();\n    com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints());\n} "},"status":-2},{"failures":[],"tindex":"3f7d88dc-790f-11e5-ac95-df58c2c9756d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:303","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"variableMap":{"d":"hourStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:490","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = ((java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-2},{"failures":[],"tindex":"3f7dafed-790f-11e5-ac95-5dc97fb38d32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:214","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedDoubleValue = new com.graphhopper.routing.util.EncodedDoubleValue(\"Speed\" , int , int , double , java.util.Map<java.lang.String, java.lang.Integer>.get(\"cycleway\") , int)"},"status":-2},{"failures":[],"tindex":"3f7dafee-790f-11e5-ac95-a94bb76e8f1a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:134","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String + \".\\n\""},"variableMap":{"str":"_location","s":"_location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:48","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-2},{"failures":[],"tindex":"3f7dafef-790f-11e5-ac95-8be419d4463c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"variableMap":{"mmapDA":"da","da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"3f7daff0-790f-11e5-ac95-95cccb3daf06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"encoded","flags":"encoded","dir":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:317","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"3f7daff1-790f-11e5-ac95-fb003ce0f627","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:380","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"3f7daff2-790f-11e5-ac95-edc7d2455831","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:205","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[][].int) ; int++) {\n    int[] int[] = int[][][int];\n    int int = int[].int;\n    byte[] byte[] = new byte[int * 4];\n    for (int int = 0 ; int < int ; int++) {\n        com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4));\n    }\n    java.io.RandomAccessFile.write(byte[]);\n}"},"status":-2},{"failures":[],"tindex":"3f7daff3-790f-11e5-ac95-0337e823d2d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:206","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(((java.lang.String) + (java.lang.String)))"},"variableMap":{"name":"osmFile","location":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:687","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.lang.String)"},"status":-2},{"failures":[],"tindex":"3f7dd704-790f-11e5-ac95-bd8bbbf96ebd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:288","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)))"},"variableMap":{"indexCopy":"values","index":"values","from":"value","to":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-2},{"failures":[],"tindex":"3f7dd705-790f-11e5-ac95-295ba646d14e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:650","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.flush()"},"status":-2},{"failures":[],"tindex":"3f7dd706-790f-11e5-ac95-bfddc1e52f07","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"lastBarrier","segmentSizePower":"lastBarrier"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:397","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"3f7dd707-790f-11e5-ac95-c15ddc6d0d96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:598","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int)) || (int == int))\n        continue;\n    \n    double double = double + (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.util.EdgeIterator.getEdge()));\n    if (java.lang.Double.isNaN(double))\n        throw new java.lang.IllegalStateException(((((((\"Weighting should never return NaN values\" + \", in:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", out:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", dist:\") + (com.graphhopper.util.EdgeIterator.getDistance())));\n    \n    if (java.lang.Double.isInfinite(double))\n        continue;\n    \n    double double = double + (com.graphhopper.util.EdgeIterator.getDistance());\n    com.graphhopper.routing.DijkstraOneToMany.setWeightLimit(double);\n    com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes((((int)(double)) * 100)).setEdgeFilter(com.graphhopper.routing.ch.PrepareContractionHierarchies.IgnoreNodeFilter.setAvoidNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode()));\n    com.graphhopper.util.StopWatch.start();\n    (long)++;\n    int int = com.graphhopper.routing.DijkstraOneToMany.findEndNode(int, int);\n    com.graphhopper.util.StopWatch.stop();\n    if ((int == int) && ((com.graphhopper.routing.DijkstraOneToMany.getWeight(int)) <= double))\n        continue;\n    \n    com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.foundShortcut(int, int, double, double, com.graphhopper.util.EdgeIterator, int, int);\n}"},"status":-2},{"failures":[],"tindex":"3f7dd708-790f-11e5-ac95-197dc8b73f4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:569","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"prepare.chWeighting\", \"fastest\")"},"status":-2},{"failures":[],"tindex":"3f7dd709-790f-11e5-ac95-dd2bc3217b33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\")"},"variableMap":{"output":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:200","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rte>\")"},"status":-2},{"failures":[],"tindex":"3f7dfe1a-790f-11e5-ac95-e7a893ae0266","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:695","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}