{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":105,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":115,"com.graphhopper.search.NameIndexTest.testCreate":137,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":253,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":267,"com.graphhopper.reader.OSMReaderTest.testFerry":156,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":145,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":146,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":21,"com.graphhopper.routing.QueryGraphTest.testOneWay":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":318,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":249,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":38,"com.graphhopper.reader.OSMReaderTest.testWithBounds":166,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":60,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":61,"com.graphhopper.coll.CompressedArrayTest.testCompress":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":288,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":375,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":244,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":230,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":6,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":80,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":319,"com.graphhopper.GraphHopperTest.testPrepare":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":104,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":70,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":358,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":87,"com.graphhopper.util.InstructionListTest.testWayList":150,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":373,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":96,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":19,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":271,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":144,"com.graphhopper.GraphHopperAPITest.testDisconnected179":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":309,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":286,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":213,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":247,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":88,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":93,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":351,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":250,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":55,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":296,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":223,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":9,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":181,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":215,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":258,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":251,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":297,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":364,"com.graphhopper.reader.OSMReaderTest.testSort":158,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":63,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":314,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":370,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":238,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":239,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":109,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":120,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":340,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":170,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":46,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":336,"com.graphhopper.routing.PathTest.testWayList":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":219,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":308,"com.graphhopper.coll.OSMIDMapTest.testGet2":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":328,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":86,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":94,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":248,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":374,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":311,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":196,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":346,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":335,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":355,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":101,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":182,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":54,"com.graphhopper.util.GHUtilityTest.testSort":141,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":91,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":90,"com.graphhopper.coll.OSMIDMapTest.testGetLong":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":332,"com.graphhopper.search.NameIndexTest.testPut":135,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":224,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":344,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":208,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":277,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":280,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":289,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":2,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":186,"com.graphhopper.coll.CompressedArrayTest.testCompress2":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":57,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":184,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":295,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":265,"com.graphhopper.storage.MMapDirectoryTest.testSynched":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":298,"com.graphhopper.GraphHopperAPITest.testLoad":132,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":205,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":352,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":293,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":343,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":66,"com.graphhopper.reader.OSMReaderTest.testBarriers":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":190,"com.graphhopper.routing.PathTest.testFound":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":315,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":92,"com.graphhopper.util.GHUtilityTest.testCopy":140,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":13,"com.graphhopper.routing.PathTest.testFindInstruction":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":84,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":201,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":136,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":31,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":17,"com.graphhopper.util.InstructionListTest.testEmptyList":148,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":95,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":266,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":371,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":100,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":217,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":327,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":203,"com.graphhopper.reader.PrinctonReaderTest.testRead":154,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":372,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":197,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":39,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":292,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":302,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":339,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":323,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":381,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":34,"com.graphhopper.util.InstructionListTest.testWayList2":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":236,"com.graphhopper.reader.OSMReaderTest.testFoot":25,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":126,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":259,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":256,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":11,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":376,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":40,"com.graphhopper.reader.OSMReaderTest.testOneWay":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":195,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":20,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":312,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":353,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":304,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":368,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":218,"com.graphhopper.storage.RAMDirectoryTest.testSynched":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":200,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":0,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":272,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":342,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":349,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":160,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":240,"com.graphhopper.coll.OSMIDMapTest.testGet":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":324,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":18,"com.graphhopper.routing.PathBidirRefTest.testExtract":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":73,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":281,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":129,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":153,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":179,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":294,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":225,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":242,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":176,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":175,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":338,"com.graphhopper.util.GHUtilityTest.testSort2":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":102,"com.graphhopper.reader.OSMReaderTest.testMain":157,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":331,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":168,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":326,"com.graphhopper.routing.PathBidirRefTest.testExtract2":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":325,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":234,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":260,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":246,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":134,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":366,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":316,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":227,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":212,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":106,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":252,"com.graphhopper.storage.GraphHopperStorageTest.testClone":345,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":377,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":334,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":369,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":321,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":354,"com.graphhopper.GraphHopperTest.testFootAndCar":29,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":361,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":8,"com.graphhopper.routing.PathTest.testTime":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":306,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":261,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":98,"com.graphhopper.reader.OSMReaderTest.testRelation":162,"com.graphhopper.util.GHUtilityTest.testSortDirected":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":193,"com.graphhopper.storage.StorablePropertiesTest.testLoad":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":320,"com.graphhopper.GraphHopperTest.testPrepareOnly":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":310,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":269,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":97,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":164,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":229,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":291,"com.graphhopper.GraphHopperTest.testFootOnly":30,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":152,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":365,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":235,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":161,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":237,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":33,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":50,"com.graphhopper.util.InstructionListTest.testFind":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":301},"transformations":[{"failures":[],"tindex":"72bc648e-82a2-11e5-b09b-3d4c44fcf722","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"size","noOfStates":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:175","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"72bc8b9f-82a2-11e5-b09b-8305dc91c1ed","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:90","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[4]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:286","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"72bc8ba0-82a2-11e5-b09b-07b15c148dd2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:178","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"72bc8ba1-82a2-11e5-b09b-797448236a3f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:86","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"variableMap":{"lastKey":"nodeId","key":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:382","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getNodeFlagsMap().get(long)"},"status":-2},{"failures":[],"tindex":"72bc8ba2-82a2-11e5-b09b-1389e5a94456","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:580","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode())"},"status":-2},{"failures":[],"tindex":"72bc8ba3-82a2-11e5-b09b-cf1a6da30ecb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:333","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"status":0},{"failures":[31,32,33,34,35],"tindex":"72bc8ba4-82a2-11e5-b09b-c9828c56825e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"variableMap":{"newSegs":"segments","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[],"tindex":"72bcb2b5-82a2-11e5-b09b-d305587fd1f2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:278","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"variableMap":{"intLow":"edgeId","intHigh":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:511","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.getEdgeIdToOsmWayIdMap().get(int)"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45],"tindex":"72bcb2b6-82a2-11e5-b09b-3b7cb3a04e7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:121","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException((\"Pointer to access NameIndex cannot be negative:\" + long));\n"},"variableMap":{"pointer":"spatialKey"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"72bcb2b7-82a2-11e5-b09b-87cf0b5f42cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"maxLeafEntries":"lastBarrier"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:416","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,111,112,112,113,113,114,114,115,115,116,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,25,157,158,159,160,26,27,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,29,182,30,31,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,32,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,33,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,35,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381],"tindex":"72bcb2b8-82a2-11e5-b09b-cfcc2a72e4b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:132","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess)"},"variableMap":{"da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1},{"failures":[],"tindex":"72bcd9c9-82a2-11e5-b09b-87a3a9ccec25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:83","type":"CtIfImpl","sourcecode":"if (int > 0.0) {\n    if (int >= int)\n        boolean = true;\n    \n} else if (int <= int) {\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"72bcd9ca-82a2-11e5-b09b-852a2de7a694","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"lat","azimuth":"maxLat","java.lang.Math.PI":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:658","type":"CtLocalVariableImpl","sourcecode":"double double = double - (com.graphhopper.util.shapes.GHPoint.double)"},"status":-2},{"failures":[],"tindex":"72bcd9cb-82a2-11e5-b09b-9b33cae202ac","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:204","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << (int - 1)"},"variableMap":{"bits":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:148","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[113],"tindex":"72bcd9cc-82a2-11e5-b09b-6fca4a4ff040","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:806","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"variableMap":{"edgeId":"nodeVia"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:92","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.TurnCostExtension.getTurnCostFlags(int, int, int)"},"status":-1},{"failures":[],"tindex":"72bd00dd-82a2-11e5-b09b-9349d6677340","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:951","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.GHRequest.getVehicle()"},"status":-2},{"failures":[],"tindex":"72bd00de-82a2-11e5-b09b-95e14e0e52d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:825","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int)"},"variableMap":{"preparePeriodicUpdates":"prepareLazyUpdates","tmpPrepareCH":"tmpPrepareCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:825","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int).setLazyUpdates(int).setNeighborUpdates(int).setLogMessages(double)"},"status":0},{"failures":[],"tindex":"72bd00df-82a2-11e5-b09b-69a468922a50","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"com.graphhopper.reader.OSMReader.PILLAR_NODE","tmp":"com.graphhopper.reader.OSMReader.PILLAR_NODE","segmentSizeInBytes":"com.graphhopper.reader.OSMReader.PILLAR_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:638","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int)"},"status":-2},{"failures":[157,160,26,30],"tindex":"72bd00e0-82a2-11e5-b09b-fbc1c8064046","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"nodes","bLen":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:800","type":"CtIfImpl","sourcecode":"if (int > 2) {\n    if (boolean)\n        com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n    \n    com.graphhopper.util.EdgeIteratorState.setWayGeometry(com.graphhopper.util.PointList);\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"72bd00de-82a2-11e5-b09b-95e14e0e52d2","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates","com.graphhopper.routing.ch.PrepareContractionHierarchies.setLogMessages","com.graphhopper.routing.ch.PrepareContractionHierarchies.setLazyUpdates","com.graphhopper.routing.ch.PrepareContractionHierarchies.setNeighborUpdates"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperTest.testPrepare":["com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setLazyUpdates(int).t1","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setLazyUpdates(int).b","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setLogMessages(double).e1","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setNeighborUpdates(int).t1","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setNeighborUpdates(int).b","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setLogMessages(double).b"]},"type":"branch"}]}]}