{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.reader.OSMReaderTest.testMain":17,"com.graphhopper.reader.OSMReaderTest.testFerry":15,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":45,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":5,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":31,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":40,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":2,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":37,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":4,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":34,"com.graphhopper.GraphHopperTest.testPrepare":7,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":33,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":38,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":53,"com.graphhopper.reader.OSMReaderTest.testFoot":16,"com.graphhopper.reader.OSMReaderTest.testOneWay":28,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":42,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":51,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":29,"com.graphhopper.GraphHopperTest.testVia":6,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":20,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":21,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":41,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":44,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":32,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":36,"com.graphhopper.reader.OSMReaderTest.testBarriers":19,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":47,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":14,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":48,"com.graphhopper.reader.OSMReaderTest.testSort":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":0},"transformations":[{"failures":[],"tindex":"a35b6f69-8293-11e5-b970-35576e6adeeb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:56","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.storage.EdgeEntry>(int)"},"variableMap":{"fromMap":"bestWeightMapFrom","size":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:63","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.storage.EdgeEntry>((int / 10))"},"status":0},{"failures":[],"tindex":"a35bbd8a-8293-11e5-b970-1d90aef46826","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:75","type":"CtReturnImpl","sourcecode":"return float[][1]"},"status":-2},{"failures":[],"tindex":"a35bbd8b-8293-11e5-b970-8fa0b562680a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"status":-2},{"failures":[],"tindex":"a35bbd8c-8293-11e5-b970-71a89f56b313","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"origPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:72","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.util.Instruction.getPoints().size()"},"status":0},{"failures":[],"tindex":"a35bbd8d-8293-11e5-b970-af106fba141a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:65","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-2},{"failures":[],"tindex":"a35be49e-8293-11e5-b970-4992a645784e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:550","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":0},{"failures":[],"tindex":"a35be49f-8293-11e5-b970-e1d9a099c10e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"skippedEdge1","b":"skippedEdge1","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:84","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[0,1],"tindex":"a35be4a0-8293-11e5-b970-69208cd908f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:153","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[],"tindex":"a35be4a1-8293-11e5-b970-95c0eac03a71","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"variableMap":{"maxSpeed":"shortTripsSpeed","fwdSpeed":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:539","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":0},{"failures":[0,2,1,3],"tindex":"a35c0bb2-8293-11e5-b970-0b2f58fee388","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:70","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-1},{"failures":[],"tindex":"a35cf613-8293-11e5-b970-9ba6e8e1e3c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"newSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:135","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int = int;\n    com.graphhopper.storage.MMapDataAccess.clean(0, java.util.List<java.nio.ByteBuffer>.size());\n    com.graphhopper.util.Helper.cleanHack();\n    java.util.List<java.nio.ByteBuffer>.clear();\n} else {\n    long += (java.util.List<java.nio.ByteBuffer>.size()) * long;\n    int = int - (java.util.List<java.nio.ByteBuffer>.size());\n}"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,1,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"a35cf614-8293-11e5-b970-4b537e494e77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:214","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getFirstPriorityTag(java.util.List<java.lang.String>)"},"status":-1},{"failures":[15,36],"tindex":"a35cf615-8293-11e5-b970-8b5c6bbf0ccb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:96","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = ((java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += (java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception ex) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-1},{"failures":[],"tindex":"a35d1d26-8293-11e5-b970-d70f676ad291","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:323","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.routing.util.PriorityWeighting.int :\n        return ((double)(com.graphhopper.routing.util.EncodedValue.getValue(long))) / (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    default :\n        return super.getDouble(long, int);\n}"},"status":-2},{"failures":[],"tindex":"a35d1d27-8293-11e5-b970-1f091134cbbd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:89","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"status":-2},{"failures":[],"tindex":"a35d1d28-8293-11e5-b970-5dccfbb59dbd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"neighborTime","x":"neighborTime","absY":"neighborTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:363","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[],"tindex":"a35d1d29-8293-11e5-b970-3981c4f64a77","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:179","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(((int) + 1))"},"status":-2},{"failures":[],"tindex":"a35d1d2a-8293-11e5-b970-e3261ad49ad6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"x1":"N_LEVEL","sLon":"N_LEVEL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:663","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[16,1,28,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"a35d1d2b-8293-11e5-b970-479796b3feb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"encoded","start":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:610","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.getValue())"},"status":-1},{"failures":[],"tindex":"a35d1d2c-8293-11e5-b970-158f416f9b0c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:231","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getSize()) >= 2) {\n    double = com.graphhopper.util.PointList.getLatitude(1);\n    double = com.graphhopper.util.PointList.getLongitude(1);\n} else if ((com.graphhopper.util.Instruction != null) && ((com.graphhopper.util.PointList.getSize()) == 1)) {\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLatitude(0);\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLongitude(0);\n} else {\n    return java.lang.Double.double;\n}"},"variableMap":{"java.lang.Double.NaN":"java.lang.Double.NaN","nextLat":"java.lang.Double.NaN","nextI":"ele","points":"ele","nextLon":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:77","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return java.lang.Double.double;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a35bbd8c-8293-11e5-b970-71a89f56b313","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointList.size","com.graphhopper.util.Instruction.getPoints"]},"type":"staticDiff"}]},{"transformation":"a35d1d28-8293-11e5-b970-5dccfbb59dbd","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}