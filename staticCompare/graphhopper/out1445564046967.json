{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"26b59260-7926-11e5-bb8e-3f453e2c07ff","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:75","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"26b5b971-7926-11e5-bb8e-2b12ca5e56d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:93","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.EdgeEntry.int"},"status":-2},{"failures":[],"tindex":"26b5b972-7926-11e5-bb8e-ff5f5710311a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:58","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    throw new java.lang.IllegalStateException(\"Value cannot be NaN\");\n"},"variableMap":{"value":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:70","type":"CtIfImpl","sourcecode":"if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n    double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n"},"status":0},{"failures":[],"tindex":"26b5b973-7926-11e5-bb8e-ad35e46040e1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":0},{"failures":[],"tindex":"26b5b974-7926-11e5-bb8e-f3a8de9e80d5","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:515","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.Helper.isEmpty(java.lang.String)) && (com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n    \n    java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\";\n} "},"variableMap":{"graphHopperFolder":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","ghLocation":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","osmFile":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"26b5e085-7926-11e5-bb8e-85abfcf5da0c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"speed","angleXY":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"status":-2},{"failures":[],"tindex":"26b5e086-7926-11e5-bb8e-65f54830bc9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"variableMap":{"pavementName":"debugInfo","wayTypeName":"debugInfo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:51","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"26b5e087-7926-11e5-bb8e-b30071b54e87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:241","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"26b5e088-7926-11e5-bb8e-3303c883c60d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:100","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getHeader((3 * 4))"},"variableMap":{"index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:92","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[],"tindex":"26b5e089-7926-11e5-bb8e-cdaa30f97e48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:758","type":"CtTryImpl","sourcecode":"try {\n    if ((com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) && com.graphhopper.GraphHopper.(isAllowWrites())) {\n        com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n        com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, false);\n        if (!(com.graphhopper.storage.Lock.tryLock()))\n            throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n        \n    } \n    if (!(com.graphhopper.storage.GraphHopperStorage.loadExisting()))\n        return false;\n    \n    com.graphhopper.GraphHopper.postProcessing();\n    boolean = true;\n    return true;\n} finally {\n    if (com.graphhopper.storage.Lock != null)\n        com.graphhopper.storage.Lock.release();\n    \n}"},"status":-2},{"failures":[],"tindex":"26b5e08a-7926-11e5-bb8e-73386e01b4a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:515","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.Helper.isEmpty(java.lang.String)) && (com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n    \n    java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\";\n} "},"status":-2},{"failures":[],"tindex":"26b6079b-7926-11e5-bb8e-ff7b0dfcbed0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:96","type":"CtReturnImpl","sourcecode":"return java.lang.Math.round((long * (double)))"},"variableMap":{"flags":"flags","factor":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"26b6079c-7926-11e5-bb8e-f3684b8a0ab0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:118","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"26b6079d-7926-11e5-bb8e-c557f3a05209","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:115","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"variableMap":{"numTiles":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:401","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    if ((long[][int]) < long) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"26b6079e-7926-11e5-bb8e-b5ce7af86735","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:184","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"incEleSum":"min","eleDelta":"queryLon","incDist2DSum":"min","decEleSum":"min","fullDist2D":"min","decDist2DSum":"min"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:764","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.storage.index.TIntIterator.hasNext()) {\n    int int = com.graphhopper.storage.index.TIntIterator.next();\n    double double = com.graphhopper.storage.NodeAccess.getLat(int);\n    double double = com.graphhopper.storage.NodeAccess.getLon(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if (double < double) {\n        double = double;\n    } \n}"},"status":-2},{"failures":[],"tindex":"26b6079f-7926-11e5-bb8e-f99e04ee2008","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:135","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"edges.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_EDGE":"com.graphhopper.util.Constants.VERSION_LOCATION_IDX","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"26b607a0-7926-11e5-bb8e-4508f57b2531","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1101","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.storage.BaseGraph.AllEdgeIterator.(checkRange()))\n    return false;\n"},"variableMap":{"this":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:181","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.EdgeIteratorState instanceof com.graphhopper.util.CHEdgeIteratorState) && (((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.util.EdgeIteratorState)).isShortcut())"},"status":-2},{"failures":[],"tindex":"26b607a1-7926-11e5-bb8e-f94b178666a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"variableMap":{"da":"shortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:696","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"26b62eb2-7926-11e5-bb8e-31feecaf52f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:436","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = com.graphhopper.routing.QueryGraph.((com.graphhopper.routing.VirtualEdgeIteratorState)(getEdgeIteratorState(int, int)))"},"variableMap":{"edgeId":"edgeId","this":"this","nodeId":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:437","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = com.graphhopper.routing.QueryGraph.((com.graphhopper.routing.VirtualEdgeIteratorState)(getEdgeIteratorState(int, com.graphhopper.routing.VirtualEdgeIteratorState.getBaseNode())))"},"status":-2},{"failures":[],"tindex":"26b62eb3-7926-11e5-bb8e-1f89874ffeca","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:92","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}