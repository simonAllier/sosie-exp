{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"cae1645c-790e-11e5-af65-f1662c379874","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:762","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < int ; int++) {\n    double = com.graphhopper.util.PointList.getLatitude(int);\n    double = com.graphhopper.util.PointList.getLongitude(int);\n    if (com.graphhopper.util.PointList.is3D()) {\n        double = com.graphhopper.util.PointList.getElevation(int);\n        double += com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double);\n        double = double;\n    } else\n        double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    \n    double = double;\n    double = double;\n    if ((int > 2) && (int < (int - 1))) {\n        if (com.graphhopper.util.PointList.is3D())\n            com.graphhopper.util.PointList.add(double, double, double);\n        else\n            com.graphhopper.util.PointList.add(double, double);\n        \n    } \n}"},"status":-2},{"failures":[],"tindex":"cae18b6d-790e-11e5-af65-81f154ba1c26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-2},{"failures":[],"tindex":"cae18b6e-790e-11e5-af65-47cfbb3763ee","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:132","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((int[].int) * 4) ; int += 4) {\n    com.graphhopper.storage.DataAccess.setHeader(int, com.graphhopper.storage.AbstractDataAccess.getHeader(int));\n}"},"status":-2},{"failures":[],"tindex":"cae18b6f-790e-11e5-af65-c16b72cda229","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:487","type":"CtReturnImpl","sourcecode":"return (int) < (int)"},"variableMap":{"edgeId":"mainNodes","shortcutCount":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:297","type":"CtReturnImpl","sourcecode":"return int >= (int)"},"status":-2},{"failures":[],"tindex":"cae18b70-790e-11e5-af65-a3743b464f57","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:696","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.util.PointList.getSize()) > 1) && (int >= 0)) {\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n    com.graphhopper.util.PointList.clear();\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n} "},"status":-2},{"failures":[],"tindex":"cae18b71-790e-11e5-af65-49920c6c73c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:354","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[int]"},"variableMap":{"n":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:207","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = int[][][int]"},"status":-2},{"failures":[],"tindex":"cae18b72-790e-11e5-af65-e9c9c6462a7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:69","type":"CtWhileImpl","sourcecode":"nextState : while (!(java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.empty())) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState = java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.pop();\n    final int int = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.int;\n    final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator;\n    if (com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.isStart()) {\n        int[][int] = int;\n        int[][int] = int;\n        (int)++;\n        com.graphhopper.routing.util.TIntArrayStack.push(int);\n        com.graphhopper.coll.GHBitSetImpl.set(int);\n        com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int);\n    } else {\n        com.graphhopper.util.EdgeIterator = com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.com.graphhopper.util.EdgeIterator;\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int[][int] = java.lang.Math.min(int[][int], int[][int]);\n    }\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if ((int[][int]) == 0) {\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n            java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n            continue nextState;\n        } else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n            int[][int] = java.lang.Math.min(int[][int], int[][int]);\n        } \n    }\n    if ((int[][int]) == (int[][int])) {\n        TIntArrayList TIntArrayList = new TIntArrayList();\n        int int;\n        while ((int = com.graphhopper.routing.util.TIntArrayStack.pop()) != int) {\n            com.graphhopper.routing.util.TIntArrayList.add(int);\n            com.graphhopper.coll.GHBitSetImpl.clear(int);\n        }\n        com.graphhopper.routing.util.TIntArrayList.add(int);\n        com.graphhopper.routing.util.TIntArrayList.trimToSize();\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n        java.util.ArrayList<com.graphhopper.routing.util.TIntArrayList>.add(com.graphhopper.routing.util.TIntArrayList);\n    } \n}"},"status":-2},{"failures":[],"tindex":"cae1b283-790e-11e5-af65-27585f812957","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.SimpleFSLockFactory:99","type":"CtReturnImpl","sourcecode":"return java.io.File.createNewFile()"},"variableMap":{"lockFile":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(com.graphhopper.reader.OSMElement.getTag(java.lang.String, \"\"))"},"status":-2},{"failures":[],"tindex":"cae1b284-790e-11e5-af65-933067eb810c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:59","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[],"tindex":"cae1b285-790e-11e5-af65-9d2480b3810e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:57","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"cae1b286-790e-11e5-af65-9fa18e4b51f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"variableMap":{"factor":"lon","delta_lon":"lon","a_lon":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:178","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.index.QueryResult.getQueryPoint().double"},"status":-2},{"failures":[],"tindex":"cae1b287-790e-11e5-af65-43831ef54c58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:403","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"b","b":"a","baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:409","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int, double, boolean)"},"status":-2},{"failures":[],"tindex":"cae1b288-790e-11e5-af65-771f468f145d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"size","nextEdgeId":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:89","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"cae1b289-790e-11e5-af65-436c4d5a3cba","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:648","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.cleanUp()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:805","type":"CtIfImpl","sourcecode":"if (java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.isEmpty())\n    for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n        com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(new com.graphhopper.routing.util.WeightingMap(java.lang.String), com.graphhopper.routing.util.FlagEncoder);\n        java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null);\n    }\n"},"status":-2},{"failures":[],"tindex":"cae1d99a-790e-11e5-af65-59d9245b39ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:214","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.Instruction.calcAzimuth(com.graphhopper.util.Instruction)"},"variableMap":{"this":"lastI","nextI":"lastI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.Instruction.getFirstLon()"},"status":-2},{"failures":[],"tindex":"cae1d99b-790e-11e5-af65-f962a69f681f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"currWeightToGoal","toHeight":"currWeightToGoal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:263","type":"CtLocalVariableImpl","sourcecode":"double double = float + double"},"status":-2},{"failures":[],"tindex":"cae1d99c-790e-11e5-af65-09ed46493d90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"index","tmpErr":"index","y1":"pointIndex","dLon":"pointIndex","sLat":"pointIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:308","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n    if (int > 0)\n        int++;\n    \n} else {\n    double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n    if (int > 0)\n        int++;\n    \n}"},"status":-2},{"failures":[],"tindex":"cae1d99d-790e-11e5-af65-876c506e669f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:38","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lat\"))"},"variableMap":{"parser":"parser"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:39","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lon\"))"},"status":-2},{"failures":[],"tindex":"cae1d99e-790e-11e5-af65-e73582b1b462","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:825","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int)"},"variableMap":{"preparePeriodicUpdates":"prepareLazyUpdates","tmpPrepareCH":"tmpPrepareCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:825","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int).setLazyUpdates(int)"},"status":-2},{"failures":[],"tindex":"cae1d99f-790e-11e5-af65-b54602a5e936","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"N_LEVEL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:664","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}