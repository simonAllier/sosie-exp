{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":115,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":108,"com.graphhopper.reader.OSMReaderTest.testFerry":199,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":94,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":239,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":22,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":30,"com.graphhopper.reader.OSMReaderTest.testWithBounds":207,"com.graphhopper.storage.MMapDataAccessTest.testSegments":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":220,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":173,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":191,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":238,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":194,"com.graphhopper.GraphHopperTest.testPrepare":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":71,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":131,"com.graphhopper.search.NameIndexTest.testFlush":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":48,"com.graphhopper.util.InstructionListTest.testWayList":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":57,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":34,"com.graphhopper.GraphHopperAPITest.testDisconnected179":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":137,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":177,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":1,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":254,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":54,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":215,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":226,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":212,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":186,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":198,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":121,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":86,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":248,"com.graphhopper.GraphHopperTest.testLoadOSM":89,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":175,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":148,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":74,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":122,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":69,"com.graphhopper.storage.MMapDataAccessTest.testHeader":252,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":179,"com.graphhopper.routing.PathTest.testWayList":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":138,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":125,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":62,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":217,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":18,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":51,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":9,"com.graphhopper.coll.IntIntBinHeapTest.testSize":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":169,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":247,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":170,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":90,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":231,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":162,"com.graphhopper.GraphHopperAPITest.testLoad":92,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":88,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":68,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":227,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":172,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":156,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":178,"com.graphhopper.reader.OSMReaderTest.testBarriers":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":53,"com.graphhopper.util.GHUtilityTest.testCopy":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":110,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":8,"com.graphhopper.routing.PathTest.testFindInstruction":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":244,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":114,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":15,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":167,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":245,"com.graphhopper.reader.PrinctonReaderTest.testRead":197,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":135,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":164,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":150,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":39,"com.graphhopper.util.InstructionListTest.testWayList2":99,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":4,"com.graphhopper.reader.OSMReaderTest.testFoot":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":117,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":136,"com.graphhopper.reader.OSMReaderTest.testOneWay":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":2,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":143,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":233,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":210,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":232,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":116,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":123,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":127,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":195,"com.graphhopper.routing.PathBidirRefTest.testExtract":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":190,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":83,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":95,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":213,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":171,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":225,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":82,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":224,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":63,"com.graphhopper.reader.OSMReaderTest.testMain":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":241,"com.graphhopper.routing.PathBidirRefTest.testExtract2":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":41,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":105,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":250,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":107,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":237,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":149,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":13,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":73,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":154,"com.graphhopper.GraphHopperTest.testFootAndCar":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":140,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":37,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":40,"com.graphhopper.reader.OSMReaderTest.testRelation":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":235,"com.graphhopper.GraphHopperTest.testVia":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":58,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":139,"com.graphhopper.GraphHopperTest.testFootOnly":91,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":27,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":204,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":147,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":181,"com.graphhopper.util.InstructionListTest.testFind":96,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":155},"transformations":[{"failures":[0],"tindex":"5f964872-82c9-11e5-b563-1dcc643a90c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:51","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.DistanceCalcEarth.double) * java.lang.Math.(java.lang.Math.sqrt(double))"},"variableMap":{"normedDist":"normedDist","this":"this","com.graphhopper.util.DistanceCalcEarth.R":"com.graphhopper.util.DistanceCalcEarth.R"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:62","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.DistanceCalcEarth.double) * 2) * java.lang.Math.(java.lang.Math.asin(java.lang.Math.java.lang.Math.sqrt(double)))"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"5f969693-82c9-11e5-b563-7567dc88db6a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"usedBits","nextEdgeId":"encoderCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:197","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineRelationBits(int, int)"},"status":-1},{"failures":[],"tindex":"5f969694-82c9-11e5-b563-add886375d4f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:236","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-2},{"failures":[],"tindex":"5f969695-82c9-11e5-b563-31690f837c22","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"minResolutionInMeter","speed":"minResolutionInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:104","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"5f96bda6-82c9-11e5-b563-157e85ba966c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:196","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"variableMap":{"str":"debug"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1050","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (\", algoInit:\" + (com.graphhopper.util.StopWatch.stop().getSeconds())) + \"s\""},"status":0},{"failures":[],"tindex":"5f96bda7-82c9-11e5-b563-51b22ae8474a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:177","type":"CtInvocationImpl","sourcecode":"java.util.zip.Deflater.finish()"},"status":-2},{"failures":[],"tindex":"5f96bda8-82c9-11e5-b563-8598990f4edb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"variableMap":{"segmentSizeInBytes":"importance","indexDivisor":"importance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"5f96bda9-82c9-11e5-b563-253be2b057bd","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:538","type":"CtLocalVariableImpl","sourcecode":"double double = double - (double)"},"variableMap":{"orientation":"a_lat_deg","prevOrientation":"a_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:176","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"5f96e4ba-82c9-11e5-b563-bb35919bcef0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"ee","cl":"ee"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:210","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double)"},"status":-1},{"failures":[],"tindex":"5f96e4bb-82c9-11e5-b563-83111bf0cab0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"mode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:888","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-2},{"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,62,63,64,65,67,68,69,70,71,189,72,190,191,192,193,73,74,75,76,194,195,77,196,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,197,198,199,200,201,202,203,204,205,206,207,208,209],"tindex":"5f970bcc-82c9-11e5-b563-ef4d96422fb0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:268","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-1},{"failures":[210,211,212],"tindex":"5f970bcd-82c9-11e5-b563-c34fb68bac6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:116","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"5f970bce-82c9-11e5-b563-3dbf3e12de11","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:235","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.prepare()"},"status":-2},{"failures":[213,214,215,216,217],"tindex":"5f9732df-82c9-11e5-b563-f7a7c5c1916d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:278","type":"CtReturnImpl","sourcecode":"return ((java.lang.String + \"(\") + (java.lang.String)) + \")\""},"variableMap":{"res":"location","algo":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:67","type":"CtReturnImpl","sourcecode":"return (java.lang.String) + (java.lang.String)"},"status":-1},{"failures":[96,97,98,99,100,179,180,181,182,183,184,185,186,187,188,45,46,47,48,49,51,52,53,56,60,61,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,91,92],"tindex":"5f9732e0-82c9-11e5-b563-853082025927","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:280","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int)"},"status":-1},{"failures":[],"tindex":"5f9732e1-82c9-11e5-b563-773bb67ff32a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:150","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return ;\n} "},"variableMap":{"size":"com.graphhopper.util.EdgeIterator.NO_EDGE","i":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:245","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int)) {\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n    double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int);\n} else {\n    if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n        return ;\n    \n}"},"status":-2},{"failures":[109,218,219,220,221,222,223,224,225,124,226,227,228,229,230,231,232,233,142,234,235,236,237,238,239,240,241,157,242,243,244,245,246,247,248,249,250,172,173,175,176,209],"tindex":"5f9759f2-82c9-11e5-b563-e74121853f28","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:640","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"status":-1},{"failures":[251,215,252,253,254,255],"tindex":"5f9759f3-82c9-11e5-b563-7345ae7bd8a2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:98","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"freeIndex":"segmentSizeInBytes","currentIndex":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:268","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, java.io.RandomAccessFile.length(), int)"},"status":-1},{"failures":[256,91],"tindex":"5f9759f4-82c9-11e5-b563-770c2721ff21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:340","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"5f9759f5-82c9-11e5-b563-2d2bd8bd1a6c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:131","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.initBuffer()"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"5f96bda6-82c9-11e5-b563-157e85ba966c","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop","com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}