{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":32,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":35,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":60,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":12,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":9,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":52,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":29,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":33,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":6,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":28,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":47,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":51,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":34,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":21,"com.graphhopper.GraphHopperTest.testPrepare":39,"com.graphhopper.GraphHopperTest.testFootAndCar":41,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":20,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":2,"com.graphhopper.GraphHopperTest.testPrepareOnly":58,"com.graphhopper.GraphHopperTest.testVia":38,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":54,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":57,"com.graphhopper.GraphHopperAPITest.testLoad":45,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":46,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":48,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":11,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":40,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":31,"com.graphhopper.reader.OSMReaderTest.testBarriers":56,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":24,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":63,"com.graphhopper.GraphHopperTest.testLoadOSM":43,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":53},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"ebcf0e4d-8283-11e5-9364-afeb6c3886f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"allowed","flags":"allowed","dir":"allowed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:324","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"ebcf355e-8283-11e5-9364-5b831c2a05d0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:144","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.toString().toLowerCase().replaceAll(\"\\\\W+\", \"_\")"},"status":-2},{"failures":[27],"tindex":"ebcf5c6f-8283-11e5-9364-57cad3e284e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:71","type":"CtReturnImpl","sourcecode":"return ((int)(long >> 32))"},"status":-2},{"failures":[],"tindex":"ebcf5c70-8283-11e5-9364-0f4802d82c71","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double"},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"ebcf5c71-8283-11e5-9364-9911fd420d29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:255","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"variableMap":{"baseUrl":"key","fileDetails":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:110","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.PMap.get(java.lang.String)"},"status":-1},{"failures":[],"tindex":"ebcf5c72-8283-11e5-9364-69af7db38cd2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"maxEle","orientation":"maxEle","java.lang.Math.PI":"maxEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:185","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((8 * 4)))"},"status":-2},{"failures":[],"tindex":"ebcf8383-8283-11e5-9364-f7a8df2141e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:771","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[],"tindex":"ebcf8384-8283-11e5-9364-d7877315aedb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:90","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"status":0},{"failures":[26],"tindex":"ebcf8385-8283-11e5-9364-fb73f181bd33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"variableMap":{"shift":"osmWayId","tmpValue":"osmWayId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:818","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getEdgeIdToOsmWayIdMap().put(int, long)"},"status":-1},{"failures":[46,47,48,49,50,51],"tindex":"ebcf8386-8283-11e5-9364-cb5824db09ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"variableMap":{"size":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:96","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - 1) - ((int)((((int) / (int)) * double)))"},"status":-1},{"failures":[52],"tindex":"ebcfaa97-8283-11e5-9364-6b75f989c2a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:742","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"updatedA":"segmentSizeInBytes","nodeA":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:322","type":"CtIfImpl","sourcecode":"if (long < (int)) {\n    long = int;\n} "},"status":-1},{"failures":[53,26],"tindex":"ebcfaa98-8283-11e5-9364-c7a0ca7d132f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"turnCostIndex","hash":"turnCostIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:196","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"ebcfaa99-8283-11e5-9364-9b2da765f4ea","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"flags","len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:124","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"ebcfaa9a-8283-11e5-9364-770f331cf8a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:141","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"val","_default":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:155","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return \"\";\n} "},"status":0},{"failures":[54,55],"tindex":"ebcfd1ab-8283-11e5-9364-57efe896e0d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:192","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"variableMap":{"sacScale":"sacScale"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:298","type":"CtReturnImpl","sourcecode":"return \"hiking\".equals(java.lang.String)"},"status":-1},{"failures":[56,57],"tindex":"ebcfd1ac-8283-11e5-9364-095dccf3778b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"lastBarrier","nodeCount":"lastBarrier"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:393","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    if (int < 0)\n        int = 0;\n    \n    long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n    long[][((long[].int) - 1)] = long;\n    gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n} else {\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n    gnu.trove.list.TLongList.set(0, long);\n}"},"status":-1},{"failures":[58,43,44,59,60,61,62,63,64,53],"tindex":"ebcfd1ad-8283-11e5-9364-7fe2f3d6a345","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"intLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:210","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4));\n}"},"status":-1},{"failures":[],"tindex":"ebcff8be-8283-11e5-9364-37b824ab049a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:125","type":"CtAssignmentImpl","sourcecode":"double = float + double"},"status":-2},{"failures":[],"tindex":"ebcff8bf-8283-11e5-9364-e9a724bf780d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"freeIndex","tmpNode":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:94","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.util.PointList.getSize()) ; int++) {\n    if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n        if (int < 0)\n            int = int;\n        \n        continue;\n    } else if (int < 0) {\n        continue;\n    } \n    com.graphhopper.util.PointList.set(int, com.graphhopper.util.PointList.getLatitude(int), com.graphhopper.util.PointList.getLongitude(int), com.graphhopper.util.PointList.getElevation(int));\n    com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n    int int = int;\n    int int = int + 1;\n    int = int;\n    for ( ; int < int ; int++) {\n        if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n            int = int;\n            break;\n        } \n    }\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"ebcfaa9a-8283-11e5-9364-770f331cf8a5","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}