{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":46,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":84,"com.graphhopper.reader.OSMReaderTest.testFerry":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":7,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":44,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":63,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":64,"com.graphhopper.GraphHopperTest.testPrepare":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":28,"com.graphhopper.reader.OSMReaderTest.testOneWay":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":37,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":93,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":5,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":48,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":66,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":55,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":67,"com.graphhopper.GraphHopperTest.testLoadOSM":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":8,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":81,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":21,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":42,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":91,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":69,"com.graphhopper.GraphHopperTest.testFootAndCar":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":31,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":39,"com.graphhopper.storage.StorablePropertiesTest.testLoad":89,"com.graphhopper.GraphHopperTest.testPrepareOnly":68,"com.graphhopper.GraphHopperTest.testVia":72,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":86,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":78,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":38,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":82,"com.graphhopper.GraphHopperAPITest.testLoad":80,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":49,"com.graphhopper.GraphHopperTest.testFootOnly":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":30,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":17,"com.graphhopper.util.GHUtilityTest.testCopy":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":53,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":90},"transformations":[{"failures":[],"tindex":"958fc9ef-82b8-11e5-bc57-03281a6b3a4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"variableMap":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"alreadyRun","v":"alreadyRun"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:90","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"958ff100-82b8-11e5-bc57-538bb6f5416e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"nodeA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:756","type":"CtIfImpl","sourcecode":"if ((int < int) != (int < int))\n    com.graphhopper.storage.BaseGraph.setWayGeometry_(com.graphhopper.storage.BaseGraph.fetchWayGeometry_(long, true, 0, -1, -1), long, false);\n"},"status":-1},{"failures":[],"tindex":"95901811-82b8-11e5-bc57-c9db239ebdd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:330","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"getSkippedEdge1\")"},"variableMap":{"this":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:403","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.applyWayTags(com.graphhopper.reader.OSMWay, com.graphhopper.util.EdgeIteratorState);\n}"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"95901812-82b8-11e5-bc57-f331ed1842d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:677","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"95901813-82b8-11e5-bc57-b770428f739b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:71","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"status":-2},{"failures":[],"tindex":"95903f24-82b8-11e5-bc57-979e5aec43c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:702","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[],"tindex":"95903f25-82b8-11e5-bc57-1d4c59003fe0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"variableMap":{"da":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:406","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":0},{"failures":[69],"tindex":"95903f26-82b8-11e5-bc57-a7c232a661ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:505","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"cannot copy EMPTY PointList\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:663","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\")"},"status":-1},{"failures":[70,71],"tindex":"95903f27-82b8-11e5-bc57-77bfe1def2fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:532","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"95903f28-82b8-11e5-bc57-0fffba623c13","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.idealIntArraySize(int)"},"variableMap":{"cap":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:227","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[35,36,46,72,73,74,75,76,77,78,79,80],"tindex":"95906639-82b8-11e5-bc57-37869c8a5dc1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:183","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef"},"variableMap":{"bestPath":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-1},{"failures":[],"tindex":"9590663a-82b8-11e5-bc57-db3639ad4d57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:623","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":0},{"failures":[],"tindex":"9590663b-82b8-11e5-bc57-9b637124572c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"edgeFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:444","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\")) {\n    com.graphhopper.reader.OSMTurnRelation com.graphhopper.reader.OSMTurnRelation = com.graphhopper.reader.OSMReader.createTurnRelation(com.graphhopper.reader.OSMRelation);\n    if (com.graphhopper.reader.OSMTurnRelation != null) {\n        com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n        if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n            com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n            java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n            for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n                com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n            }\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"95908d4c-82b8-11e5-bc57-d35c28c066c4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:364","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.nio.ByteBuffer.get(byte[], 0, int);\n    java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1));\n    java.nio.ByteBuffer.position(0);\n    java.nio.ByteBuffer.get(byte[], int, int);\n} else {\n    java.nio.ByteBuffer.get(byte[], 0, int);\n}"},"status":0},{"failures":[],"tindex":"95908d4d-82b8-11e5-bc57-f7223cc10ddc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:111","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"variableMap":{"freeIndex":"base"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:249","type":"CtLocalVariableImpl","sourcecode":"int int = gnu.trove.list.TIntList.get(int)"},"status":-2},{"failures":[],"tindex":"95908d4e-82b8-11e5-bc57-1f9fc5e69303","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:115","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"variableMap":{"bitsForEdgeFlags":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:957","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"9590b45f-82b8-11e5-bc57-531133bd8af8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:350","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.calcDistance(com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection)"},"status":-2},{"failures":[],"tindex":"9590b460-82b8-11e5-bc57-75250c04c7d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"node","mSize":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:93","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-2},{"failures":[81,82,83,84,85,86,87,88],"tindex":"9590b461-82b8-11e5-bc57-3fc9a5b2a110","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"toNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestNode(int)"},"status":-1},{"failures":[89,90,91,92,93,94,95,68,96,72,76,77,69,97,78,98,99],"tindex":"9590b462-82b8-11e5-bc57-db42e175cfff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:141","type":"CtReturnImpl","sourcecode":"return false"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"95903f24-82b8-11e5-bc57-979e5aec43c6","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.close"]},"type":"staticDiff"}]}]}