{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":431,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":162,"com.graphhopper.GraphHopperAPITest.testNoLoad":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":61,"com.graphhopper.reader.OSMReaderTest.testFerry":269,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":262,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":295,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":349,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":348,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":401,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":404,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":232,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":355,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":81,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":136,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":430,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":422,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":153,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":356,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":98,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":347,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":414,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":198,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":257,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":296,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":13,"com.graphhopper.GraphHopperTest.testLoadOSM":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":181,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":199,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":378,"com.graphhopper.reader.OSMReaderTest.testSort":272,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":216,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":52,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":94,"com.graphhopper.routing.DijkstraTest.initializationError":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":145,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":412,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":374,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":193,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":152,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":427,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":407,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":417,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":242,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":219,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":111,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":380,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":233,"com.graphhopper.GraphHopperAPITest.testLoad":264,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":331,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":34,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.reader.OSMReaderTest.testBarriers":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":390,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":132,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":418,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":369,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":164,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":405,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":340,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":388,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":53,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":237,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":399,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":437,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":106,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":184,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":207,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":291,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":406,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":381,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":298,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":234,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":154,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":23,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":274,"com.graphhopper.routing.AStarTest.initializationError":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":141,"com.graphhopper.routing.PathBidirRefTest.testExtract":284,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":341,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":259,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":87,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":344,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":289,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":428,"com.graphhopper.reader.OSMReaderTest.testMain":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":306,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":386,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":115,"com.graphhopper.storage.GraphHopperStorageTest.testClone":26,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":90,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":138,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":36,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":67,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":368,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":330,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":80,"com.graphhopper.reader.OSMReaderTest.testRelation":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":127,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":183,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":345,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":155,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":415,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":384,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":201,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":409,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":351,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":197,"com.graphhopper.reader.OSMReaderTest.testWithBounds":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":402,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":82,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":342,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":178,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":360,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":400,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":358,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":245,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":173,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":238,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":413,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":125,"com.graphhopper.GraphHopperAPITest.testDisconnected179":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":68,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":195,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":321,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":397,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":304,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":28,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":249,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":332,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":288,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":425,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":439,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":186,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":325,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":187,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":311,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":220,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":435,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":308,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":191,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":436,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":420,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":303,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":103,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":333,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":385,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":302,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":350,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":391,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":146,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":382,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":361,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":408,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":6,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":434,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":86,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":379,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":174,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":410,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":235,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":71,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":421,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":370,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":426,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":314,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":312,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":429,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":144,"com.graphhopper.reader.PrinctonReaderTest.testRead":267,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":240,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":395,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":375,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":387,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":294,"com.graphhopper.reader.OSMReaderTest.testFoot":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":204,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":205,"com.graphhopper.reader.OSMReaderTest.testOneWay":283,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":35,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":120,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":252,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":353,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":383,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":297,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":323,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":170,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":334,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":346,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":74,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":147,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":104,"com.graphhopper.routing.PathBidirRefTest.testExtract2":285,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":411,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":182,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":166,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":208,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":371,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":194,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":48,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":133,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":373,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":175,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":97,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":336,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":432,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":398,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":200,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":151,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":326,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":43,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":393,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":109,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":64,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":377,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":327,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":424,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":226,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":165,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":423,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":105,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":47,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":337,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":77,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":126,"com.graphhopper.routing.AStarBidirectionTest.initializationError":438,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":213},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"tindex":"92d185db-791f-11e5-b295-e118e4649f42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:140","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:176","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.FlagEncoder>"},"status":-1},{"failures":[274,275],"tindex":"92d1d3fc-791f-11e5-b295-b97289337855","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:453","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:121","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[],"tindex":"92d1d3fd-791f-11e5-b295-1384931dc6e9","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"ref","entityType":"ref"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:68","type":"CtAssignmentImpl","sourcecode":"int[][int] = -1"},"status":-2},{"failures":[],"tindex":"92d1d3fe-791f-11e5-b295-01a07200e302","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:112","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.PillarInfo.getLongitude(int)"},"variableMap":{"this":"pillarInfo","id":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:537","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.PillarInfo.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"92d1d3ff-791f-11e5-b295-77883f67beb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:92","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\")"},"variableMap":{"str":"message"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"92d1d400-791f-11e5-b295-69d955e3aef6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:764","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.storage.index.TIntIterator.hasNext()) {\n    int int = com.graphhopper.storage.index.TIntIterator.next();\n    double double = com.graphhopper.storage.NodeAccess.getLat(int);\n    double double = com.graphhopper.storage.NodeAccess.getLon(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if (double < double) {\n        double = double;\n    } \n}"},"status":-2},{"failures":[],"tindex":"92d1d401-791f-11e5-b295-235054c19b8f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:296","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setEdgesHeader()"},"status":-2},{"failures":[],"tindex":"92d1fb12-791f-11e5-b295-a9f3c166b6c5","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:377","type":"CtLocalVariableImpl","sourcecode":"final int int = com.graphhopper.reader.TLongList.size()"},"status":-2},{"failures":[],"tindex":"92d1fb13-791f-11e5-b295-3b6eecdcb3e5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphBuilder:104","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.Directory com.graphhopper.storage.Directory"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:321","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.Directory com.graphhopper.storage.Directory = com.graphhopper.util.GHUtility.com.graphhopper.util.GHUtility.guessDirectory(com.graphhopper.storage.GraphHopperStorage)"},"status":-2},{"failures":[],"tindex":"92d1fb14-791f-11e5-b295-45adc5f15d7b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"this":"edgeEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:79","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"92d1fb15-791f-11e5-b295-a1acaf3ab357","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:254","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"92d1fb16-791f-11e5-b295-3f4374a6065e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"variableMap":{"radiusInMeter":"java.lang.Double.MAX_VALUE","com.graphhopper.util.DistanceCalcEarth.C":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:91","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"92d1fb17-791f-11e5-b295-4f649f08068d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:199","type":"CtIfImpl","sourcecode":"if (java.io.IOException == null) {\n    throw new java.lang.AssertionError(\"internal problem as the exception \\'ioex\\' shouldn\\'t be null\");\n} "},"variableMap":{"ioex":"ex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:714","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    throw new java.lang.IllegalArgumentException(\"To import an osm file you need to use importOrLoad\");\n} else if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException ex) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"92d22228-791f-11e5-b295-4dd15c28cfca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:593","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.CHGraphImpl.double))\n    long = com.graphhopper.storage.CHGraphImpl.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.CHGraphImpl.double)))) << 2;\n"},"status":-2},{"failures":[],"tindex":"92d22229-791f-11e5-b295-e7df41dbc05f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:594","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.CHGraphImpl.long"},"variableMap":{"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT_LONG":"lastTime","weightLong":"lastTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"status":-2},{"failures":[],"tindex":"92d2222a-791f-11e5-b295-b172991a3588","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:250","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\")"},"status":-2},{"failures":[],"tindex":"92d2222b-791f-11e5-b295-71f66981d776","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"tmp","java.lang.Math.PI":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:240","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-2},{"failures":[],"tindex":"92d2222c-791f-11e5-b295-45ceb0b3238a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:179","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"92d2222d-791f-11e5-b295-9122e08594cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:715","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getCapacity()) + (com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"shortcuts":"names","nodesCH":"names"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:164","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getCapacity()"},"status":-2},{"failures":[],"tindex":"92d2222e-791f-11e5-b295-2bd416dafff6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"startNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:35","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.push(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}