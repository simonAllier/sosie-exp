{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":167,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":40,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":133,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":134,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":99,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":151,"com.graphhopper.reader.OSMReaderTest.testWithBounds":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":156,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":168,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":49,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":75,"com.graphhopper.util.BitUtilBigTest.testReverse":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":100,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":183,"com.graphhopper.GraphHopperTest.testPrepare":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":205,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":71,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":172,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":189,"com.graphhopper.util.InstructionListTest.testWayList":128,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":197,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":22,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":161,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":195,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":215,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":141,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":160,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":52,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":186,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":116,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":82,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":104,"com.graphhopper.reader.OSMReaderTest.testSort":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":200,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":159,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":207,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":136,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":93,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":188,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":55,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":122,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":202,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":26,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":214,"com.graphhopper.util.GHUtilityTest.testSort":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":106,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":64,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":20,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":7,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":59,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":5,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.reader.OSMReaderTest.testBarriers":140,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":194,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":187,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":125,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":43,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":201,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":178,"com.graphhopper.reader.PrinctonReaderTest.testRead":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":87,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":101,"com.graphhopper.util.InstructionListTest.testWayList2":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":34,"com.graphhopper.reader.OSMReaderTest.testFoot":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":107,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":31,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":32,"com.graphhopper.reader.OSMReaderTest.testOneWay":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":181,"com.graphhopper.coll.SparseLongLongArrayTest.testBinarySearch":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":46,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":72,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":174,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":185,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":175,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":124,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":150,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":120,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":149,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":111,"com.graphhopper.util.GHUtilityTest.testSort2":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":203,"com.graphhopper.reader.OSMReaderTest.testMain":138,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":63,"com.graphhopper.routing.PathBidirRefTest.testExtract2":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":108,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":123,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":97,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":13,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":81,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":88,"com.graphhopper.util.AngleCalcTest.checkAzimuthConsitency":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":109,"com.graphhopper.util.BitUtilLittleTest.testReverse":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":199,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":27,"com.graphhopper.util.GHUtilityTest.testSortDirected":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":95,"com.graphhopper.GraphHopperTest.testPrepareOnly":146,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":86,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":21,"com.graphhopper.GraphHopperTest.testFootOnly":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":117,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":143,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":118,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":94,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":212,"com.graphhopper.util.InstructionListTest.testFind":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":110},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"8d11e8d9-826f-11e5-8f13-f9a6df232d95","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:233","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"variableMap":{"newName":"str","name":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:111","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Boolean.parseBoolean(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"status":-1},{"failures":[],"tindex":"8d11e8da-826f-11e5-8f13-27a2d62652c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:314","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.reader.dem.HeightTile>.clear()"},"status":0},{"failures":[16],"tindex":"8d11e8db-826f-11e5-8f13-491748c6009a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"currentBucket","guess":"currentBucket","low":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:65","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[17,18],"tindex":"8d120fec-826f-11e5-8f13-8d7935f37888","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:943","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"variableMap":{"enableIfAssert":"isBackward"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:674","type":"CtIfImpl","sourcecode":"if (boolean)\n    long |= long;\nelse\n    long |= long;\n"},"status":-1},{"failures":[19,20,21,22],"tindex":"8d120fed-826f-11e5-8f13-75332a91709a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:121","type":"CtReturnImpl","sourcecode":"return java.lang.Math.toDegrees(double)"},"status":-1},{"failures":[23,24,25],"tindex":"8d120fee-826f-11e5-8f13-1bef4ac99251","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:436","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = com.graphhopper.routing.QueryGraph.((com.graphhopper.routing.VirtualEdgeIteratorState)(getEdgeIteratorState(int, int)))"},"variableMap":{"edgeId":"edgeId","this":"this","nodeId":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:437","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = com.graphhopper.routing.QueryGraph.((com.graphhopper.routing.VirtualEdgeIteratorState)(getEdgeIteratorState(int, com.graphhopper.routing.VirtualEdgeIteratorState.getBaseNode())))"},"status":-1},{"failures":[],"tindex":"8d120fef-826f-11e5-8f13-57e0fbc46c23","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:230","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder"},"variableMap":{"encoder":"flagEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ShortestWeighting:40","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FlagEncoder"},"status":-2},{"failures":[],"tindex":"8d120ff0-826f-11e5-8f13-075b62da6049","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"err":"key","dLat":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[16,26,27,28],"tindex":"8d120ff1-826f-11e5-8f13-a158588cf4d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:848","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"variableMap":{"tmpNode":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:417","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[],"tindex":"8d123702-826f-11e5-8f13-c3fd6a89d03f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"dist2goal","azimuth":"dist2goal","java.lang.Math.PI":"dist2goal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:46","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Weighting.getMinWeight(double)"},"status":-1},{"failures":[29,30,31,32,33,34,35,36,37,38],"tindex":"8d123703-826f-11e5-8f13-adfc1b722667","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:252","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long >>>= 1) {\n    long <<= 1;\n    long |= long & 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,0,124,125,126,127,128,129,21,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,23,24,150,151,1,2,3,4,5,6,152,7,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"tindex":"8d123704-826f-11e5-8f13-dd0ceb56d0c3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"nodeA","i":"E_NODEB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:153","type":"CtIfImpl","sourcecode":"if (int == int)\n    return com.graphhopper.storage.DataAccess.getInt((long + (int)));\n"},"status":-1},{"failures":[],"tindex":"8d123705-826f-11e5-8f13-2f00aeab74a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:272","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"status":-2},{"failures":[],"tindex":"8d125e16-826f-11e5-8f13-7977e62eac65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:51","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(5)"},"status":-2},{"failures":[],"tindex":"8d125e17-826f-11e5-8f13-c3711df88899","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:132","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[216],"tindex":"8d125e18-826f-11e5-8f13-9331a5b79256","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:440","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"8d125e19-826f-11e5-8f13-4de2cda8f107","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"segmentCount","end":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:151","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = java.io.RandomAccessFile.read(byte[]);\n    if (int <= 0)\n        throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n    \n    com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n}"},"status":0},{"failures":[],"tindex":"8d125e1a-826f-11e5-8f13-377e285d0b24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:116","type":"CtReturnImpl","sourcecode":"return ((int)(java.lang.Math.log10(int)))"},"variableMap":{"p":"oldValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:75","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[217],"tindex":"8d125e1b-826f-11e5-8f13-7d7b53e68fed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:317","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"8d11e8da-826f-11e5-8f13-27a2d62652c8","diffs":[{"methodsDiff":{"delete":["gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.reader.dem.HeightTile>.clear"]},"type":"staticDiff"}]}]}