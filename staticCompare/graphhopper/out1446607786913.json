{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":362,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":379,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.reader.OSMReaderTest.testFerry":43,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":147,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":70,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":113,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":420,"com.graphhopper.coll.CompressedArrayTest.testCompress":42,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":255,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":221,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":372,"com.graphhopper.GraphHopperTest.testPrepare":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":24,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":14,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":144,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":130,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":274,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":396,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":12,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":187,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":409,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":348,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":401,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":427,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":29,"com.graphhopper.GraphHopperTest.testLoadOSM":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":195,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":188,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":285,"com.graphhopper.reader.OSMReaderTest.testSort":46,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":72,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":298,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":233,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":266,"com.graphhopper.storage.RAMDataAccessTest.testHeader":119,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":384,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":424,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":400,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":308,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":316,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":182,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":315,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":17,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":426,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":10,"com.graphhopper.coll.OSMIDMapTest.testGetLong":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":332,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":319,"com.graphhopper.coll.CompressedArrayTest.testCompress2":41,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":283,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":331,"com.graphhopper.GraphHopperAPITest.testLoad":4,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":77,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":75,"com.graphhopper.reader.OSMReaderTest.testBarriers":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":323,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":397,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":299,"com.graphhopper.util.GHUtilityTest.testCopy":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":358,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":121,"com.graphhopper.routing.PathTest.testFindInstruction":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":102,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":153,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":234,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":223,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":369,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":28,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":305,"com.graphhopper.util.InstructionListTest.testWayList2":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":196,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":288,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":347,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":391,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":88,"com.graphhopper.storage.RAMDirectoryTest.testSynched":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":201,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":213,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":21,"com.graphhopper.coll.OSMIDMapTest.testGet":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":306,"com.graphhopper.routing.PathBidirRefTest.testExtract":398,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":133,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":282,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":350,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":180,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":91,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":31,"com.graphhopper.storage.RAMDataAccessTest.testSegments":120,"com.graphhopper.util.GHUtilityTest.testSort2":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":18,"com.graphhopper.reader.OSMReaderTest.testMain":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":318,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":339,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":287,"com.graphhopper.storage.StorablePropertiesTest.testStore":117,"com.graphhopper.storage.GraphHopperStorageTest.testClone":215,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":303,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":354,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":247,"com.graphhopper.routing.PathTest.testTime":403,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":293,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":90,"com.graphhopper.reader.OSMReaderTest.testRelation":416,"com.graphhopper.util.GHUtilityTest.testSortDirected":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":95,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":271,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":126,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":381,"com.graphhopper.GraphHopperTest.testFootOnly":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":173,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":202,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":356,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":365,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":252,"com.graphhopper.search.NameIndexTest.testCreate":413,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":388,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":190,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":376,"com.graphhopper.routing.QueryGraphTest.testOneWay":387,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":166,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":419,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":186,"com.graphhopper.reader.OSMReaderTest.testWithBounds":54,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":346,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":382,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":168,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":338,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":333,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":212,"com.graphhopper.search.NameIndexTest.testFlush":128,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":7,"com.graphhopper.util.InstructionListTest.testWayList":145,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":94,"com.graphhopper.GraphHopperAPITest.testDisconnected179":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":248,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":184,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":395,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":243,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":272,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":415,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":284,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":268,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":37,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":217,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":373,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":229,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":177,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":320,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":364,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":207,"com.graphhopper.routing.PathTest.testWayList":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":181,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":295,"com.graphhopper.coll.OSMIDMapTest.testGet2":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":23,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":124,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":421,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":185,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":378,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":275,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":278,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":328,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":118,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":127,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":408,"com.graphhopper.util.GHUtilityTest.testSort":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":259,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":386,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":312,"com.graphhopper.search.NameIndexTest.testPut":411,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":349,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":155,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":206,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":309,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":383,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":158,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":392,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":73,"com.graphhopper.storage.MMapDirectoryTest.testSynched":270,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":422,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":334,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":260,"com.graphhopper.routing.PathTest.testFound":402,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":5,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":105,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":412,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":250,"com.graphhopper.util.InstructionListTest.testEmptyList":143,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":361,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":307,"com.graphhopper.reader.PrinctonReaderTest.testRead":414,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":329,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":85,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":289,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":335,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":355,"com.graphhopper.reader.OSMReaderTest.testFoot":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":258,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":390,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":423,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":193,"com.graphhopper.util.HelperTest.testGetLocale":0,"com.graphhopper.reader.OSMReaderTest.testOneWay":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":313,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":78,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":291,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":343,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":125,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":27,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":227,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":254,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":368,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":374,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":366,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":149,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":393,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":310,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":380,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":208,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":418,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":68,"com.graphhopper.routing.PathBidirRefTest.testExtract2":399,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":357,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":172,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":183,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":410,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":300,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":269,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":363,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":189,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":314,"com.graphhopper.GraphHopperTest.testFootAndCar":60,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":370,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":325,"com.graphhopper.storage.StorablePropertiesTest.testLoad":351,"com.graphhopper.GraphHopperTest.testPrepareOnly":58,"com.graphhopper.GraphHopperTest.testVia":36,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":156,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":15,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":52,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":417,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":279,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":74,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":230,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":253,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":296,"com.graphhopper.util.InstructionListTest.testFind":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":71},"transformations":[{"failures":[0],"tindex":"4c3447b1-82a4-11e5-b4fb-997ec86ae7b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:71","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"status":-1},{"failures":[1,2,3],"tindex":"4c346ec2-82a4-11e5-b4fb-b568f6c16c0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:436","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"knots\")"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"status":-1},{"failures":[],"tindex":"4c3495d3-82a4-11e5-b4fb-97f9d347259f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    long long = long[][int];\n    if (long < long) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"4c3495d4-82a4-11e5-b4fb-71542e7e3947","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:929","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"4c3495d5-82a4-11e5-b4fb-f5e9d6248fa1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:118","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry) == null)\n    throw new java.lang.AssertionError(\"Empty edge cannot happen\");\n"},"variableMap":{"currEdge":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraBidirectionRef.fillEdges(com.graphhopper.storage.EdgeEntry, java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>, gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>, com.graphhopper.util.EdgeExplorer, false)"},"status":-1},{"failures":[],"tindex":"4c34bce6-82a4-11e5-b4fb-e993667a659f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeEntry:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"status":-2},{"failures":[41,42],"tindex":"4c34bce7-82a4-11e5-b4fb-d5c5be19e66e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; (com.graphhopper.storage.VLongStorage.getPosition()) < long ; int++) {\n    long long = com.graphhopper.storage.VLongStorage.readVLong();\n    if (int == int) {\n        com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n        com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n        return com.graphhopper.util.shapes.GHPoint;\n    } \n}"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,36,59,37,60,38,61,62,39,40,63],"tindex":"4c34bce8-82a4-11e5-b4fb-b7efbe75e732","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"variableMap":{"len":"nextTowerId","start":"nextTowerId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:656","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,58,38,61,39,63],"tindex":"4c34e3f9-82a4-11e5-b4fb-ab16abce5fca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:246","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.StorableProperties.loadExisting()) {\n    com.graphhopper.storage.StorableProperties.checkVersions(false);\n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\");\n    if ((com.graphhopper.routing.util.EncodingManager) == null) {\n        if (java.lang.String.isEmpty())\n            throw new java.lang.IllegalStateException((\"No EncodingManager was configured. And no one was found in the graph: \" + (com.graphhopper.storage.Directory.getLocation())));\n        \n        int int = 4;\n        if (\"8\".equals(com.graphhopper.storage.StorableProperties.get(\"graph.bytesForFlags\")))\n            int = 8;\n        \n        com.graphhopper.routing.util.EncodingManager = new com.graphhopper.routing.util.EncodingManager(java.lang.String , int);\n    } else if ((!(java.lang.String.isEmpty())) && (!(com.graphhopper.routing.util.EncodingManager.toDetailsString().equalsIgnoreCase(java.lang.String)))) {\n        throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())));\n    } \n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.byteOrder\");\n    if (!(java.lang.String.equalsIgnoreCase((\"\" + (com.graphhopper.storage.Directory.getByteOrder())))))\n        throw new java.lang.IllegalStateException(((((\"Configured byteOrder (\" + java.lang.String) + \") is not equal to byteOrder of loaded graph (\") + (com.graphhopper.storage.Directory.getByteOrder())) + \")\"));\n    \n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.dimension\");\n    com.graphhopper.storage.BaseGraph.loadExisting(java.lang.String);\n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.chWeightings\");\n    java.lang.String java.lang.String = com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString();\n    if (!(java.lang.String.equals(java.lang.String)))\n        throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n    \n    for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n        if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n            throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n        \n    }\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"4c34e3fa-82a4-11e5-b4fb-73a4e165438e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:80","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"variableMap":{"max":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:141","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[74,5,6,31,32,33,34,37,60,38,39],"tindex":"4c350b0b-82a4-11e5-b4fb-f937856a63a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"variableMap":{"shift":"time","tmpValue":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:227","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, com.graphhopper.util.EdgeIteratorState.getFlags(), false)"},"status":-1},{"failures":[],"tindex":"4c350b0c-82a4-11e5-b4fb-5fddc636ca99","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:90","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[4]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"status":-2},{"failures":[],"tindex":"4c350b0d-82a4-11e5-b4fb-9be8a4cf7877","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:235","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.toInt(byte[][][int], int)"},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,56],"tindex":"4c350b0e-82a4-11e5-b4fb-d1904dc82cfc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"newOffset","key":"j"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:724","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)))"},"status":-1},{"failures":[116,64,66,67,68,69,71,73,117,118,119,120,121,122,123,124,125,126,127,128,58,38,61,62,39],"tindex":"4c35321f-82a4-11e5-b4fb-35f2915cfe3a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:251","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[(2 * (int)) * (int)]"},"variableMap":{"WIDTH":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:199","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-1},{"failures":[],"tindex":"4c353220-82a4-11e5-b4fb-81fd5f6f261e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:175","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((1 * 4))"},"status":0},{"failures":[129],"tindex":"4c353221-82a4-11e5-b4fb-0dcd01d6e5ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"strLen","length":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"status":-1},{"failures":[130],"tindex":"4c355932-82a4-11e5-b4fb-ef234c0d1a3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:361","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"toY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:306","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-1},{"failures":[131,132,133,134,135,4,136,137,138,139,140,141,142,143,144,145,146,74,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,130,201,202,203,204,205,206,207,64,65,66,208,209,210,211,212,213,75,214,215,216,217,218,219,220,76,221,77,78,222,79,223,224,225,80,81,226,227,228,229,230,231,82,83,232,233,234,235,236,237,238,239,240,241,242,84,243,244,245,246,247,248,249,85,250,86,87,251,88,252,253,254,89,90,255,256,257,258,259,260,91,92,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,67,276,277,278,68,279,280,281,282,69,70,283,284,285,286,287,288,93,289,290,291,292,293,294,295,94,296,95,96,297,97,298,299,300,98,99,301,302,303,304,305,306,100,101,307,308,309,310,311,312,313,314,315,71,316,317,72,73,318,319,320,321,322,323,102,324,325,326,327,328,329,330,103,331,104,105,332,106,333,334,335,107,108,336,337,338,339,340,341,109,110,342,343,344,345,346,347,348,349,350,117,351,352,353,354,355,356,5,357,6,7,8,9,10,11,358,12,13,359,14,15,360,16,361,17,18,19,20,362,363,21,22,364,23,24,365,25,366,367,368,369,370,371,26,27,28,372,373,374,29,375,375,376,376,377,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,387,387,388,388,389,389,390,390,391,392,393,111,112,394,113,395,114,115,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,128,412,413,414,415,43,44,45,46,47,48,49,50,51,416,417,52,53,54,55,418,56,419,420,421,422,423,424,57,58,30,31,32,33,34,35,425,36,59,37,60,38,61,426,62,39,40,63,427],"tindex":"4c355933-82a4-11e5-b4fb-ef2c631cc7bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:48","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"status":-1},{"failures":[426],"tindex":"4c358044-82a4-11e5-b4fb-650a3304734c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:705","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalStateException(\"graphHopperLocation is not specified. call init before\");\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"4c353220-82a4-11e5-b4fb-81fd5f6f261e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.getHeader"]},"type":"staticDiff"}]}]}