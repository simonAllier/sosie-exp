{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":48,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":51,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":86,"com.graphhopper.reader.OSMReaderTest.testMain":64,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":30,"com.graphhopper.reader.OSMReaderTest.testFerry":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":56,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":35,"com.graphhopper.util.BitUtilBigTest.testFromBitString":60,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":52,"com.graphhopper.reader.OSMReaderTest.testWithBounds":72,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":68,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":36,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":44,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":73,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":32,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":50,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":7,"com.graphhopper.GraphHopperTest.testPrepare":20,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":85,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":87,"com.graphhopper.GraphHopperTest.testFootAndCar":22,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":53,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":27,"com.graphhopper.reader.OSMReaderTest.testFoot":63,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":40,"com.graphhopper.reader.OSMReaderTest.testOneWay":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":46,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":58,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":78,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":8,"com.graphhopper.GraphHopperTest.testPrepareOnly":76,"com.graphhopper.GraphHopperTest.testVia":19,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":47,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":70,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":67,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":3,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":5,"com.graphhopper.GraphHopperAPITest.testLoad":12,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":54,"com.graphhopper.GraphHopperTest.testFootOnly":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":55,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":83,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":28,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":59,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":18,"com.graphhopper.reader.OSMReaderTest.testBarriers":66,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":33,"com.graphhopper.GraphHopperTest.testLoadOSM":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":13,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":79,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":15,"com.graphhopper.reader.OSMReaderTest.testSort":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":14},"transformations":[{"failures":[],"tindex":"7cd081fe-828c-11e5-a5c9-c725d5c4f936","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:193","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.RoutingAlgorithmFactorySimple().createAlgo(com.graphhopper.storage.Graph, com.graphhopper.routing.AlgorithmOptions)"},"variableMap":{"opts":"opts","qGraph":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:43","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStarBidirection com.graphhopper.routing.AStarBidirection = new com.graphhopper.routing.AStarBidirection(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStarBidirection.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStarBidirection;\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.DijkstraOneToMany(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n} else if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-1},{"failures":[],"tindex":"7cd0a90f-828c-11e5-a5c9-dd2660aa72e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:61","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"initLeafSize":"lineNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[0,1,2,3,4,5],"tindex":"7cd0a910-828c-11e5-a5c9-79f37c9bb7eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"lat","shrinkFactor":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:83","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - (int)))"},"status":-1},{"failures":[],"tindex":"7cd0a911-828c-11e5-a5c9-c91b7578cb4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:81","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":0},{"failures":[],"tindex":"7cd0d022-828c-11e5-a5c9-bbba1e0af3ab","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:93","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"variableMap":{"mode":"mode","pointList":"pointList","com.graphhopper.util.PointList.EMPTY":"com.graphhopper.util.PointList.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:91","type":"CtIfImpl","sourcecode":"if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"status":-2},{"failures":[],"tindex":"7cd0d023-828c-11e5-a5c9-a1dd100fe8b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:734","type":"CtLocalVariableImpl","sourcecode":"double double = double + (int * (double))"},"status":-2},{"failures":[6,7,8],"tindex":"7cd0d024-828c-11e5-a5c9-e996e33c68cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:39","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(1, ((int) / 3))"},"variableMap":{"counts":"currentBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:97","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseLongLongArray.binarySearch(long[], 0, ((int) + 1), long)"},"status":-1},{"failures":[],"tindex":"7cd0d025-828c-11e5-a5c9-379096d4c150","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:90","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"variableMap":{"elevation":"allowWrites"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:177","type":"CtTryImpl","sourcecode":"try {\n    java.nio.ByteBuffer = java.io.RandomAccessFile.getChannel().map((boolean ? java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode : java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode), long, long);\n    break;\n} catch (java.io.IOException tmpex) {\n    java.io.IOException = java.io.IOException;\n    int++;\n    com.graphhopper.util.Helper.cleanHack();\n    try {\n        java.lang.Thread.sleep(5);\n    } catch (java.lang.InterruptedException iex) {\n    }\n}"},"status":0},{"failures":[],"tindex":"7cd0f736-828c-11e5-a5c9-db62754ac714","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1004","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"force_heading_ch\", false);\n    if ((!boolean) && (com.graphhopper.GHRequest.hasFavoredHeading(0)))\n        throw new java.lang.IllegalStateException(\"Heading is not (fully) supported for CHGraph. See issue #483\");\n    \n    com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.getWeightingForCH(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder);\n    com.graphhopper.storage.Graph = com.graphhopper.storage.GraphHopperStorage.getGraph(com.graphhopper.storage.CHGraph.com.graphhopper.storage.CHGraph, com.graphhopper.routing.util.Weighting);\n} else\n    com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(com.graphhopper.GHRequest.getHints(), com.graphhopper.routing.util.FlagEncoder);\n"},"status":-2},{"failures":[],"tindex":"7cd0f737-828c-11e5-a5c9-3fd9f24c3e90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:284","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"status":-2},{"failures":[9,10,11],"tindex":"7cd0f738-828c-11e5-a5c9-c5735c2ae301","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"variableMap":{"heights":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:393","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"7cd0f739-828c-11e5-a5c9-03492b1d2622","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags())"},"status":0},{"failures":[],"tindex":"7cd11e4a-828c-11e5-a5c9-75af55aaa67f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"a":"com.graphhopper.util.Constants.SNAPSHOT","approx":"com.graphhopper.util.Constants.SNAPSHOT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:105","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = java.lang.String.toLowerCase().contains(\"-snapshot\")"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"7cd11e4b-828c-11e5-a5c9-2ff8392bb904","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:943","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"variableMap":{"enableIfAssert":"updateBestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:224","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n"},"status":-1},{"failures":[58,59],"tindex":"7cd11e4c-828c-11e5-a5c9-ed6b89c09a98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:81","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Long.parseLong(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"variableMap":{"str":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:207","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n        return long;\n    \n    return 0;\n} "},"status":-1},{"failures":[60],"tindex":"7cd11e4d-828c-11e5-a5c9-07e2d23fde1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-1},{"failures":[61,62,63,64,65,66,67,5,68,69,70,71,72,73,74,75,76,77,19,20,21,22,23,24,78,25,26,79,80,81,82,83],"tindex":"7cd1455e-828c-11e5-a5c9-55fc25d3b8df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:80","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"variableMap":{"time":"relationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[84],"tindex":"7cd1455f-828c-11e5-a5c9-57772ccfbb81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:663","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\")"},"status":-1},{"failures":[],"tindex":"7cd14560-828c-11e5-a5c9-7f02d1666058","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"com.graphhopper.storage.EdgeAccess.NO_NODE":"wayType","nodeId":"wayType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:435","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"road\");\n        break;\n    case 1 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\");\n        break;\n    case 2 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\");\n        break;\n    case 3 :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"way\");\n        break;\n}"},"status":-2},{"failures":[85,86,87],"tindex":"7cd14561-828c-11e5-a5c9-632005c86c64","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"normedMaxDist","speed":"normedMaxDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:55","type":"CtAssignmentImpl","sourcecode":"this.double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"7cd0f739-828c-11e5-a5c9-03492b1d2622","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags","com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance","com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName","com.graphhopper.util.EdgeIteratorState.setDistance","com.graphhopper.util.EdgeIteratorState.setName","com.graphhopper.util.EdgeIteratorState.setFlags"]},"type":"staticDiff"}]}]}