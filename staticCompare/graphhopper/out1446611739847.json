{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":65,"com.graphhopper.util.BitUtilLittleTest.testToLong":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":18,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":62,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":15,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":33,"com.graphhopper.util.BitUtilLittleTest.testToDouble":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":4,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":59,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":22,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":11,"com.graphhopper.coll.OSMIDMapTest.testGetLong":78,"com.graphhopper.reader.OSMReaderTest.testOneWay":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":16,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":76,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":41,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":43,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":30,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":24,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":1,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":10,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":57,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":77},"transformations":[{"failures":[],"tindex":"80562349-82ad-11e5-ad4b-0935efd1437b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"newSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:135","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int = int;\n    com.graphhopper.storage.MMapDataAccess.clean(0, java.util.List<java.nio.ByteBuffer>.size());\n    com.graphhopper.util.Helper.cleanHack();\n    java.util.List<java.nio.ByteBuffer>.clear();\n} else {\n    long += (java.util.List<java.nio.ByteBuffer>.size()) * long;\n    int = int - (java.util.List<java.nio.ByteBuffer>.size());\n}"},"status":-2},{"failures":[],"tindex":"8056716a-82ad-11e5-ad4b-7d84f3613760","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:42","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"status":-2},{"failures":[],"tindex":"8056716b-82ad-11e5-ad4b-11add18ed3c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"8056716c-82ad-11e5-ad4b-67fe5cff6255","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"variableMap":{"parent":"currEdge","ase":"parent","currEdge":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:83","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"8056987d-82ad-11e5-ad4b-5111c911e992","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:95","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"width":"classvalue","lonSimilar":"classvalue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:491","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"8056987e-82ad-11e5-ad4b-c3f1e010e023","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:681","type":"CtIfImpl","sourcecode":"if ((int != (com.graphhopper.storage.EdgeAccess.int)) && (com.graphhopper.coll.GHBitSet.contains(int))) {\n    int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge();\n    long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n    com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(int, long, int, int);\n    com.graphhopper.storage.EdgeAccess.invalidateEdge(long);\n} else {\n    long = com.graphhopper.storage.BaseGraph.EdgeIterable.long;\n}"},"status":-1},{"failures":[],"tindex":"8056987f-82ad-11e5-ad4b-5f9b6db625cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"offset","NO_TURN_ENTRY":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:102","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], java.lang.Float.floatToRawIntBits(float), int)"},"status":-1},{"failures":[],"tindex":"80569880-82ad-11e5-ad4b-7f1f1ecd626e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.close(java.io.BufferedReader)"},"variableMap":{"reader":"cl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:265","type":"CtTryImpl","sourcecode":"try {\n    if (java.io.Closeable != null)\n        java.io.Closeable.close();\n    \n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException(\"Couldn\\'t close resource\" , java.io.IOException);\n}"},"status":-1},{"failures":[],"tindex":"8056bf91-82ad-11e5-ad4b-c51d778b7caa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:93","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[48,49,50,51],"tindex":"8056bf92-82ad-11e5-ad4b-a7c82b76eb73","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:194","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"/\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:205","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"E\""},"status":-1},{"failures":[],"tindex":"8056bf93-82ad-11e5-ad4b-e9385a68b9a9","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:245","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry = com.graphhopper.coll.GHLongIntBTree.BTreeEntry"},"variableMap":{"downTreeRV":"rv","tree":"root","returnTree":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHLongIntBTree.BTreeEntry = com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry"},"status":0},{"failures":[52],"tindex":"8056bf94-82ad-11e5-ad4b-29f06c13513d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"shift","segmentSizeIntsPower":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:70","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-1},{"failures":[],"tindex":"8056e6a5-82ad-11e5-ad4b-e7891699263f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:99","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int[][int]) == (com.graphhopper.coll.SparseIntIntArray.int))) {\n    return int;\n} else {\n    return int[][int];\n}"},"status":-2},{"failures":[53,54,55,56,57,58,59,60],"tindex":"8056e6a6-82ad-11e5-ad4b-5fc0aea90c8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"variableMap":{"acceptBit":"acceptBit","ferryBit":"acceptBit","ferries":"intendedValues","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:261","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.Set<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"8056e6a7-82ad-11e5-ad4b-b98179b9b352","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"avoidSpeedLimit","bLen":"avoidSpeedLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:534","type":"CtIfImpl","sourcecode":"if (double < (int)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[],"tindex":"80570db8-82ad-11e5-ad4b-53fe98e2fe40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"frozen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:375","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"80570db9-82ad-11e5-ad4b-1df752004ea9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[78,79,80,81],"tindex":"80570dba-82ad-11e5-ad4b-65806c8e688a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:81","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(long >> 8))"},"status":-1},{"failures":[],"tindex":"80570dbb-82ad-11e5-ad4b-5fcc27b92306","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:74","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"805734cc-82ad-11e5-ad4b-7776c3126229","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"variableMap":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}