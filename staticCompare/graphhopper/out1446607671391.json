{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":13,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":40,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":48,"com.graphhopper.routing.PathTest.testFindInstruction":92,"com.graphhopper.reader.OSMReaderTest.testFerry":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":119,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":35,"com.graphhopper.routing.QueryGraphTest.testOneWay":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":121,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":158,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":44,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":127,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":155,"com.graphhopper.reader.OSMReaderTest.testWithBounds":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":81,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":131,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":116,"com.graphhopper.coll.CompressedArrayTest.testCompress":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":23,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":108,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":26,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":111,"com.graphhopper.GraphHopperTest.testPrepare":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":21,"com.graphhopper.util.InstructionListTest.testWayList2":85,"com.graphhopper.reader.OSMReaderTest.testFoot":141,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":15,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":52,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":161,"com.graphhopper.util.InstructionListTest.testWayList":84,"com.graphhopper.util.HelperTest.testGetLocale":113,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":50,"com.graphhopper.reader.OSMReaderTest.testOneWay":145,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":83,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":101,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":126,"com.graphhopper.GraphHopperAPITest.testDisconnected179":31,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":128,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":159,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":107,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":45,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":79,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":88,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":93,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":75,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":132,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":104,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.reader.OSMReaderTest.testSort":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":117,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":143,"com.graphhopper.reader.OSMReaderTest.testMain":27,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":36,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":66,"com.graphhopper.util.PointListTest.testReverse":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":122,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":160,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":112,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":74,"com.graphhopper.routing.PathTest.testWayList":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":22,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":25,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":61,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":20,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":95,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":98,"com.graphhopper.GraphHopperTest.testFootAndCar":33,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":106,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":149,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":110,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":49,"com.graphhopper.util.InstructionListTest.testCreateGPX":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":60,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":135,"com.graphhopper.GraphHopperTest.testPrepareOnly":147,"com.graphhopper.coll.CompressedArrayTest.testCompress2":153,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":129,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":139,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":142,"com.graphhopper.util.DouglasPeuckerTest.testParse":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":68,"com.graphhopper.GraphHopperAPITest.testLoad":30,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":59,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":37,"com.graphhopper.GraphHopperTest.testFootOnly":34,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":86,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":64,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":65,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":124,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":76,"com.graphhopper.reader.OSMReaderTest.testBarriers":29,"com.graphhopper.util.InstructionListTest.testFind":82,"com.graphhopper.storage.EdgeTest.testCloneFull":140,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":18,"com.graphhopper.util.GHUtilityTest.testCopy":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":134},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"07592ca7-82a4-11e5-a34c-1f185096f307","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:570","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(int)"},"variableMap":{"edgeId":"i","virtualEdges":"virtualEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:617","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int)))"},"status":-1},{"failures":[24,25],"tindex":"07597ac8-82a4-11e5-a34c-d78edba68c78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:260","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"variableMap":{"length":"turnCostsEntryIndex","factor":"turnCostsEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:71","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[0,1,2,4,6,7,26],"tindex":"07597ac9-82a4-11e5-a34c-c9356ca861e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:48","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"variableMap":{"com.graphhopper.util.PointList.EMPTY":"basePoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:349","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.clone(true)"},"status":-1},{"failures":[],"tindex":"07597aca-82a4-11e5-a34c-936f949925bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:291","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":0},{"failures":[27,28,29,30,31,0,1,2,3,4,32,5,6,7,33,8,9,10,34,26,35,11,12,13,36,37,14,38,39,15,16,17,40,41,18,42,19,20,21,22,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,23],"tindex":"07597acb-82a4-11e5-a34c-df894587686d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:94","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"0759a1dc-82a4-11e5-a34c-a357851cc7ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:156","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.incCap(int)"},"variableMap":{"this":"pointList","newSize":"firstNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:724","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int)) {\n    int = (-int) - 3;\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    if (int >= 0) {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n        com.graphhopper.util.PointList.clear();\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    } \n    int = int;\n} "},"status":-2},{"failures":[3,4],"tindex":"0759a1dd-82a4-11e5-a34c-0f0aea690c63","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"placeIndex","tmpSize":"placeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1035","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.Path>.get((int - 2)).getFinalEdge();\n    com.graphhopper.routing.QueryGraph.enforceHeadingByEdgeId(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), false);\n} "},"status":-1},{"failures":[],"tindex":"0759a1de-82a4-11e5-a34c-618a86316214","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.idealIntArraySize(int)"},"variableMap":{"cap":"E_LINKB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:49","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[73],"tindex":"0759c8ef-82a4-11e5-a34c-5b9641573bc1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"unknownSpeed","speed":"unknownSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:550","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double)"},"status":-1},{"failures":[],"tindex":"0759c8f0-82a4-11e5-a34c-2ddcb367f6da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PMap.this(5)"},"variableMap":{"this":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:47","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":-2},{"failures":[],"tindex":"0759c8f1-82a4-11e5-a34c-f7b82933f263","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:257","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"variableMap":{"line":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE","key":"com.graphhopper.routing.util.EncodingManager.BIKE2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[1,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"0759f002-82a4-11e5-a34c-096e428cbfc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:97","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double)"},"status":-1},{"failures":[27,87,88,89,90,30,0,1,2,3,4,5,6,7,33,34,12,13,36,15,16,17,41,91,92,18,19,20,21,93,22,94,95,96,97,98,99,82,84,100,85,86,101,44,46,47,49,52,53,54,55,58,60,62,63,65,68,69,70,71,102,103,104,105,106,107,108,109,110,111,112],"tindex":"0759f003-82a4-11e5-a34c-51c50967b9d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:137","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:210","type":"CtReturnImpl","sourcecode":"return double[][int]"},"status":-1},{"failures":[113],"tindex":"0759f004-82a4-11e5-a34c-9ba937d0db77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:71","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"status":-1},{"failures":[114,115,116,117,118,119,120,121,122,104,123,124,125,126,127,107,128,129,130,131,132,109,133,134,135,136,137,112,138],"tindex":"075a1715-82a4-11e5-a34c-e1c822e10dd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:194","type":"CtIfImpl","sourcecode":"if (((int) - int) != 0) {\n    java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n    java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int));\n} "},"status":-1},{"failures":[139,100,86],"tindex":"075a1716-82a4-11e5-a34c-1dfda80d547d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:direction>\")"},"variableMap":{"output":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:215","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<trkseg>\")"},"status":-1},{"failures":[140],"tindex":"075a1717-82a4-11e5-a34c-19b4913eee0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"this":"de"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:49","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[73,141,27,28,29,87,88,24,89,142,143,90,144,145,146,147,148,5,6,7,33,8,9,149,150,10,34,151,152],"tindex":"075a1718-82a4-11e5-a34c-1dbdbdb6575d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"variableMap":{"str":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:405","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[153,154,155,156,157,158,159,160,161],"tindex":"075a3e29-82a4-11e5-a34c-01d679369ad5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"midLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:224","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[29,142],"tindex":"075a3e2a-82a4-11e5-a34c-07dfca3608b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:882","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.addNode(com.graphhopper.reader.OSMNode)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"07597aca-82a4-11e5-a34c-936f949925bd","diffs":[{"methodsDiff":{"delete":["java.lang.System.arraycopy"]},"type":"staticDiff"}]}]}