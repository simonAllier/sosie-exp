{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":127,"com.graphhopper.routing.PathTest.testFindInstruction":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":93,"com.graphhopper.reader.OSMReaderTest.testFerry":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":13,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":62,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":136,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":100,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":176,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":24,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":124,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":31,"com.graphhopper.reader.OSMReaderTest.testWithBounds":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":43,"com.graphhopper.reader.PrinctonReaderTest.testRead":166,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":2,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":92,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":144,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":48,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":107,"com.graphhopper.GraphHopperTest.testPrepare":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":32,"com.graphhopper.util.InstructionListTest.testWayList2":67,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":37,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":120,"com.graphhopper.reader.OSMReaderTest.testFoot":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":103,"com.graphhopper.util.InstructionListTest.testWayList":66,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":126,"com.graphhopper.reader.OSMReaderTest.testOneWay":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":25,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":76,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":98,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":183,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":102,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":111,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":116,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":58,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":157,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":167,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":54,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":42,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":33,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":87,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":40,"com.graphhopper.routing.PathBidirRefTest.testExtract":59,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":149,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":175,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":50,"com.graphhopper.GraphHopperTest.testLoadOSM":182,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":170,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":121,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":174,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":173,"com.graphhopper.reader.OSMReaderTest.testSort":155,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":172,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":128,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":84,"com.graphhopper.reader.OSMReaderTest.testMain":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":45,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":109,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":35,"com.graphhopper.routing.PathBidirRefTest.testExtract2":60,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":51,"com.graphhopper.routing.PathTest.testWayList":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":82,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":130,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":85,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":145,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":72,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":114,"com.graphhopper.storage.GraphHopperStorageTest.testClone":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":91,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":29,"com.graphhopper.GraphHopperTest.testFootAndCar":180,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":99,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":137,"com.graphhopper.GraphHopperTest.testPrepareOnly":169,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":10,"com.graphhopper.GraphHopperTest.testVia":177,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":26,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":142,"com.graphhopper.GraphHopperAPITest.testLoad":151,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":34,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":68,"com.graphhopper.GraphHopperTest.testFootOnly":185,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":129,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":160,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":112,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":53,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":8,"com.graphhopper.util.InstructionListTest.testFind":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":135,"com.graphhopper.reader.OSMReaderTest.testBarriers":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":104,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":38,"com.graphhopper.util.GHUtilityTest.testCopy":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":133},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"tindex":"b6fede00-790d-11e5-9684-d929e8f5c54d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.BitUtil.getIntLow(long))"},"status":-1},{"failures":[187],"tindex":"b6ff0511-790d-11e5-9684-1163d7d2f17a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.sqrt(((double * double) + (double * double)))"},"variableMap":{"len":"maxSpeed","delta":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:60","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-1},{"failures":[],"tindex":"b6ff0512-790d-11e5-9684-bb85790ca914","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:103","type":"CtForEachImpl","sourcecode":"for (int int : int[]) {\n    java.util.Set<java.lang.Integer>.add(int);\n}"},"status":-2},{"failures":[],"tindex":"b6ff0513-790d-11e5-9684-27c65b23a522","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:199","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('(')"},"variableMap":{"sb":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:301","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"status":-2},{"failures":[],"tindex":"b6ff0514-790d-11e5-9684-cd569b73d84d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:191","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.chWeightings\", com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString())"},"status":-2},{"failures":[],"tindex":"b6ff0515-790d-11e5-9684-fb81c4b90327","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:367","type":"CtIfImpl","sourcecode":"if ((double > 50) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"b6ff2c26-790d-11e5-9684-dbc82f799272","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"status":-2},{"failures":[],"tindex":"b6ff2c27-790d-11e5-9684-27037ac3ec68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:801","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"depth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:199","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (int < (int[][int])) {\n        throw new java.lang.IllegalStateException((\"entries should decrease or stay but was:\" + (java.util.Arrays.toString(int[]))));\n    } \n    int = int[][int];\n    byte[][int] = com.graphhopper.storage.index.LocationIndexTree.getShift(int[][int]);\n    long[][int] = com.graphhopper.storage.index.LocationIndexTree.getBitmask(byte[][int]);\n}"},"status":-2},{"failures":[],"tindex":"b6ff2c28-790d-11e5-9684-bb0cfb7a6390","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"maxLeafEntries":"v"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:102","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"b6ff2c29-790d-11e5-9684-93d42140f024","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:699","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint(double , double)"},"variableMap":{"lon":"tmpLon","lat":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:182","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.util.DistanceCalc.calcCrossingPointToEdge(double, double, double, double, double, double)"},"status":-2},{"failures":[],"tindex":"b6ff2c2a-790d-11e5-9684-332c3c41a314","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:516","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long)"},"variableMap":{"nodeOsmId":"viaOsmNodeId","this":"osmReader"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:81","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getInternalNodeIdOfOsmNode(this.long)"},"status":-2},{"failures":[],"tindex":"b6ff2c2b-790d-11e5-9684-631ce2185202","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"nextEle","angleXY":"nextEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:190","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"b6ff533c-790d-11e5-9684-499e362b8f39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"variableMap":{"splitIndex":"i","entrySize":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:719","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseIntIntArray.valueAt(int)"},"status":-2},{"failures":[],"tindex":"b6ff533d-790d-11e5-9684-5db0dbd45162","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:116","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" lat=\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:289","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"b6ff533e-790d-11e5-9684-7b855594f580","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:540","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.CmdArgs.getBool(\"graph.elevation.calcmean\", false)"},"status":-2},{"failures":[],"tindex":"b6ff533f-790d-11e5-9684-9b88801335a7","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:39","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"b6ff5340-790d-11e5-9684-756b411924d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:106","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.java.lang.String = java.lang.String"},"variableMap":{"com.graphhopper.util.Constants.VERSION":"str","tmp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:212","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"0\""},"status":-2},{"failures":[],"tindex":"b6ff5341-790d-11e5-9684-0bd121bf23a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon())).append(\"\\'>\")"},"status":-2},{"failures":[],"tindex":"b6ff5342-790d-11e5-9684-cfb013e964d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:125","type":"CtIfImpl","sourcecode":"if ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))\n    break;\n"},"status":-2},{"failures":[],"tindex":"b6ff7a53-790d-11e5-9684-3dc3abec3920","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:288","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"srtm_\""},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}