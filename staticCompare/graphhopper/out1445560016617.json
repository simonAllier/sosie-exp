{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":112,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":29,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":66,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":123,"com.graphhopper.reader.OSMReaderTest.testFerry":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":101,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":120,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":130,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":122,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":119,"com.graphhopper.storage.VLongStorageTest.testWrite":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":62,"com.graphhopper.reader.OSMReaderTest.testWithBounds":43,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":110,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":109,"com.graphhopper.coll.CompressedArrayTest.testCompress":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":77,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":96,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":111,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":129,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":80,"com.graphhopper.GraphHopperTest.testPrepare":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":23,"com.graphhopper.util.InstructionListTest.testWayList2":94,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":47,"com.graphhopper.reader.OSMReaderTest.testFoot":133,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":30,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":32,"com.graphhopper.util.BitUtilLittleTest.testToBitString":89,"com.graphhopper.util.InstructionListTest.testWayList":93,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":114,"com.graphhopper.reader.OSMReaderTest.testOneWay":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":100,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":99,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":126,"com.graphhopper.GraphHopperAPITest.testDisconnected179":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":74,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":118,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":49,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":61,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":63,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":37,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":24,"com.graphhopper.coll.OSMIDMapTest.testGet":88,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":86,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":64,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":1,"com.graphhopper.reader.OSMReaderTest.testSort":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":72,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":115,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":22,"com.graphhopper.reader.OSMReaderTest.testMain":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":82,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":104,"com.graphhopper.routing.PathTest.testWayList":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":57,"com.graphhopper.util.BitUtilBigTest.testFromBitString":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":26,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":52,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":55,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":79,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":103,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":21,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":51,"com.graphhopper.GraphHopperTest.testFootAndCar":10,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":78,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":67,"com.graphhopper.util.BitUtilLittleTest.testToFloat":90,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":107,"com.graphhopper.coll.CompressedArrayTest.testCompress2":2,"com.graphhopper.GraphHopperTest.testPrepareOnly":6,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":13,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":41,"com.graphhopper.GraphHopperAPITest.testLoad":4,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":76,"com.graphhopper.GraphHopperTest.testFootOnly":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":25,"com.graphhopper.util.BitUtilLittleTest.testToInt":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":58,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":40,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":59,"com.graphhopper.reader.OSMReaderTest.testBarriers":36,"com.graphhopper.util.InstructionListTest.testFind":92,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":16,"com.graphhopper.util.GHUtilityTest.testCopy":95,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":83,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":128},"transformations":[{"failures":[],"tindex":"c46fbb7d-791c-11e5-a6d9-b797e25a2bef","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:41","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,1,2,3],"tindex":"c46fe28e-791c-11e5-a6d9-49fa1820208f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:132","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"c46fe28f-791c-11e5-a6d9-9fbe832e06be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:56","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >>> 8))"},"variableMap":{"offset":"value","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >>> 16))"},"status":-1},{"failures":[],"tindex":"c47009a0-791c-11e5-a6d9-8fbf98cd20c7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n    double double = com.graphhopper.util.PointList.getLatitude(int);\n    double double = com.graphhopper.util.PointList.getLongitude(int);\n    if (!((int == 0) && (int == 0))) {\n        double double;\n        int int = int;\n        if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n            double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n            if (int > 0)\n                int++;\n            \n        } else {\n            double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n            if (int > 0)\n                int++;\n            \n        }\n        if (double < double) {\n            double = double;\n            int = int;\n        } \n    } \n    double = double;\n    double = double;\n}"},"variableMap":{"prevLon":"lon","prevLat":"lon","instructionIndex":"foundInstruction","distCalc":"distCalc","foundMinDistance":"lat","lon":"prevLat","lat":"lon","foundInstruction":"foundInstruction","points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.InstructionList.(getSize()) > 1) {\n    for (int int = 0 ; int < com.graphhopper.util.InstructionList.(getSize()) ; int++) {\n        com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(int).getPoints();\n        for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n            double double = com.graphhopper.util.PointList.getLatitude(int);\n            double double = com.graphhopper.util.PointList.getLongitude(int);\n            if (!((int == 0) && (int == 0))) {\n                double double;\n                int int = int;\n                if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n                    double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n                    if (int > 0)\n                        int++;\n                    \n                } else {\n                    double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n                    if (int > 0)\n                        int++;\n                    \n                }\n                if (double < double) {\n                    double = double;\n                    int = int;\n                } \n            } \n            double = double;\n            double = double;\n        }\n    }\n} "},"status":0},{"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,39],"tindex":"c47009a1-791c-11e5-a6d9-1110b4d4fb2d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:312","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\", \"\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[113],"tindex":"c47009a2-791c-11e5-a6d9-1d7c2afaf833","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:90","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.String.length()) / 8"},"status":-1},{"failures":[],"tindex":"c47009a3-791c-11e5-a6d9-d39378ae9053","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:72","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"compressionLevel":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":0},{"failures":[114,115,116,117,118,119,120,121,122,123,124,111,125,126,112,127,128],"tindex":"c47030b4-791c-11e5-a6d9-1bd52245fa4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:157","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap)"},"variableMap":{"configuration":"configuration","fe":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap)"},"status":-1},{"failures":[],"tindex":"c47030b5-791c-11e5-a6d9-61cb1b53feaf","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"origPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:96","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.PointList.getSize()"},"status":0},{"failures":[129,6,130,7,8,9,10,11,12,131,13,14,132,33,133,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"c47030b6-791c-11e5-a6d9-0f373c5b78f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:209","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader)"},"variableMap":{"parser":"parser","id":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:205","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader)"},"status":-1},{"failures":[],"tindex":"c47030b7-791c-11e5-a6d9-7704188a8bd2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-2},{"failures":[],"tindex":"c47030b8-791c-11e5-a6d9-e3895d3e6380","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"tmpNo","guess":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:161","type":"CtAssignmentImpl","sourcecode":"int = 4"},"status":-2},{"failures":[],"tindex":"c47030b9-791c-11e5-a6d9-3fab9498e046","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"status":-2},{"failures":[],"tindex":"c47057ca-791c-11e5-a6d9-2d1bd93f351d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:232","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"variableMap":{"ar_y":"norm","ab_y":"r_lon","ar_x":"r_lat","ab_x":"delta_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:154","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"status":-2},{"failures":[],"tindex":"c47057cb-791c-11e5-a6d9-7fd6c0ae84b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:419","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"c47057cc-791c-11e5-a6d9-978504c3027f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:182","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-2},{"failures":[],"tindex":"c47057cd-791c-11e5-a6d9-2bf6bad78b81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:647","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.geohash.SpatialKeyAlgo.encode(com.graphhopper.util.shapes.GHPoint)"},"status":-2},{"failures":[],"tindex":"c47057ce-791c-11e5-a6d9-694f2c4371ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"variableMap":{"need":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:603","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"c47057cf-791c-11e5-a6d9-2d9a4e91be8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:989","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:951","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.GHRequest.getVehicle()"},"status":-2},{"failures":[],"tindex":"c47057d0-791c-11e5-a6d9-079c3f945be1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}