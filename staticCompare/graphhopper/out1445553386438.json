{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":70,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":93,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":181,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":317,"com.graphhopper.reader.OSMReaderTest.testFerry":3,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":18,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":19,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":90,"com.graphhopper.routing.QueryGraphTest.testOneWay":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":177,"com.graphhopper.reader.OSMReaderTest.testWithBounds":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":338,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":78,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":328,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":337,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":336,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":195,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":117,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":298,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":45,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":300,"com.graphhopper.GraphHopperTest.testPrepare":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":347,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":33,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":156,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":52,"com.graphhopper.util.InstructionListTest.testWayList":28,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":170,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":32,"com.graphhopper.GraphHopperAPITest.testDisconnected179":116,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":324,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":175,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":178,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":114,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":266,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":350,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":127,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":145,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":259,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":258,"com.graphhopper.GraphHopperTest.testLoadOSM":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":198,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":179,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":279,"com.graphhopper.reader.OSMReaderTest.testSort":6,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":64,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":295,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":42,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":348,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":74,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":98,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":17,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":105,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":135,"com.graphhopper.routing.PathTest.testWayList":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":349,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":308,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":59,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":92,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":292,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":272,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":240,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":209,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":315,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":113,"com.graphhopper.util.GHUtilityTest.testSort":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":325,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":312,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":103,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":267,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":219,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":252,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":271,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":222,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":231,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":158,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":243,"com.graphhopper.GraphHopperAPITest.testLoad":115,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":249,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":150,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":276,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":141,"com.graphhopper.reader.OSMReaderTest.testBarriers":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":234,"com.graphhopper.routing.PathTest.testFound":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":340,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":192,"com.graphhopper.util.GHUtilityTest.testCopy":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":321,"com.graphhopper.routing.PathTest.testFindInstruction":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":49,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":245,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":326,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":60,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":217,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":168,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":65,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":20,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":307,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":247,"com.graphhopper.reader.PrinctonReaderTest.testRead":1,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":44,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":89,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":303,"com.graphhopper.util.InstructionListTest.testWayList2":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":201,"com.graphhopper.reader.OSMReaderTest.testFoot":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":343,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":184,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":173,"com.graphhopper.reader.OSMReaderTest.testOneWay":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":265,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":86,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":293,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":285,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":330,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":43,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":211,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":140,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":333,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":8,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":36,"com.graphhopper.routing.PathBidirRefTest.testExtract":87,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":225,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":124,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":342,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":268,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":207,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":341,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":120,"com.graphhopper.util.GHUtilityTest.testSort2":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":329,"com.graphhopper.reader.OSMReaderTest.testMain":5,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":273,"com.graphhopper.routing.PathBidirRefTest.testExtract2":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":305,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":345,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":199,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":188,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":210,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":297,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":256,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":71,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":41,"com.graphhopper.storage.GraphHopperStorageTest.testClone":143,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":180,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":302,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":152,"com.graphhopper.GraphHopperTest.testFootAndCar":128,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":323,"com.graphhopper.routing.PathTest.testTime":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":335,"com.graphhopper.util.GHUtilityTest.testSortDirected":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":301,"com.graphhopper.GraphHopperTest.testPrepareOnly":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":291,"com.graphhopper.GraphHopperTest.testVia":125,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":220,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":62,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":194,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":274,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":30,"com.graphhopper.GraphHopperTest.testFootOnly":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":200,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":11,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":202,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":109,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":332,"com.graphhopper.util.InstructionListTest.testFind":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":282},"transformations":[{"failures":[0],"tindex":"5492f111-790d-11e5-8000-e35c06940a97","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"bwFaster"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:239","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,0,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351],"tindex":"54931822-790d-11e5-8000-9daa2095b8b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:69","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(10, ((int)((int) * 1.5F)))"},"variableMap":{"pointer":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:521","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"54933f33-790d-11e5-8000-4bcac05b8978","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"lat","angle":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:636","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, 0)"},"status":-2},{"failures":[],"tindex":"54933f34-790d-11e5-8000-f10671d2484b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:48","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"54936645-790d-11e5-8000-75b29ba789f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"newWeight","speed":"newWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:311","type":"CtIfImpl","sourcecode":"if (double < (com.graphhopper.routing.PathBidirRef.getWeight())) {\n    com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean);\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.setWeight(double);\n} "},"status":-2},{"failures":[],"tindex":"54936646-790d-11e5-8000-8f5936102b63","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:111","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Boolean.parseBoolean(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"variableMap":{"str":"trackType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:87","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-2},{"failures":[],"tindex":"54936647-790d-11e5-8000-6f0d6502ad51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:123","type":"CtInvocationImpl","sourcecode":"java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.add(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry)"},"status":-2},{"failures":[],"tindex":"54936648-790d-11e5-8000-fb4d3cb9823c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:112","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"54938d59-790d-11e5-8000-756ea63435e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"variableMap":{"segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:117","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"status":-2},{"failures":[],"tindex":"54938d5a-790d-11e5-8000-49840d5a84b1","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:197","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = ((((((double) + \",\") + (double)) + \",\") + (double)) + \",\") + (double)"},"status":-2},{"failures":[],"tindex":"54938d5b-790d-11e5-8000-876532628bc6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:666","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"))"},"status":-2},{"failures":[],"tindex":"54938d5c-790d-11e5-8000-7f82648ec2a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"variableMap":{"offset":"i","bytes":"shifts","value":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:207","type":"CtAssignmentImpl","sourcecode":"byte[][int] = com.graphhopper.storage.index.LocationIndexTree.getShift(int[][int])"},"status":-2},{"failures":[],"tindex":"5493b46d-790d-11e5-8000-617a2fd97026","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:164","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.checkNodeId(int)"},"status":-2},{"failures":[],"tindex":"5493b46e-790d-11e5-8000-e13c9ea41ad1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"nextNodeBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:188","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"status":-2},{"failures":[],"tindex":"5493b46f-790d-11e5-8000-1bba22c43131","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:152","type":"CtIfImpl","sourcecode":"if (java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.isEmpty())\n    return false;\n"},"status":-2},{"failures":[],"tindex":"5493b470-790d-11e5-8000-dbca1d175239","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"fromNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:101","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"5493db81-790d-11e5-8000-bdc0bacf49a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"minutes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:500","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"5493db82-790d-11e5-8000-1741c536756f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:136","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"5493db83-790d-11e5-8000-874be41afc27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:157","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:184","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.init(int, int)"},"status":-2},{"failures":[],"tindex":"5493db84-790d-11e5-8000-23bf78cf7b57","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:164","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(java.lang.Object[], \"tmp\")"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}