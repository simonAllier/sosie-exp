{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":300,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":97,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":116,"com.graphhopper.reader.OSMReaderTest.testFerry":11,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":34,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":158,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":248,"com.graphhopper.routing.QueryGraphTest.testOneWay":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":182,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":338,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":93,"com.graphhopper.reader.OSMReaderTest.testWithBounds":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":86,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":254,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":149,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":267,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":220,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":130,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":330,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":181,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":275,"com.graphhopper.GraphHopperTest.testPrepare":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":299,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":209,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":227,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":263,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":282,"com.graphhopper.util.InstructionListTest.testWayList":39,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":242,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":120,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":359,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":33,"com.graphhopper.GraphHopperAPITest.testDisconnected179":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":358,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":3,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":283,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":288,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":94,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":27,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":329,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":166,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":352,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":341,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":215,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":278,"com.graphhopper.GraphHopperTest.testLoadOSM":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":276,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":95,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":160,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":233,"com.graphhopper.reader.OSMReaderTest.testSort":14,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":294,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":178,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":239,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":272,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":138,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":51,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":208,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":304,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":28,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":202,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":320,"com.graphhopper.routing.PathTest.testWayList":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":192,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":92,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":243,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":175,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":226,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":60,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":144,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":199,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":296,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":356,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":328,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":360,"com.graphhopper.util.GHUtilityTest.testSort":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":99,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":285,"com.graphhopper.coll.IntIntBinHeapTest.testSize":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":89,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":212,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":261,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":125,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":193,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":255,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":108,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":47,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":49,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":229,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":159,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":161,"com.graphhopper.GraphHopperAPITest.testLoad":29,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":303,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":155,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":211,"com.graphhopper.reader.OSMReaderTest.testBarriers":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":54,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":201,"com.graphhopper.routing.PathTest.testFound":322,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":1,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":349,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":126,"com.graphhopper.util.GHUtilityTest.testCopy":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":287,"com.graphhopper.routing.PathTest.testFindInstruction":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":279,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":66,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":200,"com.graphhopper.util.InstructionListTest.testEmptyList":37,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":290,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":115,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":240,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":295,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":82,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":269,"com.graphhopper.reader.PrinctonReaderTest.testRead":26,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":165,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":207,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":187,"com.graphhopper.util.InstructionListTest.testWayList2":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":136,"com.graphhopper.reader.OSMReaderTest.testFoot":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":103,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":262,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":100,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":245,"com.graphhopper.reader.OSMReaderTest.testOneWay":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":363,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":176,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":204,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":167,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":237,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":4,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":65,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":273,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":121,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":210,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":217,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":16,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":325,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":268,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":265,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":277,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":266,"com.graphhopper.routing.PathBidirRefTest.testExtract":318,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":337,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":308,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":98,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":90,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":336,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":142,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":335,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":334,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":353,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":333,"com.graphhopper.util.GHUtilityTest.testSort2":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":297,"com.graphhopper.reader.OSMReaderTest.testMain":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":194,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":195,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":152,"com.graphhopper.routing.PathBidirRefTest.testExtract2":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":189,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":280,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":104,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":119,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":309,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":362,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":145,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":180,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":0,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":24,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":96,"com.graphhopper.storage.GraphHopperStorageTest.testClone":213,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":198,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":185,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":223,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":230,"com.graphhopper.GraphHopperTest.testFootAndCar":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":157,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":361,"com.graphhopper.routing.PathTest.testTime":323,"com.graphhopper.util.InstructionListTest.testCreateGPX":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":293,"com.graphhopper.util.GHUtilityTest.testSortDirected":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":174,"com.graphhopper.GraphHopperTest.testPrepareOnly":331,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":118,"com.graphhopper.GraphHopperTest.testVia":339,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":292,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":21,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":153,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":253,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":10,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":234,"com.graphhopper.GraphHopperTest.testFootOnly":348,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":135,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":19,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":137,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":173,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":324,"com.graphhopper.util.InstructionListTest.testFind":36,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":164},"transformations":[{"failures":[],"tindex":"97091a52-8287-11e5-8921-69471a19da8f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:487","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 1000000.0))) / 1000000.0"},"variableMap":{"value":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:68","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"97096873-8287-11e5-8921-7df4ce9ddee1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:166","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.DAType com.graphhopper.storage.DAType"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:202","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.storage.DAType com.graphhopper.storage.DAType = ((com.graphhopper.storage.DAType)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"97096874-8287-11e5-8921-63ee8613e2c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:192","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"97096875-8287-11e5-8921-cf67cfb69ad4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:590","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) << 2"},"status":-2},{"failures":[],"tindex":"97096876-8287-11e5-8921-a355bce09fe2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:370","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.WORST":"com.graphhopper.routing.util.PriorityCode.PREFER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:354","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[0,1,2,3],"tindex":"97098f87-8287-11e5-8921-fda4998093e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:404","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.Set<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[4,5,6],"tindex":"97098f88-8287-11e5-8921-51b731d719f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:114","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[7,8],"tindex":"97098f89-8287-11e5-8921-fbd0adcc3602","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRegistered(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:48","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":-1},{"failures":[],"tindex":"9709b69a-8287-11e5-8921-7f58768bc46a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:184","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((\"<?xml version=\\'1.0\\' encoding=\\'UTF-8\\' standalone=\\'no\\' ?>\" + (\"<gpx xmlns=\\'http://www.topografix.com/GPX/1/1\\' xmlns:xsi=\\'http://www.w3.org/2001/XMLSchema-instance\\'\" + (\" creator=\\'Graphhopper\\' version=\\'1.1\\'\" + (\" xmlns:gh=\\'https://graphhopper.com/public/schema/gpx/1.1\\'>\" + (\"\\n<metadata>\" + (\"<copyright author=\\\"OpenStreetMap contributors\\\"/>\" + (\"<link href=\\'http://graphhopper.com\\'>\" + (\"<text>GraphHopper GPX<\/text>\" + (\"<\/link>\" + \"<time>\"))))))))) + (java.text.SimpleDateFormat.format(long))) + \"<\/time>\") + \"<\/metadata>\""},"status":-2},{"failures":[],"tindex":"9709b69b-8287-11e5-8921-7d0db7cf9a67","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"variableMap":{"size":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"9709b69c-8287-11e5-8921-db15d31e32d9","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:99","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.isEmpty()"},"status":-2},{"failures":[9,10],"tindex":"9709b69d-8287-11e5-8921-b5036a05af1c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:226","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trk>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:200","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rte>\")"},"status":-1},{"failures":[],"tindex":"9709ddae-8287-11e5-8921-93c892fa4db8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"variableMap":{"dist":"wayPointMaxDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean).setDouglasPeucker(com.graphhopper.util.DouglasPeucker).setEnableInstructions(boolean).setSimplifyResponse(((boolean) && (double > 0))).doWork(com.graphhopper.GHResponse, java.util.List<com.graphhopper.routing.Path>, com.graphhopper.util.TranslationMap.getWithFallBack(java.util.Locale))"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,10,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,340,341,341,342,342,343,344,345,345,346,347,348,348,349],"tindex":"9709ddaf-8287-11e5-8921-b9367f4aebee","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"da","index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:113","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder)"},"status":-1},{"failures":[123],"tindex":"970a04c0-8287-11e5-8921-fb5a559172c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:258","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[65,66,72,80,81,174,175,181,189,190,350,351,352,353,354,221,222,228,236,237,314,315],"tindex":"970a04c1-8287-11e5-8921-d7d1ec92a0fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:481","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.pow(10, int)"},"variableMap":{"exponent":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:55","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":-1},{"failures":[],"tindex":"970a2bd2-8287-11e5-8921-0500ccf6c9df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"maxLat","tmp":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:166","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.max(com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double), com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"970a2bd3-8287-11e5-8921-35acd2532fdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:237","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[355,356,357,358,359,360,361,362,363,364,365],"tindex":"970a2bd4-8287-11e5-8921-dfaf217616fb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:642","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"->\""},"variableMap":{"str":"pavementName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:432","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\")"},"status":-1},{"failures":[],"tindex":"970a2bd5-8287-11e5-8921-199b2a1ab0a2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:95","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"width":"importance","lonSimilar":"importance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}