{"failureDictionary":{"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":33,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":27,"com.graphhopper.GraphHopperTest.testPrepare":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":31,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":12,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":18,"com.graphhopper.GraphHopperTest.testPrepareOnly":44,"com.graphhopper.GraphHopperTest.testVia":46,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":11,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":53,"com.graphhopper.GraphHopperTest.testFootOnly":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":23,"com.graphhopper.GraphHopperTest.testLoadOSM":49,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":9},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"1cf26cbd-791d-11e5-8637-bd7eef322a6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"bytes","edgeId":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:160","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setSegmentSize(int)"},"status":-1},{"failures":[],"tindex":"1cf26cbe-791d-11e5-8637-590b5f1c526c","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"start","capacity":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:82","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.set(int)"},"status":-2},{"failures":[],"tindex":"1cf26cbf-791d-11e5-8637-0922de45b652","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:607","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.CHGraphImpl.double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"r_lat_deg","weight":"a_lat_deg","com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT":"r_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:145","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, double, double, double);\n"},"status":-2},{"failures":[],"tindex":"1cf293d0-791d-11e5-8637-95c6358c294b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:219","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile)"},"variableMap":{"in":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:166","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextPBF();\nelse\n    com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextXML();\n"},"status":-2},{"failures":[],"tindex":"1cf293d1-791d-11e5-8637-a56887795350","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:183","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2},{"failures":[],"tindex":"1cf293d2-791d-11e5-8637-b96486ee66b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.flush()"},"variableMap":{"this":"locationIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1162","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndex.close()"},"status":-2},{"failures":[],"tindex":"1cf293d3-791d-11e5-8637-df21f0c40055","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"1cf293d4-791d-11e5-8637-d181593947a2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:594","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode())"},"status":-2},{"failures":[],"tindex":"1cf293d5-791d-11e5-8637-e591148715fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:195","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    int int = com.graphhopper.storage.DataAccess.getInt(long);\n    com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    if (double < double) {\n        com.graphhopper.storage.DataAccess.setInt(long, int);\n    } \n} else {\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-2},{"failures":[],"tindex":"1cf2bae6-791d-11e5-8637-33686f9daa8c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:584","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"1cf2bae7-791d-11e5-8637-651b86842276","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:184","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\");\n    if (java.lang.String != null) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n        long long = 0;\n        switch (java.lang.String.charAt(0)) {\n            case 'n' :\n                if (\"node\".equals(java.lang.String)) {\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n                } \n                break;\n            case 'w' :\n                {\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n                }\n            case 'r' :\n                long = java.lang.Long.parseLong(java.lang.String);\n                return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n        }\n    } \n} "},"status":-2},{"failures":[],"tindex":"1cf2bae8-791d-11e5-8637-89c0f1bf2c01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:239","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<desc>\")"},"status":-2},{"failures":[],"tindex":"1cf2bae9-791d-11e5-8637-69a16923ec1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:848","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int)"},"status":-2},{"failures":[],"tindex":"1cf2baea-791d-11e5-8637-7bacac13ac2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:121","type":"CtIfImpl","sourcecode":"if ((byte & byte) == 0)\n    java.lang.StringBuilder.append('0');\nelse\n    java.lang.StringBuilder.append('1');\n"},"status":-2},{"failures":[],"tindex":"1cf2baeb-791d-11e5-8637-216a3b83683f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"currFrom","currEdge":"currFrom","nEdge":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:155","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.poll()"},"status":-2},{"failures":[],"tindex":"1cf2baec-791d-11e5-8637-9d486356f6ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"lon","shortTripsSpeed":"lon","durationInHours":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:189","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"1cf2e1fd-791d-11e5-8637-018e38c482d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:708","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-2},{"failures":[],"tindex":"1cf2e1fe-791d-11e5-8637-05ae158f82dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"variableMap":{"priorityWayEncoder":"relationCodeEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-2},{"failures":[],"tindex":"1cf2e1ff-791d-11e5-8637-b950289aa063","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"variableMap":{"allBits":"edgeFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:450","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n    com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n    java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n        com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n    }\n} "},"status":-2},{"failures":[],"tindex":"1cf2e200-791d-11e5-8637-c1b588109ebd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:140","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}