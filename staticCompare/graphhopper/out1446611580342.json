{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":172,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":77,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":165,"com.graphhopper.reader.OSMReaderTest.testFerry":92,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":156,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":22,"com.graphhopper.reader.OSMReaderTest.testWithBounds":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":177,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":170,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":214,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":176,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":188,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":155,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":31,"com.graphhopper.GraphHopperTest.testPrepare":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":76,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":49,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":193,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":59,"com.graphhopper.util.InstructionListTest.testWayList":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":68,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":107,"com.graphhopper.GraphHopperAPITest.testDisconnected179":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":142,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":65,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":223,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":183,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":55,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":23,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":145,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":198,"com.graphhopper.reader.OSMReaderTest.testSort":94,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":71,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":153,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":52,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":111,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":80,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":104,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":220,"com.graphhopper.routing.PathTest.testWayList":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":58,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":19,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":187,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":10,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":73,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":222,"com.graphhopper.util.GHUtilityTest.testSort":110,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":163,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":5,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":115,"com.graphhopper.GraphHopperAPITest.testLoad":47,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":79,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":189,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":186,"com.graphhopper.reader.OSMReaderTest.testBarriers":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":179,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":64,"com.graphhopper.util.GHUtilityTest.testCopy":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":56,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":117,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":67,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":202,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":128,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":209,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":144,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":54,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":159,"com.graphhopper.util.InstructionListTest.testWayList2":18,"com.graphhopper.reader.OSMReaderTest.testFoot":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":181,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":178,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":203,"com.graphhopper.reader.OSMReaderTest.testOneWay":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":148,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":200,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":173,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":185,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":206,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":87,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":105,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":212,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":180,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":84,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":83,"com.graphhopper.util.GHUtilityTest.testSort2":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":74,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":7,"com.graphhopper.routing.PathBidirRefTest.testExtract2":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":27,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":131,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":213,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":141,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":154,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":125,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":51,"com.graphhopper.storage.StorablePropertiesTest.testStore":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":164,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":158,"com.graphhopper.GraphHopperTest.testFootAndCar":91,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":175,"com.graphhopper.GraphHopperTest.testPrepareOnly":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":150,"com.graphhopper.GraphHopperTest.testVia":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":69,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":143,"com.graphhopper.GraphHopperTest.testFootOnly":46,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":99,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":149,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":147},"transformations":[{"failures":[],"tindex":"2159bbf2-82ad-11e5-a6de-793f9c2dfdbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.StopWatch:58","type":"CtAssignmentImpl","sourcecode":"long = -1"},"status":0},{"failures":[0],"tindex":"215b1b83-82ad-11e5-a6de-c5fe6ab6b322","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:280","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n"},"status":-1},{"failures":[],"tindex":"215b1b84-82ad-11e5-a6de-f96b64b1d2a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:566","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"215b4295-82ad-11e5-a6de-7744f0b4d207","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:242","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:133","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":-2},{"failures":[1,2],"tindex":"215b4296-82ad-11e5-a6de-550f5f85972e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:123","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"215b4297-82ad-11e5-a6de-3347357f34d0","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:211","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.CHGraphImpl.getNodes()"},"status":-2},{"failures":[],"tindex":"215b4298-82ad-11e5-a6de-7bfea04cecec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:158","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    java.lang.String += \"_SYNC\";\n"},"variableMap":{"str":"str","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:156","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    java.lang.String += \"_STORE\";\n"},"status":0},{"failures":[],"tindex":"215b69a9-82ad-11e5-a6de-8fc524a415ef","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"variableMap":{"parent":"currFrom","ase":"currFrom","currEdge":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:76","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry)"},"status":0},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"215b69aa-82ad-11e5-a6de-a997b0b7e615","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:102","type":"CtTryImpl","sourcecode":"try {\n    while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n        if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n            continue;\n        } \n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n            continue;\n        } \n        int int = java.lang.String.indexOf(\"=\");\n        if (int < 0) {\n            com.graphhopper.util.Helper.org.slf4j.Logger.warn((\"Skipping configuration at line:\" + java.lang.String));\n            continue;\n        } \n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n    }\n} finally {\n    java.io.BufferedReader.close();\n}"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"215b69ab-82ad-11e5-a6de-317c5203ffee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"variableMap":{"y1":"lat","x1":"lon","y2":"lon","x2":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:905","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double)"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,44,79,80,81,82,83,84,85,86,87,88,89,90,91,12,13,15,46],"tindex":"215b90bc-82ad-11e5-a6de-bbadb8c3da1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:98","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AbstractRoutingAlgorithm.createEdgeEntry(int, double)"},"status":-1},{"failures":[],"tindex":"215b90bd-82ad-11e5-a6de-6f0e285fdf27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:942","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"215b90be-82ad-11e5-a6de-d9c3c665cc53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:145","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n        java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n        continue;\n    } \n    int int = com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.countOccurence(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), \"\\\\%\");\n    if (int != com.graphhopper.util.TranslationMap.(com.graphhopper.util.TranslationMap.countOccurence(java.lang.String, \"\\\\%\"))) {\n        java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n    } else {\n        java.lang.Object[] java.lang.Object[] = new java.lang.String[int];\n        java.util.Arrays.fill(java.lang.Object[], \"tmp\");\n        try {\n            java.lang.String.format(java.lang.String, java.lang.Object[]);\n        } catch (java.lang.Exception ex) {\n            java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n        }\n    }\n}"},"status":0},{"failures":[92,93,16,94,95,96,97,98,99,100,101,102,103,104,47,105,106,107,17,18,108,109,110,4,111,19,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,20,127,128,129,21,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,8,145,26,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,27,161,162,163,28,164,29,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,30,180,181,182,31,183,9,184,32,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,33,200,201,202,34,203,204,36,37,38,40,41,43,205,50,206,207,208,209,51,53,54,210,211,55,56,58,59,60,61,64,66,68,71,72,73,74,75,76,44,79,80,81,212,213,1,214,215,216,217,218,2,219,220,221,222,223,224,11,83,85,86,225,88,89,90,91,12,13,14,15,46,226],"tindex":"215bb7cf-82ad-11e5-a6de-63a10fc4b676","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:146","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int)"},"status":-1},{"failures":[92,93,16,94,95,96,97,98,99,100,101,102,227,103,224,11,225,88,89,90,91,12,13,14,15,46,226],"tindex":"215bdee0-82ad-11e5-a6de-9b4a0adf096f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:450","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.DataAccess.loadExisting()))\n    throw new java.lang.IllegalStateException((\"Cannot load edges. corrupt file or directory? \" + (com.graphhopper.storage.Directory)));\n"},"variableMap":{"edges":"da","dir":"dir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Directory.remove(com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"215bdee1-82ad-11e5-a6de-41437f6b9cf9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:362","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"variableMap":{"baseNode":"key","id":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:138","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getBoolean(int, boolean, boolean)"},"status":-2},{"failures":[],"tindex":"215bdee2-82ad-11e5-a6de-717626acebce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:152","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"variableMap":{"cp":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:209","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[50,207,51,53,54,210,211],"tindex":"215bdee3-82ad-11e5-a6de-4f294e8b8880","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:80","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"variableMap":{"time":"tmpDegreeCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"status":-2},{"failures":[],"tindex":"215c05f4-82ad-11e5-a6de-abc2448063ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"variableMap":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"closed","v":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:305","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[113,147,166,186],"tindex":"215c05f5-82ad-11e5-a6de-9d9f9bd1719b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:755","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.setFlags_(long, (int > int), long)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"215b90be-82ad-11e5-a6de-d9c3c665cc53","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"]},"type":"branch"},{"methodsDiff":{"delete":["java.util.Map<java.lang.String, java.lang.String>.get","com.graphhopper.util.Helper.isEmpty","java.util.Arrays.fill","java.lang.StringBuilder.append","java.util.Map<java.lang.String, java.lang.String>.put","java.lang.Throwable.getMessage","com.graphhopper.util.Translation.getLocale","java.util.Map.Entry<java.lang.String, java.lang.String>.getKey","com.graphhopper.util.TranslationMap.countOccurence","java.util.Map.Entry<java.lang.String, java.lang.String>.getValue","java.lang.String.format"]},"branchesDiff":{"delete":["c4","l3","t0","t1","e2"]},"type":"staticDiff"}]},{"transformation":"215b4298-82ad-11e5-a6de-7bfea04cecec","diffs":[{"branches":{"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":["com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.storage.DAType_java.lang.String_toString().e4"]},"type":"branch"},{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}