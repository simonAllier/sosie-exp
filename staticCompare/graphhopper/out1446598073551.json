{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":4,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":37,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":68,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":6,"com.graphhopper.routing.PathTest.testFindInstruction":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":5,"com.graphhopper.routing.PathBidirRefTest.testExtract2":19,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":10,"com.graphhopper.routing.PathTest.testWayList":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":23,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":36,"com.graphhopper.GraphHopperTest.testPrepare":55,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":67,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":69,"com.graphhopper.GraphHopperTest.testFootAndCar":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":39,"com.graphhopper.util.InstructionListTest.testWayList2":46,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":20,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":8,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":30,"com.graphhopper.util.InstructionListTest.testWayList":45,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":65,"com.graphhopper.GraphHopperTest.testVia":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":1,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":2,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":33,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":17,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":13,"com.graphhopper.GraphHopperAPITest.testLoad":62,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":41,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":47,"com.graphhopper.GraphHopperTest.testFootOnly":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":21,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":56,"com.graphhopper.routing.PathBidirRefTest.testExtract":18,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":53,"com.graphhopper.util.InstructionListTest.testFind":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":29,"com.graphhopper.GraphHopperTest.testLoadOSM":59,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":52,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":49},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"ae972a11-828d-11e5-ab9f-815344aa2d7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"variableMap":{"parent":"currFrom","ase":"currFrom","currEdge":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:76","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[6],"tindex":"ae977832-828d-11e5-ab9f-0fb3146eaf13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:89","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"ae977833-828d-11e5-ab9f-cf4cb10bcccb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage[][((int) - 1)].trimToSize()"},"status":0},{"failures":[],"tindex":"ae977834-828d-11e5-ab9f-f1b850e775f0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:361","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:418","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"ae977835-828d-11e5-ab9f-1f8c88673ac8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:286","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"status":-2},{"failures":[7],"tindex":"ae979f46-828d-11e5-ab9f-bdd005532ceb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"status":-1},{"failures":[],"tindex":"ae979f47-828d-11e5-ab9f-85f9902e0c61","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:488","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[8],"tindex":"ae979f48-828d-11e5-ab9f-3905e254dcf5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:152","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"UNSAFE\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:290","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-1},{"failures":[9],"tindex":"ae979f49-828d-11e5-ab9f-01751e332d2a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"latSimilar","end":"latSimilar"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"status":-1},{"failures":[],"tindex":"ae97c65a-828d-11e5-ab9f-1d2312135fce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:308","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n    if (int > 0)\n        int++;\n    \n} else {\n    double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n    if (int > 0)\n        int++;\n    \n}"},"status":-2},{"failures":[],"tindex":"ae97c65b-828d-11e5-ab9f-e5abab8a2244","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"type":"com.graphhopper.storage.DAType.RAM_STORE","defaultType":"com.graphhopper.storage.DAType.RAM_STORE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:174","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"ae97c65c-828d-11e5-ab9f-87fa56baec84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:308","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n    if (int > 0)\n        int++;\n    \n} else {\n    double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n    if (int > 0)\n        int++;\n    \n}"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,0,22,1,23,24,25,26,27,28,2,29,30,31,32,33,3,34,35,36,37,38,39,40,41,5,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"ae97ed6d-828d-11e5-ab9f-676acd421c54","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"i","edgeId":"i","com.graphhopper.storage.EdgeAccess.NO_NODE":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:281","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.EdgeVisitor.next(com.graphhopper.util.EdgeIteratorState, int)"},"status":-1},{"failures":[],"tindex":"ae97ed6e-828d-11e5-ab9f-d17d3a0e1f0f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"node","newBaseIndex":"priority"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":0},{"failures":[],"tindex":"ae97ed6f-828d-11e5-ab9f-a3a112e25e9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:169","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextXML()"},"status":-2},{"failures":[63,64,25,28,2,32,3,65,35,36,38,39,66,40,5,42,48,49,50,51,52,54,55,56,57,58,59,60],"tindex":"ae97ed70-828d-11e5-ab9f-7d4aef1f4333","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:174","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"variableMap":{"adjNode":"i","weights":"latitudes","tmpWeight":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:416","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-1},{"failures":[],"tindex":"ae981481-828d-11e5-ab9f-5f5c8b40f459","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:255","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"variableMap":{"res":"counter","value":"wayStart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:301","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":0},{"failures":[],"tindex":"ae981482-828d-11e5-ab9f-a9c786354fdf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1106","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (boolean) && (boolean)"},"status":-2},{"failures":[67,68,69],"tindex":"ae981483-828d-11e5-ab9f-793131205259","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"counter","currentIndex":"fromIndex","bucketSize":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:160","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    for (int int = int + 1 ; int < int ; int++) {\n        com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n        int++;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int);\n    int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int);\n}"},"status":-1},{"failures":[],"tindex":"ae981484-828d-11e5-ab9f-25617c24cd4a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:54","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"variableMap":{"s":"field"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:125","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"ae977833-828d-11e5-ab9f-cf4cb10bcccb","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.VLongStorage.trimToSize"]},"type":"staticDiff"}]}]}