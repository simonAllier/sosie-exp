{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":65,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":8,"com.graphhopper.reader.OSMReaderTest.testMain":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":56,"com.graphhopper.routing.PathTest.testFindInstruction":3,"com.graphhopper.reader.OSMReaderTest.testFerry":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":43,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":44,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":75,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":78,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":52,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":35,"com.graphhopper.coll.CompressedArrayTest.testCompress":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":38,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":82,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":20,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":7,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":9,"com.graphhopper.GraphHopperTest.testPrepare":13,"com.graphhopper.GraphHopperTest.testFootAndCar":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":61,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":58,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":76,"com.graphhopper.util.InstructionListTest.testWayList":5,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":37,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":74,"com.graphhopper.reader.OSMReaderTest.testRelation":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":51,"com.graphhopper.coll.CompressedArrayTest.testCompress2":68,"com.graphhopper.GraphHopperTest.testVia":12,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":46,"com.graphhopper.GraphHopperAPITest.testLoad":30,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":14,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":36,"com.graphhopper.GraphHopperTest.testFootOnly":16,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":27,"com.graphhopper.util.InstructionListTest.testFind":4,"com.graphhopper.reader.OSMReaderTest.testBarriers":33,"com.graphhopper.GraphHopperTest.testLoadOSM":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":39,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":0,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":24,"com.graphhopper.reader.OSMReaderTest.testSort":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":64},"transformations":[{"failures":[],"tindex":"877907dc-8287-11e5-a5d2-abcc31c650a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:494","type":"CtLocalVariableImpl","sourcecode":"long long = long[][int]"},"status":-2},{"failures":[0,1,2],"tindex":"87792eed-8287-11e5-a5d2-ad374c1c10f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:644","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[3,4],"tindex":"87792eee-8287-11e5-a5d2-1de6be0d3606","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:183","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(((int) + 1))"},"variableMap":{"wayIndex":"pointIndex","fullPL":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:301","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(int)"},"status":-1},{"failures":[],"tindex":"87792eef-8287-11e5-a5d2-a7f7806f4109","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:367","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"87795600-8287-11e5-a5d2-018b69fd301c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:492","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 10000.0))) / 10000.0"},"variableMap":{"value":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:60","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[],"tindex":"87795601-8287-11e5-a5d2-bd894555f0e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[5],"tindex":"87795602-8287-11e5-a5d2-a967bce26652","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:375","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Path.isFound()) {\n    com.graphhopper.util.InstructionList.add(new com.graphhopper.util.FinishInstruction(com.graphhopper.storage.NodeAccess , int));\n} "},"status":-1},{"failures":[],"tindex":"87795603-8287-11e5-a5d2-416c7d555361","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:158","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.setSegmentSize(int);\n}"},"status":0},{"failures":[6,7,8,9],"tindex":"87795604-8287-11e5-a5d2-173350aba200","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:170","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, int)"},"status":-1},{"failures":[],"tindex":"87795605-8287-11e5-a5d2-5be42df7c304","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:366","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:84","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getAdjNode()"},"status":-2},{"failures":[],"tindex":"87797d16-8287-11e5-a5d2-e305d8f46ff7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"max"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:335","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(double[][(2 * int)], double[][((2 * int) + 1)], java.lang.Double.double);\n}"},"status":-2},{"failures":[10,11],"tindex":"87797d17-8287-11e5-a5d2-d59beb572825","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:103","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry) != null) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.storage.EdgeEntry.int, int), com.graphhopper.storage.EdgeEntry, int);\n} "},"status":-1},{"failures":[12,13,14,15,16],"tindex":"87797d18-8287-11e5-a5d2-27a318a52711","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:830","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, com.graphhopper.routing.ch.PrepareContractionHierarchies)"},"status":-1},{"failures":[17,18],"tindex":"87797d19-8287-11e5-a5d2-5ba240119f0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:363","type":"CtIfImpl","sourcecode":"if ((((!(java.lang.Double.isNaN(double))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) {\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)));\n} "},"status":-1},{"failures":[],"tindex":"87797d1a-8287-11e5-a5d2-e1914ecf5165","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:52","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.storage.DataAccess.getCapacity()))"},"status":-2},{"failures":[10,19,20,21,22,23,24,25,26,27,12,13,6,28,14,15,29,16,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"87797d1b-8287-11e5-a5d2-ad1e0773dbfb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"x1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,36,80,43,44,51,81,58,59,67],"tindex":"8779a42c-8287-11e5-a5d2-51f5ee3fa8c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"variableMap":{"id":"allBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:97","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"8779a42d-8287-11e5-a5d2-f9160d613ea1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:229","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSetImpl"},"variableMap":{"bitset":"bs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:81","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[],"tindex":"8779a42e-8287-11e5-a5d2-652251fa12d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:147","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":0},{"failures":[82,83],"tindex":"8779a42f-8287-11e5-a5d2-0d0a0d707e1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"8779a42e-8287-11e5-a5d2-652251fa12d0","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":["com.graphhopper.routing.util.Bike2WeightFlagEncoder_long_setReverseSpeed(long,double).t2","com.graphhopper.routing.util.Bike2WeightFlagEncoder_long_setLowSpeed(long,double,boolean).t1","com.graphhopper.routing.util.AbstractFlagEncoder_long_setSpeed(long,double).t2","com.graphhopper.routing.util.Bike2WeightFlagEncoder_long_setLowSpeed(long,double,boolean).e1","com.graphhopper.routing.util.Bike2WeightFlagEncoder_long_setLowSpeed(long,double,boolean).b"]},"type":"branch"}]},{"transformation":"87795603-8287-11e5-a5d2-416c7d555361","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.CHGraphImpl.setSegmentSize"]},"branchesDiff":{"delete":["l0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":["com.graphhopper.storage.CHGraphImpl_void_setSegmentSize(int).b"]},"type":"branch"}]}]}