{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":69,"com.graphhopper.reader.OSMReaderTest.testFerry":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":109,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":76,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":52,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":65,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":41,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":100,"com.graphhopper.reader.OSMReaderTest.testWithBounds":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":32,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":68,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":18,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":6,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":57,"com.graphhopper.reader.OSMReaderTest.testFoot":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":83,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":67,"com.graphhopper.reader.OSMReaderTest.testOneWay":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":96,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":4,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":91,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":99,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":12,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":46,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":123,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":111,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":43,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":86,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":85,"com.graphhopper.reader.OSMReaderTest.testSort":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":14,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":106,"com.graphhopper.reader.OSMReaderTest.testMain":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":102,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":107,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":37,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":22,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":49,"com.graphhopper.storage.GraphHopperStorageTest.testClone":48,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":117,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":16,"com.graphhopper.GraphHopperTest.testFootAndCar":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":70,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":59,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":20,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":126,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":47,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":23,"com.graphhopper.reader.OSMReaderTest.testBarriers":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":84,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":72,"com.graphhopper.util.AngleCalcTest.testAtan2":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":97},"transformations":[{"failures":[0],"tindex":"f8c44094-794a-11e5-81c6-b9d528bbb2ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"variableMap":{"turnCosts":"angle","weight":"angle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:55","type":"CtReturnImpl","sourcecode":"return -double"},"status":-1},{"failures":[],"tindex":"f8c467a5-794a-11e5-81c6-b5a75faf3a9f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"variableMap":{"newBytes":"byteCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:113","type":"CtIfImpl","sourcecode":"if (long <= com.graphhopper.storage.MMapDataAccess.(getCapacity()))\n    return false;\n"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"f8c48eb6-794a-11e5-81c6-09325b4c2ed8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"variableMap":{"N_LEVEL":"E_FLAGS","level":"E_FLAGS","nodeIndex":"low","nodeCHEntryBytes":"E_FLAGS","nodesCH":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:114","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = com.graphhopper.storage.DataAccess.getInt(((long + (int)) + 4));\n    long = com.graphhopper.util.BitUtil.combineIntsToLong(int, int);\n} "},"status":-1},{"failures":[],"tindex":"f8c48eb7-794a-11e5-81c6-dfc2862d22fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"neighborUpdatePercentage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:341","type":"CtIfImpl","sourcecode":"if (boolean && ((java.util.Random.nextInt(100)) < (int))) {\n    com.graphhopper.util.StopWatch.start();\n    int int = int[][int];\n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    if (int != int)\n        com.graphhopper.coll.GHTreeMapComposed.update(int, int, int);\n    \n    com.graphhopper.util.StopWatch.stop();\n} "},"status":-2},{"failures":[],"tindex":"f8c4b5c8-794a-11e5-81c6-ed3e0d3013bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:229","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], -1)"},"variableMap":{"takenFrom":"elem"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:237","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], 0)"},"status":-2},{"failures":[],"tindex":"f8c4b5c9-794a-11e5-81c6-2903384ecd1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"i","weights":"elevations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:249","type":"CtAssignmentImpl","sourcecode":"double[][int] = double[][int]"},"status":-2},{"failures":[],"tindex":"f8c4b5ca-794a-11e5-81c6-1749d95eb85c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:768","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLon(int)"},"status":-2},{"failures":[],"tindex":"f8c4b5cb-794a-11e5-81c6-33ca3ce1e908","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"status":-2},{"failures":[],"tindex":"f8c4dcdc-794a-11e5-81c6-b1183a66ec1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-2},{"failures":[],"tindex":"f8c4dcdd-794a-11e5-81c6-9f803a8401ee","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:582","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.flagEncoders\", \"\")"},"status":-2},{"failures":[],"tindex":"f8c4dcde-794a-11e5-81c6-a1b772f64e51","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:889","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap)"},"variableMap":{"weightingMap":"weightingMap","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:887","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap)"},"status":-2},{"failures":[],"tindex":"f8c4dcdf-794a-11e5-81c6-2145ee5ae0de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:113","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"f8c4dce0-794a-11e5-81c6-35c17e520593","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:148","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"f8c503f1-794a-11e5-81c6-a3e399c8aeb6","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"variableMap":{"maxLat":"speed","lat":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:103","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long))\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n"},"status":-2},{"failures":[],"tindex":"f8c503f2-794a-11e5-81c6-f96b92f26048","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"f8c503f3-794a-11e5-81c6-b9cf39c8079e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"b_lat","azimuth":"b_lat","java.lang.Math.PI":"b_lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:143","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-2},{"failures":[],"tindex":"f8c503f4-794a-11e5-81c6-459c09480dbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:303","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"variableMap":{"d":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:144","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"f8c52b05-794a-11e5-81c6-2b44a1ba72ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:653","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.Lock != null)\n    com.graphhopper.storage.Lock.release();\n"},"status":-2},{"failures":[],"tindex":"f8c52b06-794a-11e5-81c6-17e5208083fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setLowSpeed(long, double, true)"},"variableMap":{"flags":"flags","this":"this","speed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:314","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setLowSpeed(long, double, false)"},"status":-2},{"failures":[],"tindex":"f8c55217-794a-11e5-81c6-e3994b91edb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:157","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.util.PointList.getSize()) ; int++) {\n    int int = (int) + int;\n    double[][int] = com.graphhopper.util.PointList.getLatitude(int);\n    double[][int] = com.graphhopper.util.PointList.getLongitude(int);\n    if (boolean)\n        double[][int] = com.graphhopper.util.PointList.getElevation(int);\n    \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}