{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":95,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":296,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":101,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":254,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":350,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":49,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":316,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":215,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":278,"com.graphhopper.GraphHopperTest.testPrepare":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":58,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":222,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":384,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":86,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":105,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":191,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":110,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":242,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":385,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":83,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":148,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":27,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":375,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":19,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":383,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":73,"com.graphhopper.GraphHopperTest.testLoadOSM":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":177,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":388,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":149,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":256,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":336,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":234,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":329,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":39,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":17,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":287,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":334,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":189,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":294,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":80,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":354,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":360,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":255,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":351,"com.graphhopper.GraphHopperAPITest.testLoad":136,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":378,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":216,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":206,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":82,"com.graphhopper.util.GHUtilityTest.testCopy":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":300,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":142,"com.graphhopper.routing.PathTest.testFindInstruction":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":342,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":381,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":139,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":235,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":220,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":369,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":69,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":282,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":393,"com.graphhopper.util.InstructionListTest.testWayList2":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":324,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":157,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":374,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":55,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":352,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":192,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":205,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":349,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":283,"com.graphhopper.routing.PathBidirRefTest.testExtract":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":124,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":323,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":377,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":186,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":322,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":120,"com.graphhopper.util.GHUtilityTest.testSort2":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":92,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":338,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":364,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":386,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":257,"com.graphhopper.storage.GraphHopperStorageTest.testClone":208,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":280,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":302,"com.graphhopper.routing.PathTest.testTime":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":264,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":315,"com.graphhopper.util.GHUtilityTest.testSortDirected":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":269,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":36,"com.graphhopper.GraphHopperTest.testFootOnly":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":193,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":311,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":151,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":31,"com.graphhopper.routing.QueryGraphTest.testOneWay":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":147,"com.graphhopper.reader.OSMReaderTest.testWithBounds":12,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":317,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":174,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":363,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":356,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":204,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":77,"com.graphhopper.util.InstructionListTest.testWayList":106,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":237,"com.graphhopper.GraphHopperAPITest.testDisconnected179":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":303,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":365,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":145,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":298,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":331,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":128,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":210,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":367,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":71,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":228,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":227,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":99,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":389,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":198,"com.graphhopper.routing.PathTest.testWayList":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":330,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":100,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":146,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":362,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":243,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":247,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":347,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":382,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":26,"com.graphhopper.util.GHUtilityTest.testSort":114,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":291,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":379,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":376,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":141,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":197,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":246,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":391,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":288,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":56,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":163,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":337,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":380,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":357,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":251,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":392,"com.graphhopper.routing.PathTest.testFound":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":321,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":74,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":353,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":306,"com.graphhopper.util.InstructionListTest.testEmptyList":104,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":90,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":286,"com.graphhopper.reader.PrinctonReaderTest.testRead":15,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":361,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":295,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":358,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":154,"com.graphhopper.reader.OSMReaderTest.testOneWay":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":292,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":217,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":262,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":370,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":68,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":226,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":313,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":61,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":166,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":116,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":309,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":289,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":248,"com.graphhopper.routing.PathBidirRefTest.testExtract2":29,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":390,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":178,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":158,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":190,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":230,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":275,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":96,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":168,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":150,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":293,"com.graphhopper.GraphHopperTest.testFootAndCar":129,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":344,"com.graphhopper.GraphHopperTest.testPrepareOnly":118,"com.graphhopper.GraphHopperTest.testVia":126,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":143,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":87,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":10,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":249,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":108,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":229,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":181,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":312,"com.graphhopper.util.InstructionListTest.testFind":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":333},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"ad7c6645-829f-11e5-81f3-ff1e9b8af22f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.trimToSize()"},"variableMap":{"baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:170","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkInit()"},"status":-1},{"failures":[],"tindex":"ad7cb466-829f-11e5-81f3-1fd94d7811f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:735","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double)"},"status":0},{"failures":[],"tindex":"ad7cdb77-829f-11e5-81f3-c921edfd6e1d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"lat","angleXY":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:95","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":0},{"failures":[],"tindex":"ad7cdb78-829f-11e5-81f3-3174ee13967c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:234","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:144","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = com.graphhopper.util.Translation.asMap()"},"status":-2},{"failures":[],"tindex":"ad7cdb79-829f-11e5-81f3-e3e3a1ce9a36","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:318","type":"CtReturnImpl","sourcecode":"return \"destinations: \" + java.lang.String"},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:84","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"ad7cdb7a-829f-11e5-81f3-ad79e45627ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:65","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.EdgeEntry) == null) || ((com.graphhopper.storage.EdgeEntry) == null))\n    return this;\n"},"variableMap":{"edgeTo":"currEdge","edgeEntry":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:132","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.storage.EdgeEntry) == null) || com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded())) || (!com.graphhopper.routing.Dijkstra.(finished())))\n    return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n"},"status":-2},{"failures":[],"tindex":"ad7d028b-829f-11e5-81f3-a5d23bbf6ef9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:253","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[378,379,380],"tindex":"ad7d028c-829f-11e5-81f3-4f4a1661d532","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:144","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"ad7d028d-829f-11e5-81f3-31d13e5a0711","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"max"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:335","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(double[][(2 * int)], double[][((2 * int) + 1)], java.lang.Double.double);\n}"},"status":0},{"failures":[68,69,72,381,382,383,384],"tindex":"ad7d028e-829f-11e5-81f3-8d9b322b9ae6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:87","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"currentEntry":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:125","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[],"tindex":"ad7d299f-829f-11e5-81f3-e5b7b1f7597c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:181","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.Graph.getNodes()"},"status":-2},{"failures":[],"tindex":"ad7d29a0-829f-11e5-81f3-1b393a28b576","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:104","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"status":-2},{"failures":[],"tindex":"ad7d29a1-829f-11e5-81f3-9be6b8f5158e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:594","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.addTowerNode(com.graphhopper.reader.OSMNode.getId(), double, double, double)"},"status":-2},{"failures":[],"tindex":"ad7d29a2-829f-11e5-81f3-43cf874a5c7a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"variableMap":{"need":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:495","type":"CtIfImpl","sourcecode":"if (long == long) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"ad7d29a3-829f-11e5-81f3-1148c24e8466","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:589","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative but was \" + double));\n"},"variableMap":{"weight":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:162","type":"CtForImpl","sourcecode":"for (int int = int + 1 ; int < int ; int++) {\n    com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n    int++;\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,36,37,38,40,44,45,46,47,48,49,50,51,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,168,169,170,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,192,193,194,195,197,199,203,204,205,206,208,209,210,211,212,213,215,216,217,218,219,220,222,223,224,226,228,230,231,232,233,234,235,236,238,239,240,241,242,245,246,247,248,249,250,251,253,256,257,258,259,261,262,263,264,265,266,268,269,270,271,272,273,275,276,277,279,281,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,311,313,314,315,317,319,321,322,323,324,325,326,327,329,330,331,332,333,334,339,340,341,342,344,345,346,347,348,349,351,352,353,354,355,356,358,359,360,362,364,366,367,368,369,370,371,372,374,375,376,377],"tindex":"ad7d50b4-829f-11e5-81f3-7f728d1fddde","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:676","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:197","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,30,31,31,32,32,33,33,34,34,35,35,36,36,37,37,38,38,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,163,164,165,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,193,194,195,197,385,386,387,388,389,390,391,392,393,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,306,321,333,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"ad7d77c5-829f-11e5-81f3-350308d6f228","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:656","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"variableMap":{"nextTowerId":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:231","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[138,139,140,141,143,144,158,186],"tindex":"ad7d9ed6-829f-11e5-81f3-7f01613dd506","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"ad7d9ed7-829f-11e5-81f3-258edd1bc7d1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:527","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:531","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"ad7dc5e8-829f-11e5-81f3-61da97cf09f2","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:258","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.size()) - 2)))"},"variableMap":{"virtualEdges":"modifiedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:441","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"ad7cb466-829f-11e5-81f3-1fd94d7811f6","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion"]},"type":"staticDiff"}]}]}