{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"8e95e840-790e-11e5-a071-d7474155f034","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:704","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"lastInBoundsPillarNode":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"status":-2},{"failures":[],"tindex":"8e963661-790e-11e5-a071-09b2002c2e5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:721","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMReader.handlePillarNode(int, long, com.graphhopper.util.PointList, boolean)"},"status":-2},{"failures":[],"tindex":"8e963662-790e-11e5-a071-f93c0e7a5c37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:314","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"8e963663-790e-11e5-a071-f3eb0cf643b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"variableMap":{"flags":"size","mask":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:126","type":"CtAssignmentImpl","sourcecode":"long = 0"},"status":-2},{"failures":[],"tindex":"8e963664-790e-11e5-a071-1985d875a776","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:892","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8e963665-790e-11e5-a071-69d1041ed4d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:789","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"variableMap":{"adj":"nodeCount","explorer":"explorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:803","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeExplorer.setBaseNode(((int) - 1))"},"status":-2},{"failures":[],"tindex":"8e965d76-790e-11e5-a071-ad47639ba2f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:283","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"nodeId":"flags","nodeIdOffset":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-2},{"failures":[],"tindex":"8e965d77-790e-11e5-a071-f73c0787182a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:664","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"variableMap":{"costs":"durationInHours"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:529","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception ex) {\n}"},"status":-2},{"failures":[],"tindex":"8e965d78-790e-11e5-a071-5160255ed9a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:121","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalStateException((\"Pointer to access NameIndex cannot be negative:\" + long));\n"},"variableMap":{"pointer":"timeOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:144","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.util.InstructionList.(size()) - 1) ; int++) {\n    com.graphhopper.util.Instruction com.graphhopper.util.Instruction = int > 0 ? com.graphhopper.util.InstructionList.get((int - 1)) : null;\n    boolean boolean = com.graphhopper.util.Instruction == null;\n    com.graphhopper.util.Instruction com.graphhopper.util.Instruction = com.graphhopper.util.InstructionList.get((int + 1));\n    com.graphhopper.util.Instruction.checkOne();\n    long = com.graphhopper.util.InstructionList.get(int).fillGPXList(java.util.List<com.graphhopper.util.GPXEntry>, long, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction, boolean);\n}"},"status":-2},{"failures":[],"tindex":"8e968489-790e-11e5-a071-5537454290ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:362","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLongitude(int)"},"status":-2},{"failures":[],"tindex":"8e96848a-790e-11e5-a071-3d7d95faac9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"variableMap":{"parent":"parent","ase":"cl","currEdge":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"8e96848b-790e-11e5-a071-071dbbe132e4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"com.graphhopper.reader.OSMReader.TOWER_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:639","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int);\n} else {\n}"},"status":-2},{"failures":[],"tindex":"8e96848c-790e-11e5-a071-c97f5b9d759f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setSkippedEdges\")"},"variableMap":{"this":"explorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:53","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    if ((double > 90) || (double < (-90)))\n        java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n    \n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    if ((double > 180) || (double < (-180)))\n        java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n    \n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n            java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n        } \n        if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n            java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"8e96ab9d-790e-11e5-a071-d1cc55b44e82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:952","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    java.lang.String = com.graphhopper.GraphHopper.getDefaultVehicle().toString();\n"},"status":-2},{"failures":[],"tindex":"8e96ab9e-790e-11e5-a071-9500ce34dae7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:81","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeEntry":"ee"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:219","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"8e96ab9f-790e-11e5-a071-edf96774c11d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:855","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.release()"},"variableMap":{"eleProvider":"eleProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:144","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.dem.ElevationProvider == null) || (com.graphhopper.reader.dem.ElevationProvider == (com.graphhopper.reader.dem.ElevationProvider.com.graphhopper.reader.dem.ElevationProvider)))\n    com.graphhopper.GraphHopper.setElevation(false);\nelse\n    com.graphhopper.GraphHopper.setElevation(true);\n"},"status":-2},{"failures":[],"tindex":"8e96d2b0-790e-11e5-a071-0d89138bbe61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"8e96d2b1-790e-11e5-a071-b30269b03d67","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:592","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[],"tindex":"8e96d2b2-790e-11e5-a071-dd4a3f404821","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:42","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.Dijkstra(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode())"},"variableMap":{"opts":"opts","g":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:52","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"8e96f9c3-790e-11e5-a071-cd115af0aa8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:718","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int++) {\n    double double = double + (int * (double));\n    double double = double - (int * (double));\n    double double = double + (int * (double));\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(com.graphhopper.storage.index.TIntHashSet, double, double);\n    if (int > 0)\n        com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(com.graphhopper.storage.index.TIntHashSet, double, double);\n    \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}