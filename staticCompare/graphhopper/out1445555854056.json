{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":18,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":9,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":13,"com.graphhopper.storage.MMapDataAccessTest.testCopy":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":42,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":49,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":23,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":47,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":16,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":3,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":43,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":14,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":34,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":20,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":5,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":48},"transformations":[{"failures":[],"tindex":"135bf0ca-7913-11e5-b943-7fd4885f37a3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:465","type":"CtReturnImpl","sourcecode":"return (java.lang.Character.toUpperCase(java.lang.String.charAt(0))) + (java.lang.String.substring(1))"},"variableMap":{"sayText":"pavementName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[0,1],"tindex":"135c17db-7913-11e5-b943-b750025fd0ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:144","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[2,3,4,5,6,7,8],"tindex":"135c3eec-7913-11e5-b943-4d641c581cfe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:104","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestNode(int)"},"status":-1},{"failures":[],"tindex":"135c3eed-7913-11e5-b943-9debf61ff4a7","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":0},{"failures":[],"tindex":"135c3eee-7913-11e5-b943-d5f32fa5abf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:229","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    javax.xml.stream.XMLStreamReader.close();\n"},"status":-2},{"failures":[],"tindex":"135c3eef-7913-11e5-b943-e180166167fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"newEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:145","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int);\n"},"status":-2},{"failures":[],"tindex":"135c3ef0-7913-11e5-b943-2f5b11b679d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:62","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"variableMap":{"flags2":"bytes","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"bytes","flags1":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:84","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, true)"},"status":-1},{"failures":[9,10,11,12,8,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"135c6601-7913-11e5-b943-f9704eae6675","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:381","type":"CtForEachImpl","sourcecode":"for (java.nio.ByteBuffer java.nio.ByteBuffer : java.util.List<java.nio.ByteBuffer>) {\n    long += java.nio.ByteBuffer.capacity();\n}"},"status":-1},{"failures":[],"tindex":"135c6602-7913-11e5-b943-1beb25ec4578","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:100","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    if ((com.graphhopper.storage.EdgeEntry) != null) {\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.storage.EdgeEntry.int, int), com.graphhopper.storage.EdgeEntry, int);\n    } \n} else {\n    if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"135c6603-7913-11e5-b943-e731e77a7bd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:388","type":"CtForEachImpl","sourcecode":"for (int int : java.util.List<java.lang.Integer>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + int));\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.VirtualEdgeIteratorState.fetchWayGeometry(3);\n    double double;\n    if (boolean) {\n        int int = com.graphhopper.util.PointList.getSize();\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n    } else {\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n    }\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double);\n    double double = double - double;\n    if ((java.lang.Math.abs(double)) > 1.74) {\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + com.graphhopper.routing.QueryGraph.(getPosOfReverseEdge(int))));\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"135c8d14-7913-11e5-b943-7fe56b6fa997","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 16))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:78","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 4)] = ((byte)(long >> 32))"},"status":-2},{"failures":[],"tindex":"135c8d15-7913-11e5-b943-03265f73e913","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"a_lon_deg","angle":"r_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:151","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"135c8d16-7913-11e5-b943-7f60b0fc3a02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:141","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double)) {\n    continue;\n} "},"variableMap":{"lat":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:842","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.is3D())\n    com.graphhopper.util.PointList.add(double, double, double);\nelse\n    com.graphhopper.util.PointList.add(double, double);\n"},"status":-2},{"failures":[],"tindex":"135c8d17-7913-11e5-b943-89faf56df5bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:167","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextPBF()"},"variableMap":{"item":"item","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:169","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNextXML()"},"status":-2},{"failures":[],"tindex":"135cb428-7913-11e5-b943-43c7ba8c7975","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:229","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], -1)"},"status":-2},{"failures":[],"tindex":"135cb429-7913-11e5-b943-858bfbdd6fe6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"mask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"135cb42a-7913-11e5-b943-43c11703ba25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"importance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:52","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":-2},{"failures":[],"tindex":"135cb42b-7913-11e5-b943-a32ffc4d2343","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:129","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"variableMap":{"entry":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:207","type":"CtIfImpl","sourcecode":"if (java.io.File.exists()) {\n    try {\n        if (!(java.io.File.renameTo(new java.io.File(((java.lang.String) + java.lang.String))))) {\n            throw new java.lang.IllegalStateException((((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object to \") + java.lang.String));\n        } \n        java.lang.String = java.lang.String;\n    } catch (java.lang.Exception ex) {\n        throw new java.lang.IllegalStateException(((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object!\") , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalStateException((((\"File does not exist!? \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) + \" Make sure that you flushed before renaming. Otherwise it could make problems\") + \" for memory mapped DataAccess objects\"));\n}"},"status":-2},{"failures":[],"tindex":"135cdb3c-7913-11e5-b943-655a5f8c5362","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:127","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"135cdb3d-7913-11e5-b943-891988c35ccf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"enableInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:378","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}