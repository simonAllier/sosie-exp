{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":33,"com.graphhopper.reader.OSMReaderTest.testMain":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":15,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":31,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":41,"com.graphhopper.reader.OSMReaderTest.testWithBounds":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":65,"com.graphhopper.storage.GraphHopperStorageTest.testClone":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":53,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":54,"com.graphhopper.GraphHopperTest.testPrepare":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":29,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":1,"com.graphhopper.GraphHopperTest.testPrepareOnly":71,"com.graphhopper.GraphHopperTest.testVia":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":28,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":11,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":47,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":67,"com.graphhopper.GraphHopperTest.testFootOnly":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":2,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":20,"com.graphhopper.GraphHopperTest.testLoadOSM":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":60,"com.graphhopper.util.GHUtilityTest.testCopy":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":43},"transformations":[{"failures":[],"tindex":"db0c8a2a-82bd-11e5-b77d-a7c0fa804e42","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"edgeIdFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:94","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n        int = com.graphhopper.util.EdgeIterator.getEdge();\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"db0cb13b-82bd-11e5-b77d-3757abda0351","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:190","type":"CtAssignmentImpl","sourcecode":"double = -double"},"variableMap":{"eleDelta":"lon","decEleSum":"dMinLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:666","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, com.graphhopper.util.shapes.GHPoint.double)"},"status":0},{"failures":[0],"tindex":"db0cb13c-82bd-11e5-b77d-a91535aecf0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >>> 16))"},"variableMap":{"offset":"b","bytes":"bytes","value":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:107","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1},{"failures":[],"tindex":"db0cb13d-82bd-11e5-b77d-0bb3b3a64815","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:137","type":"CtLocalVariableImpl","sourcecode":"int int = gnu.trove.iterator.TIntIterator.next()"},"status":-2},{"failures":[],"tindex":"db0cb13e-82bd-11e5-b77d-7569506f9724","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:56","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar"},"variableMap":{"aStar":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:52","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9],"tindex":"db0cb13f-82bd-11e5-b77d-910d14f24ade","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:115","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"variableMap":{"numTiles":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:291","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (com.graphhopper.storage.NodeAccess.is3D())\n        com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int), com.graphhopper.storage.NodeAccess.getElevation(int));\n    else\n        com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int));\n    \n}"},"status":-1},{"failures":[],"tindex":"db0cd850-82bd-11e5-b77d-ef9c64c42e84","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:117","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.storage.index.QueryResult.getSnappedPoint()"},"variableMap":{"res":"obj"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:71","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = ((com.graphhopper.util.shapes.GHPoint)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"db0cd851-82bd-11e5-b77d-d50fb95ba557","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:930","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.GHRequest.getHints().getDouble(\"wayPointMaxDistance\", 1.0)"},"status":-2},{"failures":[10,11,12,13,14],"tindex":"db0cd852-82bd-11e5-b77d-451b49142d35","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:664","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"variableMap":{"costs":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:843","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double, double)"},"status":-1},{"failures":[],"tindex":"db0cd853-82bd-11e5-b77d-8753ee8d42b9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:123","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.Integer> java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:386","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.Integer> java.util.List<java.lang.Integer> = boolean ? java.util.Arrays.asList(com.graphhopper.routing.QueryGraph.int, com.graphhopper.routing.QueryGraph.int) : java.util.Arrays.asList(com.graphhopper.routing.QueryGraph.int, com.graphhopper.routing.QueryGraph.int)"},"status":-2},{"failures":[],"tindex":"db0cff64-82bd-11e5-b77d-770af87fa170","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:165","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"variableMap":{"dataAccess":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:355","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \" + (com.graphhopper.storage.CHGraphImpl.toDetailsString())"},"status":0},{"failures":[],"tindex":"db0cff65-82bd-11e5-b77d-755f8080082a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:104","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"status":0},{"failures":[],"tindex":"db0cff66-82bd-11e5-b77d-732ef480253a","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:212","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.putInt(((long) + long), int)"},"status":0},{"failures":[],"tindex":"db0cff67-82bd-11e5-b77d-bd640416ad3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:754","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.writeEdge(int, int, int, int, int)"},"variableMap":{"edgeAccess":"this","edgeId":"newEdgeId","updatedB":"com.graphhopper.util.EdgeIterator.NO_EDGE","updatedA":"newEdgeId","linkA":"toNodeId","linkB":"fromNodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:143","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.writeEdge(int, int, int, com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,9,71,72,73,74,75,76,14],"tindex":"db0cff68-82bd-11e5-b77d-cf14a5d7ecb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:375","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"db0cff69-82bd-11e5-b77d-93a0d99dc6fd","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:239","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"db0d267a-82bd-11e5-b77d-03e928ae8298","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:136","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"variableMap":{"store":"enforcementOccured"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:420","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"db0d267b-82bd-11e5-b77d-4d246955a4da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:104","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:178","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"status":-2},{"failures":[],"tindex":"db0d267c-82bd-11e5-b77d-87a162146a4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"variableMap":{"cap":"key","bytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:66","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.coll.OSMIDMap.binarySearch(com.graphhopper.storage.DataAccess, 0, com.graphhopper.coll.OSMIDMap.getSize(), long)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"db0cb13b-82bd-11e5-b77d-3757abda0351","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.storage.index.LocationIndexTree_void_fillIDs(long,int,gnu.trove.set.hash.TIntHashSet,int).e3","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.DistanceCalc.calcDist"]},"type":"staticDiff"}]},{"transformation":"db0d267c-82bd-11e5-b77d-87a162146a4b","diffs":[{"methodsDiff":{"delete":["com.graphhopper.coll.OSMIDMap.binarySearch","com.graphhopper.coll.OSMIDMap.getSize"]},"type":"staticDiff"}]}]}