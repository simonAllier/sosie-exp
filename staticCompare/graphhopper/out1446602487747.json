{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":339,"com.graphhopper.util.BitUtilBigTest.testToDouble":8,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":159,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":178,"com.graphhopper.reader.OSMReaderTest.testFerry":240,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":235,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":112,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":287,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":214,"com.graphhopper.routing.QueryGraphTest.testOneWay":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":135,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":155,"com.graphhopper.reader.OSMReaderTest.testWithBounds":252,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":276,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":293,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":277,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":306,"com.graphhopper.util.BitUtilLittleTest.testToDouble":357,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":192,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":255,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":136,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":314,"com.graphhopper.GraphHopperTest.testPrepare":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":338,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":62,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":302,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":321,"com.graphhopper.util.PMapTest.singleStringPropertyCanBeRetrieved":2,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":95,"com.graphhopper.util.InstructionListTest.testWayList":227,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":330,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":170,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":125,"com.graphhopper.GraphHopperAPITest.testDisconnected179":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":281,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":43,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":209,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":153,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":322,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":327,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":156,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":238,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":356,"com.graphhopper.util.PMapTest.keyCanHaveAnyCasing":0,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":246,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":119,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":348,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":208,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":266,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":68,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":46,"com.graphhopper.util.PMapTest.hasReturnsCorrectResult":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":317,"com.graphhopper.GraphHopperTest.testLoadOSM":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":164,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":315,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":195,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":212,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":86,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":157,"com.graphhopper.reader.OSMReaderTest.testSort":243,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":333,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":251,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":131,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":92,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":311,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":17,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":343,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":213,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":239,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":347,"com.graphhopper.routing.PathTest.testWayList":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":124,"com.graphhopper.coll.OSMIDMapTest.testGet2":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":145,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":320,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":154,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":128,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":25,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":206,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":152,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":335,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":355,"com.graphhopper.util.GHUtilityTest.testSort":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":161,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":324,"com.graphhopper.coll.OSMIDMapTest.testGetLong":362,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsLong":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":54,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":65,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":300,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":38,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":175,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":104,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":146,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":294,"com.graphhopper.util.BitUtilBigTest.testToLong":9,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":13,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":15,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":29,"com.graphhopper.GraphHopperAPITest.testLoad":219,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":268,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":342,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":74,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":109,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":19,"com.graphhopper.reader.OSMReaderTest.testBarriers":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":282,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":132,"com.graphhopper.routing.PathTest.testFound":349,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":369,"com.graphhopper.util.GHUtilityTest.testCopy":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":326,"com.graphhopper.routing.PathTest.testFindInstruction":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":20,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":31,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":10,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":71,"com.graphhopper.util.InstructionListTest.testEmptyList":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":329,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":177,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":93,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":47,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":81,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":308,"com.graphhopper.reader.PrinctonReaderTest.testRead":237,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":26,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":108,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":118,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":286,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":140,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":218,"com.graphhopper.util.InstructionListTest.testWayList2":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":198,"com.graphhopper.reader.OSMReaderTest.testFoot":241,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":165,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":162,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":163,"com.graphhopper.reader.OSMReaderTest.testOneWay":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":52,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":58,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":284,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":120,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":89,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":30,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":312,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":171,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":63,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":70,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":245,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":341,"com.graphhopper.coll.OSMIDMapTest.testGet":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":316,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":305,"com.graphhopper.routing.PathBidirRefTest.testExtract":345,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":361,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":221,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":262,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":160,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":261,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":204,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":260,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":259,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":169,"com.graphhopper.util.GHUtilityTest.testSort2":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":336,"com.graphhopper.reader.OSMReaderTest.testMain":242,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":6,"com.graphhopper.util.BitUtilLittleTest.testToLong":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":147,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":291,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":148,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":106,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":215,"com.graphhopper.routing.PathBidirRefTest.testExtract2":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":142,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":166,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":274,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":207,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":133,"com.graphhopper.util.PMapTest.propertyFromStringWithMultiplePropertiesCanBeRetrieved":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":189,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":42,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":210,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":115,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":102,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":7,"com.graphhopper.storage.GraphHopperStorageTest.testClone":66,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":158,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":138,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":76,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":83,"com.graphhopper.GraphHopperTest.testFootAndCar":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":111,"com.graphhopper.routing.PathTest.testTime":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":370,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":167,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":193,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":137,"com.graphhopper.util.GHUtilityTest.testSortDirected":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":127,"com.graphhopper.GraphHopperTest.testPrepareOnly":256,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":180,"com.graphhopper.GraphHopperTest.testVia":264,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":331,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":4,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":250,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":107,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":292,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":87,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":229,"com.graphhopper.GraphHopperTest.testFootOnly":272,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":366,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":197,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":199,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":126,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":351,"com.graphhopper.util.InstructionListTest.testFind":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":323,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":168},"transformations":[{"failures":[],"tindex":"f5a630f7-8297-11e5-a9c7-adb09ae4b152","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:65","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"f5a65808-8297-11e5-a9c7-bbaaa4600e90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:196","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"variableMap":{"str":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:59","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.substring(0, int).toLowerCase(), java.lang.String.substring((int + 1)))"},"status":-1},{"failures":[],"tindex":"f5a65809-8297-11e5-a9c7-5f700728e23b","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:586","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"maxTurnCosts","nodeType":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:836","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[8,9],"tindex":"f5a67f1a-8297-11e5-a9c7-4f551859c71e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:81","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 8))"},"status":-1},{"failures":[],"tindex":"f5a67f1b-8297-11e5-a9c7-75e5c1dfb8c7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:129","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CmdArgs.merge(com.graphhopper.util.CmdArgs)"},"variableMap":{"args":"properties","tmp":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:66","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.PMap = com.graphhopper.util.PMap"},"status":0},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,286,287,287,288,288,289,289,290,290,291,291,292,292,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"tindex":"f5a67f1c-8297-11e5-a9c7-7bb4accdb314","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"variableMap":{"segNumber":"i","segments":"newSegs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[357,358,359,360,361,362,363],"tindex":"f5a6a62d-8297-11e5-a9c7-3357043dbd58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:69","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.BitUtilLittle.((long)(toInt(byte[], (int + 4)))) << 32) | (com.graphhopper.util.BitUtilLittle.(toInt(byte[], int)) & 4294967295L)"},"status":-1},{"failures":[12,247],"tindex":"f5a6a62e-8297-11e5-a9c7-e794822596ac","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:569","type":"CtIfImpl","sourcecode":"if (int == int) {\n    com.graphhopper.storage.DataAccess.setInt(long, 0);\n} else {\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n}"},"variableMap":{"intIndex":"from","dataAccess":"turnCosts","beforeIntIndex":"from","refPointer":"costsBase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[],"tindex":"f5a6a62f-8297-11e5-a9c7-0bb1d427aa02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:335","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:286","type":"CtReturnImpl","sourcecode":"return ((((com.graphhopper.storage.CHGraphImpl.(toString()) + \", shortcuts:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \", nodesCH:(\") + ((com.graphhopper.storage.DataAccess.getCapacity()) / (com.graphhopper.util.Helper.long))) + \"MB)\""},"status":0},{"failures":[],"tindex":"f5a6a630-8297-11e5-a9c7-ffe0c0a04be8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:224","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.storage.DataAccess.getInt((long + (int)))) == int ? long + (int) : long + (int)"},"status":-2},{"failures":[275,281],"tindex":"f5a6cd41-8297-11e5-a9c7-49e8d59d37dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:80","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[364,365,366],"tindex":"f5a6cd42-8297-11e5-a9c7-01732883d368","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHLongIntBTree.BTreeEntry = com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry"},"status":-1},{"failures":[351,352,355],"tindex":"f5a6cd43-8297-11e5-a9c7-cbe8e175989a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:56","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.signum((double - double))))"},"variableMap":{"x1":"deltaIn","x2":"deltaIn"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:58","type":"CtLocalVariableImpl","sourcecode":"int int = double > 0 ? 1 : -1"},"status":-1},{"failures":[367],"tindex":"f5a6cd44-8297-11e5-a9c7-b94dc7b6729f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:261","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"f5a6cd45-8297-11e5-a9c7-8da245e6e38e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:51","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.size()"},"status":0},{"failures":[237,238],"tindex":"f5a6cd46-8297-11e5-a9c7-81ea23883106","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:180","type":"CtAssignmentImpl","sourcecode":"double = double + (double * (int - double))"},"variableMap":{"gradient":"dist","y2":"dist","yend":"dist","x2":"dist","xend":"j"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:82","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Double.parseDouble(java.lang.String[][int])"},"status":-1},{"failures":[249,368,369,370,288],"tindex":"f5a6f457-8297-11e5-a9c7-4f26fd43c70f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"costs","speed":"costs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:685","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(0L, ((int)(double)))"},"status":-1},{"failures":[330,344],"tindex":"f5a6f458-8297-11e5-a9c7-efdf3076e3a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:411","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int])"},"status":-1},{"failures":[],"tindex":"f5a6f459-8297-11e5-a9c7-fd31fe4de567","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:154","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"longSegmentSize":"encoded","bufferStart":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f5a6cd45-8297-11e5-a9c7-8da245e6e38e","diffs":[{"methodsDiff":{"delete":["java.util.List<com.graphhopper.util.EdgeIteratorState>.size"]},"type":"staticDiff"}]},{"transformation":"f5a6a62f-8297-11e5-a9c7-0bb1d427aa02","diffs":[{"branches":{"com.graphhopper.GraphHopperTest.testPrepare":["com.graphhopper.storage.CHGraphImpl_java.lang.String_toString().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.Helper.nf","com.graphhopper.storage.CHGraphImpl.toString","com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.getCapacity"]},"type":"staticDiff"}]}]}