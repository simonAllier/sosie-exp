{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":30,"com.graphhopper.reader.OSMReaderTest.testMain":13,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":54,"com.graphhopper.reader.OSMReaderTest.testFerry":12,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":0,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":53,"com.graphhopper.routing.PathTest.testWayList":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":62,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":20,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":5,"com.graphhopper.util.DistanceCalcEarthTest.testDistance":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":7,"com.graphhopper.reader.OSMReaderTest.testWithBounds":15,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":31,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":42,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":29,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":61,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":8,"com.graphhopper.util.InstructionListTest.testWayList2":64,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":50,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":1,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":33,"com.graphhopper.util.InstructionListTest.testWayList":63,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsLong":67,"com.graphhopper.util.InstructionListTest.testCreateGPX":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":55,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":4,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":41,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":2,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":21,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":9,"com.graphhopper.GraphHopperTest.testFootOnly":37,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":14,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":47,"com.graphhopper.GraphHopperTest.testLoadOSM":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":3,"com.graphhopper.util.GHUtilityTest.testCopy":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":44},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"a133d341-792f-11e5-9475-e54a672abf96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:538","type":"CtLocalVariableImpl","sourcecode":"double double = double - (double)"},"variableMap":{"orientation":"toLat","prevOrientation":"toLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:53","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin((java.lang.Math.(java.lang.Math.toRadians((double - double))) / 2))"},"status":-1},{"failures":[29,30,31,32,33,34,9,13,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"a133fa52-792f-11e5-9475-2bca8b513e52","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"count","S_SKIP_EDGE2":"count"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:873","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-1},{"failures":[],"tindex":"a133fa53-792f-11e5-9475-552e4f08af6f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:517","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"index","id":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2},{"failures":[66,67],"tindex":"a133fa54-792f-11e5-9475-4b57f110d0ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:203","type":"CtIfImpl","sourcecode":"if ((((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\")))) && (!(java.lang.String.equals(\"grade2\")))) && (!(java.lang.String.equals(\"grade3\"))))\n    return 0;\n"},"variableMap":{"tt":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:83","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Long.parseLong(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"status":-1},{"failures":[],"tindex":"a133fa55-792f-11e5-9475-25ee9224ef0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType"},"variableMap":{"type":"com.graphhopper.storage.DAType.RAM"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:362","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"a1346f86-792f-11e5-9475-df78cb4bd814","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"graph","newGraph":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:114","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(java.util.Arrays.asList(com.graphhopper.routing.util.Weighting) , com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.GraphExtension.NoOpExtension())"},"status":-2},{"failures":[],"tindex":"a1346f87-792f-11e5-9475-63a0076390bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:571","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"variableMap":{"originalEdgesCount":"edgeId","edgeDifference":"edgeId","contractedNeighbors":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:66","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a1346f88-792f-11e5-9475-f7a6f61ab064","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"E_NODEA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.storage.EdgeAccess.int)"},"status":-2},{"failures":[],"tindex":"a1349699-792f-11e5-9475-17ea40179463","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:303","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"variableMap":{"d":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:96","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    byte byte = 0;\n    for (int int = 0 ; int < 8 ; int++) {\n        byte <<= 1;\n        if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n            byte |= 1;\n        \n        int++;\n    }\n    byte[][int] = byte;\n}"},"status":-2},{"failures":[],"tindex":"a134969a-792f-11e5-9475-e740ec930f33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:365","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"a134969b-792f-11e5-9475-8b7213a0370b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPlace:71","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String"},"variableMap":{"str":"newName","name":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:215","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"a134969c-792f-11e5-9475-b5eb6b69e17c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"variableMap":{"message":"wayTypeName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:438","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":-2},{"failures":[],"tindex":"a134969d-792f-11e5-9475-5b561e6ac0f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeIterator:59","type":"CtReturnImpl","sourcecode":"return int > (com.graphhopper.util.EdgeIterator.int)"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","edgeId":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:239","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.AbstractDataAccess.readHeader(java.io.RandomAccessFile);\n    if (long < 0)\n        return false;\n    \n    com.graphhopper.storage.MMapDataAccess.mapIt(com.graphhopper.storage.AbstractDataAccess.int, (long - (com.graphhopper.storage.AbstractDataAccess.int)), false);\n    return true;\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"a134bdae-792f-11e5-9475-772300185516","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"variableMap":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":-2},{"failures":[],"tindex":"a134bdaf-792f-11e5-9475-5b4446365e8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"value","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:165","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromLong(byte[], long, 0)"},"status":-2},{"failures":[],"tindex":"a134bdb0-792f-11e5-9475-c5664f1a7087","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:150","type":"CtIfImpl","sourcecode":"if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"variableMap":{"slice":"slice","azimuth":"azimuth","cp":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:141","type":"CtIfImpl","sourcecode":"if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[],"tindex":"a134bdb1-792f-11e5-9475-c34bc2ee0cc5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int++;\n}"},"variableMap":{"iter":"iter","counter":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:115","type":"CtIfImpl","sourcecode":"if ((((int != int) && ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))) && (long != (this.long))) || ((((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type)) && (long == (this.long))) && (long >= 0))) {\n    final com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = new com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry();\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long = com.graphhopper.routing.util.TurnCostEncoder.getTurnFlags(true, 0);\n    java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.add(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    if ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))\n        break;\n    \n} "},"status":-2},{"failures":[],"tindex":"a134bdb2-792f-11e5-9475-91bfd94fe606","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:106","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"graph","g":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:112","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.TurnCostExtension())"},"status":-2},{"failures":[],"tindex":"a134bdb3-792f-11e5-9475-39733d2caf29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((9 * 4), (com.graphhopper.storage.BaseGraph.isFrozen() ? 1 : 0))"},"variableMap":{"nodes":"nodesCH","this":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:272","type":"CtForImpl","sourcecode":"for (long long = int, long long = com.graphhopper.storage.BaseGraph.int ; long < long ; long += int , long += com.graphhopper.storage.BaseGraph.int) {\n    if (long >= long)\n        throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n    \n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":-2},{"failures":[],"tindex":"a134bdb4-792f-11e5-9475-e7cae3870af8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:90","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"variableMap":{"visitedCountFrom":"tmp","visitedCountTo":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:305","type":"CtReturnImpl","sourcecode":"return int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}