{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":288,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":302,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":310,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":191,"com.graphhopper.reader.OSMReaderTest.testFerry":115,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":265,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":266,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":299,"com.graphhopper.routing.QueryGraphTest.testOneWay":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":227,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":139,"com.graphhopper.reader.OSMReaderTest.testWithBounds":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":198,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":275,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":304,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":210,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":203,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":35,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":226,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":31,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":208,"com.graphhopper.GraphHopperTest.testPrepare":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":98,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":170,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":291,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":278,"com.graphhopper.util.InstructionListTest.testWayList":69,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":271,"com.graphhopper.GraphHopperAPITest.testDisconnected179":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":81,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":43,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":1,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":138,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":140,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":237,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":318,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":219,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":50,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":255,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":175,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":297,"com.graphhopper.GraphHopperTest.testLoadOSM":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":296,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":141,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":185,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":214,"com.graphhopper.reader.OSMReaderTest.testSort":240,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":96,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":79,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":57,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":294,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":158,"com.graphhopper.util.PointListTest.testReverse":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":290,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":306,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":235,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":111,"com.graphhopper.routing.PathTest.testWayList":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":101,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":93,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":301,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":6,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":118,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":234,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":317,"com.graphhopper.util.GHUtilityTest.testSort":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":143,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":308,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":25,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":173,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":130,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":61,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":305,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":75,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":260,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":19,"com.graphhopper.GraphHopperAPITest.testLoad":73,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":128,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":177,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":52,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":119,"com.graphhopper.reader.OSMReaderTest.testBarriers":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":225,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":42,"com.graphhopper.util.GHUtilityTest.testCopy":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":281,"com.graphhopper.util.AngleCalcTest.testAtan2":0,"com.graphhopper.routing.PathTest.testFindInstruction":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":120,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":126,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":44,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":283,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":40,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":36,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":23,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":127,"com.graphhopper.reader.PrinctonReaderTest.testRead":236,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":109,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":218,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":230,"com.graphhopper.util.InstructionListTest.testWayList2":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":14,"com.graphhopper.reader.OSMReaderTest.testFoot":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":205,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":311,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":41,"com.graphhopper.reader.OSMReaderTest.testOneWay":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":216,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":12,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":178,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":54,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":187,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":125,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":164,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":46,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":171,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":242,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":103,"com.graphhopper.routing.PathBidirRefTest.testExtract":312,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":252,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":87,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":207,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":137,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":206,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":251,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":27,"com.graphhopper.util.GHUtilityTest.testSort2":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":97,"com.graphhopper.reader.OSMReaderTest.testMain":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":233,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":324,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":212,"com.graphhopper.routing.PathBidirRefTest.testExtract2":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":231,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":156,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":147,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":274,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":29,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":151,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":133,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":289,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":142,"com.graphhopper.storage.GraphHopperStorageTest.testClone":174,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":189,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":229,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":183,"com.graphhopper.GraphHopperTest.testFootAndCar":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":53,"com.graphhopper.routing.PathTest.testTime":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":153,"com.graphhopper.reader.OSMReaderTest.testRelation":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":122,"com.graphhopper.util.GHUtilityTest.testSortDirected":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":222,"com.graphhopper.GraphHopperTest.testPrepareOnly":250,"com.graphhopper.GraphHopperTest.testVia":253,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":95,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":152,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":303,"com.graphhopper.GraphHopperTest.testFootOnly":261,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":264,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":28,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":116,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":157,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":200,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":315,"com.graphhopper.util.InstructionListTest.testFind":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":217},"transformations":[{"failures":[0],"tindex":"9d7ddc0c-826f-11e5-813b-59918d4d2546","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:52","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10],"tindex":"9d7e031d-826f-11e5-813b-35b797ec1a16","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"speed","edgeId":"speed","com.graphhopper.storage.EdgeAccess.NO_NODE":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n    int = java.lang.Integer;\nelse\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[],"tindex":"9d7e2a2e-826f-11e5-813b-6f167fc9ba97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:542","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.CalcShortcutHandler.int"},"status":-2},{"failures":[],"tindex":"9d7e2a2f-826f-11e5-813b-4b5ebe6df078","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:879","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"variableMap":{"com.graphhopper.util.PointList.EMPTY":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:353","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[11,12,3,13,14,7,15],"tindex":"9d7e2a30-826f-11e5-813b-a722a168312f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:728","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"9d7e2a31-826f-11e5-813b-7179c304a971","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:162","type":"CtReturnImpl","sourcecode":"return int <= int ? long + (int) : long + (int)"},"variableMap":{"nodeThis":"com.graphhopper.routing.util.AbstractFlagEncoder.K_BACKWARD","edgePointer":"flags","E_LINKB":"com.graphhopper.routing.util.AbstractFlagEncoder.K_BACKWARD","E_LINKA":"com.graphhopper.routing.util.AbstractFlagEncoder.K_BACKWARD","nodeOther":"com.graphhopper.routing.util.AbstractFlagEncoder.K_BACKWARD"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:303","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setBool(com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.AbstractFlagEncoder.int, boolean), com.graphhopper.routing.util.AbstractFlagEncoder.int, boolean)"},"status":-1},{"failures":[],"tindex":"9d7e5142-826f-11e5-813b-b3095f944478","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:489","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:483","type":"CtReturnImpl","sourcecode":"return gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.valueCollection()"},"status":-2},{"failures":[],"tindex":"9d7e5143-826f-11e5-813b-b5d7e1982338","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:85","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.util.zip.InflaterInputStream(java.io.InputStream , new java.util.zip.Inflater(true))"},"variableMap":{"is":"is"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:44","type":"CtAssignmentImpl","sourcecode":"this.java.io.InputStream = java.io.InputStream"},"status":0},{"failures":[114],"tindex":"9d7e5144-826f-11e5-813b-5780119f4948","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:321","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"The graph has not yet been initialized.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"))"},"status":-1},{"failures":[],"tindex":"9d7e7855-826f-11e5-813b-dd55d1617253","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:138","type":"CtInvocationImpl","sourcecode":"gnu.trove.iterator.TIntIterator.remove()"},"status":-2},{"failures":[115,116],"tindex":"9d7e7856-826f-11e5-813b-193be5863eb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception ex) {\n    }\n"},"status":-1},{"failures":[],"tindex":"9d7e7857-826f-11e5-813b-792e18f01534","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:57","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info((\"dummySum:\" + (int)))"},"variableMap":{"dummySum":"length","logger":"com.graphhopper.search.NameIndex.logger"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:98","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 2 ; int++) {\n    byte[] = java.lang.String.getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset);\n    if ((byte[].int) > 255) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4));\n        com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String));\n        java.lang.String = java.lang.String;\n        continue;\n    } \n    break;\n}"},"status":-2},{"failures":[16,117,118,119,120,121,122,17,123,18,124,19,125,126,127,20,128,21,129,130,131,132,133,22,134,135,23,24,136,25,137,138,139,140,141,142,26,143,144,145,146,147,148,149,27,150,151,152,153,154,155,156,28,157,158,159,160,161,162,163,29,164,165,166,167,168,30,31,32,169,170,171,172,173,174,33,175,34,176,35,177,178,179,36,180,37,181,182,183,184,185,38,186,187,39,40,188,41,189,190,191,192,193,194,42,195,43,196,44,197,198,199,45,200,46,201,202,203,204,205,47,206,207,48,49,208,50,209,51,210,211,212,213,53,214,215,216,217,218,219,54,220,55,221,56,222,223,224,57,225,58,226,227,228,229,230,59,231,232,60,61,233,62,234,235,236,237,115,238,239,240,241,242,243,244,245,246,247,248,63,249,250,64,65,251,66,67,252,253,254,255,256,257,258,259,260,261,262,263,68,69,70,264,265,266,71,267,72,268,269,270,271,73,272,273,75,274,76,275,77,78,79,80,81,82,87,276,277,90,278,91,92,279,280,281,282,93,283,94,95,284,96,285,286,97,287,98,288,289,99,100,290,101,291,292,102,103,104,105,106,293,107,294,108,109,295,296,110,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,111,314,315,316,317,318],"tindex":"9d7e9f68-826f-11e5-813b-6f4b9827829b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:382","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int)"},"variableMap":{"nodeId":"fromNode","mainNodes":"fromNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:172","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getEdgeRef(int)"},"status":-1},{"failures":[],"tindex":"9d7ec679-826f-11e5-813b-658eb2c81a2c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:259","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"status":-2},{"failures":[74,75,319,85,89],"tindex":"9d7ec67a-826f-11e5-813b-07fd7bafa0ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"variableMap":{"flags":"mask","mask":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[147,161,320,321,322],"tindex":"9d7ec67b-826f-11e5-813b-532ef8532649","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:487","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 1000000.0))) / 1000000.0"},"variableMap":{"value":"normedDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:62","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.DistanceCalcEarth.double) * 2) * java.lang.Math.(java.lang.Math.asin(java.lang.Math.java.lang.Math.sqrt(double)))"},"status":-1},{"failures":[131,134,136,143,157,183,186,188,203,206,208,228,231,233,243,65,256,323,72,276,278,91,281,283,94,285,286,287,98,99,290,101,324,113],"tindex":"9d7ec67c-826f-11e5-813b-8388ffecff4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:244","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[],"tindex":"9d7eed8d-826f-11e5-813b-1384692800bc","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1083","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMaxRegionSearch(int)"},"variableMap":{"tmpIndex":"this","maxRegionSearch":"minResolutionInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:255","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMinResolutionInMeter(int)"},"status":0},{"failures":[143,157,253,254,255,256,257,258,260,261,325,326,281,283,286,98,302,307,311],"tindex":"9d7eed8e-826f-11e5-813b-b321701bbcf6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"delta_lon","incDist2DSum":"delta_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:196","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}