{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":27,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":84,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":16,"com.graphhopper.reader.OSMReaderTest.testMain":76,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":3,"com.graphhopper.reader.OSMReaderTest.testFerry":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":25,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":12,"com.graphhopper.reader.OSMReaderTest.testWithBounds":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":29,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":45,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":86,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":46,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":72,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":0,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":2,"com.graphhopper.GraphHopperTest.testPrepare":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":9,"com.graphhopper.GraphHopperTest.testFootAndCar":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":8,"com.graphhopper.reader.OSMReaderTest.testFoot":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":20,"com.graphhopper.reader.OSMReaderTest.testOneWay":87,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":24,"com.graphhopper.GraphHopperAPITest.testDisconnected179":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":32,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":10,"com.graphhopper.GraphHopperTest.testPrepareOnly":52,"com.graphhopper.GraphHopperTest.testVia":60,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":13,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":83,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":42,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":80,"com.graphhopper.GraphHopperAPITest.testLoad":88,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":30,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":4,"com.graphhopper.GraphHopperTest.testFootOnly":68,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":36,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":82,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":58,"com.graphhopper.reader.OSMReaderTest.testBarriers":78,"com.graphhopper.GraphHopperTest.testLoadOSM":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":53,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":55,"com.graphhopper.reader.OSMReaderTest.testSort":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":26,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":54},"transformations":[{"failures":[0,1,2],"tindex":"ccf42874-7917-11e5-bc94-d5a75bdfc939","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"dist","angleXY":"maxDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:150","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"ccf44f85-7917-11e5-bc94-237ac841eb75","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:184","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"incEleSum":"lat","eleDelta":"minLat","incDist2DSum":"lat","decEleSum":"minLat","fullDist2D":"minLat","decDist2DSum":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:97","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"ccf44f86-7917-11e5-bc94-f771e7c9cbd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.setMinNetworkSize(int)"},"variableMap":{"minNetworkSize":"minOneWayNetworkSize","preparation":"preparation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.setMinOneWayNetworkSize(int)"},"status":-2},{"failures":[],"tindex":"ccf47697-7917-11e5-bc94-2d2921e41316","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.freeze()"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:273","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.storage.GraphHopperStorage.getNodes()) ; int++) {\n    if (com.graphhopper.routing.util.PrepareRoutingSubnetworks.detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer, int))\n        com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int);\n    \n}"},"status":-2},{"failures":[],"tindex":"ccf47698-7917-11e5-bc94-595d75fb5f36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:122","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-2},{"failures":[],"tindex":"ccf47699-7917-11e5-bc94-312f5b49ecbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:115","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = new byte[1 << (int)]"},"variableMap":{"newSegs":"segments","i":"bufferIndex","segmentSizePower":"bufferIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:271","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[][][(int + 1)]"},"status":-2},{"failures":[],"tindex":"ccf4769a-7917-11e5-bc94-4f3d795399b6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:317","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"ccf4769b-7917-11e5-bc94-9798b5601e76","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:236","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"ccf4769c-7917-11e5-bc94-d1b34b338746","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:136","type":"CtReturnImpl","sourcecode":"return (((com.graphhopper.reader.dem.SRTMProvider.(down(double)) + 90) * 1000) + com.graphhopper.reader.dem.SRTMProvider.(down(double))) + 180"},"status":-2},{"failures":[],"tindex":"ccf4769d-7917-11e5-bc94-d9ef300312bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"extractSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:194","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":-2},{"failures":[],"tindex":"ccf49dae-7917-11e5-bc94-5920ecff8719","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PMap:56","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:364","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.nio.ByteBuffer.get(byte[], 0, int);\n    java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1));\n    java.nio.ByteBuffer.position(0);\n    java.nio.ByteBuffer.get(byte[], int, int);\n} else {\n    java.nio.ByteBuffer.get(byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"ccf49daf-7917-11e5-bc94-87e3f7745eb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:246","type":"CtIfImpl","sourcecode":"if (boolean) {\n    double = double[][int];\n    double[][int] = double[][int];\n    double[][int] = double;\n} "},"status":-2},{"failures":[],"tindex":"ccf49db0-7917-11e5-bc94-013e4c872b6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:303","type":"CtIfImpl","sourcecode":"if (!((int == 0) && (int == 0))) {\n    double double;\n    int int = int;\n    if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    } else {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    }\n    if (double < double) {\n        double = double;\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"ccf49db1-7917-11e5-bc94-ed7b4999b036","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:500","type":"CtInvocationImpl","sourcecode":"java.lang.Integer.parseInt(java.lang.String)"},"variableMap":{"minStr":"minStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:488","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(\":\")"},"status":-2},{"failures":[],"tindex":"ccf49db2-7917-11e5-bc94-81a5ea44d0a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:116","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"variableMap":{"currentBucket":"a","retBucket":"b","currentIndex":"b","bucketSize":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:212","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.BaseGraph.nextEdgeId(), int, int)"},"status":-2},{"failures":[],"tindex":"ccf49db3-7917-11e5-bc94-734f87f8b701","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"MAGIC_INT","capacity":"MAGIC_INT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:300","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-2},{"failures":[],"tindex":"ccf49db4-7917-11e5-bc94-e98c650930d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:202","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"ccf49db5-7917-11e5-bc94-e39ff1f8e22b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:104","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / (com.graphhopper.util.DistanceCalcEarth.(calcCircumference(double)) / double)"},"variableMap":{"radiusInMeter":"prevLat","this":"distCalc","lat":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:289","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"ccf4c4c6-7917-11e5-bc94-019c8ce5a951","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.int , int , double , double)"},"status":-2},{"failures":[],"tindex":"ccf4c4c7-7917-11e5-bc94-59d214ecd750","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:278","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"variableMap":{"intLow":"lonUnits","intHigh":"lonUnits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:92","type":"CtReturnImpl","sourcecode":"return (long * (int)) + long"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}