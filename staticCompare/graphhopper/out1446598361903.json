{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":114,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.reader.OSMReaderTest.testFerry":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":97,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":113,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":143,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":133,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":105,"com.graphhopper.reader.OSMReaderTest.testWithBounds":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":70,"com.graphhopper.reader.PrinctonReaderTest.testRead":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":40,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":41,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":68,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":127,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":75,"com.graphhopper.GraphHopperTest.testPrepare":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":101,"com.graphhopper.util.InstructionListTest.testWayList2":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":60,"com.graphhopper.reader.OSMReaderTest.testFoot":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":65,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":116,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":142,"com.graphhopper.util.InstructionListTest.testWayList":8,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":135,"com.graphhopper.reader.OSMReaderTest.testOneWay":31,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":82,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":115,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":123,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":22,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":27,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":69,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":61,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":121,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":107,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":77,"com.graphhopper.GraphHopperTest.testLoadOSM":18,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":10,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":130,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":2,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":139,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":12,"com.graphhopper.reader.OSMReaderTest.testSort":26,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":87,"com.graphhopper.reader.OSMReaderTest.testMain":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":72,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":63,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":78,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":32,"com.graphhopper.routing.PathTest.testWayList":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":119,"com.graphhopper.util.BitUtilBigTest.testFromBitString":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":38,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":88,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":71,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":94,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":144,"com.graphhopper.GraphHopperTest.testFootAndCar":16,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":137,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":112,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":92,"com.graphhopper.GraphHopperTest.testVia":13,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":100,"com.graphhopper.GraphHopperAPITest.testLoad":4,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":17,"com.graphhopper.GraphHopperTest.testFootOnly":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":39,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":29,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":124,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":34,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":86,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":96,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":117,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":141,"com.graphhopper.util.GHUtilityTest.testCopy":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":95},"transformations":[{"failures":[0],"tindex":"5a763044-828e-11e5-a3d1-fbb4823eaaa8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"status":-1},{"failures":[1,2,3],"tindex":"5a765755-828e-11e5-a3d1-f9b0afedde52","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:452","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false)"},"variableMap":{"edge":"reverseEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:440","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true)"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,1,2,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"5a767e66-828e-11e5-a3d1-2d6ae57d9030","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"variableMap":{"shift":"flags","tmpValue":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:332","type":"CtAssignmentImpl","sourcecode":"long = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.get(int).reverseFlags(long)"},"status":-1},{"failures":[136,137,138],"tindex":"5a767e67-828e-11e5-a3d1-35eee0ad74f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:198","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:205","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"E\""},"status":-1},{"failures":[],"tindex":"5a76cc88-828e-11e5-a3d1-dfc4333577f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1063","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.RoutingAlgorithm.getVisitedNodes()"},"status":0},{"failures":[],"tindex":"5a76cc89-828e-11e5-a3d1-7b2eeca439c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:306","type":"CtAssertImpl","sourcecode":"assert com.graphhopper.storage.BaseGraph.isFrozen() : \"Traversal CHGraph is only possible if BaseGraph is frozen\""},"variableMap":{"baseGraph":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n"},"status":-2},{"failures":[139,140],"tindex":"5a76cc8a-828e-11e5-a3d1-e3567f2a7a58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:182","type":"CtReturnImpl","sourcecode":"return int - 1"},"variableMap":{"intVal":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:261","type":"CtReturnImpl","sourcecode":"return ((int)((long) / (int)))"},"status":-1},{"failures":[13,141],"tindex":"5a76f39b-828e-11e5-a3d1-fb020f8859ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:547","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider = new com.graphhopper.reader.dem.SRTMProvider()"},"variableMap":{"tmpProvider":"tmpProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:556","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.setCacheDir(new java.io.File(java.lang.String))"},"status":-1},{"failures":[],"tindex":"5a76f39c-828e-11e5-a3d1-1f4dc2bb0531","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:114","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Node: \")"},"variableMap":{"txt":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:219","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\' lon=\\'\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.GPXEntry.getLon()))"},"status":0},{"failures":[],"tindex":"5a76f39d-828e-11e5-a3d1-991e5b9d2a7e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:684","type":"CtAssignmentImpl","sourcecode":"double = int"},"variableMap":{"maxTurnCosts":"size","costs":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:128","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":0},{"failures":[142],"tindex":"5a76f39e-828e-11e5-a3d1-4751e9f40894","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:422","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \",\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:290","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-1},{"failures":[],"tindex":"5a771aaf-828e-11e5-a3d1-bf0c0c497fd0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:61","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getSkippedEdge1()"},"variableMap":{"mainEdgeState":"closestEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:170","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIteratorState.getEdge()"},"status":-2},{"failures":[],"tindex":"5a771ab0-828e-11e5-a3d1-a3fbd85455cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.ViaInstruction:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.setTime(com.graphhopper.util.Instruction.getTime())"},"status":0},{"failures":[13,47,50,51,53,143,55,57,144,59,60,145,61,63,64],"tindex":"5a771ab1-828e-11e5-a3d1-459e6ac0a588","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:168","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"));\n"},"variableMap":{"initialized":"is3D"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:406","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if (int > 0) {\n        if (boolean)\n            double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\n        else\n            double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n        \n    } \n    double = double[][int];\n    double = double[][int];\n    if (boolean)\n        double = double[][int];\n    \n}"},"status":-1},{"failures":[],"tindex":"5a771ab2-828e-11e5-a3d1-3d9b445e88e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:362","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.isShortcut())\n    return (com.graphhopper.storage.BaseGraph.CommonEdgeIterator.(getDirectFlags()) & (com.graphhopper.routing.ch.PrepareEncoder.getScFwdDir())) != 0;\n"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.util.EdgeIteratorState.isForward(com.graphhopper.routing.util.FlagEncoder))) || ((boolean) && (com.graphhopper.util.EdgeIteratorState.isBackward(com.graphhopper.routing.util.FlagEncoder)))"},"status":-2},{"failures":[],"tindex":"5a7741c3-828e-11e5-a3d1-af48d9483f28","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:105","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.Directory = new com.graphhopper.storage.MMapDirectory(java.lang.String);\nelse\n    com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean);\n"},"status":-2},{"failures":[4,10,11,12,1,2,146,15,16,17,19,47,49],"tindex":"5a7741c4-828e-11e5-a3d1-5f68d7ff9ad6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:190","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)) > (double)"},"status":-1},{"failures":[],"tindex":"5a7741c5-828e-11e5-a3d1-19a9db38665d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:427","type":"CtInvocationImpl","sourcecode":"java.lang.Object.getClass().getMethod(\"clean\").invoke(java.lang.Object)"},"variableMap":{"cleaner":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:94","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":-2},{"failures":[],"tindex":"5a7741c6-828e-11e5-a3d1-577dd1af700d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:254","type":"CtIfImpl","sourcecode":"if (boolean)\n    return long;\n"},"variableMap":{"directionBitMask":"flags","blockByDefault":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:112","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, 0), com.graphhopper.routing.util.AbstractFlagEncoder.int, false);\n"},"status":0},{"failures":[],"tindex":"5a7768d7-828e-11e5-a3d1-bbbf667c9c08","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"5a7741c6-828e-11e5-a3d1-577dd1af700d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool","com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"5a76cc88-828e-11e5-a3d1-dfc4333577f8","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.RoutingAlgorithm.getVisitedNodes"]},"type":"staticDiff"}]}]}