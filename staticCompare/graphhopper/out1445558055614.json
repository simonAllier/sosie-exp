{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":20,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":28,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":22,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":14,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":4,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":0,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":16,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":24,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":3},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"33964498-7918-11e5-a765-230e51ed02ea","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:589","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative but was \" + double));\n"},"variableMap":{"weight":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:102","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"33966ba9-7918-11e5-a765-9d0e5662b26a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:495","type":"CtIfImpl","sourcecode":"if (long == long) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"33966baa-7918-11e5-a765-034bbf2814c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:136","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"33966bab-7918-11e5-a765-b5e782582d89","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.sqrt(((double * double) + (double * double)))"},"variableMap":{"len":"weight","delta":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:75","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"33966bac-7918-11e5-a765-411a58736377","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:137","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(float[], 0)"},"status":-2},{"failures":[],"tindex":"33966bad-7918-11e5-a765-2de64c5f51d1","series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"variableMap":{"name":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:247","type":"CtIfImpl","sourcecode":"if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"33966bae-7918-11e5-a765-954a55e6f20f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:396","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"variableMap":{"index":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:182","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.shapes.BBox.hasElevation()) {\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((7 * 4)));\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((8 * 4)));\n} "},"status":-2},{"failures":[],"tindex":"339692bf-7918-11e5-a765-1123d51238bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:116","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"variableMap":{"currentBucket":"size","retBucket":"size","currentIndex":"size","bucketSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:105","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-2},{"failures":[],"tindex":"339692c0-7918-11e5-a765-5d29720ffa4f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"variableMap":{"elem":"parentEdges","size":"endNode","i":"endNode","element":"endNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:50","type":"CtWhileImpl","sourcecode":"while (true) {\n    int int = int[][int];\n    if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n        break;\n    \n    com.graphhopper.routing.Path.processEdge(int, int);\n    int = int[][int];\n}"},"status":-2},{"failures":[],"tindex":"339692c1-7918-11e5-a765-d7cacea8bf4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:801","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:255","type":"CtIfImpl","sourcecode":"if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n    int = int;\n    int = int + (int);\n} "},"status":-2},{"failures":[],"tindex":"339692c2-7918-11e5-a765-597536f6e82d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:719","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"variableMap":{"graphHopperFolder":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:665","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"status":-2},{"failures":[],"tindex":"339692c3-7918-11e5-a765-df9397efdb01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:456","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge()))) {\n    long long = int == (com.graphhopper.util.EdgeIterator.int) ? -1 : com.graphhopper.storage.CHGraphImpl.isShortcut(int) ? com.graphhopper.storage.EdgeAccess.toPointer(int) : com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.toPointer(int);\n    com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n    break;\n} "},"status":-2},{"failures":[],"tindex":"339692c4-7918-11e5-a765-f11a6148d032","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:124","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.reset()"},"status":-2},{"failures":[],"tindex":"3396b9d5-7918-11e5-a765-0b045483f6d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:633","type":"CtReturnImpl","sourcecode":"return ((\"distance:\" + com.graphhopper.routing.Path.(getDistance())) + \", edges:\") + (com.graphhopper.routing.TIntList.size())"},"status":-2},{"failures":[],"tindex":"3396b9d6-7918-11e5-a765-abc0b24a8881","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.setWorldBounds()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:175","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isRegistered())\n    throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"));\n"},"status":-2},{"failures":[],"tindex":"3396b9d7-7918-11e5-a765-095f299bd5b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"lonSize","nextEdgeOther":"len","nodeOther":"i","nextEdge":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:269","type":"CtIfImpl","sourcecode":"if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n    int = int + (int);\n    int = int;\n} "},"status":-2},{"failures":[],"tindex":"3396b9d8-7918-11e5-a765-418d6a17cde5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:223","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkpt>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:213","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trk><name>\")"},"status":-2},{"failures":[],"tindex":"3396b9d9-7918-11e5-a765-cd1fe6e03fab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:654","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Lock.release()"},"status":-2},{"failures":[],"tindex":"3396b9da-7918-11e5-a765-7d1a72e9e2b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:704","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"3396b9db-7918-11e5-a765-55e0ea174d93","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"latlon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.writeVLong(long)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}