{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":70,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":80,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":228,"com.graphhopper.reader.OSMReaderTest.testFerry":104,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":372,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":277,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":335,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":95,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":248,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":139,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":301,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":260,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":33,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":368,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":174,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":365,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":381,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":58,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":212,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":32,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":360,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":48,"com.graphhopper.GraphHopperTest.testLoadOSM":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":220,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":213,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":279,"com.graphhopper.reader.OSMReaderTest.testSort":107,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":97,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":321,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":158,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":261,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":85,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":121,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":356,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":310,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":319,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":325,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":207,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":317,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":55,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":328,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":345,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":278,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":336,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":140,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":130,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":100,"com.graphhopper.reader.OSMReaderTest.testBarriers":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":232,"com.graphhopper.util.GHUtilityTest.testCopy":376,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":185,"com.graphhopper.routing.PathTest.testFindInstruction":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":327,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":182,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":159,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":354,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":374,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":44,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":305,"com.graphhopper.util.InstructionListTest.testWayList2":370,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":256,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":221,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":331,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":102,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":337,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":175,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":129,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":306,"com.graphhopper.routing.PathBidirRefTest.testExtract":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":382,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":275,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":362,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":204,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":254,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":226,"com.graphhopper.util.GHUtilityTest.testSort2":375,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":67,"com.graphhopper.reader.OSMReaderTest.testMain":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":323,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":349,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":384,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":280,"com.graphhopper.storage.GraphHopperStorageTest.testClone":132,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":303,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":234,"com.graphhopper.routing.PathTest.testTime":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":287,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":247,"com.graphhopper.util.GHUtilityTest.testSortDirected":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":292,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":82,"com.graphhopper.GraphHopperTest.testFootOnly":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":387,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":176,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":243,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":215,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":77,"com.graphhopper.routing.QueryGraphTest.testOneWay":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":300,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":388,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":211,"com.graphhopper.reader.OSMReaderTest.testWithBounds":116,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":192,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":348,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":341,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":128,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":52,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":161,"com.graphhopper.util.InstructionListTest.testWayList":369,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":235,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":209,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":386,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":120,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":263,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":134,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":46,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":152,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":201,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":74,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":122,"com.graphhopper.routing.PathTest.testWayList":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":59,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":266,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":270,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":332,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":31,"com.graphhopper.util.GHUtilityTest.testSort":377,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":314,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":361,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":184,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":180,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":269,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":103,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":167,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":322,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":274,"com.graphhopper.routing.PathTest.testFound":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":253,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":49,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":338,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":238,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":137,"com.graphhopper.util.InstructionListTest.testEmptyList":367,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":65,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":309,"com.graphhopper.reader.PrinctonReaderTest.testRead":119,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":227,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":385,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":380,"com.graphhopper.reader.OSMReaderTest.testFoot":105,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":218,"com.graphhopper.reader.OSMReaderTest.testOneWay":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":315,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":141,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":285,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":43,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":150,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":245,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":36,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":170,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":363,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":241,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":312,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":271,"com.graphhopper.routing.PathBidirRefTest.testExtract2":22,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":208,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":154,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":298,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":71,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":214,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":316,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":329,"com.graphhopper.GraphHopperTest.testPrepareOnly":3,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":186,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":62,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":114,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":272,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":153,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":371,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":244,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":291,"com.graphhopper.util.InstructionListTest.testFind":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":318},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,76,77,77,78,78,79,79,80,80,81,81,82,82,83,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378],"tindex":"b6dbb1bd-794a-11e5-8199-c7201f463a2e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-1},{"failures":[],"tindex":"b6dbffde-794a-11e5-8199-c56224b05508","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:293","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.clean(0, java.util.List<java.nio.ByteBuffer>.size())"},"status":0},{"failures":[379,380,381,382,383,384,385,386,387,388],"tindex":"b6dbffdf-794a-11e5-8199-2bc591fade14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"b6dc26f0-794a-11e5-8199-cdad50576830","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.storage.EdgeAccess.int)"},"status":-2},{"failures":[2,3,11,12,13,14,15,16,17,18,19,20,29,72,76,77,79,80,82,83,84,85,86,87,89,90,91,104,105,106,107,108,111,112,114,115,116,117,118,128,155,160,163,193,194,195,211,212,213,227,254,259,262,280,307,312,315,325,352,357,360,366,368,369,370,376],"tindex":"b6dc26f1-794a-11e5-8199-317930ba00b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"status":-1},{"failures":[120],"tindex":"b6dc26f2-794a-11e5-8199-f31bb796f2aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:69","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String[][int])) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"b6dc26f3-794a-11e5-8199-c150def34b57","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:121","type":"CtReturnImpl","sourcecode":"return java.lang.Math.toDegrees(double)"},"variableMap":{"orientation":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:382","type":"CtReturnImpl","sourcecode":"return -(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"b6dc26f4-794a-11e5-8199-2ba8765ea256","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"eleDelta":"azimuth","decEleSum":"azimuth","fullDist2D":"azimuth","decDist2DSum":"azimuth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:250","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    java.lang.StringBuilder.append(\"<gh:azimuth>\").append(com.graphhopper.util.Helper.round2(double)).append(\"<\/gh:azimuth>\");\n"},"status":-2},{"failures":[],"tindex":"b6dc4e05-794a-11e5-8199-c341fb570d46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:95","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.EdgeEntry == null) {\n    com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-2},{"failures":[],"tindex":"b6dc4e06-794a-11e5-8199-67a4d0c0b437","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"level","nextEdgeId":"level"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:328","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"b6dc4e07-794a-11e5-8199-09fff2c1d4d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:58","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    throw new java.lang.IllegalStateException(\"Value cannot be NaN\");\n"},"variableMap":{"value":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:67","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String[][int])) {\n        continue;\n    } \n    if (int == 0) {\n        int = java.lang.Integer.parseInt(java.lang.String[][int]);\n    } else if (int == 1) {\n        int = java.lang.Integer.parseInt(java.lang.String[][int]);\n    } else {\n        double = java.lang.Double.parseDouble(java.lang.String[][int]);\n    }\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"b6dc7518-794a-11e5-8199-19199f12a40f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:128","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Double.parseDouble(java.lang.String);\n} catch (java.lang.Exception ex) {\n}"},"status":-2},{"failures":[],"tindex":"b6dc7519-794a-11e5-8199-6bd725e3ac1b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED","newBaseIndex":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:404","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.Set<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-2},{"failures":[],"tindex":"b6dc751a-794a-11e5-8199-270597f47094","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:101","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"retBucket":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:148","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":-2},{"failures":[],"tindex":"b6dc751b-794a-11e5-8199-5b4dea8da09e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:280","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((60 - double) / (int))"},"variableMap":{"degree":"i","lat":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:413","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int])"},"status":-2},{"failures":[],"tindex":"b6dc9c2c-794a-11e5-8199-3ba2cb6733bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:296","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"variableMap":{"index":"size","entrySize":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:126","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"status":-2},{"failures":[],"tindex":"b6dc9c2d-794a-11e5-8199-3fb7a62b8f36","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:352","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Helper.idealIntArraySize((int + 1))"},"variableMap":{"pos":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:112","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt((long + (int)))"},"status":-2},{"failures":[],"tindex":"b6dc9c2e-794a-11e5-8199-17765fa6defc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:103","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"getPoints\")"},"status":-2},{"failures":[],"tindex":"b6dc9c2f-794a-11e5-8199-dd467b5a9b14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.SimpleFSLockFactory:61","type":"CtIfImpl","sourcecode":"if (java.io.File.exists()) {\n    java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String);\n    if ((java.io.File.exists()) && (!(java.io.File.delete())))\n        throw new java.lang.RuntimeException((\"Cannot delete \" + java.io.File));\n    \n} "},"status":-2},{"failures":[],"tindex":"b6dc9c30-794a-11e5-8199-c3b6f0e66ab4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:779","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return long;\n"},"variableMap":{"val":"name","defaultL":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:75","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    return long;\n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}