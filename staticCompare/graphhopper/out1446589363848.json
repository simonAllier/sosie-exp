{"failureDictionary":{"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":21,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":61,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":81,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":75,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":53,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":39,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":35,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":94,"com.graphhopper.GraphHopperTest.testPrepare":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":42,"com.graphhopper.util.InstructionListTest.testWayList2":13,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":28,"com.graphhopper.util.InstructionListTest.testWayList":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":38,"com.graphhopper.reader.OSMReaderTest.testOneWay":50,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":11,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":65,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":63,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":82,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":22,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":77,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":16,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":92,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":47,"com.graphhopper.GraphHopperTest.testLoadOSM":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":23,"com.graphhopper.reader.OSMReaderTest.testSort":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":54,"com.graphhopper.reader.OSMReaderTest.testMain":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":37,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":85,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":36,"com.graphhopper.routing.PathTest.testWayList":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":74,"com.graphhopper.util.BitUtilBigTest.testFromBitString":0,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":68,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":67,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":93,"com.graphhopper.reader.OSMNodeTest.testSetTags":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":45,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":60,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":86,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":66,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":89,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":98,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":62,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":2,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":17,"com.graphhopper.GraphHopperTest.testFootOnly":20,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":52,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":56,"com.graphhopper.reader.OSMReaderTest.testBarriers":1,"com.graphhopper.util.InstructionListTest.testFind":10,"com.graphhopper.util.GHUtilityTest.testCopy":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":64},"transformations":[{"failures":[],"tindex":"673cf583-8279-11e5-8d16-41b12d4c620b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:190","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)) > (double)"},"status":-1},{"failures":[0],"tindex":"673e2e04-8279-11e5-8d16-31556d9ff218","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"charI","nodeCount":"charI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:99","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    byte <<= 1;\n    if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n        byte |= 1;\n    \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"673e2e05-8279-11e5-8d16-89a1f1c7231b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:601","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[1,2],"tindex":"673e2e06-8279-11e5-8d16-2b647d54ead6","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:709","type":"CtIfImpl","sourcecode":"if ((int <= (-(com.graphhopper.reader.OSMReader.int))) && (int >= (com.graphhopper.reader.OSMReader.int)))\n    throw new java.lang.AssertionError((((\"Mapped index not in correct bounds \" + int) + \", \") + long));\n"},"variableMap":{"osmId":"wayOsmId","com.graphhopper.reader.OSMReader.TOWER_NODE":"lastBarrier","tmpNode":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:386","type":"CtIfImpl","sourcecode":"if ((long & long) > 0) {\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n    long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n    if (int > 0) {\n        if (int < 0)\n            int = 0;\n        \n        long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n        long[][((long[].int) - 1)] = long;\n        gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n    } else {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        gnu.trove.list.TLongList.set(0, long);\n    }\n    int = int;\n} "},"status":-1},{"failures":[3,4,1,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"673e5517-8279-11e5-8d16-c9627c9afba9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:458","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-1},{"failures":[],"tindex":"673e5518-8279-11e5-8d16-db4fa53e455a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:159","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":0},{"failures":[],"tindex":"673e5519-8279-11e5-8d16-f7025248a755","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"r_lon_deg","weight":"r_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:149","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, double, double, double);\n"},"status":0},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,30,63,64,65,66,67,68,69,70,36,71,72,73,74,75,76,77,78,41,79,80,81,82,83,84,85,86,47,87],"tindex":"673e551a-8279-11e5-8d16-f59edf3fc06b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:541","type":"CtIfImpl","sourcecode":"if (((int < 0) && (int != (java.lang.Integer.int))) || (int >= (int)))\n    throw new java.lang.IllegalStateException(((((\"adjNode \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \")\"));\n"},"variableMap":{"adjNode":"nodeCount","java.lang.Integer.MIN_VALUE":"nodeCount","this":"this","nodeCount":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:771","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getBaseNode();\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    java.lang.String java.lang.String = ((((((((((((((((((((((com.graphhopper.util.EdgeIterator.getEdge()) + \", r.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", r.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", tr.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", tr.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", base:\") + int) + \", adj:\") + int) + \", nodeCount:\") + (int);\n    if (int >= (int))\n        throw new java.lang.RuntimeException((\"Adj.node problem with edge \" + java.lang.String));\n    \n    if (int >= (int))\n        throw new java.lang.RuntimeException((\"Base node problem with edge \" + java.lang.String));\n    \n    try {\n        com.graphhopper.util.EdgeExplorer.setBaseNode(int).toString();\n    } catch (java.lang.Exception ex) {\n        org.slf4j.LoggerFactory.getLogger(java.lang.Object.getClass()).error((\"adj:\" + int));\n    }\n    try {\n        com.graphhopper.util.EdgeExplorer.setBaseNode(int).toString();\n    } catch (java.lang.Exception ex) {\n        org.slf4j.LoggerFactory.getLogger(java.lang.Object.getClass()).error((\"base:\" + int));\n    }\n}"},"status":-1},{"failures":[51,55],"tindex":"673e7c2b-8279-11e5-8d16-d781d02c94a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"removedEdges","maxGeoRef":"removedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:181","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.TIntList, int)"},"status":-1},{"failures":[88],"tindex":"673e7c2c-8279-11e5-8d16-778444e56549","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:124","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphBuilder.build()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:94","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphBuilder.setCHGraph(com.graphhopper.routing.util.Weighting).create()"},"status":-1},{"failures":[],"tindex":"673ea33d-8279-11e5-8d16-eff6f7405442","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:369","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties()"},"variableMap":{"this":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1123","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"prepare.done\", boolean)"},"status":-2},{"failures":[],"tindex":"673ea33e-8279-11e5-8d16-d9cd5ec5feb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:146","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(com.graphhopper.routing.AStar.AStarEdge.int, true)"},"status":0},{"failures":[],"tindex":"673ea33f-8279-11e5-8d16-df80e3e54937","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"status":0},{"failures":[89,90,91,92,93,94,95],"tindex":"673ea340-8279-11e5-8d16-33bf23fadd46","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"queryLon","angleXY":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:89","type":"CtForImpl","sourcecode":"for (int int, int int = 0 ; int < 2 ; int++) {\n    if (int == 0) {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    } else {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    }\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if ((com.graphhopper.util.shapes.Circle == null) || (double < (com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.Circle.getLat(), com.graphhopper.util.shapes.Circle.getLon(), double, double)))) {\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        if (double <= 0)\n            break;\n        \n        com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc);\n    } \n}"},"status":-1},{"failures":[],"tindex":"673eca51-8279-11e5-8d16-5f581bab5f94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:136","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = float"},"status":0},{"failures":[],"tindex":"673eca52-8279-11e5-8d16-91e881cd5676","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:762","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"673eca53-8279-11e5-8d16-0b3ee74ab8b6","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:140","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    throw new java.lang.IllegalStateException(\"Encoding manager was not set.\");\n"},"variableMap":{"encodingManager":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":0},{"failures":[5,96],"tindex":"673ef164-8279-11e5-8d16-b7aebc2875f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:98","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Double.parseDouble(java.lang.String)"},"status":-1},{"failures":[97,44,98],"tindex":"673ef165-8279-11e5-8d16-8b5395b82dfb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:432","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.close()"},"variableMap":{"extStorage":"extStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:423","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.flush()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"673eca53-8279-11e5-8d16-0b3ee74ab8b6","diffs":[{"branches":{"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"],"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"],"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"],"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"],"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"],"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"],"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"],"com.graphhopper.util.DepthFirstSearchTest.testDFS1":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"],"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"],"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":["com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).l5","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).t2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e3","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e2","com.graphhopper.routing.util.EncodingManager_com.graphhopper.routing.util.EncodingManager(java.util.List,int).e4"]},"type":"branch"}]},{"transformation":"673e5519-8279-11e5-8d16-f7025248a755","diffs":[{"branches":{"com.graphhopper.util.InstructionListTest.testFind":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).e2","com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).e3","com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).t2"],"com.graphhopper.routing.PathTest.testFindInstruction":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).t2"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).t2"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).e2","com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).e3","com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedEdgeDistanceNew(double,double,double,double,double,double,boolean).t2"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"673ea33e-8279-11e5-8d16-d9cd5ec5feb6","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.ConsistentWeightApproximator.approximate"]},"type":"staticDiff"}]},{"transformation":"673e5518-8279-11e5-8d16-db4fa53e455a","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.EncodedValue.getBits"]},"type":"staticDiff"}]}]}