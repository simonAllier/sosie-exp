{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":161,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":27,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":74,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":150,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":259,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":260,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":70,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":65,"com.graphhopper.routing.QueryGraphTest.testOneWay":30,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":201,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":28,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":164,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":108,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":243,"com.graphhopper.GraphHopperTest.testPrepare":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":92,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":97,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":190,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":77,"com.graphhopper.util.InstructionListTest.testWayList":50,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":85,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":258,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":156,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":63,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":202,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":46,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":255,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":120,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":232,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":172,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":17,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":182,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":142,"com.graphhopper.GraphHopperTest.testLoadOSM":20,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":192,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":227,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":87,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":105,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":95,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":56,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":253,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":39,"com.graphhopper.routing.PathTest.testWayList":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":158,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":238,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":124,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":252,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":89,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":25,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":45,"com.graphhopper.util.GHUtilityTest.testSort":263,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":157,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":80,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":147,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":127,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":222,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":64,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":113,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":21,"com.graphhopper.GraphHopperAPITest.testLoad":47,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":137,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":185,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":115,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":178,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":241,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":154,"com.graphhopper.util.GHUtilityTest.testCopy":262,"com.graphhopper.routing.PathTest.testFindInstruction":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":126,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":134,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":84,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":197,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":135,"com.graphhopper.reader.PrinctonReaderTest.testRead":254,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":225,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":155,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":244,"com.graphhopper.util.InstructionListTest.testWayList2":51,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":169,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":165,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":199,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":112,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":186,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":233,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":163,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":177,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":183,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":132,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":245,"com.graphhopper.routing.PathBidirRefTest.testExtract":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":100,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":54,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":256,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":111,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":168,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":148,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":216,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":167,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":207,"com.graphhopper.util.GHUtilityTest.testSort2":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":90,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":250,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":223,"com.graphhopper.routing.PathBidirRefTest.testExtract2":36,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":246,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":170,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":205,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":218,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":242,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":140,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":104,"com.graphhopper.storage.GraphHopperStorageTest.testClone":180,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":200,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":251,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":68,"com.graphhopper.GraphHopperTest.testFootAndCar":18,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":191,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":128,"com.graphhopper.GraphHopperTest.testPrepareOnly":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":237,"com.graphhopper.GraphHopperTest.testVia":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":86,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":224,"com.graphhopper.GraphHopperTest.testFootOnly":22,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":214,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":208,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":215,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":162,"com.graphhopper.util.InstructionListTest.testFind":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":230},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"bcd74a0e-8292-11e5-9ecd-81e27b7f54f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:657","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(long, int)"},"status":-1},{"failures":[],"tindex":"bcd7711f-8292-11e5-9ecd-297424e9b3ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:508","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.org.slf4j.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"))"},"status":0},{"failures":[24,25],"tindex":"bcd77120-8292-11e5-9ecd-f3abfcfcb54f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.trimToSize()"},"variableMap":{"currentWriter":"buck"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:115","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.seek(0)"},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34,15,16,17,18,19,20,21],"tindex":"bcd77121-8292-11e5-9ecd-d56509a69592","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:351","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n}"},"status":-1},{"failures":[],"tindex":"bcd79832-8292-11e5-9ecd-5f49dcd12ba4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:848","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((\"graph sorted (\" + (com.graphhopper.util.Helper.getMemInfo())) + \")\"))"},"status":0},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,31,32,33,53,34,54,17,18,19,21],"tindex":"bcd79833-8292-11e5-9ecd-0fc2742104c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:228","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.addEdge(int)"},"status":-1},{"failures":[55,56,57,58],"tindex":"bcd79834-8292-11e5-9ecd-81c44979d8da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:313","type":"CtInvocationImpl","sourcecode":"super.setSegmentSize(int)"},"status":-1},{"failures":[59,0,1,2,3,4,5,6,7,8,9,10,11,12,60,13,61,14,62,15,16,17,18,19,20,63,21,22,23],"tindex":"bcd79835-8292-11e5-9ecd-4dc33467a10a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:243","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay);\n}"},"status":-1},{"failures":[64,65,66,67,68,69,12,52],"tindex":"bcd79836-8292-11e5-9ecd-27e4e37d2551","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:822","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-1},{"failures":[],"tindex":"bcd79837-8292-11e5-9ecd-47071d4044ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.MotorcycleFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, long))"},"status":0},{"failures":[],"tindex":"bcd7bf48-8292-11e5-9ecd-b55008a2a0eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:74","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    return double;\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxTurnCosts","prevOrNextEdgeId":"maxTurnCosts","weight":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:646","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"bcd7bf49-8292-11e5-9ecd-adefce5895ab","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:118","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    int[][int] = int[][int];\n    int[][int] = int[][int];\n} else {\n    break;\n}"},"variableMap":{"elem":"elem","keys":"elem","i":"i","lastPrio":"i","child":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:185","type":"CtWhileImpl","sourcecode":"while ((float[][(int / 2)]) > double) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n    int /= 2;\n}"},"status":-2},{"failures":[47,15,16,17,18,19,20,21],"tindex":"bcd7bf4a-8292-11e5-9ecd-6926724d0cb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:59","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.InstructionList.isEmpty())) {\n    if (com.graphhopper.util.PointList.isEmpty()) {\n        com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(0).getPoints();\n        com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D());\n    } \n    for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : com.graphhopper.util.InstructionList) {\n        if (boolean) {\n            int += com.graphhopper.util.Instruction.getPoints().size();\n            com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints());\n        } \n        com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction);\n        com.graphhopper.util.PointList.add(com.graphhopper.util.Instruction.getPoints());\n    }\n    if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n        com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n        com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n        com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n    } \n} "},"status":-1},{"failures":[53,34],"tindex":"bcd7bf4b-8292-11e5-9ecd-4933db8df165","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:415","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getEdgeIteratorState(int, int)"},"variableMap":{"edgeId":"endNode","adjNode":"endNode","baseGraph":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:203","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph.getEdgeIteratorState(gnu.trove.list.TIntList.get(((gnu.trove.list.TIntList.size()) - 1)), int)"},"status":-1},{"failures":[],"tindex":"bcd7bf4c-8292-11e5-9ecd-adeca11f0007","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"degree","NO_TURN_ENTRY":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:554","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    int++;\n    if (com.graphhopper.util.CHEdgeIterator.isShortcut())\n        int++;\n    \n}"},"status":-2},{"failures":[35,36,26,70,71,28,72,73,30,74,75,76,37,38,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,39,40,41,42,45,46,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,47,253,254,255,0,1,2,3,4,5,6,7,8,9,10,11,12,13,256,48,49,50,51,52,257,258,259,260,261,262,263,61,14,31,32,33,53,34,62,15,16,17,18,19,20,63,21,22,23],"tindex":"bcd7e65d-8292-11e5-9ecd-11f7f1207aa7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int)"},"status":-1},{"failures":[],"tindex":"bcd7e65e-8292-11e5-9ecd-5bc48bc31aae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:209","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.InstructionList = com.graphhopper.util.InstructionList"},"variableMap":{"instructions":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.this(0, null)"},"status":-2},{"failures":[264],"tindex":"bcd7e65f-8292-11e5-9ecd-59703752bb09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 4) * (int)))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"bcd7711f-8292-11e5-9ecd-297424e9b3ab","diffs":[{"methodsDiff":{"delete":["org.slf4j.Logger.warn"]},"type":"staticDiff"}]},{"transformation":"bcd79837-8292-11e5-9ecd-47071d4044ed","diffs":[{"branches":{"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":["com.graphhopper.routing.util.MotorcycleFlagEncoder_int_handlePriority(com.graphhopper.reader.OSMWay,long).e2","com.graphhopper.routing.util.MotorcycleFlagEncoder_int_handlePriority(com.graphhopper.reader.OSMWay,long).e1","com.graphhopper.routing.util.EncodedValue_long_setValue(long,long).b","com.graphhopper.reader.OSMElement_<T>_T_getTag(java.lang.String,T).e1","com.graphhopper.routing.util.MotorcycleFlagEncoder_int_handlePriority(com.graphhopper.reader.OSMWay,long).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.routing.util.MotorcycleFlagEncoder.handlePriority","com.graphhopper.routing.util.EncodedValue.setValue"]},"type":"staticDiff"}]},{"transformation":"bcd79832-8292-11e5-9ecd-5f49dcd12ba4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.getMemInfo","org.slf4j.Logger.info"]},"type":"staticDiff"}]}]}