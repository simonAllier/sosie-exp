{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":162,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":118,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":191,"com.graphhopper.reader.OSMReaderTest.testFerry":177,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":173,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":174,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":328,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":372,"com.graphhopper.routing.QueryGraphTest.testOneWay":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":258,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":80,"com.graphhopper.reader.OSMReaderTest.testWithBounds":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":301,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":311,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":86,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":63,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":315,"com.graphhopper.util.BitUtilBigTest.testReverse":103,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":186,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":153,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":241,"com.graphhopper.GraphHopperTest.testPrepare":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":16,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":145,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":275,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":5,"com.graphhopper.util.InstructionListTest.testWayList":51,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":363,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":10,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":175,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":317,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":172,"com.graphhopper.GraphHopperAPITest.testDisconnected179":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":333,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":196,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":308,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":116,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":159,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":353,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":81,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":31,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":131,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":72,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":248,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":202,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":208,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":26,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":352,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":155,"com.graphhopper.GraphHopperTest.testLoadOSM":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":76,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":82,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":245,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":278,"com.graphhopper.reader.OSMReaderTest.testSort":55,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":11,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":138,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":336,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":361,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":209,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":164,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":350,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":185,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":371,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":126,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":346,"com.graphhopper.routing.PathTest.testWayList":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":310,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":341,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":9,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":166,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":316,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":364,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":321,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":357,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":214,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":268,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":114,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":345,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":13,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":291,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":130,"com.graphhopper.util.GHUtilityTest.testSort":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":197,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":227,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":298,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":303,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":351,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":299,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":319,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":243,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":374,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":342,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":34,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":320,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":296,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":329,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":330,"com.graphhopper.GraphHopperAPITest.testLoad":19,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":28,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":305,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":326,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":266,"com.graphhopper.reader.OSMReaderTest.testBarriers":104,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":210,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":205,"com.graphhopper.routing.PathTest.testFound":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":337,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":8,"com.graphhopper.util.GHUtilityTest.testCopy":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":194,"com.graphhopper.routing.PathTest.testFindInstruction":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":3,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":218,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":293,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":271,"com.graphhopper.util.InstructionListTest.testEmptyList":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":229,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":362,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":356,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":226,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":276,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":219,"com.graphhopper.reader.PrinctonReaderTest.testRead":30,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":2,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":37,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":331,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":220,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":340,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":376,"com.graphhopper.util.InstructionListTest.testWayList2":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":109,"com.graphhopper.reader.OSMReaderTest.testFoot":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":207,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":120,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":121,"com.graphhopper.reader.OSMReaderTest.testOneWay":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":312,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":132,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":335,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":249,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":280,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":217,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":358,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":201,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":265,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":270,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":260,"com.graphhopper.routing.PathBidirRefTest.testExtract":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":239,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":25,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":176,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":142,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":327,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":313,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":78,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":125,"com.graphhopper.util.GHUtilityTest.testSort2":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":14,"com.graphhopper.reader.OSMReaderTest.testMain":54,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":343,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":324,"com.graphhopper.routing.PathBidirRefTest.testExtract2":144,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":133,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":115,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":73,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":223,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":368,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":290,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":163,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":240,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":322,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":117,"com.graphhopper.storage.GraphHopperStorageTest.testClone":267,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":365,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":263,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":339,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":355,"com.graphhopper.GraphHopperTest.testFootAndCar":27,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":195,"com.graphhopper.routing.PathTest.testTime":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":250,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":74,"com.graphhopper.util.BitUtilLittleTest.testReverse":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":203,"com.graphhopper.util.GHUtilityTest.testSortDirected":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":338,"com.graphhopper.GraphHopperTest.testPrepareOnly":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":253,"com.graphhopper.GraphHopperTest.testVia":58,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":232,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":160,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":181,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":106,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":325,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":53,"com.graphhopper.GraphHopperTest.testFootOnly":61,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":360,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":108,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":180,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":234,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":77,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":128,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":334,"com.graphhopper.util.InstructionListTest.testFind":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":247},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"bf344cb3-82c2-11e5-8486-bd3b105e0a0c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"ee","fromHeap":"prioQueue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:213","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[],"tindex":"bf3473c4-82c2-11e5-8486-49c136ed6db6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:102","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeUTF(\"GH\")"},"variableMap":{"file":"raFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:295","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.close(java.io.RandomAccessFile)"},"status":-2},{"failures":[30,31],"tindex":"bf3473c5-82c2-11e5-8486-371ee9ffd778","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:72","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"compressionLevel":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:76","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String[][int])"},"status":-1},{"failures":[],"tindex":"bf3473c6-82c2-11e5-8486-e14ab0f4075c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.Circle:37","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.Circle.this(double, double, double, com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc)"},"variableMap":{"radiusInMeter":"dist","this":"circle","lon":"tmpLat","com.graphhopper.util.Helper.DIST_EARTH":"calc","lat":"tmpLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:109","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc)"},"status":-2},{"failures":[],"tindex":"bf3473c7-82c2-11e5-8486-ef27d28e23a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1106","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"baseNode":"iteration","com.graphhopper.storage.EdgeAccess.NO_NODE":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:726","type":"CtIfImpl","sourcecode":"if (int > 0)\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n"},"status":0},{"failures":[32,33,34,6,8,35,10,12,13,16,36,18,37,38,39,40,41,42,43,44,45,46,47,48,19,49,50,51,52,53,54,55,56,57,20,21,22,23,24,58,59,26,27,28,60,29,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"bf349ad8-82c2-11e5-8486-c1474ecd0d99","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"mode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:916","type":"CtIfImpl","sourcecode":"if ((int & 2) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-1},{"failures":[0,99,1,2,100,6,16,17,18],"tindex":"bf349ad9-82c2-11e5-8486-85720b1c219d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:806","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"variableMap":{"edgeId":"tmpPrevEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:459","type":"CtLocalVariableImpl","sourcecode":"long long = int == (com.graphhopper.util.EdgeIterator.int) ? -1 : com.graphhopper.storage.CHGraphImpl.isShortcut(int) ? com.graphhopper.storage.EdgeAccess.toPointer(int) : com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-1},{"failures":[35,12,13,16,19,101,102,103,54,55,104,20,21,22,23,24,25,58,59,26,27,28,60,29,61,105,73,106,74,75,76,107,108,109,77,110,111,112,113,78,79,114,115,116,80,81,82,117,118,119,83,120,121,122,123,84,85,124,125],"tindex":"bf349ada-82c2-11e5-8486-85e676da8f03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"maxBits","edgeId":"maxBits","com.graphhopper.storage.EdgeAccess.NO_NODE":"maxBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:252","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long >>>= 1) {\n    long <<= 1;\n    long |= long & 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"status":-1},{"failures":[126,127,128,129,32,33,130,131,132,34,133,134,135,136,137,138,139,140,141,142,143,144,145,146,0,147,148,149,150,151,99,152,1,2,153,154,100,155,3,156,4,5,6,7,157,158,8,159,9,35,10,160,161,11,12,13,14,15,16,162,163,36,17,164,18,37,165,38,166,39,41,42,43,44,45,46,47,167,48,19,168,49,169,170,171,172,173,174,50,175,51,52,53,176,30,31,177,178,54,55,104,56,57,179,180,181,182,183,184,185,186,187,20,21,22,23,24,25,188,58,59,26,27,28,60,189,29,61,190,62,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,64,206,207,65,208,67,209,68,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,70,225,226,71,227,105,73,106,74,75,76,107,108,77,110,111,112,113,78,79,114,115,116,80,81,82,117,118,83,120,121,122,123,84,85,124,125,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,87,245,88,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,90,261,262,91,263,93,264,94,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,96,280,281,97,282],"tindex":"bf34c1eb-82c2-11e5-8486-4d960785f2b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:50","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[32],"tindex":"bf34c1ec-82c2-11e5-8486-5b160efbb5b2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:134","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"variableMap":{"cp":"dir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:287","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_right\")"},"status":-1},{"failures":[283],"tindex":"bf34c1ed-82c2-11e5-8486-3d911675386c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:416","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[126,127,284,285,128,129,32,33,130,131,132,34,133,134,135,136,137,138,139,140,141,142,143,144,145,146,0,147,148,149,150,151,99,152,1,2,153,154,100,155,3,156,4,5,6,7,157,158,8,159,9,35,10,160,161,11,12,13,14,15,16,162,163,36,17,164,18,37,37,165,165,38,38,166,166,39,39,40,40,41,41,42,42,43,43,44,44,45,45,46,46,47,47,167,167,286,286,48,48,19,101,287,168,49,169,170,171,172,173,174,50,288,175,51,52,53,176,30,31,177,178,54,55,104,56,57,179,180,289,181,182,183,290,184,185,186,187,187,20,21,22,23,24,25,188,58,58,59,59,26,26,27,27,28,60,291,291,189,29,61,61,190,190,292,292,293,205,67,294,295,295,296,297,209,298,68,210,211,299,212,213,300,214,215,216,301,302,217,218,303,219,304,305,220,221,222,69,306,307,223,308,224,70,225,226,309,310,71,311,312,72,227,313,105,73,314,106,315,74,75,76,107,108,109,77,110,111,112,113,78,79,114,115,116,316,80,81,82,117,118,119,83,120,121,122,123,84,85,124,125,228,229,230,231,232,233,317,318,234,235,236,319,320,237,238,239,240,241,242,321,322,86,243,323,324,325,244,326,327,87,328,328,329,245,330,88,246,247,331,248,249,332,250,251,252,333,334,253,254,335,255,336,337,256,257,258,89,338,339,259,340,260,90,261,262,341,342,91,343,344,92,263,345,346,93,347,347,348,349,264,350,94,265,266,351,267,268,352,269,270,271,353,354,272,273,355,274,356,357,275,276,277,95,358,359,278,360,279,96,280,281,361,362,97,363,364,98,282,365],"tindex":"bf34c1ee-82c2-11e5-8486-b38b5b0d37fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:118","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"variableMap":{"baseUrl":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:112","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isStoring())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\nelse\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n"},"status":-1},{"failures":[126,127,284,285,128,129,32,33,130,131,132,34,133,134,135,136,137,138,139,140,141,142,143,144,145,146,0,147,148,149,150,151,99,152,1,2,153,154,100,155,3,156,4,5,6,7,157,158,8,159,9,35,10,160,161,11,12,13,14,15,16,162,163,36,17,164,18,37,165,38,166,39,40,41,42,43,44,45,46,47,167,286,48,19,101,287,168,49,169,170,171,172,173,174,50,288,175,51,52,53,176,30,31,177,178,54,55,104,56,57,179,180,181,182,183,290,184,185,186,187,20,21,22,23,24,25,188,58,59,26,27,28,60,189,29,61,190,293,205,67,294,296,297,209,68,210,211,299,212,213,300,214,215,216,301,302,217,218,303,219,304,305,220,221,222,69,306,307,223,308,224,70,225,226,309,310,71,311,312,72,227,313,105,73,106,315,74,75,76,107,108,109,77,110,111,112,113,78,79,114,115,116,316,80,81,82,117,118,119,83,120,121,122,123,84,85,124,125,228,229,230,231,232,233,318,234,235,236,319,320,237,238,239,240,241,242,321,322,86,243,323,324,325,244,326,327,87,329,245,88,246,247,331,248,249,332,250,251,252,333,334,253,254,335,255,336,337,256,257,258,89,338,339,259,340,260,90,261,262,341,342,91,343,344,92,263,345,366,367,368,369,370,371,372,373,374,375,376,346,93,348,349,264,94,265,266,351,267,268,352,269,270,271,353,354,272,273,355,274,356,357,275,276,277,95,358,359,278,360,279,96,280,281,361,362,97,363,364,98,282,365],"tindex":"bf34e8ff-82c2-11e5-8486-15d8ce57e1d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"variableMap":{"segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":-1},{"failures":[377,300,332,352],"tindex":"bf351010-82c2-11e5-8486-116559caa8bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:156","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"))"},"variableMap":{"lastIndex":"integ","fromIndex":"integ"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Distance cannot be empty: \" + double) + \", maybe overflow issue? integer: \") + int))"},"status":-1},{"failures":[177,178,54,55,104,56,57,179,180,181,182,183,290,184,186,187,188,59,26,27,28,60,189,29,61],"tindex":"bf351011-82c2-11e5-8486-e77e49d655c4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"variableMap":{"cp":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:424","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"bf351012-82c2-11e5-8486-d596d16c9dd9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:249","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"bf353723-82c2-11e5-8486-0b836646036a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:764","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String))"},"status":0},{"failures":[],"tindex":"bf353724-82c2-11e5-8486-dd42e5feab95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"preparePeriodicUpdates","to":"preparePeriodicUpdates","lonSize":"preparePeriodicUpdates"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:574","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.updates.periodic\", int)"},"status":0},{"failures":[],"tindex":"bf353725-82c2-11e5-8486-57bef80db9ed","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:362","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"variableMap":{"baseNode":"adj","id":"adj"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:53","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.CHGraph.getLevel(int)) <= (com.graphhopper.storage.CHGraph.getLevel(int))"},"status":-2},{"failures":[],"tindex":"bf353726-82c2-11e5-8486-154395f2150b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:311","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >> (int)))"},"variableMap":{"bytePos":"newBytes","segmentSizePower":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"bf351012-82c2-11e5-8486-d596d16c9dd9","diffs":[{"branches":{"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":["com.graphhopper.storage.RAMDataAccess_void_setBytes(long,byte[],int).e1","com.graphhopper.storage.RAMDataAccess_void_setInt(long,int).b","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).e1","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).e1","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).t1","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).e2","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).t2","com.graphhopper.util.BitUtilLittle_void_fromInt(byte[],int,int).b","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).l4","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).l5","com.graphhopper.storage.RAMDataAccess_void_setBytes(long,byte[],int).b","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).b"],"com.graphhopper.storage.MMapDataAccessTest.testCopy":["com.graphhopper.util.BitUtilLittle_int_toInt(byte[],int).b","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).e1","com.graphhopper.storage.MMapDataAccess_void_setBytes(long,byte[],int).b","com.graphhopper.storage.MMapDataAccess_void_setBytes(long,byte[],int).e1","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).e1","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).t1","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).e2","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).t2","com.graphhopper.util.BitUtilLittle_void_fromInt(byte[],int,int).b","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).l4","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).l5","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).b"],"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":["com.graphhopper.util.BitUtilLittle_int_toInt(byte[],int).b","com.graphhopper.storage.UnsafeDataAccess_void_setBytes(long,byte[],int).b","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).e1","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).t1","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).e2","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).t2","com.graphhopper.util.BitUtilLittle_void_fromInt(byte[],int,int).b","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).l4","com.graphhopper.storage.AbstractDataAccess_com.graphhopper.storage.DataAccess_copyTo(com.graphhopper.storage.DataAccess).l5","com.graphhopper.storage.UnsafeDataAccess_void_setBytes(long,byte[],int).l1"]},"type":"branch"}]},{"transformation":"bf3473c7-82c2-11e5-8486-ef27d28e23a8","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e1"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e1"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e1"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e1"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e1"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e1"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"bf353724-82c2-11e5-8486-dd42e5feab95","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getInt"]},"type":"staticDiff"}]}]}