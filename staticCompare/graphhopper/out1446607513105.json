{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":54,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":59,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":30,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":70,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":63,"com.graphhopper.storage.RAMDataAccessTest.testHeader":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":62,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":38,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":50,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":60,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":67,"com.graphhopper.reader.PrinctonReaderTest.testRead":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":35,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":36,"com.graphhopper.storage.StorablePropertiesTest.testStore":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":61,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":1,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":56,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":64,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":53,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":37,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":33,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.search.NameIndexTest.testFlush":47,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":69,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":40,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":44,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":48,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":66,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":39,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":51,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":29,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":32,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":72,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":41,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":52,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":65,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":0,"com.graphhopper.GraphHopperTest.testFootOnly":12,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":68,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":45,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":31,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":46,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":13,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":43,"com.graphhopper.storage.RAMDataAccessTest.testSegments":58},"transformations":[{"failures":[],"tindex":"a8ffe22c-82a3-11e5-bf41-4de98104389b","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:853","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.printInfo(\"way\")"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:569","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTags()) {\n    long long = com.graphhopper.routing.util.EncodingManager.handleNodeTags(com.graphhopper.reader.OSMNode);\n    if (long != 0)\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n    \n} "},"status":0},{"failures":[0],"tindex":"a900093d-82a3-11e5-bf41-bf2333204b18","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:256","type":"CtIfImpl","sourcecode":"if ((long * 2) == long)\n    int[][][int][int] = short;\nelse\n    int[][][int][int] = short << 16;\n"},"status":-1},{"failures":[],"tindex":"a900093e-82a3-11e5-bf41-8f332aced058","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:244","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"a900093f-82a3-11e5-bf41-ab2a02df4bb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMInputFile.openXMLStream(java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"a9003050-82a3-11e5-bf41-1557f8ca50ee","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:70","type":"CtReturnImpl","sourcecode":"return ((((((((((com.graphhopper.util.Constants.int) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)) + \",\") + (com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_LOCATION_IDX":"index","com.graphhopper.util.Constants.VERSION_GEOMETRY":"index","com.graphhopper.util.Constants.VERSION_EDGE":"index","com.graphhopper.util.Constants.VERSION_NAME_IDX":"index","com.graphhopper.util.Constants.VERSION_SHORTCUT":"index","com.graphhopper.util.Constants.VERSION_NODE":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:315","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, int)"},"status":-2},{"failures":[21],"tindex":"a9003051-82a3-11e5-bf41-dd2bdfc12172","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"toWayID"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:928","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.reader.OSMRelation.Member.ref()"},"status":-1},{"failures":[],"tindex":"a9003052-82a3-11e5-bf41-5d4e51105729","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:181","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"silent":"allowWrites"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:101","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"a9003053-82a3-11e5-bf41-d73e45ed2de6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"doPrepare"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:314","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[28,29,30,31],"tindex":"a9003054-82a3-11e5-bf41-23bdb7c267cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:537","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[],"tindex":"a9003055-82a3-11e5-bf41-afe0d047c124","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"variableMap":{"this":"keys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:66","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.coll.OSMIDMap.binarySearch(com.graphhopper.storage.DataAccess, 0, com.graphhopper.coll.OSMIDMap.getSize(), long)"},"status":-2},{"failures":[],"tindex":"a9005766-82a3-11e5-bf41-9dfdd32f6928","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:349","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return ;\n"},"status":0},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"a9005767-82a3-11e5-bf41-8d49bbbd6065","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:784","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.RuntimeException((\"Base node problem with edge \" + java.lang.String));\n"},"variableMap":{"str":"highwayTag","nodeCount":"speed","base":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:373","type":"CtIfImpl","sourcecode":"if ((java.lang.Integer != null) && (java.lang.Integer > java.lang.Integer)) {\n    if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n        int = java.lang.Integer;\n    else\n        int = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[45,46],"tindex":"a9005768-82a3-11e5-bf41-3b2ccd31c02e","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"minOneWayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"a9005769-82a3-11e5-bf41-6d95989cb31c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"variableMap":{"edgeId":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"status":-2},{"failures":[47,2,8,9,11,13,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"a900576a-82a3-11e5-bf41-8b4d5bff5ed7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:143","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0)\n            return false;\n        \n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        byte[][] = new byte[int][];\n        for (int int = 0 ; int < int ; int++) {\n            byte[] byte[] = new byte[int];\n            int int = java.io.RandomAccessFile.read(byte[]);\n            if (int <= 0)\n                throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n            \n            byte[][][int] = byte[];\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-1},{"failures":[],"tindex":"a9007e7b-82a3-11e5-bf41-ad6ba98265cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:287","type":"CtTryImpl","sourcecode":"try {\n    ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).isLoaded();\n    return true;\n} catch (java.lang.UnsupportedOperationException ex) {\n}"},"variableMap":{"bb":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:134","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(com.graphhopper.reader.OSMElement.getTag(java.lang.String, \"\"))"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,65,66,67,68,69,14,15,16,17,18,19,20,21,22,23,24,25,26,70,27],"tindex":"a9007e7c-82a3-11e5-bf41-ff8a676a2c66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:128","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHLongIntBTree.BTreeEntry = new com.graphhopper.coll.GHLongIntBTree.BTreeEntry(int , true)"},"status":-1},{"failures":[],"tindex":"a9007e7d-82a3-11e5-bf41-e7392261d070","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"variableMap":{"keys":"keys","i":"i","child":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[71,72],"tindex":"a9007e7e-82a3-11e5-bf41-855d6df79d30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:55","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.parseInt(java.io.BufferedReader.readLine())"},"status":-1},{"failures":[],"tindex":"a9007e7f-82a3-11e5-bf41-9dda49cea9d0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:199","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:153","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AlgorithmOptions.java.lang.String"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a9005766-82a3-11e5-bf41-9dfdd32f6928","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}