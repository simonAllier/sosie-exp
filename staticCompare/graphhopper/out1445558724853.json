{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":348,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":374,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":177,"com.graphhopper.reader.OSMReaderTest.testFerry":298,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":282,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":85,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":399,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":76,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":358,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":197,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":147,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":366,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":347,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":354,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":339,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":214,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":73,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":403,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":331,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":336,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":259,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":395,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":65,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":20,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":387,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":369,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":242,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":260,"com.graphhopper.reader.OSMReaderTest.testSort":301,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":310,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":401,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":106,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":166,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":210,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":379,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":297,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":386,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":120,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":329,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":254,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":127,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":344,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":334,"com.graphhopper.coll.OSMIDMapTest.testGetLong":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":44,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":27,"com.graphhopper.util.BitUtilBigTest.testToLong":411,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":89,"com.graphhopper.GraphHopperAPITest.testLoad":290,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":148,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":31,"com.graphhopper.reader.OSMReaderTest.testBarriers":302,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":404,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":181,"com.graphhopper.util.GHUtilityTest.testCopy":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":335,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":232,"com.graphhopper.routing.PathTest.testFindInstruction":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":32,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":229,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":167,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":59,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":274,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":81,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":365,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":115,"com.graphhopper.util.InstructionListTest.testWayList2":288,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":268,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":36,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":104,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":130,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":42,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":215,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":137,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":350,"com.graphhopper.coll.OSMIDMapTest.testGet":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":116,"com.graphhopper.routing.PathBidirRefTest.testExtract":408,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":324,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":204,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":251,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":203,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":273,"com.graphhopper.util.GHUtilityTest.testSort2":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":345,"com.graphhopper.reader.OSMReaderTest.testMain":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":207,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":396,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":54,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":90,"com.graphhopper.storage.StorablePropertiesTest.testStore":70,"com.graphhopper.storage.GraphHopperStorageTest.testClone":140,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":113,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":174,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":183,"com.graphhopper.routing.PathTest.testTime":389,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":97,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":270,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":196,"com.graphhopper.reader.OSMReaderTest.testRelation":307,"com.graphhopper.util.GHUtilityTest.testSortDirected":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":102,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":68,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":376,"com.graphhopper.GraphHopperTest.testFootOnly":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":216,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":175,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":390,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":332,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":272,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":192,"com.graphhopper.search.NameIndexTest.testCreate":296,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":383,"com.graphhopper.util.BitUtilBigTest.testToDouble":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":262,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":371,"com.graphhopper.routing.QueryGraphTest.testOneWay":382,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":237,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":258,"com.graphhopper.reader.OSMReaderTest.testWithBounds":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":189,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":377,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":198,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":239,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":53,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":46,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":136,"com.graphhopper.search.NameIndexTest.testFlush":294,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":330,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":169,"com.graphhopper.util.InstructionListTest.testWayList":287,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":412,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":100,"com.graphhopper.GraphHopperAPITest.testDisconnected179":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":184,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":256,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":179,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":87,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":402,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":212,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":11,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":142,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":367,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":160,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":342,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":363,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":28,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":352,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":128,"com.graphhopper.routing.PathTest.testWayList":392,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":99,"com.graphhopper.coll.OSMIDMapTest.testGet2":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":353,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":319,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":337,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":373,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":74,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":37,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":141,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":394,"com.graphhopper.util.GHUtilityTest.testSort":277,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":264,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":381,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":124,"com.graphhopper.search.NameIndexTest.testPut":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":66,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":139,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":231,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":220,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":121,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":378,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":407,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":25,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":320,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":397,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":202,"com.graphhopper.routing.PathTest.testFound":388,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":327,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":43,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":295,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":187,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":145,"com.graphhopper.util.InstructionListTest.testEmptyList":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":343,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":119,"com.graphhopper.reader.PrinctonReaderTest.testRead":315,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":186,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":93,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":48,"com.graphhopper.reader.OSMReaderTest.testFoot":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":200,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":321,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":385,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":266,"com.graphhopper.reader.OSMReaderTest.testOneWay":314,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":95,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":164,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":60,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":364,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":194,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":391,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":359,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":356,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":368,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":224,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":357,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":281,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":405,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":122,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":375,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":132,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":313,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":79,"com.graphhopper.routing.PathBidirRefTest.testExtract2":409,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":243,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":269,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":255,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":292,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":162,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":236,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":213,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":349,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":362,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":126,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":165,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":361,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":34,"com.graphhopper.storage.StorablePropertiesTest.testLoad":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":112,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":233,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":340,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":309,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":308,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":250,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":80,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":161,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":289,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":306,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":246,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":193,"com.graphhopper.util.InstructionListTest.testFind":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":21},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,370,371,371,372,372,373,373,374,374,375,375,376,376,377,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"c27c2f9f-7919-11e5-ac00-3f5ad6da51d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-1},{"failures":[],"tindex":"c27c56b0-7919-11e5-ac00-e9cba3a3ec4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:216","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return java.lang.String;\n"},"variableMap":{"val":"ret","key":"ret"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:100","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return \"\";\n} "},"status":0},{"failures":[1,14,16,17,21,25,75,79,84,129,131],"tindex":"c27c56b1-7919-11e5-ac00-f5a725512898","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:415","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setNodesHeader()"},"status":-1},{"failures":[410,411],"tindex":"c27c56b2-7919-11e5-ac00-e9346f7b229c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:82","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(long))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:81","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 8))"},"status":-1},{"failures":[412,304,317,318],"tindex":"c27c7dc3-7919-11e5-ac00-634ee19d292f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:321","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int).putShort(int, short)"},"status":-1},{"failures":[],"tindex":"c27c7dc4-7919-11e5-ac00-8bafc1e791c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"c27c7dc5-7919-11e5-ac00-4de3dd95a093","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:194","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.util.shapes.GHPoint(double , double)"},"status":-2},{"failures":[],"tindex":"c27c7dc6-7919-11e5-ac00-db5d9fa841ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:90","type":"CtReturnImpl","sourcecode":"return java.io.InputStream"},"variableMap":{"is":"ips"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:115","type":"CtIfImpl","sourcecode":"if (((byte[][0]) == 'P') && ((byte[][1]) == 'K')) {\n    java.io.InputStream.reset();\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    return java.util.zip.ZipInputStream;\n} else if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    java.io.InputStream.reset();\n    return java.io.InputStream;\n} else if ((java.lang.String.endsWith(\".bz2\")) || (java.lang.String.endsWith(\".bzip2\"))) {\n    java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\";\n    try {\n        java.lang.Class java.lang.Class = java.lang.Class.forName(java.lang.String);\n        java.io.InputStream.reset();\n        java.lang.reflect.Constructor<java.io.InputStream> java.lang.reflect.Constructor<java.io.InputStream> = java.lang.Class.getConstructor(java.io.InputStream.java.io.InputStream, boolean.boolean);\n        return java.lang.reflect.Constructor<java.io.InputStream>.newInstance(java.io.InputStream, true);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.IllegalArgumentException((\"Cannot instantiate \" + java.lang.String) , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalArgumentException((\"Input file is not of valid type \" + (java.io.File.getPath())));\n}"},"status":-2},{"failures":[],"tindex":"c27c7dc7-7919-11e5-ac00-e7132003f5bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:635","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"c27c7dc8-7919-11e5-ac00-93e2f907789a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:169","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","trackType":"trackType","com.graphhopper.routing.util.PriorityCode.VERY_NICE":"com.graphhopper.routing.util.PriorityCode.PREFER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:167","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse if (java.lang.String.startsWith(\"grade\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"c27ca4d9-7919-11e5-ac00-8b46e8522446","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:594","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.CHGraphImpl.long"},"variableMap":{"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT_LONG":"encoded","weightLong":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:340","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-2},{"failures":[],"tindex":"c27ca4da-7919-11e5-ac00-7996d8f8399c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:708","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"variableMap":{"fullyLoaded":"removeZipped"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:711","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"-gh\")) {\n} else if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    throw new java.lang.IllegalArgumentException(\"To import an osm file you need to use importOrLoad\");\n} else if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException ex) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"c27ca4db-7919-11e5-ac00-4bbdf95eee09","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"segmentsToMap","index":"segmentsToMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:121","type":"CtIfImpl","sourcecode":"if ((long % long) != 0)\n    int++;\n"},"status":-2},{"failures":[],"tindex":"c27ca4dc-7919-11e5-ac00-41962f1869d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"variableMap":{"elem":"keys","size":"i","i":"size","element":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n            int++;\n        } \n        if (int > (int[][int])) {\n            int[][int] = int[][int];\n            int[][int] = int[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    int[][int] = int;\n} else {\n    while ((int[][(int / 2)]) > int) {\n        int[][int] = int[][(int / 2)];\n        int[][int] = int[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    int[][int] = int;\n}"},"status":-2},{"failures":[],"tindex":"c27ca4dd-7919-11e5-ac00-73ae63aade47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:196","type":"CtIfImpl","sourcecode":"if ((double > 0) && (double < double))\n    double = double * 0.9;\n"},"variableMap":{"maxMCSpeed":"maxLat","speed":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((6 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"c27ca4de-7919-11e5-ac00-27714622f8f4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:726","type":"CtIfImpl","sourcecode":"if (int > 0)\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(com.graphhopper.storage.index.TIntHashSet, double, double);\n"},"status":-2},{"failures":[],"tindex":"c27ccbef-7919-11e5-ac00-b94fd619de4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:209","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-2},{"failures":[],"tindex":"c27ccbf0-7919-11e5-ac00-012d9a6df75f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:130","type":"CtLocalVariableImpl","sourcecode":"int int = (byte[][0]) & 255"},"status":-2},{"failures":[],"tindex":"c27ccbf1-7919-11e5-ac00-3789d1d81111","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:214","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setLevel(int, int)"},"status":-2},{"failures":[],"tindex":"c27ccbf2-7919-11e5-ac00-85dc6e427fa3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:113","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}