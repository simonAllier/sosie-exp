{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":126,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":292,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":299,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":249,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":191,"com.graphhopper.reader.OSMReaderTest.testFerry":133,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":157,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":50,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":289,"com.graphhopper.routing.QueryGraphTest.testOneWay":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":71,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":245,"com.graphhopper.reader.OSMReaderTest.testWithBounds":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":200,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":276,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":294,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":93,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":22,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":149,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":101,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":240,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":125,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":89,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":226,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":108,"com.graphhopper.util.InstructionListTest.testWayList":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":117,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":160,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":302,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":196,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":246,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":148,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":273,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":139,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":211,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":150,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":186,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":185,"com.graphhopper.GraphHopperTest.testLoadOSM":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":25,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":51,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":247,"com.graphhopper.reader.OSMReaderTest.testSort":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":120,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":143,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":98,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":130,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":146,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":266,"com.graphhopper.routing.PathTest.testWayList":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":81,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":115,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":291,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":173,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":88,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":122,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":272,"com.graphhopper.util.GHUtilityTest.testSort":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":250,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":189,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":182,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":82,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":295,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":284,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":152,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":228,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":176,"com.graphhopper.GraphHopperAPITest.testLoad":132,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":129,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":47,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":216,"com.graphhopper.reader.OSMReaderTest.testBarriers":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":206,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":18,"com.graphhopper.util.GHUtilityTest.testCopy":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":194,"com.graphhopper.routing.PathTest.testFindInstruction":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":105,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":178,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":198,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":221,"com.graphhopper.util.InstructionListTest.testEmptyList":303,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":116,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":121,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":187,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":179,"com.graphhopper.reader.PrinctonReaderTest.testRead":147,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":100,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":213,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":76,"com.graphhopper.util.InstructionListTest.testWayList2":162,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":28,"com.graphhopper.reader.OSMReaderTest.testFoot":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":254,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":300,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":251,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":86,"com.graphhopper.reader.OSMReaderTest.testOneWay":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":65,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":57,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":232,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":201,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":202,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":215,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":220,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":138,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":92,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":238,"com.graphhopper.routing.PathBidirRefTest.testExtract":286,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":7,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":17,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":285,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":208,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":207,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":3,"com.graphhopper.util.GHUtilityTest.testSort2":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":123,"com.graphhopper.reader.OSMReaderTest.testMain":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":44,"com.graphhopper.routing.PathBidirRefTest.testExtract2":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":78,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":255,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":264,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":274,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":38,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":19,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":183,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":127,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":0,"com.graphhopper.storage.GraphHopperStorageTest.testClone":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":87,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":74,"com.graphhopper.GraphHopperTest.testFootAndCar":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":195,"com.graphhopper.util.InstructionListTest.testCreateGPX":304,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":73,"com.graphhopper.util.GHUtilityTest.testSortDirected":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":171,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":63,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":263,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":118,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":45,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":293,"com.graphhopper.GraphHopperTest.testFootOnly":14,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":27,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":141,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":241,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":29,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":265,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":268,"com.graphhopper.util.InstructionListTest.testFind":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":166,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":257},"transformations":[{"failures":[],"tindex":"7a489ef0-82b1-11e5-997d-11cc6a0e0808","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"maxLat","tmp":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:156","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"7a48ed11-82b1-11e5-997d-e3ca95dcb6d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"variableMap":{"priorityWayEncoder":"relationCodeEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:158","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":0},{"failures":[],"tindex":"7a48ed12-82b1-11e5-997d-e5f43d63623f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:52","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"parent":"cl","cl":"parent","tmpPrev":"cl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":0},{"failures":[],"tindex":"7a48ed13-82b1-11e5-997d-f32980a9cdbb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"relBitMask","start":"relBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"7a48ed14-82b1-11e5-997d-0125f20374bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1048","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EdgeFilter.accept(this))\n    return true;\n"},"variableMap":{"filter":"additionalEdgeFilter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:78","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.routing.util.EdgeFilter) == null) || (com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.util.EdgeIterator))"},"status":-2},{"failures":[],"tindex":"7a491425-82b1-11e5-997d-8f0dd79de196","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"variableMap":{"java.lang.Double.NaN":"prevEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:183","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.PointList.getElevation(((com.graphhopper.util.PointList.size()) - 1))) - double"},"status":0},{"failures":[0],"tindex":"7a491426-82b1-11e5-997d-3b57c067a10d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:379","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,0,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"7a491427-82b1-11e5-997d-c310ca5e8097","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:320","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((64 * 1024))"},"variableMap":{"dataAccess":"nodesCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:677","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,1,2,3,4,5,6,7,8,9,10,150,151,11,12,13,152,14,153,154,16,155,156,17,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,18,19,21,23,24,25,26,27,29,30,31,32,33,34,35,37,38,39,42,43,45,46,49,51,52,53,54,56,57,59,60,61,265,63,64,66,69,70,71,75,77,78,79,80,83,87,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,288,289,290,291,292,293,294,295,296,297,298,299,300],"tindex":"7a493b38-82b1-11e5-997d-c1a613178321","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"E_FLAGS"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:51","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[117,131],"tindex":"7a496249-82b1-11e5-997d-0f5db3518ab7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:280","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((60 - double) / (int))"},"variableMap":{"degree":"i","lat":"prevLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:411","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int])"},"status":-1},{"failures":[133,134,135,136,137,138,139,140,141,142,144,301,145,149,1,8,9,10,150,151,11,12,13,152,14,153],"tindex":"7a49624a-82b1-11e5-997d-494765624194","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-1},{"failures":[],"tindex":"7a49895b-82b1-11e5-997d-93349ad961b5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:412","type":"CtIfImpl","sourcecode":"if (\"none\".equals(java.lang.String))\n    return 140;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:126","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Double.parseDouble(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"status":0},{"failures":[133,134,135,136,137,138,139,140,141,142,143,144,301,145,149,1,8,9,10,150,151,11,12,13,152,14,153],"tindex":"7a49895c-82b1-11e5-997d-b79877a54354","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:333","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"variableMap":{"edge":"fromIndex","adjNode":"fromIndex","g":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:798","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.edge(int, int).setDistance(double).setFlags(long)"},"status":-1},{"failures":[302,163],"tindex":"7a49895d-82b1-11e5-997d-17e808e0e2d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:191","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:218","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Instruction.com.graphhopper.util.AngleCalc.azimuth2compassPoint(double)"},"status":-1},{"failures":[],"tindex":"7a49895e-82b1-11e5-997d-e1527ea04d84","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:542","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.elevation.baseurl\", \"\")"},"status":-2},{"failures":[],"tindex":"7a49b06f-82b1-11e5-997d-5fbaa00b27f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:369","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties()"},"variableMap":{"this":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1123","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"prepare.done\", boolean)"},"status":-2},{"failures":[],"tindex":"7a49b070-82b1-11e5-997d-a32e760fd626","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:418","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\":urban\"))\n    return 50;\n"},"variableMap":{"str":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:77","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[9,303,161,304,163],"tindex":"7a49b071-82b1-11e5-997d-850fbf1fa386","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:68","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.Instruction>.size()"},"status":-1},{"failures":[91,97,99,100,103,105,107,108,109,113,115,116,117,119,121,123,124,125,126,127,129,130,131],"tindex":"7a49b072-82b1-11e5-997d-81346c756574","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"maxLevel"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:338","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n    continue;\n"},"status":-1},{"failures":[],"tindex":"7a49d783-82b1-11e5-997d-1b90302d984e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:499","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.TranslationMap"},"variableMap":{"trMap":"com.graphhopper.util.TranslationMap.class"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:66","type":"CtTryImpl","sourcecode":"try {\n    for (java.lang.String java.lang.String : com.graphhopper.util.TranslationMap.java.util.List<java.lang.String>) {\n        com.graphhopper.util.TranslationMap.TranslationHashMap com.graphhopper.util.TranslationMap.TranslationHashMap = new com.graphhopper.util.TranslationMap.TranslationHashMap(com.graphhopper.util.Helper.getLocale(java.lang.String));\n        com.graphhopper.util.TranslationMap.TranslationHashMap.doImport(com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.getResourceAsStream((java.lang.String + \".txt\")));\n        com.graphhopper.util.TranslationMap.add(com.graphhopper.util.TranslationMap.TranslationHashMap);\n    }\n    com.graphhopper.util.TranslationMap.postImportHook();\n    return this;\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"7a491425-82b1-11e5-997d-8f0dd79de196","diffs":[{"branches":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":["com.graphhopper.util.PointList_int_size().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.PointList.size","com.graphhopper.util.PointList.getElevation"]},"type":"staticDiff"}]}]}