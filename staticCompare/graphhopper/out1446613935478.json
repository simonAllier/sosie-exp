{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":17,"com.graphhopper.routing.PathTest.testFindInstruction":4,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":113,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":13,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":105,"com.graphhopper.reader.OSMReaderTest.testWithBounds":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":89,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":81,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":8,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":11,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":112,"com.graphhopper.GraphHopperTest.testPrepare":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":87,"com.graphhopper.reader.OSMReaderTest.testFoot":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":19,"com.graphhopper.reader.OSMReaderTest.testOneWay":59,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":50,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":103,"com.graphhopper.GraphHopperAPITest.testDisconnected179":48,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":108,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":75,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":107,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":14,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":54,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":91,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":71,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":100,"com.graphhopper.GraphHopperTest.testLoadOSM":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":65,"com.graphhopper.reader.OSMReaderTest.testSort":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":25,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":82,"com.graphhopper.reader.OSMReaderTest.testMain":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":111,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":45,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":86,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":9,"com.graphhopper.GraphHopperTest.testFootAndCar":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":18,"com.graphhopper.util.InstructionListTest.testCreateGPX":1,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":34,"com.graphhopper.reader.OSMReaderTest.testRelation":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":92,"com.graphhopper.GraphHopperTest.testPrepareOnly":61,"com.graphhopper.GraphHopperTest.testVia":69,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":88,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":0,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":106,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":42,"com.graphhopper.GraphHopperAPITest.testLoad":47,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":33,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":2,"com.graphhopper.GraphHopperTest.testFootOnly":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":38,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":56,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":39,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":102,"com.graphhopper.util.InstructionListTest.testFind":3,"com.graphhopper.reader.OSMReaderTest.testBarriers":6,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":109},"transformations":[{"failures":[0,1,2],"tindex":"9d0a101e-82b2-11e5-b9de-4fca05ce6d38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:243","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:time>\")"},"variableMap":{"output":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:213","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<trk><name>\").append(java.lang.String)"},"status":-1},{"failures":[],"tindex":"9d0a372f-82b2-11e5-b9de-2d2c761d5c9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:614","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.printInfo()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:261","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":0},{"failures":[3,4],"tindex":"9d0a3730-82b2-11e5-b9de-775534fef6c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:71","type":"CtLocalVariableImpl","sourcecode":"int int = (int / int) + 1"},"variableMap":{"size":"instructionIndex","delta":"instructionIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:307","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[5],"tindex":"9d0a3731-82b2-11e5-b9de-bb4fa7dbe2b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:205","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader)"},"variableMap":{"parser":"parser","id":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:209","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader)"},"status":-1},{"failures":[],"tindex":"9d0a3732-82b2-11e5-b9de-079a33ef913c","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"com.graphhopper.reader.OSMElement.NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:280","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.reader.OSMInputFile = new com.graphhopper.reader.OSMInputFile(java.io.File).setWorkerThreads(int).open();\n    com.graphhopper.coll.LongIntMap com.graphhopper.coll.LongIntMap = com.graphhopper.reader.OSMReader.getNodeMap();\n    com.graphhopper.reader.OSMElement com.graphhopper.reader.OSMElement;\n    while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n        switch (com.graphhopper.reader.OSMElement.getType()) {\n            case com.graphhopper.reader.OSMElement.int :\n                if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n                    com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n                } \n                break;\n            case com.graphhopper.reader.OSMElement.int :\n                if (long < 0) {\n                    com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n                    long = long;\n                } \n                com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n                break;\n            case com.graphhopper.reader.OSMElement.int :\n                if (long < 0) {\n                    com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n                    long = long;\n                } \n                com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n                break;\n        }\n        if (((++long) % 100000000) == 0) {\n            com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", locs:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long))) + \" (\") + (long)) + \") \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((((\"Couldn\\'t process file \" + java.io.File) + \", error: \") + (java.lang.Exception.getMessage())) , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile);\n}"},"status":-2},{"failures":[],"tindex":"9d0a3733-82b2-11e5-b9de-7d4e4ef91fef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:530","type":"CtAssignmentImpl","sourcecode":"boolean = com.graphhopper.util.CmdArgs.getBool(\"graph.doSort\", boolean)"},"status":0},{"failures":[],"tindex":"9d0a5e44-82b2-11e5-b9de-155d9fb70941","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"status":0},{"failures":[],"tindex":"9d0a5e45-82b2-11e5-b9de-efbbb259663e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:179","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(((int) + 1))"},"status":-2},{"failures":[6,7],"tindex":"9d0a5e46-82b2-11e5-b9de-253c6c9ad662","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"lastBarrier"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:396","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"status":-1},{"failures":[],"tindex":"9d0a5e47-82b2-11e5-b9de-0fb34847d15d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:201","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"status":-2},{"failures":[2],"tindex":"9d0a5e48-82b2-11e5-b9de-d70cef125fc0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:204","type":"CtIfImpl","sourcecode":"if (null != com.graphhopper.util.Instruction)\n    com.graphhopper.util.InstructionList.createRteptBlock(java.lang.StringBuilder, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction);\n"},"status":-1},{"failures":[],"tindex":"9d0a5e49-82b2-11e5-b9de-bb0d5b3359c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:230","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.getRemovedNodes().getCardinality()"},"status":-2},{"failures":[],"tindex":"9d0a5e4a-82b2-11e5-b9de-b567c7a987d9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:48","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-2},{"failures":[6,7],"tindex":"9d0a855b-82b2-11e5-b9de-23c5b9cfc4d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:386","type":"CtIfImpl","sourcecode":"if ((long & long) > 0) {\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n    long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n    if (int > 0) {\n        if (int < 0)\n            int = 0;\n        \n        long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n        long[][((long[].int) - 1)] = long;\n        gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n    } else {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        gnu.trove.list.TLongList.set(0, long);\n    }\n    int = int;\n} "},"status":-1},{"failures":[8,9],"tindex":"9d0a855c-82b2-11e5-b9de-cb1c7037fb27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTBitSet:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Not supported yet.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:176","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-1},{"failures":[10,11],"tindex":"9d0a855d-82b2-11e5-b9de-af9aab128fb3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,6,54,55,5,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"9d0a855e-82b2-11e5-b9de-11e4718dc628","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"startNode","edgeTo":"startNode","edgeFrom":"startNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:34","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-1},{"failures":[],"tindex":"9d0ad37f-82b2-11e5-b9de-c5764f359593","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"initialized"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:293","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"9d0ad380-82b2-11e5-b9de-0b370f9c08b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,79,116,81,82,83],"tindex":"9d0ad381-82b2-11e5-b9de-177b013cb558","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:701","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (int == (com.graphhopper.storage.EdgeAccess.int))\n        continue;\n    \n    if (com.graphhopper.coll.GHBitSet.contains(int))\n        throw new java.lang.IllegalStateException((((\"shouldn\\'t happen the edge to the node \" + int) + \" should be already deleted. \") + int));\n    \n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"9d0a372f-82b2-11e5-b9de-2d2c761d5c9e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.ensureNotLoaded"]},"type":"staticDiff"}]},{"transformation":"9d0a3733-82b2-11e5-b9de-7d4e4ef91fef","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getBool"]},"type":"staticDiff"}]},{"transformation":"9d0a5e44-82b2-11e5-b9de-155d9fb70941","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}