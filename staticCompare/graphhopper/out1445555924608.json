{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":13,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":62,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":5,"com.graphhopper.reader.OSMReaderTest.testMain":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":23,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":52,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":41,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":1,"com.graphhopper.reader.OSMReaderTest.testWithBounds":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":15,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":28,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":72,"com.graphhopper.GraphHopperTest.testPrepare":43,"com.graphhopper.GraphHopperTest.testFootAndCar":45,"com.graphhopper.storage.RAMDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":73,"com.graphhopper.reader.OSMReaderTest.testFoot":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":7,"com.graphhopper.reader.OSMReaderTest.testOneWay":64,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":17,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":0,"com.graphhopper.GraphHopperTest.testPrepareOnly":34,"com.graphhopper.GraphHopperTest.testVia":42,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":49,"com.graphhopper.storage.MMapDirectoryTest.testRequestedDataAccessHasToBeTheIdenticalType":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":2,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":25,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":69,"com.graphhopper.GraphHopperAPITest.testLoad":74,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":16,"com.graphhopper.GraphHopperTest.testFootOnly":50,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":21,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":61,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":30,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":40,"com.graphhopper.reader.OSMReaderTest.testBarriers":57,"com.graphhopper.GraphHopperTest.testLoadOSM":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":35,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":26,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":37,"com.graphhopper.reader.OSMReaderTest.testSort":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":36},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"3d69522f-7913-11e5-801b-93047ed6e1ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:44","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (com.graphhopper.util.XFirstSearch.(checkAdjacent(com.graphhopper.util.EdgeIterator)) && (!(com.graphhopper.coll.GHBitSet.contains(int)))) {\n        com.graphhopper.coll.GHBitSet.add(int);\n        com.graphhopper.util.SimpleIntDeque.push(int);\n    } \n}"},"status":-1},{"failures":[75,76],"tindex":"3d697940-7913-11e5-801b-77ca8364cb7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:210","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"3d697941-7913-11e5-801b-117f6f9597b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"3d697942-7913-11e5-801b-51f790cecbc4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"variableMap":{"str":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:55","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"3d69a053-7913-11e5-801b-13768c0b1253","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED","newSize":"com.graphhopper.routing.util.BikeCommonFlagEncoder.K_UNPAVED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:592","type":"CtIfImpl","sourcecode":"if ((((\"track\".equals(java.lang.String)) && ((java.lang.String == null) || (!(\"grade1\".equals(java.lang.String))))) || ((\"path\".equals(java.lang.String)) && (java.lang.String == null))) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.BikeCommonFlagEncoder.int, true);\n} "},"status":-2},{"failures":[],"tindex":"3d69a054-7913-11e5-801b-8767eacc810b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:174","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder)"},"status":-2},{"failures":[],"tindex":"3d69a055-7913-11e5-801b-47e28c4bd896","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:251","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"3d69a056-7913-11e5-801b-7d5596fa081c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:144","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"3d69a057-7913-11e5-801b-a715d3838fc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:138","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.storage.VLongStorage.trimToSize();\n    byte[] byte[] = com.graphhopper.storage.VLongStorage.getBytes();\n    java.util.List<byte[]>.add(com.graphhopper.coll.CompressedArray.com.graphhopper.coll.CompressedArray.compress(byte[], 0, byte[].int, int));\n    com.graphhopper.storage.VLongStorage = null;\n    int = 0;\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"3d69c768-7913-11e5-801b-bbf34d1e320b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"3d69c769-7913-11e5-801b-17244ada6108","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:298","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    com.graphhopper.reader.OSMReader.com.graphhopper.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n    long = long;\n} "},"status":-2},{"failures":[],"tindex":"3d69c76a-7913-11e5-801b-f32890b8358d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:373","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"3d69c76b-7913-11e5-801b-33dd9fac9c92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:230","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"3d69c76c-7913-11e5-801b-95a2db386f90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.eleToInt(double))"},"status":-2},{"failures":[],"tindex":"3d69ee7d-7913-11e5-801b-b5858a3e76f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:165","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"variableMap":{"dataAccess":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:106","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"3d69ee7e-7913-11e5-801b-010030cc6f7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:146","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0) {\n            return false;\n        } \n        byte[] byte[] = new byte[int];\n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        int[][] = new int[int][];\n        for (int int = 0 ; int < int ; int++) {\n            int int = (java.io.RandomAccessFile.read(byte[])) / 4;\n            int[] int[] = new int[int];\n            for (int int = 0 ; int < int ; int++) {\n                int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4));\n            }\n            int[][][int] = int[];\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"3d69ee7f-7913-11e5-801b-8784129c9966","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:889","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-2},{"failures":[],"tindex":"3d69ee80-7913-11e5-801b-b101fce38962","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:836","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"status":-2},{"failures":[],"tindex":"3d69ee81-7913-11e5-801b-37dae54aca39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:917","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-2},{"failures":[],"tindex":"3d6a1592-7913-11e5-801b-df77e3715575","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:131","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.initBuffer()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.flush()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}