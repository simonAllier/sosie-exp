{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":15,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":349,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":218,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":46,"com.graphhopper.GraphHopperAPITest.testNoLoad":483,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":310,"com.graphhopper.reader.OSMReaderTest.testFerry":332,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":476,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":477,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":369,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":225,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":354,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":160,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":138,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":341,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":361,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":427,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":400,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":491,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":109,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":492,"com.graphhopper.GraphHopperTest.testPrepare":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":444,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":4,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":331,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":394,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":232,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":479,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":358,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":223,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":2,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":80,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":286,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":473,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":174,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":283,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":268,"com.graphhopper.GraphHopperTest.testLoadOSM":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":81,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":372,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":345,"com.graphhopper.reader.OSMReaderTest.testSort":129,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":450,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":423,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":445,"com.graphhopper.routing.DijkstraTest.initializationError":348,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":470,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":496,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":487,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":387,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":413,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":448,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":426,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":458,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":456,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":76,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":405,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":392,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":416,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":6,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":343,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":355,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":340,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":457,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":464,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":453,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":418,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":139,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":373,"com.graphhopper.GraphHopperAPITest.testLoad":136,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":204,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":414,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":301,"com.graphhopper.reader.OSMReaderTest.testBarriers":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":149,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":497,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":381,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":3,"com.graphhopper.util.GHUtilityTest.testCopy":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":431,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":233,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":393,"com.graphhopper.routing.PathTest.testFindInstruction":14,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":321,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":213,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":147,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":424,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":158,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":366,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":312,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":408,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":41,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":488,"com.graphhopper.util.InstructionListTest.testWayList2":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":89,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":322,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":290,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":137,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":472,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":379,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":176,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":460,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":50,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":300,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":131,"com.graphhopper.routing.AStarTest.initializationError":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":42,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":494,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":214,"com.graphhopper.routing.PathBidirRefTest.testExtract":287,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":177,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":25,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":495,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":368,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":441,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":474,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":74,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":22,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":440,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":21,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":280,"com.graphhopper.reader.OSMReaderTest.testMain":128,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":118,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":386,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":385,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":443,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":452,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":327,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":145,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":374,"com.graphhopper.storage.GraphHopperStorageTest.testClone":95,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":428,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":442,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":384,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":246,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":415,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":432,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":377,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":254,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":395,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":437,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":486,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":378,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":475,"com.graphhopper.GraphHopperTest.testFootOnly":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":67,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":221,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":51,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":243,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":284,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":83,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":352,"com.graphhopper.routing.QueryGraphTest.testOneWay":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":402,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":382,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":398,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":401,"com.graphhopper.reader.OSMReaderTest.testWithBounds":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":471,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":438,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":188,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":159,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":234,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":466,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":60,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":326,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":410,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":1,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":499,"com.graphhopper.util.InstructionListTest.testWayList":125,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":425,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":36,"com.graphhopper.GraphHopperAPITest.testDisconnected179":482,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":313,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":187,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":430,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":156,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":481,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":239,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":319,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":28,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":302,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":467,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":205,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":166,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":307,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":420,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":279,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":346,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":265,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":71,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":217,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":454,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":10,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":409,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":186,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":403,"com.graphhopper.routing.PathTest.testWayList":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":446,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":75,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":433,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":294,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":275,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":465,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":359,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":181,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":417,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":363,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":459,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":485,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":144,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":191,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":390,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":180,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":329,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":455,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":54,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":388,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":141,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":449,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":451,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":189,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":344,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":463,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":111,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":259,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":397,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":0,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":478,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":116,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":315,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":276,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":5,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":253,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":238,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":236,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":298,"com.graphhopper.reader.PrinctonReaderTest.testRead":480,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":323,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":429,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":154,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":230,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":203,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":195,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":146,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":172,"com.graphhopper.reader.OSMReaderTest.testFoot":333,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":86,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":219,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":87,"com.graphhopper.reader.OSMReaderTest.testOneWay":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":391,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":376,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":422,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":469,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":266,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":419,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":107,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":303,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":262,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":72,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":498,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":261,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":493,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":490,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":330,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":207,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":222,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":407,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":434,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":255,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":43,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":406,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":364,"com.graphhopper.routing.PathBidirRefTest.testExtract2":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":269,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":66,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":90,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":77,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":102,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":396,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":201,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":61,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":133,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":447,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":360,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":299,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":308,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":250,"com.graphhopper.GraphHopperTest.testFootAndCar":29,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":152,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":484,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":104,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":256,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":251,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":399,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":383,"com.graphhopper.GraphHopperTest.testPrepareOnly":353,"com.graphhopper.GraphHopperTest.testVia":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":277,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":335,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":334,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":365,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":101,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":127,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":210,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":69,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":295,"com.graphhopper.routing.AStarBidirectionTest.initializationError":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":436,"com.graphhopper.util.InstructionListTest.testFind":124,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":113},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"ab489be3-828d-11e5-85c6-27d9563caecf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"variableMap":{"java.lang.Math.PI":"lon","angleXY":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-1},{"failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,0,269,270,1,2,271,272,273,3,274,275,276,4,277,278,279,5,6,280,7,8,9,281,10,11,282,283,284,12,13,14,285,286,287,288,20,21,22,23,24,25,26,27,28,29,30,31,32,33,289,34,290,291,292,293,294,295,296,297,298,43,299,49,60,67,77,83,93,94,300,301,302,303,304,305,306,307,308,103,309,310,311,312,313,314,315,316,317,318,112,319,113,320,321,322,323,324,325,326,327,328,122,329,330,124,331,125,126,127,332,333,128,129,130,131,132,133,134,334,335,336,135,337,338,136],"tindex":"ab48ea04-828d-11e5-85c6-01f2302d43db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"variableMap":{"i":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:193","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[13],"tindex":"ab491115-828d-11e5-85c6-af4d242e1ee7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"maxLeafEntries":"tmpIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:103","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"ab491116-828d-11e5-85c6-b7c0539e6b08","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"variableMap":{"factor":"weightOfVisitedPath","delta_lon":"weightOfVisitedPath","a_lon":"weightOfVisitedPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:292","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.routing.AStar.AStarEdge.double) + (com.graphhopper.routing.AStar.AStarEdge.double)"},"status":-2},{"failures":[],"tindex":"ab493827-828d-11e5-85c6-8b6e2b6cf5cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"empty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":0},{"failures":[339,340,341],"tindex":"ab493828-828d-11e5-85c6-ed374b64284f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:752","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"class:bicycle:\" + (java.lang.String.toString())"},"variableMap":{"specificBicycleClass":"str","subkey":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:207","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"status":-1},{"failures":[],"tindex":"ab493829-828d-11e5-85c6-9172c83bdf5e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:404","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[],"tindex":"ab49382a-828d-11e5-85c6-1d0777eb0a5b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:250","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[342,137,343,344,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,345,259,346,347,348,0,269,270,1,2,271,272,273,3,274,275,276,4,277,278,279,5,6,280,7,8,349,350,9,281,10,11,351,287,288,352,353,20,21,22,23,24,25,354,26,27,28,29,30,31,355,356,32,33,289,357,358,359,360,361,362,363,364,365,366,367,368,34,369,370,371,372,373,374,290,291,375,35,376,292,377,293,294,36,295,378,37,379,380,296,381,38,39,382,40,383,384,297,41,42,385,386,298,387,388,43,389,390,391,299,392,44,45,46,47,393,48,49,394,50,51,52,53,395,54,55,56,57,58,396,59,60,397,61,398,62,63,399,64,65,66,67,68,69,70,71,72,73,74,75,400,76,77,78,79,401,80,81,82,83,84,85,86,87,88,89,90,91,402,92,93,403,94,404,405,406,407,408,409,410,300,301,411,95,412,302,413,303,304,96,305,414,97,415,416,306,417,98,99,418,100,419,420,307,101,102,421,422,308,423,424,103,425,426,427,309,428,429,310,311,430,104,431,312,432,313,314,105,315,433,106,434,435,316,436,107,108,437,109,438,439,317,110,111,440,441,318,442,443,112,444,445,446,319,447,113,448,449,450,451,452,453,454,455,456,320,321,457,114,458,322,459,323,324,115,325,460,116,461,462,326,463,117,118,464,119,465,466,327,120,121,467,468,328,469,470,122,471,472,473,329,474,475,476,477,478,479,480,481,332,333,128,129,130,131,132,133,134,335,336,135,337,338,136,482,483],"tindex":"ab495f3b-828d-11e5-85c6-19fa426b9cda","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:408","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:126","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Double.parseDouble(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"status":-1},{"failures":[484,485,486],"tindex":"ab49864c-828d-11e5-85c6-fb7e68a6e770","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:98","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = ~int;\n    int--;\n    if (int < 0) {\n        return com.graphhopper.coll.OSMIDSegmentedMap.((int)(getNoEntryValue()));\n    } \n    long long = long[][int];\n    if (long == long) {\n        return int * (int);\n    } \n    com.graphhopper.storage.VLongStorage com.graphhopper.storage.VLongStorage = com.graphhopper.storage.VLongStorage[][int];\n    long long = com.graphhopper.storage.VLongStorage.getPosition();\n    com.graphhopper.storage.VLongStorage.seek(0);\n    int int = (int) == int ? (int) + 1 : int;\n    int int = com.graphhopper.coll.OSMIDSegmentedMap.getNoEntryValue();\n    for (int int = 1 ; int < int ; int++) {\n        long += com.graphhopper.storage.VLongStorage.readVLong();\n        if (long == long) {\n            int = (int * (int)) + int;\n            break;\n        } else if (long > long) {\n            break;\n        } \n    }\n    com.graphhopper.storage.VLongStorage.seek(long);\n    return int;\n} "},"status":-1},{"failures":[487,488],"tindex":"ab49864d-828d-11e5-85c6-ed061319dfd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:142","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ab49864e-828d-11e5-85c6-0b81f924104f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:926","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many names are stored, currently limited to int pointer\");\n"},"variableMap":{"nameIndexRef":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:110","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-2},{"failures":[],"tindex":"ab49ad5f-828d-11e5-85c6-d336794513cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:590","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMNode.getLon()"},"status":-2},{"failures":[15,17],"tindex":"ab49ad60-828d-11e5-85c6-8705a8425f3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"prevWayIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:343","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointList, int);\n}"},"status":-1},{"failures":[489,261,490,491,264,266,267,492,493,268,270,1,2,271,272,273,3,274,275,4,277,279,5,6,280,7,8,9,281,10,11,26,33,358,359,364,366,123],"tindex":"ab49ad61-828d-11e5-85c6-75bd1d871354","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:376","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.InternalGraphEventListener.freeze()"},"status":-1},{"failures":[],"tindex":"ab49d472-828d-11e5-85c6-1945648dec57","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"variableMap":{"loadedCHWeightings":"value","configuredCHWeightings":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.String)"},"status":0},{"failures":[133],"tindex":"ab49d473-828d-11e5-85c6-e3b11f4446e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:54","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>.add(new com.graphhopper.reader.OSMRelation.Member(javax.xml.stream.XMLStreamReader));\n} "},"status":-1},{"failures":[44,74,90],"tindex":"ab49d474-828d-11e5-85c6-1bc387b74e72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:120","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"ab49d475-828d-11e5-85c6-19e3fa62bdde","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:134","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-1},{"failures":[494,495,496,497,498,499],"tindex":"ab49d476-828d-11e5-85c6-795c8b4a032e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:121","type":"CtIfImpl","sourcecode":"if ((long % long) != 0)\n    int++;\n"},"variableMap":{"byteCount":"address","longSegmentSize":"bytePos","segmentsToMap":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:246","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    byte[][int] = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.getByte((((long) + long) + int));\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}