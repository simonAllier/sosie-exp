{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"d34a65e3-7924-11e5-a79c-7dc25b0b97f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:168","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.reader.OSMInputFile = new com.graphhopper.reader.OSMInputFile(java.io.File).setWorkerThreads(int).open();\n    long long = 1;\n    long long = 1;\n    com.graphhopper.reader.OSMElement com.graphhopper.reader.OSMElement;\n    while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n        if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n            final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n            boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n            if (boolean) {\n                TLongList TLongList = com.graphhopper.reader.OSMWay.getNodes();\n                int int = com.graphhopper.reader.TLongList.size();\n                for (int int = 0 ; int < int ; int++) {\n                    com.graphhopper.reader.OSMReader.prepareHighwayNode(com.graphhopper.reader.TLongList.get(int));\n                }\n                if (((++long) % 5000000) == 0) {\n                    com.graphhopper.reader.OSMReader.com.graphhopper.util.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n                } \n            } \n        } \n        if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n            final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n            if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n                com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n            \n            if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n                com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n            \n            if (((++long) % 50000) == 0) {\n                com.graphhopper.reader.OSMReader.com.graphhopper.util.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n            } \n        } \n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(\"Problem while parsing file\" , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile);\n}"},"status":-2},{"failures":[],"tindex":"d34a8cf4-7924-11e5-a79c-7b79d7612682","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:91","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"variableMap":{"size":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:370","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleNodeTags(com.graphhopper.reader.OSMNode)"},"status":-2},{"failures":[],"tindex":"d34a8cf5-7924-11e5-a79c-d5904cd0903c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:178","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"d34a8cf6-7924-11e5-a79c-5ba4e68285bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:89","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-2},{"failures":[],"tindex":"d34a8cf7-7924-11e5-a79c-41ba65e3aad2","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:344","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"d34a8cf8-7924-11e5-a79c-1d76e565c86f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:140","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"status":-2},{"failures":[],"tindex":"d34a8cf9-7924-11e5-a79c-633048b5ca9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"toLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:31","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"d34ab40a-7924-11e5-a79c-b1a9d72b7016","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"cap","tmpValue":"cap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:385","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"d34ab40b-7924-11e5-a79c-afb3ae73b35a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:209","type":"CtTryImpl","sourcecode":"try {\n    if (!(java.io.File.renameTo(new java.io.File(((java.lang.String) + java.lang.String))))) {\n        throw new java.lang.IllegalStateException((((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object to \") + java.lang.String));\n    } \n    java.lang.String = java.lang.String;\n} catch (java.lang.Exception ex) {\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t rename this \" + com.graphhopper.storage.DataAccess.(getType())) + \" object!\") , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"d34ab40c-7924-11e5-a79c-2faa4781711e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"status":-2},{"failures":[],"tindex":"d34ab40d-7924-11e5-a79c-7f84142bfb9c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:154","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"longSegmentSize":"encoded","bufferStart":"relationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:335","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.handleBikeRelated(com.graphhopper.reader.OSMWay, long, (long > (com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())))"},"status":-2},{"failures":[],"tindex":"d34ab40e-7924-11e5-a79c-fb97d94b270e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"variableMap":{"initLeafSize":"height","maxLeafEntries":"height"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:127","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-2},{"failures":[],"tindex":"d34ab40f-7924-11e5-a79c-ed6598f3a097","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:69","type":"CtWhileImpl","sourcecode":"while (!(boolean && boolean)) {\n    if (double < double) {\n        double += double;\n        int += int;\n    } else {\n        double += double;\n        int += int;\n    }\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if (int > 0.0) {\n        if (int >= int)\n            boolean = true;\n        \n    } else if (int <= int) {\n        boolean = true;\n    } \n    if (int > 0.0) {\n        if (int >= int)\n            boolean = true;\n        \n    } else if (int <= int) {\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"d34ab410-7924-11e5-a79c-452a78af4ce7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:371","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"d34adb21-7924-11e5-a79c-3b923666dd8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:162","type":"CtForImpl","sourcecode":"for (int int = int + 1 ; int < int ; int++) {\n    com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"d34adb22-7924-11e5-a79c-014026f25252","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"maxLevel"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:586","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"d34adb23-7924-11e5-a79c-f145530d9316","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:272","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.InternalGraphEventListener.initStorage()"},"status":-2},{"failures":[],"tindex":"d34adb24-7924-11e5-a79c-bf880564ba35","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:632","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"d34adb25-7924-11e5-a79c-9f36530cf8fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n            int++;\n        } \n        if (int > (int[][int])) {\n            int[][int] = int[][int];\n            int[][int] = int[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    int[][int] = int;\n} else {\n    while ((int[][(int / 2)]) > int) {\n        int[][int] = int[][(int / 2)];\n        int[][int] = int[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    int[][int] = int;\n}"},"status":-2},{"failures":[],"tindex":"d34adb26-7924-11e5-a79c-f1556b6ec71d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:146","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:112","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.util.Map<java.lang.String, java.lang.Object>.get(java.lang.String)))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}