{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":38,"com.graphhopper.reader.OSMReaderTest.testFoot":0,"com.graphhopper.reader.OSMReaderTest.testMain":1,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":34,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":11,"com.graphhopper.reader.OSMReaderTest.testOneWay":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":37,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":14,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":24,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":25,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":44,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":21,"com.graphhopper.storage.VLongStorageTest.testWrite":40,"com.graphhopper.GraphHopperTest.testPrepareOnly":39,"com.graphhopper.coll.CompressedArrayTest.testCompress2":42,"com.graphhopper.GraphHopperTest.testVia":15,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":22,"com.graphhopper.reader.OSMReaderTest.testWithBounds":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":33,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":5,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":7,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":4,"com.graphhopper.GraphHopperAPITest.testLoad":30,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":19,"com.graphhopper.coll.CompressedArrayTest.testCompress":43,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":10,"com.graphhopper.GraphHopperTest.testFootOnly":31,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":17,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":6,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":36,"com.graphhopper.reader.OSMReaderTest.testBarriers":3,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":35,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":28,"com.graphhopper.GraphHopperTest.testLoadOSM":20,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":23,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":41,"com.graphhopper.GraphHopperTest.testPrepare":16,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":27,"com.graphhopper.reader.OSMReaderTest.testSort":2,"com.graphhopper.GraphHopperTest.testFootAndCar":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":32},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"dfa1d9c3-8287-11e5-b943-2b42f8ab8a1f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:226","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"variableMap":{"sacScale":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.(isBlockFords()) && ((\"ford\".equals(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"ford\"))))\n    return 0;\n"},"status":-1},{"failures":[18],"tindex":"dfa200d4-8287-11e5-b943-0b25c980d784","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"variableMap":{"cp":"vehicle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:255","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"dfa200d5-8287-11e5-b943-8704e251fa9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:169","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * (int - double))"},"variableMap":{"gradient":"weight","y1":"weight","x1":"weight","xend":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:90","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double)"},"status":-2},{"failures":[],"tindex":"dfa200d6-8287-11e5-b943-a5069f8f1281","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:286","type":"CtForImpl","sourcecode":"for ( ; int > 0 ; long <<= 1) {\n    if ((long & long) != 0)\n        long |= 1;\n    \n    long <<= 1;\n    int--;\n    if (long == 0) {\n        long <<= int;\n        break;\n    } \n}"},"variableMap":{"res":"edgePointer","maxBit":"edgePointer","delta":"length","maxBits":"length","value":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:824","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList != null) && (!(com.graphhopper.util.PointList.isEmpty()))) {\n    if ((com.graphhopper.util.PointList.getDimension()) != (com.graphhopper.storage.NodeAccess.getDimension()))\n        throw new java.lang.IllegalArgumentException(((((\"Cannot use pointlist which is \" + (com.graphhopper.util.PointList.getDimension())) + \"D for graph which is \") + (com.graphhopper.storage.NodeAccess.getDimension())) + \"D\"));\n    \n    int int = com.graphhopper.util.PointList.getSize();\n    int int = com.graphhopper.storage.NodeAccess.getDimension();\n    int int = com.graphhopper.storage.BaseGraph.nextGeoRef((int * int));\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), int);\n    long long = ((long)(int)) * 4;\n    byte[] byte[] = new byte[((int * int) * 4) + 4];\n    com.graphhopper.storage.BaseGraph.ensureGeometry(long, byte[].int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], int, 0);\n    if (boolean)\n        com.graphhopper.util.PointList.reverse();\n    \n    int int = 4;\n    boolean boolean = com.graphhopper.storage.NodeAccess.is3D();\n    for (int int = 0 ; int < int ; int++) {\n        double double = com.graphhopper.util.PointList.getLatitude(int);\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n        int += 4;\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n        int += 4;\n        if (boolean) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n            int += 4;\n        } \n    }\n    com.graphhopper.storage.DataAccess.setBytes(long, byte[], byte[].int);\n} else {\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), 0);\n}"},"status":-2},{"failures":[],"tindex":"dfa200d7-8287-11e5-b943-31a4ef9829f9","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:75","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"dfa200d8-8287-11e5-b943-9d04c8243433","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:44","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-2},{"failures":[30,15,16,17,18,19,20,22,31],"tindex":"dfa227e9-8287-11e5-b943-dfde4da8b4b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:116","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"))"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1073","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setDebugInfo(java.lang.String)"},"status":-1},{"failures":[],"tindex":"dfa227ea-8287-11e5-b943-2d8fb4ae77d8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:245","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:322","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.GraphHopperStorage.getNodeAccess().is3D()"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,19,20,21,22],"tindex":"dfa227eb-8287-11e5-b943-cb5d040b1292","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.byteOrder\", com.graphhopper.storage.Directory.getByteOrder())"},"status":-1},{"failures":[40,41,42,43],"tindex":"dfa227ec-8287-11e5-b943-aff1c47d9941","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:80","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"variableMap":{"time":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:121","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 7"},"status":-1},{"failures":[],"tindex":"dfa227ed-8287-11e5-b943-df10e944b010","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:106","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Directory = new com.graphhopper.storage.MMapDirectory(java.lang.String)"},"variableMap":{"location":"location","dir":"outdir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:311","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean)"},"status":0},{"failures":[44],"tindex":"dfa227ee-8287-11e5-b943-f3d8bab5caab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:126","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Double.parseDouble(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:415","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\":rural\")) || (java.lang.String.endsWith(\":trunk\")))\n    return 80;\n"},"status":-1},{"failures":[],"tindex":"dfa24eff-8287-11e5-b943-57e675ca4d7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.BigLongIntMap:84","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"dfa24f00-8287-11e5-b943-e33deb338586","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1028","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"pass_through\", false)"},"variableMap":{"request":"request"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1006","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"force_heading_ch\", false)"},"status":0},{"failures":[],"tindex":"dfa24f01-8287-11e5-b943-dbb8c3ac7844","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"frontIndex":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","endIndexPlusOne":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:239","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.AbstractDataAccess.readHeader(java.io.RandomAccessFile);\n    if (long < 0)\n        return false;\n    \n    com.graphhopper.storage.MMapDataAccess.mapIt(com.graphhopper.storage.AbstractDataAccess.int, (long - (com.graphhopper.storage.AbstractDataAccess.int)), false);\n    return true;\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"dfa24f02-8287-11e5-b943-57686ab6ab75","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:81","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = com.graphhopper.util.Instruction.getAnnotation()"},"variableMap":{"instruction":"obj"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:93","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.InstructionAnnotation com.graphhopper.util.InstructionAnnotation = ((com.graphhopper.util.InstructionAnnotation)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"dfa24f03-8287-11e5-b943-3f95489d69bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:634","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.getNodes()"},"status":-2},{"failures":[],"tindex":"dfa27614-8287-11e5-b943-03f6aacacaaf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:234","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:140","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = com.graphhopper.util.TranslationMap.get(\"en\").asMap()"},"status":-2},{"failures":[],"tindex":"dfa27615-8287-11e5-b943-37d0fe26a28b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:204","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.edge(int, int)"},"variableMap":{"a":"from","b":"from","this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:86","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"dfa27616-8287-11e5-b943-71827665e190","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:113","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(0)"},"variableMap":{"raFile":"raFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:295","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.close(java.io.RandomAccessFile)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"dfa227ed-8287-11e5-b943-df10e944b010","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testSort":["com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e1","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().t3","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t7","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess(java.lang.String,java.lang.String,java.nio.ByteOrder,boolean).b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e6","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).b","com.graphhopper.storage.MMapDataAccess_void_flush().e1","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e3","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e1","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).e1","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).l1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e5","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e3","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e2","com.graphhopper.storage.MMapDataAccess_long_getCapacity().b","com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.DAType_java.lang.String_toString().t1","com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.storage.MMapDataAccess_void_flush().l3","com.graphhopper.storage.MMapDataAccess_boolean_ensureCapacity(long).b","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).e1","com.graphhopper.storage.DAType_boolean_isAllowWrites().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).e4","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).b","com.graphhopper.storage.MMapDataAccess_int_getInt(long).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e3","com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().b","com.graphhopper.storage.DAType_boolean_isMMap().b","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().b","com.graphhopper.storage.RAMIntDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_void_setInt(long,int).b","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).b","com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().e1","com.graphhopper.storage.RAMIntDataAccess_void_flush().b","com.graphhopper.storage.MMapDataAccess_void_setBytes(long,byte[],int).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t4","com.graphhopper.storage.MMapDataAccess_void_setBytes(long,byte[],int).b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t2","com.graphhopper.storage.RAMDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).b","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).b","com.graphhopper.storage.GHDirectory_void_mkdirs().t1","com.graphhopper.storage.MMapDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_long_getCapacity().l1","com.graphhopper.storage.MMapDataAccess_void_flush().b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).l5","com.graphhopper.storage.RAMIntDataAccess_void_flush().e1","com.graphhopper.storage.MMapDirectory_com.graphhopper.storage.MMapDirectory(java.lang.String).b","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e2","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).l7","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b"],"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":["com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e1","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().t3","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess(java.lang.String,java.lang.String,java.nio.ByteOrder,boolean).b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).t7","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e6","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).e3","com.graphhopper.storage.MMapDataAccess_void_flush().e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e1","com.graphhopper.storage.MMapDataAccess_com.graphhopper.storage.MMapDataAccess_create(long).e1","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).l1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e5","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e3","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).e2","com.graphhopper.storage.MMapDataAccess_long_getCapacity().b","com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.DAType_java.lang.String_toString().t1","com.graphhopper.storage.DAType_java.lang.String_toString().t4","com.graphhopper.storage.MMapDataAccess_void_flush().l3","com.graphhopper.storage.MMapDataAccess_boolean_ensureCapacity(long).b","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).e1","com.graphhopper.storage.DAType_boolean_isAllowWrites().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.GHDirectory(java.lang.String,com.graphhopper.storage.DAType).e4","com.graphhopper.storage.AbstractDataAccess_void_writeHeader(java.io.RandomAccessFile,long,int).b","com.graphhopper.storage.MMapDataAccess_int_getInt(long).b","com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().b","com.graphhopper.storage.DAType_boolean_isMMap().b","com.graphhopper.storage.GHDirectory_com.graphhopper.storage.DataAccess_find(java.lang.String,com.graphhopper.storage.DAType).e3","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().b","com.graphhopper.storage.RAMIntDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_void_setInt(long,int).b","com.graphhopper.storage.MMapDataAccess_void_getBytes(long,byte[],int).b","com.graphhopper.storage.MMapDataAccess_void_initRandomAccessFile().e1","com.graphhopper.storage.RAMIntDataAccess_void_flush().b","com.graphhopper.storage.MMapDataAccess_void_setBytes(long,byte[],int).e1","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t4","com.graphhopper.storage.MMapDataAccess_void_setBytes(long,byte[],int).b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).t2","com.graphhopper.storage.RAMDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).b","com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).b","com.graphhopper.storage.GHDirectory_void_mkdirs().t1","com.graphhopper.storage.MMapDataAccess_void_flush().t2","com.graphhopper.storage.MMapDataAccess_long_getCapacity().l1","com.graphhopper.storage.MMapDataAccess_void_flush().b","com.graphhopper.storage.RAMDirectory_com.graphhopper.storage.RAMDirectory(java.lang.String,boolean).b","com.graphhopper.storage.MMapDataAccess_java.nio.ByteBuffer_newByteBuffer(long,long).l5","com.graphhopper.storage.RAMIntDataAccess_void_flush().e1","com.graphhopper.storage.MMapDirectory_com.graphhopper.storage.MMapDirectory(java.lang.String).b","com.graphhopper.storage.MMapDataAccess_boolean_mapIt(long,long,boolean).l7","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e2","com.graphhopper.storage.MMapDataAccess_boolean_loadExisting().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b"]},"type":"branch"}]},{"transformation":"dfa24f00-8287-11e5-b943-e33deb338586","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHRequest.getHints","com.graphhopper.util.PMap.getBool"]},"type":"staticDiff"}]}]}