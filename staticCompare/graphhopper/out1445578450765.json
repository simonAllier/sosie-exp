{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":48,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":118,"com.graphhopper.GraphHopperAPITest.testNoLoad":187,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":411,"com.graphhopper.reader.OSMReaderTest.testFerry":2,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":17,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":160,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":82,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":189,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":433,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":327,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":450,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":88,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":358,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":431,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":221,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":453,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":391,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":393,"com.graphhopper.GraphHopperTest.testPrepare":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":443,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":287,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":89,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":355,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":36,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":251,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":352,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":161,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":201,"com.graphhopper.util.PMapTest.hasReturnsCorrectResult":20,"com.graphhopper.GraphHopperTest.testLoadOSM":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":259,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":273,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":252,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":370,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":112,"com.graphhopper.reader.OSMReaderTest.testSort":5,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":451,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":388,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":240,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":444,"com.graphhopper.routing.DijkstraTest.initializationError":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":402,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":309,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":317,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":285,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":409,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":44,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":176,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":196,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":337,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":314,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":230,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":126,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":371,"com.graphhopper.GraphHopperAPITest.testLoad":185,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":114,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":222,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":212,"com.graphhopper.reader.OSMReaderTest.testBarriers":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":318,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":415,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":102,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":90,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":298,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":319,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":123,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":134,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":295,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":241,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":332,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":145,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":363,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":416,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":396,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":397,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":276,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":439,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":260,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":373,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":156,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":127,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":425,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":288,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":211,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":7,"com.graphhopper.routing.AStarTest.initializationError":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":398,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":124,"com.graphhopper.routing.PathBidirRefTest.testExtract":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":438,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":354,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":282,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":437,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":45,"com.graphhopper.reader.OSMReaderTest.testMain":4,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":400,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":399,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":441,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":448,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":387,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":341,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":132,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":372,"com.graphhopper.storage.GraphHopperStorageTest.testClone":214,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":440,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":395,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":67,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":224,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":417,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":379,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":262,"com.graphhopper.reader.OSMReaderTest.testRelation":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":430,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":384,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":23,"com.graphhopper.GraphHopperTest.testFootOnly":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":275,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":78,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":64,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":32,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":374,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":426,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":254,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":392,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":268,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":250,"com.graphhopper.reader.OSMReaderTest.testWithBounds":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":423,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":449,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":432,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":270,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":146,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":340,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":65,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":442,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":333,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":30,"com.graphhopper.util.PMapTest.singleStringPropertyCanBeRetrieved":21,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":243,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":152,"com.graphhopper.GraphHopperAPITest.testDisconnected179":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":382,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":418,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":342,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":174,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":413,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":143,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":1,"com.graphhopper.util.PMapTest.keyCanHaveAnyCasing":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":369,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":452,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":376,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":429,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":446,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":192,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":216,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":344,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":115,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":153,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":234,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":42,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":278,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":279,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":52,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":173,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":445,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":422,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":381,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":356,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":168,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":227,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":360,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":324,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":131,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":256,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":435,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":406,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":83,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":167,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsLong":22,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":353,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":297,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":293,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":359,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":403,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":128,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":301,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":312,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":94,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":177,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":194,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":436,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":113,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":266,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":27,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":330,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":421,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":59,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":57,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":378,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":401,"com.graphhopper.reader.PrinctonReaderTest.testRead":0,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":420,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":410,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":375,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":87,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":335,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":108,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":133,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":159,"com.graphhopper.reader.OSMReaderTest.testFoot":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":434,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":257,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":76,"com.graphhopper.reader.OSMReaderTest.testOneWay":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":407,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":223,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":377,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":347,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":86,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":129,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":428,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":280,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":162,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":304,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":117,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":79,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":424,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":404,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":361,"com.graphhopper.routing.PathBidirRefTest.testExtract2":181,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":274,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":261,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":300,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":286,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":236,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":305,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":390,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":9,"com.graphhopper.util.PMapTest.propertyFromStringWithMultiplePropertiesCanBeRetrieved":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":267,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":447,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":49,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":306,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":357,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":253,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":408,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":71,"com.graphhopper.GraphHopperTest.testFootAndCar":193,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":231,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":97,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":414,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":394,"com.graphhopper.GraphHopperTest.testPrepareOnly":188,"com.graphhopper.GraphHopperTest.testVia":190,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":299,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":412,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":40,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":281,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":362,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":235,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":120,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":277,"com.graphhopper.routing.AStarBidirectionTest.initializationError":179,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":383,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":427,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":308},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"tindex":"b00d2ba1-7947-11e5-bd4c-491498dffb31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:90","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.String.length()) / 8"},"variableMap":{"str":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:55","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-1},{"failures":[3,4,5,7,8,9,10,13,14,16,25,26,43,44,47,448,449,450,451,452,453,188,190,191,192,193,194,195,197,198,199,200,248,252,254,256,259,261,262,265,269,273,275,277,280,282,283,286],"tindex":"b00d79c2-7947-11e5-bd4c-f14b4d8b8313","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"variableMap":{"width":"connectedId","lonSimilar":"connectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:49","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[],"tindex":"b00da0d3-7947-11e5-bd4c-0d3c6f3bb485","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:194","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException((\"too many shortcuts. new shortcut id would be negative. \" + com.graphhopper.storage.CHGraphImpl.(toString())));\n"},"variableMap":{"shortcutCount":"maxLevel","this":"prepareGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:338","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"b00da0d4-7947-11e5-bd4c-618650abe6a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1137","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.GraphHopperStorage.getNodes()"},"status":-2},{"failures":[],"tindex":"b00da0d5-7947-11e5-bd4c-273f101bc59d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:80","type":"CtIfImpl","sourcecode":"if (double < (-(java.lang.Math.double)))\n    double += 2 * (java.lang.Math.double);\n"},"status":-2},{"failures":[],"tindex":"b00da0d6-7947-11e5-bd4c-354e56f0d682","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:126","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"variableMap":{"size":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:303","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"status":-2},{"failures":[],"tindex":"b00dc7e7-7947-11e5-bd4c-6d4981e941d0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:99","type":"CtReturnImpl","sourcecode":"return float[][int]"},"status":-2},{"failures":[],"tindex":"b00dc7e8-7947-11e5-bd4c-efe8f53f3773","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:286","type":"CtWhileImpl","sourcecode":"while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n    for (int int = 0 ; int < int ; int += 2) {\n        short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n        if ((short < (-1000)) || (short > 12000))\n            short = java.lang.Short.short;\n        \n        com.graphhopper.storage.DataAccess.setShort(int, short);\n    }\n}"},"status":-2},{"failures":[],"tindex":"b00dc7e9-7947-11e5-bd4c-a1902ac97934","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:147","type":"CtIfImpl","sourcecode":"if (double < double) {\n    int = int;\n    double = double;\n} "},"variableMap":{"maxDist":"com.graphhopper.coll.IntDoubleBinHeap.GROW_FACTOR","dist":"com.graphhopper.coll.IntDoubleBinHeap.GROW_FACTOR","indexWithMaxDist":"capacity","i":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:207","type":"CtIfImpl","sourcecode":"if ((int) > (int)) {\n    com.graphhopper.coll.IntDoubleBinHeap.ensureCapacity(((int)((int) * (com.graphhopper.coll.IntDoubleBinHeap.double))));\n} "},"status":-2},{"failures":[],"tindex":"b00dc7ea-7947-11e5-bd4c-873fe51e0c91","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:130","type":"CtIfImpl","sourcecode":"if ((byte[][].int) > 0)\n    throw new java.lang.IllegalStateException(\"already initialized\");\n"},"variableMap":{"length":"value","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:219","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[][][int], int, int)"},"status":-2},{"failures":[],"tindex":"b00deefb-7947-11e5-bd4c-0d4a77a9ff7d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:189","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"variableMap":{"index":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"status":-2},{"failures":[],"tindex":"b00deefc-7947-11e5-bd4c-29961b1ba76e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"variableMap":{"maxLat":"toLon","lat":"toLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:141","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n"},"status":-2},{"failures":[],"tindex":"b00deefd-7947-11e5-bd4c-4f0afad7153d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:339","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return ;\n"},"variableMap":{"way":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:93","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    java.lang.Object = null;\nelse\n    try {\n        java.lang.Object = java.lang.Double.parseDouble(java.lang.String);\n    } catch (java.lang.NumberFormatException ex) {\n        return ;\n    }\n"},"status":-2},{"failures":[],"tindex":"b00e160e-7947-11e5-bd4c-fd0d3ac9295f","series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:71","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty())) {\n    return 0;\n} "},"variableMap":{"name":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:265","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"b00e160f-7947-11e5-bd4c-371481c0ce0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:58","type":"CtAssignmentImpl","sourcecode":"long = -1"},"variableMap":{"lastTime":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:461","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode())"},"status":-2},{"failures":[],"tindex":"b00e1610-7947-11e5-bd4c-4137439cf766","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:130","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return 0;\n"},"variableMap":{"phrase":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:475","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.String.startsWith(\"P\"))\n        return 0;\n    \n    int int = java.lang.String.indexOf(\":\");\n    if (int > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        int = java.lang.String.indexOf(\":\");\n        int int = 0;\n        if (int > 0) {\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String = java.lang.String.substring(0, int);\n            java.lang.String = java.lang.String.substring((int + 1));\n            int = ((java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n        } \n        int += (java.lang.Integer.parseInt(java.lang.String)) * 60;\n        int += java.lang.Integer.parseInt(java.lang.String);\n        return int;\n    } else {\n        return java.lang.Integer.parseInt(java.lang.String);\n    }\n} catch (java.lang.Exception ex) {\n    com.graphhopper.routing.util.AbstractFlagEncoder.com.graphhopper.util.Logger.warn(((\"Cannot parse \" + java.lang.String) + \" using 0 minutes\"));\n}"},"status":-2},{"failures":[],"tindex":"b00e3d21-7947-11e5-bd4c-974c33f919c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:192","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"b00e3d22-7947-11e5-bd4c-e951c30b1902","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:265","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"variableMap":{"highwayValue":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:207","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n        return long;\n    \n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"b00e3d23-7947-11e5-bd4c-8d899def8c76","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:159","type":"CtIfImpl","sourcecode":"if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"variableMap":{"tmp":"weight","tmpNo":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:689","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = com.graphhopper.storage.CHGraphImpl.shortcut(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    com.graphhopper.util.CHEdgeIteratorState.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n    com.graphhopper.util.CHEdgeIteratorState.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIteratorState.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    int++;\n} "},"status":-2},{"failures":[],"tindex":"b00e6434-7947-11e5-bd4c-a94d98a88631","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidirRef:65","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.EdgeEntry) == null) || ((com.graphhopper.storage.EdgeEntry) == null))\n    return this;\n"},"variableMap":{"edgeTo":"currEdge","edgeEntry":"currEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:135","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.Path(com.graphhopper.storage.Graph , com.graphhopper.routing.util.FlagEncoder).setWeight(com.graphhopper.storage.EdgeEntry.double).setEdgeEntry(com.graphhopper.storage.EdgeEntry).extract()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}