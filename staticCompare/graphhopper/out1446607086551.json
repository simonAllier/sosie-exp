{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":23,"com.graphhopper.reader.OSMReaderTest.testFerry":141,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":137,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":218,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":20,"com.graphhopper.reader.OSMReaderTest.testWithBounds":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":158,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":159,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":169,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":1,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":87,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":177,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":188,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":162,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":184,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":96,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":140,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":207,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":146,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":161,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":199,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":39,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":179,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":98,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":68,"com.graphhopper.reader.OSMReaderTest.testSort":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":190,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":160,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":219,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":123,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":198,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":213,"com.graphhopper.routing.PathTest.testWayList":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":92,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":44,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":128,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":58,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":192,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":10,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":21,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":206,"com.graphhopper.util.GHUtilityTest.testSort":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":57,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":112,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":212,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":93,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":115,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":40,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":215,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":109,"com.graphhopper.GraphHopperAPITest.testLoad":130,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":196,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":157,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":41,"com.graphhopper.reader.OSMReaderTest.testBarriers":144,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":163,"com.graphhopper.routing.PathTest.testFound":200,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":25,"com.graphhopper.util.GHUtilityTest.testCopy":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":220,"com.graphhopper.routing.PathTest.testFindInstruction":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":47,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":221,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":110,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":53,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":67,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":171,"com.graphhopper.reader.PrinctonReaderTest.testRead":139,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":208,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":88,"com.graphhopper.reader.OSMReaderTest.testFoot":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":97,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":75,"com.graphhopper.reader.OSMReaderTest.testOneWay":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":79,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":65,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":81,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":175,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":104,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":59,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":145,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":178,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":168,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":155,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":216,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":126,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":152,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":103,"com.graphhopper.util.GHUtilityTest.testSort2":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":193,"com.graphhopper.reader.OSMReaderTest.testMain":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":89,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":100,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":86,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":121,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":50,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":36,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":95,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":26,"com.graphhopper.routing.PathTest.testTime":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":209,"com.graphhopper.util.GHUtilityTest.testSortDirected":136,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":84,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":113,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":24,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":78,"com.graphhopper.GraphHopperTest.testFootOnly":13,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":18,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":105,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":102},"transformations":[{"failures":[],"tindex":"aac02548-82a2-11e5-9f57-27f4eaa1f10c","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHResponse:92","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.PointList = com.graphhopper.util.PointList"},"variableMap":{"list":"this","points":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:46","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.this(10, false)"},"status":-2},{"failures":[],"tindex":"aac02549-82a2-11e5-9f57-379d9f881b3c","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:189","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"variableMap":{"index":"com.graphhopper.storage.index.LocationIndexTree.START_POINTER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:323","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.store(com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.com.graphhopper.storage.index.LocationIndexTree.InMemTreeEntry, com.graphhopper.storage.index.LocationIndexTree.int)"},"status":-2},{"failures":[0],"tindex":"aac04c5a-82a2-11e5-9f57-111ca212c13d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"size":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:60","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"aac04c5b-82a2-11e5-9f57-ed305c6b2688","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:661","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureWriteAccess()"},"status":-1},{"failures":[15],"tindex":"aac04c5c-82a2-11e5-9f57-1bf8dd381e9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:233","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = int"},"variableMap":{"index":"index","bufferIndex":"index","value":"index","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:257","type":"CtAssignmentImpl","sourcecode":"int[][][int][int] = short"},"status":-1},{"failures":[16],"tindex":"aac04c5d-82a2-11e5-9f57-05f32f816f3c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:62","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.frac((double / double))"},"variableMap":{"gridCellHeight":"y1","tmp":"y1","y1":"y1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.fix(double)"},"status":-1},{"failures":[],"tindex":"aac04c5e-82a2-11e5-9f57-83780017b5c2","series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:126","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:215","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[17,18,19,4,7],"tindex":"aac04c5f-82a2-11e5-9f57-7d133da95981","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:159","type":"CtAssignmentImpl","sourcecode":"double = double"},"variableMap":{"x1":"prevLon","x2":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:773","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-1},{"failures":[],"tindex":"aac07370-82a2-11e5-9f57-35f03c900bcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:146","type":"CtIfImpl","sourcecode":"if (java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.isEmpty())\n    return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n"},"status":-1},{"failures":[20,21,22],"tindex":"aac07371-82a2-11e5-9f57-09f4b1d09047","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:207","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"status":-1},{"failures":[],"tindex":"aac07372-82a2-11e5-9f57-836bc473d050","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:53","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin((java.lang.Math.(java.lang.Math.toRadians((double - double))) / 2))"},"status":-2},{"failures":[],"tindex":"aac07373-82a2-11e5-9f57-1bbcfef70f33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:276","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int)"},"variableMap":{"ghStorage":"graph","nodeIndex":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:74","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    if ((com.graphhopper.storage.EdgeEntry) != null) {\n        gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, int, com.graphhopper.storage.EdgeEntry.int), com.graphhopper.storage.EdgeEntry, int);\n    } \n} else {\n    if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,17,143,144,145,146,0,18,147,19,148,149,1,150,151,152,153,154,155,3,4,5,6,7,8,9,11,12,14,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"aac07374-82a2-11e5-9f57-ddd1ef1020d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"nodeThis","capacity":"nodeOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"aac09a85-82a2-11e5-9f57-cb11d81209ad","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"a":"flagsSizeIsLong","approx":"flagsSizeIsLong"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:52","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[24,208,28,29,30,31,209,33,34,210,42,211,46,47,48,49,212,51,52,213,60,214,64,65,66,67,215,69,70,216,80,217,84,85,86,87,218,89,90,142,17,143,145,146,0,18,219,19,149,1,2,3,4,5,6,7,8,9,11,12,13,14,156,157,159,160,161,162,163],"tindex":"aac09a86-82a2-11e5-9f57-bf3cb6d3473c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:935","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl(com.graphhopper.storage.BaseGraph.getNodes())"},"status":-1},{"failures":[],"tindex":"aac09a87-82a2-11e5-9f57-3932d93483d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:83","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.geohash.SpatialKeyAlgo.encode(new com.graphhopper.util.shapes.GHPoint(double , double))"},"status":-2},{"failures":[4,5,8,9,220,221,191,192,194,197],"tindex":"aac0c198-82a2-11e5-9f57-435ac4403251","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:174","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"aac0c199-82a2-11e5-9f57-4359298bde03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:569","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTags()) {\n    long long = com.graphhopper.routing.util.EncodingManager.handleNodeTags(com.graphhopper.reader.OSMNode);\n    if (long != 0)\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n    \n} "},"status":-2},{"failures":[],"tindex":"aac0c19a-82a2-11e5-9f57-5389b921160a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"weight","angle":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:74","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    return double;\n"},"status":-1},{"failures":[],"tindex":"aac0c19b-82a2-11e5-9f57-bb58881f6783","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:145","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:740","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setEncodingManager(com.graphhopper.routing.util.EncodingManager.create(java.lang.String))"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}