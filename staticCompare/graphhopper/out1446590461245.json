{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":115,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":106,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":113,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":28,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":3,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":13,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":16,"com.graphhopper.GraphHopperTest.testPrepare":83,"com.graphhopper.util.EdgeWrapperTest.testPut":55,"com.graphhopper.util.InstructionListTest.testWayList2":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":114,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":25,"com.graphhopper.reader.OSMReaderTest.testFoot":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":88,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":47,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":98,"com.graphhopper.util.InstructionListTest.testWayList":38,"com.graphhopper.coll.IntIntBinHeapTest.test0":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":59,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":58,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":92,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":104,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":41,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":67,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":89,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":94,"com.graphhopper.GraphHopperTest.testLoadOSM":86,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":80,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":78,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":112,"com.graphhopper.reader.OSMReaderTest.testMain":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":22,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":91,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":68,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":21,"com.graphhopper.routing.PathTest.testWayList":50,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":96,"com.graphhopper.util.BitUtilBigTest.testFromBitString":9,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":65,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":118,"com.graphhopper.util.PointListTest.testIterable":51,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":10,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":97,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":111,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":26,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":101,"com.graphhopper.util.InstructionListTest.testCreateGPX":53,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":11,"com.graphhopper.GraphHopperTest.testVia":82,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":87,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":108,"com.graphhopper.GraphHopperAPITest.testLoad":75,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":85,"com.graphhopper.GraphHopperTest.testFootOnly":5,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":116,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":70,"com.graphhopper.util.InstructionListTest.testFind":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":100,"com.graphhopper.util.GHUtilityTest.testCopy":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":30},"transformations":[{"failures":[],"tindex":"f54c61cc-827b-11e5-8056-398a3b36b778","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:527","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.dataaccess\", \"RAM_STORE\")"},"status":-2},{"failures":[],"tindex":"f54c88dd-827b-11e5-8056-9d01c1e1be64","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:410","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"getName\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:96","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true)"},"status":-2},{"failures":[],"tindex":"f54c88de-827b-11e5-8056-d56f30de6b45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:303","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >> (int)))"},"status":-2},{"failures":[0,1,2,3],"tindex":"f54c88df-827b-11e5-8056-01b5a0825b90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"variableMap":{"cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:202","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-1},{"failures":[],"tindex":"f54caff0-827b-11e5-8056-779202a3d01e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"nEdge","cl":"nEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:99","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[4,5,6,7,8],"tindex":"f54caff1-827b-11e5-8056-4589b78f6506","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"acceptBit","flags":"acceptBit","dir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:232","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[9],"tindex":"f54caff2-827b-11e5-8056-8b27e7d9a3bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"currentEntry":"bLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:92","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[10],"tindex":"f54caff3-827b-11e5-8056-291109c2bedc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:226","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,5,40,41,0,42,43,44,45,46,47,48,49,50],"tindex":"f54cd704-827b-11e5-8056-c1de4080cd03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"tmpOffset","guess":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:847","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-1},{"failures":[51,52,53,54],"tindex":"f54cd705-827b-11e5-8056-a150e8581f0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"variableMap":{"dist":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint:47","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"f54cd706-827b-11e5-8056-9903ef31a0da","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:912","type":"CtIfImpl","sourcecode":"if (double < (double))\n    int = int;\n"},"variableMap":{"tmpClosestNode":"end","adjNode":"from","adjDist":"java.lang.Double.NaN","currNormedDist":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:373","type":"CtIfImpl","sourcecode":"if (boolean)\n    for (int int = int ; int < int ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n    }\nelse\n    for (int int = int ; int < int ; int++) {\n        com.graphhopper.util.PointList.add(double[][int], double[][int], java.lang.Double.double);\n    }\n"},"status":-2},{"failures":[55],"tindex":"f54cd707-827b-11e5-8056-b74b57797eed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"ref","frontIndex":"ref"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:104","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-1},{"failures":[],"tindex":"f54cfe18-827b-11e5-8056-d5fc41af7f96","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.writeVLong(long)"},"status":0},{"failures":[],"tindex":"f54cfe19-827b-11e5-8056-8b3d52c538e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"value","newBaseIndex":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-2},{"failures":[],"tindex":"f54cfe1a-827b-11e5-8056-753fb918d71b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:284","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"variableMap":{"this":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:131","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    com.graphhopper.storage.DataAccess = new com.graphhopper.storage.SynchedDAWrapper(com.graphhopper.storage.DataAccess);\n"},"status":-2},{"failures":[56,57],"tindex":"f54cfe1b-827b-11e5-8056-65ebf9c90aa7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"key","tmpSize":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n            int++;\n        } \n        if (int > (int[][int])) {\n            int[][int] = int[][int];\n            int[][int] = int[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    int[][int] = int;\n} else {\n    while ((int[][(int / 2)]) > int) {\n        int[][int] = int[][(int / 2)];\n        int[][int] = int[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    int[][int] = int;\n}"},"status":-1},{"failures":[58,59,60,61,62,63,64,65,66,67,68],"tindex":"f54d252c-827b-11e5-8056-71b7c5693dfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:431","type":"CtIfImpl","sourcecode":"if (int == 1)\n    java.lang.String = com.graphhopper.util.Translation.tr(\"unpaved\");\n"},"status":-1},{"failures":[],"tindex":"f54d252d-827b-11e5-8056-914d660ad1c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:526","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.NaN":"java.lang.Double.MAX_VALUE","com.graphhopper.reader.OSMReader.EMPTY":"java.lang.Integer.MAX_VALUE","id":"storedInt"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:379","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[69,70,71,72,73,74],"tindex":"f54d252e-827b-11e5-8056-032a92d36417","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:195","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    int int = com.graphhopper.storage.DataAccess.getInt(long);\n    com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    if (double < double) {\n        com.graphhopper.storage.DataAccess.setInt(long, int);\n    } \n} else {\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-1},{"failures":[75,76,77,78,79,80,81,82,83,84,4,85,86,87,5,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,42,116,117,118],"tindex":"f54d4c3f-827b-11e5-8056-2966ec6f5bc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:55","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}