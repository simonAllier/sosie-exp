{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":113,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":148,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":157,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":32,"com.graphhopper.reader.OSMReaderTest.testFerry":67,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":6,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":94,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":171,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":364,"com.graphhopper.routing.QueryGraphTest.testOneWay":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":369,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":191,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":358,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":237,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":257,"com.graphhopper.reader.OSMReaderTest.testWithBounds":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":287,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":131,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":308,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":162,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":348,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":368,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":326,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":239,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":50,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":300,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":192,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":36,"com.graphhopper.GraphHopperTest.testPrepare":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":112,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":11,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":333,"com.graphhopper.search.NameIndexTest.testFlush":359,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":8,"com.graphhopper.util.InstructionListTest.testWayList":84,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":346,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":105,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":217,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":355,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":181,"com.graphhopper.GraphHopperAPITest.testDisconnected179":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":136,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":63,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":255,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":102,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":258,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":4,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":24,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":72,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":310,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":176,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":37,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":59,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":322,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":303,"com.graphhopper.GraphHopperTest.testLoadOSM":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":266,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":242,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":47,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":259,"com.graphhopper.reader.OSMReaderTest.testSort":69,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":338,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":108,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":276,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":16,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":313,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":117,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":153,"com.graphhopper.storage.RAMDataAccessTest.testHeader":361,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":80,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":212,"com.graphhopper.storage.MMapDataAccessTest.testHeader":363,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":20,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":312,"com.graphhopper.routing.PathTest.testWayList":142,"com.graphhopper.storage.MMapDataAccessTest.testCopy":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":28,"com.graphhopper.util.BitUtilBigTest.testFromBitString":357,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":366,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":10,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":200,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":103,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":256,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":347,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":283,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":285,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":321,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":253,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":205,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":109,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":23,"com.graphhopper.util.GHUtilityTest.testSort":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":34,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":43,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":291,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":319,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":226,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":297,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":163,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":214,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":129,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":229,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":277,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":172,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":288,"com.graphhopper.GraphHopperAPITest.testLoad":350,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":61,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":294,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":327,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":168,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":38,"com.graphhopper.reader.OSMReaderTest.testBarriers":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":137,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":215,"com.graphhopper.routing.PathTest.testFound":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":273,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":235,"com.graphhopper.util.GHUtilityTest.testCopy":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":101,"com.graphhopper.routing.PathTest.testFindInstruction":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":39,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":290,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":272,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":46,"com.graphhopper.util.InstructionListTest.testEmptyList":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":104,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":224,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":345,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":331,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":9,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":305,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":292,"com.graphhopper.reader.PrinctonReaderTest.testRead":3,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":123,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":175,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":295,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":195,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":216,"com.graphhopper.util.InstructionListTest.testWayList2":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":245,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":35,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":264,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":49,"com.graphhopper.reader.OSMReaderTest.testOneWay":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":185,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":314,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":177,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":342,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":289,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":337,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":218,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":44,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":324,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":71,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":370,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":196,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":365,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":14,"com.graphhopper.routing.PathBidirRefTest.testExtract":126,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":232,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":57,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":91,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":138,"com.graphhopper.storage.RAMDataAccessTest.testCopy":360,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":169,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":311,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":251,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":53,"com.graphhopper.util.GHUtilityTest.testSort2":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":110,"com.graphhopper.reader.OSMReaderTest.testMain":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":30,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":202,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":165,"com.graphhopper.routing.PathBidirRefTest.testExtract2":127,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":197,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":278,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":243,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":228,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":268,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":353,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":254,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":189,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":41,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":208,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":174,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":260,"com.graphhopper.storage.GraphHopperStorageTest.testClone":320,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":349,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":31,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":194,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":329,"com.graphhopper.GraphHopperTest.testFootAndCar":60,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":170,"com.graphhopper.routing.PathTest.testTime":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":367,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":269,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":107,"com.graphhopper.util.GHUtilityTest.testSortDirected":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":282,"com.graphhopper.GraphHopperTest.testPrepareOnly":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":183,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":227,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":106,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":76,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":250,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":238,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":166,"com.graphhopper.GraphHopperTest.testFootOnly":65,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":86,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":339,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":244,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":246,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":22,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":182,"com.graphhopper.util.InstructionListTest.testFind":81,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":274},"transformations":[{"failures":[],"tindex":"6dae0b48-7952-11e5-b9c8-03663e88fd26","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT_LONG","mask":"weightLong"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:594","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.CHGraphImpl.long"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"6dae3259-7952-11e5-b9c8-4193b50315c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"edgePointer","backwardBit":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:128","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long)"},"status":-1},{"failures":[],"tindex":"6dae325a-7952-11e5-b9c8-890916cb7c71","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"variableMap":{"priorityWayEncoder":"wayTypeEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0},{"failures":[50,51,52,53,54,55,56,57,0,58,59,60,61,62,63,64,65,66,67,1,68,69,70,71,72,73,74,75,76,77,78,79,2,3,4,80,81,82,83,84,85,86,87,88,5,89,90,91,92,93,6,94,7,95,96,8,97,98,99,100,101,102,103,104,105,106,107,108,9,109,110,111,112,113,114,115,116,117,10,11,12,13,14,118,119,120,121,15,16,122,123,17,124,125,18,126,127,128,129,19,130,131,132,133,134,135,136,137,138,20,21,139,140,22,141,142,143,23,24,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,25,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,26,27,175,176,177,178,179,180,28,181,182,183,184,185,186,187,188,189,190,191,192,193,194,29,195,196,197,198,199,200,201,30,202,203,204,31,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,38,39,281,282,283,284,285,286,40,287,288,289,290,291,292,293,294,295,296,297,298,299,300,41,301,302,303,304,305,306,307,42,308,309,310,43,311,312,313,314,315,316,317,318,44,45,319,320,321,322,323,324,46,325,326,327,328,329,330,331,332,333,334,335,336,337,338,47,339,340,341,342,343,344,345,48,346,347,348,49,349,350,351],"tindex":"6dae596b-7952-11e5-b9c8-05e6a5cb8538","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"6dae807c-7952-11e5-b9c8-c93316ab8d43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:46","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"variableMap":{"adj":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","maxNodes":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","base":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:146","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0) {\n            return false;\n        } \n        byte[] byte[] = new byte[int];\n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        int[][] = new int[int][];\n        for (int int = 0 ; int < int ; int++) {\n            int int = (java.io.RandomAccessFile.read(byte[])) / 4;\n            int[] int[] = new int[int];\n            for (int int = 0 ; int < int ; int++) {\n                int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4));\n            }\n            int[][][int] = int[];\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-2},{"failures":[352],"tindex":"6daea78d-7952-11e5-b9c8-6d895f7f4d9f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:255","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"variableMap":{"res":"encoded","value":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:221","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double)"},"status":-1},{"failures":[353,354,355,356],"tindex":"6daea78e-7952-11e5-b9c8-810bbb071dcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:604","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-1},{"failures":[357],"tindex":"6daea78f-7952-11e5-b9c8-eddff6fb8d09","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:102","type":"CtIfImpl","sourcecode":"if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n    byte |= 1;\n"},"status":-1},{"failures":[],"tindex":"6daea790-7952-11e5-b9c8-2de73e0f0046","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:225","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"variableMap":{"bm":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:103","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long))\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n"},"status":0},{"failures":[],"tindex":"6daecea1-7952-11e5-b9c8-c9dae42a74bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:90","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"variableMap":{"visitedCountFrom":"high","visitedCountTo":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:420","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[97,100,105,108,115,116,10,12,13,122,123,125,18,166,168],"tindex":"6daecea2-7952-11e5-b9c8-016a1fc85153","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:610","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,358,0,58,59,60,61,62,63,64,65,66,67,1,68,69,70,71,72,73,74,76,77,78,79,2,359,104,9,109,112,360,361,161,165,170,171,362,363,208,364,365,366,218,219,220,221,367,222,235,236,239,240,241,242,243,244,245,246,249,250,251,252,368,253,254,256,257,258,259,260,261,262,263,266,267,268,269,369,270,271,274,276,277,313,314,315,370,371,350,351],"tindex":"6daecea3-7952-11e5-b9c8-5711289198b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:323","type":"CtAssignmentImpl","sourcecode":"int[][int] = -1"},"variableMap":{"values":"header","i":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:86","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"6daef5b4-7952-11e5-b9c8-e54b69f1b3cf","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:99","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    com.graphhopper.reader.OSMElement.setTag(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n}"},"status":0},{"failures":[],"tindex":"6daef5b5-7952-11e5-b9c8-057fad72eeff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:511","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.getAdjNode()) == int)\n    return com.graphhopper.util.EdgeIterator;\n"},"status":-2},{"failures":[],"tindex":"6daef5b6-7952-11e5-b9c8-ebdfe5d9dbd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:106","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"variableMap":{"line":"classBicycle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:572","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n"},"status":-2},{"failures":[],"tindex":"6daef5b7-7952-11e5-b9c8-4ba104345e96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:303","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\")"},"status":-2},{"failures":[],"tindex":"6daf1cc8-7952-11e5-b9c8-1f42a0078cdf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:110","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger)"},"status":-2},{"failures":[],"tindex":"6daf1cc9-7952-11e5-b9c8-77c4895fb626","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:107","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-2},{"failures":[],"tindex":"6daf1cca-7952-11e5-b9c8-0906e74d57d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"encoded","tmpValue":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:356","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6daf1ccb-7952-11e5-b9c8-ff1be30fb8db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"sw1":"sw"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1047","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}