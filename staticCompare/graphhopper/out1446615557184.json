{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":74,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":19,"com.graphhopper.reader.OSMReaderTest.testMain":28,"com.graphhopper.reader.OSMReaderTest.testFerry":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":76,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":43,"com.graphhopper.reader.OSMReaderTest.testWithBounds":65,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":8,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":45,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":48,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":68,"com.graphhopper.GraphHopperTest.testPrepare":32,"com.graphhopper.GraphHopperTest.testFootAndCar":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":10,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":77,"com.graphhopper.reader.OSMReaderTest.testFoot":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":21,"com.graphhopper.reader.OSMReaderTest.testOneWay":67,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":55,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":73,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":16,"com.graphhopper.GraphHopperTest.testPrepareOnly":69,"com.graphhopper.GraphHopperTest.testVia":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":53,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":18,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":58,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":13,"com.graphhopper.GraphHopperAPITest.testLoad":4,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":62,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":6,"com.graphhopper.GraphHopperTest.testFootOnly":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":54,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":9,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":63,"com.graphhopper.reader.OSMReaderTest.testBarriers":30,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":46,"com.graphhopper.GraphHopperTest.testLoadOSM":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":22,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":14,"com.graphhopper.reader.OSMReaderTest.testSort":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":56},"transformations":[{"failures":[0,1,2],"tindex":"63a5d83a-82b6-11e5-a07b-6305c700d337","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"start","edgeId":"connectedId","com.graphhopper.storage.EdgeAccess.NO_NODE":"connectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:108","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-1},{"failures":[],"tindex":"63a5ff4b-82b6-11e5-a07b-0971dd168784","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"minResolutionInMeter","NO_TURN_ENTRY":"minResolutionInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:302","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), int)"},"status":-2},{"failures":[],"tindex":"63a5ff4c-82b6-11e5-a07b-9b470819dff7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:112","type":"CtIfImpl","sourcecode":"if (double < 0)\n    continue;\n"},"variableMap":{"fromDist":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.set(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double)"},"status":-2},{"failures":[3],"tindex":"63a6265d-82b6-11e5-a07b-07f93253f06e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:207","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n        long |= long;\n    } else {\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n        long |= long;\n    }\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n    long |= long;\n}"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"63a6265e-82b6-11e5-a07b-c57b9e73c21c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"lat","speed":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:621","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.reverse(com.graphhopper.geohash.SpatialKeyAlgo.encode(double, double), com.graphhopper.geohash.SpatialKeyAlgo.getBits())"},"status":-1},{"failures":[39],"tindex":"63a6265f-82b6-11e5-a07b-91d760c15ad4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:928","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.reader.OSMRelation.Member.ref()"},"status":-1},{"failures":[],"tindex":"63a64d70-82b6-11e5-a07b-23924466e1e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:219","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile)"},"variableMap":{"in":"cl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:268","type":"CtInvocationImpl","sourcecode":"java.io.Closeable.close()"},"status":-2},{"failures":[40,41,42,43,44,45,46],"tindex":"63a64d71-82b6-11e5-a07b-1fd19c774ed6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:84","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-1},{"failures":[],"tindex":"63a64d72-82b6-11e5-a07b-117cda37b068","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDataAccess.ensureCapacity(java.lang.Math.max((10 * 4), long))"},"variableMap":{"bytes":"leafIndex","this":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:604","type":"CtInvocationImpl","sourcecode":"gnu.trove.set.hash.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long))"},"status":-2},{"failures":[47,48,49,50,51,52,53,54,55,56,57],"tindex":"63a64d73-82b6-11e5-a07b-551d2a36361d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"remainingSegNo","index":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:428","type":"CtTryImpl","sourcecode":"try {\n    if (!(com.graphhopper.util.Constants.boolean)) {\n        java.io.RandomAccessFile.setLength(((com.graphhopper.storage.AbstractDataAccess.int) + (int * (int))));\n    } \n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-1},{"failures":[],"tindex":"63a67484-82b6-11e5-a07b-db0d025daee0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:172","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"calcRouteBBox\")"},"variableMap":{"this":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setInstructions(com.graphhopper.util.InstructionList)"},"status":-2},{"failures":[],"tindex":"63a67485-82b6-11e5-a07b-e5b0722fab8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"distEstimation","speed":"distEstimation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:135","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = double"},"status":0},{"failures":[30,58],"tindex":"63a67486-82b6-11e5-a07b-8b26ba907802","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:224","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"variableMap":{"shift":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:381","type":"CtLocalVariableImpl","sourcecode":"long long = gnu.trove.list.TLongList.get(int)"},"status":-1},{"failures":[59,60,28,29,30,61,62,39,63,64,65,66,67,68,69,70,31,32,33,34,35,36,71,37,38,72],"tindex":"63a67487-82b6-11e5-a07b-c31fa02871a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:406","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long))"},"variableMap":{"createdEdges":"createdEdges","newNodeId":"wayFlags","wayOsmId":"wayOsmId","wayFlags":"wayOsmId","this":"this","nodeFlags":"wayFlags","nodeId":"wayOsmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:433","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.OSMWay.getNodes(), long, long))"},"status":-1},{"failures":[],"tindex":"63a69b98-82b6-11e5-a07b-3fc3834bd8dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:402","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new java.lang.IllegalArgumentException(\"graphhopper location cannot be null\");\n"},"variableMap":{"ghLocation":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:132","type":"CtIfImpl","sourcecode":"if (double < (double * 3)) {\n    java.lang.String = \"NE\";\n} else if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[73],"tindex":"63a69b99-82b6-11e5-a07b-6f6c374ccc4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:157","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[],"tindex":"63a69b9a-82b6-11e5-a07b-bba7659aab24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"graph","newGraph":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:112","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.TurnCostExtension())"},"status":-2},{"failures":[74,75,76,77],"tindex":"63a6c2ab-82b6-11e5-a07b-5becaa9281b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"63a6c2ac-82b6-11e5-a07b-b7907264bc8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:242","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:984","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":-2},{"failures":[],"tindex":"63a6c2ad-82b6-11e5-a07b-d7a8de4c2c4e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"strLen","nextEdgeOther":"charI","nodeOther":"strLen","nextEdge":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:102","type":"CtIfImpl","sourcecode":"if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n    byte |= 1;\n"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}