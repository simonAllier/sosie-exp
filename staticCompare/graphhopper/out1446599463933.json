{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":39,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":48,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":81,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":35,"com.graphhopper.reader.OSMReaderTest.testWithBounds":24,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":54,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":95,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":85,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":60,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":42,"com.graphhopper.reader.OSMReaderTest.testOneWay":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":43,"com.graphhopper.GraphHopperAPITest.testDisconnected179":94,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":36,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":64,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":29,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":91,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":89,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":88,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":87,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":50,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":63,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":67,"com.graphhopper.util.BitUtilBigTest.testFromBitString":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":70,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":52,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":56,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":83,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":9,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":55,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":65,"com.graphhopper.GraphHopperAPITest.testLoad":93,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":53,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":59,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":61,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":51,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":79},"transformations":[{"failures":[0],"tindex":"eb5277c1-8290-11e5-baa9-f599929abb24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"variableMap":{"offset":"b","bytes":"bytes","value":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:107","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1},{"failures":[],"tindex":"eb529ed2-8290-11e5-baa9-c760a49963d3","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:358","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getMaxValue()"},"variableMap":{"speedEncoder":"reverseSpeedEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"eb529ed3-8290-11e5-baa9-b1cf964ade62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:630","type":"CtTryImpl","sourcecode":"try {\n    if (com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) {\n        com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n        com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, true);\n        if (!(com.graphhopper.storage.Lock.tryLock()))\n            throw new java.lang.RuntimeException((\"To avoid multiple writers we need to obtain a write lock but it failed. In \" + java.lang.String) , com.graphhopper.storage.Lock.getObtainFailedReason());\n        \n    } \n    try {\n        com.graphhopper.GraphHopper.importData();\n        com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()));\n    } catch (java.io.IOException ex) {\n        throw new java.lang.RuntimeException((\"Cannot parse OSM file \" + com.graphhopper.GraphHopper.(getOSMFile())) , java.io.IOException);\n    }\n    com.graphhopper.GraphHopper.cleanUp();\n    com.graphhopper.GraphHopper.postProcessing();\n    com.graphhopper.GraphHopper.flush();\n} finally {\n    if (com.graphhopper.storage.Lock != null)\n        com.graphhopper.storage.Lock.release();\n    \n}"},"status":-1},{"failures":[],"tindex":"eb52c5e4-8290-11e5-baa9-5bea5f6a436c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1106","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"baseNode":"min","com.graphhopper.storage.EdgeAccess.NO_NODE":"min"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:243","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.array.TIntArrayList, int);\n}"},"status":-2},{"failures":[27,28,6,11,13,14,15,16,18,20,21,24,26],"tindex":"eb52c5e5-8290-11e5-baa9-d17890cdec0d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"variableMap":{"lastTime":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:300","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[29],"tindex":"eb52c5e6-8290-11e5-baa9-9f03ac58fd70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:209","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n    if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[3,6,11,15,17,18,19,21,24],"tindex":"eb52ecf7-8290-11e5-baa9-1b701819757d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:403","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getLongitude(int)"},"variableMap":{"lon2":"lat","i":"i","points":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:765","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getLatitude(int)"},"status":-1},{"failures":[],"tindex":"eb52ecf8-8290-11e5-baa9-f1a2cc3c1f83","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(\"time\", com.graphhopper.util.Instruction.getTime())"},"variableMap":{"instruction":"instruction","instrJson":"instrJson"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:94","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(\"sign\", com.graphhopper.util.Instruction.getSign())"},"status":0},{"failures":[19,30,31,32],"tindex":"eb52ecf9-8290-11e5-baa9-bb8b3346e6b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:202","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-1},{"failures":[],"tindex":"eb52ecfa-8290-11e5-baa9-c14484cb2492","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:589","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIterator.getDistance()"},"status":-2},{"failures":[],"tindex":"eb53140b-8290-11e5-baa9-c153939f7d2a","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:179","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"eb53140c-8290-11e5-baa9-55bef6dc1bf2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:132","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,1,86,87,88,89,90,91,2,3,4,5,6,7,8,92,10,11,12,93,94,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"eb53140d-8290-11e5-baa9-87f0de1035a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:99","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"eb533b1e-8290-11e5-baa9-d5be56848769","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"initLeafSize":"num"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:75","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"eb533b1f-8290-11e5-baa9-57293b1648ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:67","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.PointList.getSize()"},"status":-2},{"failures":[],"tindex":"eb533b20-8290-11e5-baa9-e7396694e9f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[1,3,4,5,6,7,8,10,11,12,14,15,16,17,18,19,20,21,22,24,26],"tindex":"eb533b21-8290-11e5-baa9-fbed6714d396","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getOsmWayIdSet().size()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:594","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.addTowerNode(com.graphhopper.reader.OSMNode.getId(), double, double, double)"},"status":-1},{"failures":[],"tindex":"eb533b22-8290-11e5-baa9-8d464ed27ca4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:405","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.applyWayTags(com.graphhopper.reader.OSMWay, com.graphhopper.util.EdgeIteratorState)"},"status":0},{"failures":[95,96],"tindex":"eb536233-8290-11e5-baa9-c95749d1f7e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:201","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"variableMap":{"finishedTo":"unfavored","finishedFrom":"unfavored"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"eb536234-8290-11e5-baa9-6723bd7d2bf7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:472","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"variableMap":{"str":"phrase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:132","type":"CtReturnImpl","sourcecode":"return java.lang.String.trim().split(java.lang.String).int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"eb52ecf8-8290-11e5-baa9-f1a2cc3c1f83","diffs":[{"methodsDiff":{"delete":["java.util.Map<java.lang.String, java.lang.Object>.put","com.graphhopper.util.Instruction.getSign"]},"type":"staticDiff"}]},{"transformation":"eb533b22-8290-11e5-baa9-8d464ed27ca4","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.routing.util.AbstractFlagEncoder_void_applyWayTags(com.graphhopper.reader.OSMWay,com.graphhopper.util.EdgeIteratorState).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.routing.util.AbstractFlagEncoder_void_applyWayTags(com.graphhopper.reader.OSMWay,com.graphhopper.util.EdgeIteratorState).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.applyWayTags"]},"type":"staticDiff"}]},{"transformation":"eb533b20-8290-11e5-baa9-e7396694e9f6","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.start"]},"type":"staticDiff"}]}]}