{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":36,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":82,"com.graphhopper.reader.OSMReaderTest.testFerry":104,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":142,"com.graphhopper.routing.QueryGraphTest.testOneWay":97,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":60,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":32,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":128,"com.graphhopper.reader.OSMReaderTest.testWithBounds":112,"com.graphhopper.storage.MMapDataAccessTest.testSegments":5,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":68,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":127,"com.graphhopper.util.BitUtilLittleTest.testToDouble":140,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":138,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":147,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":99,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":74,"com.graphhopper.GraphHopperTest.testPrepare":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":63,"com.graphhopper.reader.OSMReaderTest.testFoot":105,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":41,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":115,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":39,"com.graphhopper.reader.OSMReaderTest.testOneWay":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":118,"com.graphhopper.GraphHopperAPITest.testDisconnected179":98,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":102,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":146,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":75,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":33,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":106,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":107,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":124,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":116,"com.graphhopper.coll.OSMIDMapTest.testGet":135,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":72,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":123,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":143,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":51,"com.graphhopper.GraphHopperTest.testLoadOSM":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":49,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":48,"com.graphhopper.reader.OSMReaderTest.testSort":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":45,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":111,"com.graphhopper.util.GHUtilityTest.testSort2":129,"com.graphhopper.reader.OSMReaderTest.testMain":65,"com.graphhopper.util.BitUtilLittleTest.testToLong":141,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":24,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":0,"com.graphhopper.storage.MMapDataAccessTest.testHeader":4,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":78,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":42,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":30,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":126,"com.graphhopper.coll.OSMIDMapTest.testGet2":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":15,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":108,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":18,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":113,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":35,"com.graphhopper.storage.GraphHopperStorageTest.testClone":125,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":62,"com.graphhopper.GraphHopperTest.testFootAndCar":55,"com.graphhopper.util.BitUtilBigTest.testToFloat":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":1,"com.graphhopper.util.GHUtilityTest.testSort":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":37,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":96,"com.graphhopper.coll.OSMIDMapTest.testGetLong":137,"com.graphhopper.util.BitUtilLittleTest.testToFloat":134,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":119,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":79,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":17,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":139,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":122,"com.graphhopper.util.GHUtilityTest.testSortDirected":132,"com.graphhopper.GraphHopperTest.testPrepareOnly":100,"com.graphhopper.GraphHopperTest.testVia":52,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":69,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":84,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":58,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":9,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":110,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":26,"com.graphhopper.GraphHopperAPITest.testLoad":64,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":16,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":92,"com.graphhopper.GraphHopperTest.testFootOnly":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":21,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":109,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":22,"com.graphhopper.reader.OSMReaderTest.testBarriers":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":120,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":103,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":86,"com.graphhopper.util.GHUtilityTest.testCopy":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":44},"transformations":[{"failures":[],"tindex":"dfa87110-82a9-11e5-b99e-19e3cf14113f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setEndNode(int)"},"variableMap":{"this":"this","nodeTo":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setFromNode(com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[],"tindex":"dfa89821-82a9-11e5-b99e-752b8e489b70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:610","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt((long + int))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"dfa89822-82a9-11e5-b99e-9b579ce81e0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"status":-1},{"failures":[],"tindex":"dfa89823-82a9-11e5-b99e-29801dbb3cb6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"status":0},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"dfa8bf34-82a9-11e5-b99e-9b828f5dedd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:126","type":"CtWhileImpl","sourcecode":"while (true) {\n    com.graphhopper.storage.index.PointEmitter.set(int, int);\n    if ((int == int) && (int == int))\n        break;\n    \n    int int = 2 * int;\n    if (int > (-int)) {\n        int -= int;\n        int += int;\n    } \n    if (int < int) {\n        int += int;\n        int += int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"dfa8bf35-82a9-11e5-b99e-c50b24b3d418","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:996","type":"CtIfImpl","sourcecode":"if (com.graphhopper.GHResponse.hasErrors())\n    return java.util.Collections.emptyList();\n"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:964","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.fromString(java.lang.String);\n} catch (java.lang.Exception ex) {\n    com.graphhopper.GHResponse.addError(java.lang.Exception);\n    return java.util.Collections.emptyList();\n}"},"status":-2},{"failures":[],"tindex":"dfa8bf36-82a9-11e5-b99e-65ef3595515c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:116","type":"CtLocalVariableImpl","sourcecode":"byte byte = ((byte)(1 << 7))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:98","type":"CtLocalVariableImpl","sourcecode":"byte byte = 0"},"status":-2},{"failures":[],"tindex":"dfa8bf37-82a9-11e5-b99e-6104d59db7af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"variableMap":{"tmpDegreeCounter":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"))"},"status":0},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,80,81,82,83,84,85,46,47,48,49,50,51,52,53,54,55,56,57,58,59,86,60,61,62,63,87,88,89,90,91,92,93,94,95,96,97,64,98,65,66,67],"tindex":"dfa8e648-82a9-11e5-b99e-2df0af634724","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"variableMap":{"i":"closestNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:76","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[99,100,101,52,53,54,55,56,57,102,58,59,103,104,105,65,66,67,106,107,108,109,110,111,112,113,114],"tindex":"dfa8e649-82a9-11e5-b99e-7fc5ea605a62","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:311","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)))"},"variableMap":{"item":"item","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:175","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n    if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n        final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n        boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n        if (boolean) {\n            gnu.trove.list.TLongList gnu.trove.list.TLongList = com.graphhopper.reader.OSMWay.getNodes();\n            int int = gnu.trove.list.TLongList.size();\n            for (int int = 0 ; int < int ; int++) {\n                com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int));\n            }\n            if (((++long) % 5000000) == 0) {\n                com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n            } \n        } \n    } \n    if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n        final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n        if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n            com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n        \n        if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n            com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n        \n        if (((++long) % 50000) == 0) {\n            com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    } \n}"},"status":-1},{"failures":[54],"tindex":"dfa90d5a-82a9-11e5-b99e-450325a2de30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:89","type":"CtIfImpl","sourcecode":"if (int == 1)\n    return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1));\nelse if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"status":-1},{"failures":[99,100,52,53,54,55,56,57,102,58,59,103,104,105,65,66,67,106,107,108,109,110,111,112,113,114],"tindex":"dfa90d5b-82a9-11e5-b99e-a5c9bffe26dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:65","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-1},{"failures":[],"tindex":"dfa90d5c-82a9-11e5-b99e-9f436f7dd1c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:73","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"variableMap":{"deltaX":"toLat","maxX":"toLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:30","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":-1},{"failures":[46,47,48,49,50,55,60,61,62,63,87,89,90,91,94,95,115],"tindex":"dfa90d5d-82a9-11e5-b99e-4d17c3329550","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"variableMap":{"closed":"doReverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true);\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3);\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.util.EdgeIteratorState);\n    if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1));\n    else\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2));\n    \n    if ((com.graphhopper.storage.index.QueryResult.getWayIndex()) < 0)\n        throw new java.lang.IllegalStateException((((\"Problem with wayIndex while reversing closest edge:\" + com.graphhopper.util.EdgeIteratorState) + \", \") + com.graphhopper.storage.index.QueryResult));\n    \n} "},"status":-1},{"failures":[],"tindex":"dfa9346e-82a9-11e5-b99e-a50ecec61258","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:281","type":"CtIfImpl","sourcecode":"if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n    continue;\n} "},"status":0},{"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,54,66],"tindex":"dfa9346f-82a9-11e5-b99e-b11cb0ea0b48","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:482","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setAdditionalField(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getAdditionalField())"},"variableMap":{"from":"from","to":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags())"},"status":-1},{"failures":[133,134],"tindex":"dfa93470-82a9-11e5-b99e-bd1387ad10ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:102","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], java.lang.Float.floatToRawIntBits(float), int)"},"status":-1},{"failures":[],"tindex":"dfa93471-82a9-11e5-b99e-8503c55cac9f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:320","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"variableMap":{"initialized":"binary"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:229","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    javax.xml.stream.XMLStreamReader.close();\n"},"status":-2},{"failures":[135,136,137,138,139,140,141],"tindex":"dfa93472-82a9-11e5-b99e-51e07230e690","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:82","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(long))"},"status":-1},{"failures":[142,143,144,145,146,147,148],"tindex":"dfa93473-82a9-11e5-b99e-9f478f8cf2d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:132","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"dfa8bf37-82a9-11e5-b99e-6104d59db7af","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags","java.util.Map<java.lang.String, java.lang.Integer>.get"]},"type":"staticDiff"}]}]}