{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":24,"com.graphhopper.reader.OSMReaderTest.testFerry":91,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":46,"com.graphhopper.routing.QueryGraphTest.testOneWay":31,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":33,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":68,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":65,"com.graphhopper.reader.OSMReaderTest.testWithBounds":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":58,"com.graphhopper.coll.CompressedArrayTest.testCompress":84,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":15,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":29,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":86,"com.graphhopper.GraphHopperTest.testPrepare":88,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":9,"com.graphhopper.util.InstructionListTest.testWayList2":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":12,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":6,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":32,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":77,"com.graphhopper.util.InstructionListTest.testWayList":54,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":78,"com.graphhopper.reader.OSMReaderTest.testOneWay":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":19,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":53,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":36,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":64,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":95,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":57,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":96,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":21,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":35,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":60,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":34,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":71,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":89,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":38,"com.graphhopper.GraphHopperTest.testLoadOSM":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.reader.OSMReaderTest.testSort":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":20,"com.graphhopper.reader.OSMReaderTest.testMain":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":82,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":69,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":51,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":59,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":10,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":18,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":30,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":8,"com.graphhopper.GraphHopperTest.testFootAndCar":26,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":27,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":40,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":85,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":47,"com.graphhopper.GraphHopperTest.testPrepareOnly":41,"com.graphhopper.coll.CompressedArrayTest.testCompress2":83,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":44,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":99,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":90,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":79,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":25,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":56,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":98,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":28,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":22,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":61,"com.graphhopper.util.InstructionListTest.testFind":52,"com.graphhopper.reader.OSMReaderTest.testBarriers":94,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":7},"transformations":[{"failures":[],"tindex":"822b0cb2-8272-11e5-b22c-b5970aa43b2f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:117","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.RoundaboutInstruction.getTurnAngle()"},"variableMap":{"this":"nextInstr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:180","type":"CtLocalVariableImpl","sourcecode":"double double = boolean ? com.graphhopper.util.Instruction.getFirstLat() : com.graphhopper.util.PointList.getLatitude((int + 1))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"822b33c3-8272-11e5-b22c-af5a1200e077","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:361","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.reverse()"},"variableMap":{"clonePL":"fullPL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:343","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointList, int);\n}"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,9,21,10],"tindex":"822b33c4-8272-11e5-b22c-c9d781d5e2ea","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"endNode","edgeId":"tmpEdge","nextEdgeId":"endNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:46","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int))), false)"},"status":-1},{"failures":[22],"tindex":"822b33c5-8272-11e5-b22c-8bc5b93ba195","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:752","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"class:bicycle:\" + (java.lang.String.toString())"},"variableMap":{"specificBicycleClass":"minStr","subkey":"minStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:495","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"status":-1},{"failures":[23,24,25],"tindex":"822b33c6-8272-11e5-b22c-8725726d5267","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"variableMap":{"allBits":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.storage.EdgeEntry.int, int), com.graphhopper.storage.EdgeEntry, int)"},"status":-1},{"failures":[4,26,11,27,28,29,30,5,6,31,32,8,9],"tindex":"822b33c7-8272-11e5-b22c-419cee181ed1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:155","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"variableMap":{"closestEdge":"closestEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"status":-1},{"failures":[33,34,35],"tindex":"822b5ad8-8272-11e5-b22c-0bbc5e8f80e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:236","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.putByte((((long) + long) + int), byte[][int]);\n}"},"status":-1},{"failures":[],"tindex":"822b5ad9-8272-11e5-b22c-fbf6a1f81bc5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1061","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.clearUnfavoredStatus()"},"status":-2},{"failures":[],"tindex":"822b5ada-8272-11e5-b22c-47faf165f447","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:77","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.CHEdgeIteratorState == null"},"status":-2},{"failures":[36,37,38,39,40],"tindex":"822b5adb-8272-11e5-b22c-833752cc2511","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"indicesCopy"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:242","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"status":-1},{"failures":[41,42,43,44,45,46,47,48,49,50,51],"tindex":"822b5adc-8272-11e5-b22c-ef224693607b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:146","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0) {\n            return false;\n        } \n        byte[] byte[] = new byte[int];\n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        int[][] = new int[int][];\n        for (int int = 0 ; int < int ; int++) {\n            int int = (java.io.RandomAccessFile.read(byte[])) / 4;\n            int[] int[] = new int[int];\n            for (int int = 0 ; int < int ; int++) {\n                int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4));\n            }\n            int[][][int] = int[];\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-1},{"failures":[],"tindex":"822b81ed-8272-11e5-b22c-7be31c1c4970","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:166","type":"CtLocalVariableImpl","sourcecode":"double double = double / double"},"variableMap":{"dx":"maxLon","dy":"maxLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"822b81ee-8272-11e5-b22c-69001d7241b8","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"acceptBit","start":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:218","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"822b81ef-8272-11e5-b22c-2ff974ae2c6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:287","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(0)"},"status":-2},{"failures":[52,53,54,55,56,1,57,58,59,60,61,62,63,64],"tindex":"822b81f0-8272-11e5-b22c-5744bbe67aa6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"nEdge","edgeEntry":"nEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:97","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double)"},"status":-1},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],"tindex":"822b81f1-8272-11e5-b22c-31e0380cd019","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"i","tmpSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:176","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":-1},{"failures":[36,37,38,39,85,40],"tindex":"822b81f2-8272-11e5-b22c-296ba6217288","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:195","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    int int = com.graphhopper.storage.DataAccess.getInt(long);\n    com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double);\n    if (double < double) {\n        com.graphhopper.storage.DataAccess.setInt(long, int);\n    } \n} else {\n    com.graphhopper.storage.DataAccess.setInt(long, int);\n    com.graphhopper.coll.GHBitSet.add(int);\n}"},"status":-1},{"failures":[86,87,4,88,89,90,42,43,44,11,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"822ba903-8272-11e5-b22c-6b16d6ac9f3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:61","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"clockwise":"nextPillarId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:598","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(com.graphhopper.reader.OSMNode.getId(), ((int) + 3))"},"status":-1},{"failures":[],"tindex":"822ba904-8272-11e5-b22c-596244eb35bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:641","type":"CtAssignmentImpl","sourcecode":"double = (((double) * 2) + long) / 3"},"status":0},{"failures":[],"tindex":"822ba905-8272-11e5-b22c-3feee886c8a4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"storedKey"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:120","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.storage.VLongStorage.readVLong()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"822ba904-8272-11e5-b22c-596244eb35bd","diffs":[{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.coll.IntDoubleBinHeap_boolean_update_(double,int).e1","com.graphhopper.storage.CHGraphImpl$CHEdgeIteratorImpl_boolean_canBeOverwritten(long).b","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).e4","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).e2","com.graphhopper.routing.ch.PrepareEncoder_boolean_canBeOverwritten(long,long).b","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).t1","com.graphhopper.routing.ch.PrepareContractionHierarchies_int_addShortcuts(int).e3"]},"type":"branch"}]}]}