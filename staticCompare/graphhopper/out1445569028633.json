{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":8,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":17,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":89,"com.graphhopper.routing.PathTest.testFindInstruction":3,"com.graphhopper.reader.OSMReaderTest.testFerry":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":19,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":5,"com.graphhopper.routing.QueryGraphTest.testOneWay":16,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":27,"com.graphhopper.reader.OSMReaderTest.testWithBounds":64,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":105,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":4,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":34,"com.graphhopper.GraphHopperTest.testPrepare":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":28,"com.graphhopper.util.InstructionListTest.testWayList2":117,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":100,"com.graphhopper.reader.OSMReaderTest.testFoot":54,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":14,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":93,"com.graphhopper.util.InstructionListTest.testWayList":115,"com.graphhopper.reader.OSMReaderTest.testOneWay":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":24,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":113,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.util.PointListTest.testAddPL":111,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":49,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":86,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":58,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":77,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":99,"com.graphhopper.GraphHopperTest.testLoadOSM":48,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":87,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":79,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":38,"com.graphhopper.reader.OSMReaderTest.testSort":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":106,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":37,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":97,"com.graphhopper.reader.OSMReaderTest.testMain":55,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":9,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":76,"com.graphhopper.util.PointListTest.testReverse":112,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":104,"com.graphhopper.routing.PathTest.testWayList":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":32,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":68,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":71,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":26,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":107,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":110,"com.graphhopper.GraphHopperTest.testFootAndCar":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":121,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":90,"com.graphhopper.util.InstructionListTest.testCreateGPX":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":70,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":12,"com.graphhopper.GraphHopperTest.testPrepareOnly":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":33,"com.graphhopper.GraphHopperTest.testVia":43,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":6,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":50,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":62,"com.graphhopper.util.DouglasPeuckerTest.testParse":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":78,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":69,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":10,"com.graphhopper.GraphHopperTest.testFootOnly":51,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":74,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":75,"com.graphhopper.reader.OSMReaderTest.testBarriers":57,"com.graphhopper.util.InstructionListTest.testFind":114,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":67,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":119},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"c003a1bd-7931-11e5-8537-05d283308580","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:134","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[107,108,109,110],"tindex":"c003c8ce-7931-11e5-8537-733753d07cfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:433","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[58,59,119,120,121],"tindex":"c003c8cf-7931-11e5-8537-2f656ec3c9b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"variableMap":{"maxLat":"lat","lat":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.update(double, double)"},"status":-1},{"failures":[],"tindex":"c003c8d0-7931-11e5-8537-09dd89021649","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"oldValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHSortedCollection.remove(int, int)"},"status":-2},{"failures":[],"tindex":"c003c8d1-7931-11e5-8537-a17cc45abade","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:89","type":"CtOperatorAssignmentImpl","sourcecode":"long += byte[].int"},"status":-2},{"failures":[],"tindex":"c003c8d2-7931-11e5-8537-bb5a5a759ab9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:180","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.storage.DataAccess.getHeader((6 * 4)))"},"status":-2},{"failures":[],"tindex":"c003efe3-7931-11e5-8537-ad164c581a85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.close()"},"status":-2},{"failures":[],"tindex":"c003efe4-7931-11e5-8537-1f7ef3cb0445","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:480","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"P\"))\n    return 0;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:96","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Integer.parseInt(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"status":-2},{"failures":[],"tindex":"c003efe5-7931-11e5-8537-b937d7cb0232","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:665","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"variableMap":{"ghLocation":"highway","osmFile":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:150","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-2},{"failures":[],"tindex":"c003efe6-7931-11e5-8537-772b77227b87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:255","type":"CtAssignmentImpl","sourcecode":"double = 30"},"variableMap":{"speed":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:71","type":"CtAssignmentImpl","sourcecode":"double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize())"},"status":-2},{"failures":[],"tindex":"c003efe7-7931-11e5-8537-0ff1fdd259df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"c003efe8-7931-11e5-8537-d1171bb6b009","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"variableMap":{"offset":"i","bytes":"shifts","value":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:207","type":"CtAssignmentImpl","sourcecode":"byte[][int] = com.graphhopper.storage.index.LocationIndexTree.getShift(int[][int])"},"status":-2},{"failures":[],"tindex":"c003efe9-7931-11e5-8537-c34d8f63085e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:303","type":"CtIfImpl","sourcecode":"if (java.lang.String.trim().isEmpty())\n    continue;\n"},"variableMap":{"d":"tt"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:171","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        java.lang.Integer = java.lang.Integer;\n    \n} "},"status":-2},{"failures":[],"tindex":"c00416fa-7931-11e5-8537-b32f21dadc5c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:790","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.parseBoolean(java.lang.String)"},"variableMap":{"val":"sacScale"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:192","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"status":-2},{"failures":[],"tindex":"c00416fb-7931-11e5-8537-4905955b0669","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:237","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"c00416fc-7931-11e5-8537-c50715557584","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:100","type":"CtTryImpl","sourcecode":"try {\n    long = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.reallocateMemory(long, long);\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)));\n}"},"status":-2},{"failures":[],"tindex":"c00416fd-7931-11e5-8537-db554ab3e468","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:67","type":"CtReturnImpl","sourcecode":"return java.lang.Math.atan2((double - double), (double * (double - double)))"},"variableMap":{"lat1":"maxSpeed","lat2":"maxSpeed","lon1":"maxSpeed","lon2":"maxSpeed","shrinkFactor":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:375","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"c00416fe-7931-11e5-8537-b90b9e97fae7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"lonSize","end":"latSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:132","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.initAlgo(int, int)"},"status":-2},{"failures":[],"tindex":"c00416ff-7931-11e5-8537-896e5591e8da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:208","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:615","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.process(java.lang.String)"},"status":-2},{"failures":[],"tindex":"c0041700-7931-11e5-8537-a1b2041dc549","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:996","type":"CtIfImpl","sourcecode":"if (com.graphhopper.GHResponse.hasErrors())\n    return java.util.Collections.emptyList();\n"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:964","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.fromString(java.lang.String);\n} catch (java.lang.Exception ex) {\n    com.graphhopper.GHResponse.addError(java.lang.Exception);\n    return java.util.Collections.emptyList();\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}