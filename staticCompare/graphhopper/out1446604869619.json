{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":23,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":177,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":345,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":49,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":11,"com.graphhopper.reader.OSMReaderTest.testFerry":74,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":340,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":341,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":134,"com.graphhopper.routing.QueryGraphTest.testOneWay":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":312,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":104,"com.graphhopper.reader.OSMReaderTest.testWithBounds":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":21,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":139,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":277,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":187,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":90,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":55,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":160,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":36,"com.graphhopper.GraphHopperTest.testPrepare":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":263,"com.graphhopper.util.EdgeWrapperTest.testPut":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":285,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":148,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":216,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":117,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":228,"com.graphhopper.util.InstructionListTest.testWayList":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":118,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":335,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":333,"com.graphhopper.GraphHopperAPITest.testDisconnected179":73,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":17,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":105,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":355,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":132,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":197,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":80,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":279,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":26,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":37,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":64,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":206,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":271,"com.graphhopper.GraphHopperTest.testLoadOSM":67,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":106,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":220,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":293,"com.graphhopper.reader.OSMReaderTest.testSort":77,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":119,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":308,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":225,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":157,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":233,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":248,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":181,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":195,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":123,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":198,"com.graphhopper.storage.MMapDataAccessTest.testCopy":41,"com.graphhopper.routing.PathTest.testWayList":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":303,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":319,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":103,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":172,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":305,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":290,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":101,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":326,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":53,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":131,"com.graphhopper.util.GHUtilityTest.testSort":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":109,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":323,"com.graphhopper.coll.IntIntBinHeapTest.testSize":354,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":146,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":280,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":244,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":267,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":236,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":289,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":183,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":234,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":9,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":218,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":241,"com.graphhopper.GraphHopperAPITest.testLoad":72,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":264,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":185,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":202,"com.graphhopper.reader.OSMReaderTest.testBarriers":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":31,"com.graphhopper.routing.PathTest.testFound":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":309,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":71,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":342,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":170,"com.graphhopper.util.GHUtilityTest.testCopy":329,"com.graphhopper.routing.PathTest.testFindInstruction":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":251,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":260,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":209,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":242,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":226,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":52,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":273,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":300,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":262,"com.graphhopper.reader.PrinctonReaderTest.testRead":196,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":16,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":159,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":297,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":314,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":350,"com.graphhopper.util.InstructionListTest.testWayList2":337,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":95,"com.graphhopper.reader.OSMReaderTest.testFoot":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":111,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":240,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":231,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":50,"com.graphhopper.reader.OSMReaderTest.testOneWay":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":255,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":295,"com.graphhopper.coll.IntIntBinHeapTest.testClear":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":182,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":306,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":299,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":222,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":259,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":25,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":201,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":208,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":315,"com.graphhopper.routing.PathBidirRefTest.testExtract":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":151,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":237,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":62,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":339,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":193,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":292,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":281,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":59,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":115,"com.graphhopper.util.GHUtilityTest.testSort2":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":283,"com.graphhopper.reader.OSMReaderTest.testMain":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":39,"com.graphhopper.routing.PathBidirRefTest.testExtract2":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":316,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":112,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":184,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":102,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":221,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":353,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":310,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":38,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":269,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":178,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":107,"com.graphhopper.storage.GraphHopperStorageTest.testClone":204,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":232,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":313,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":212,"com.graphhopper.GraphHopperTest.testFootAndCar":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":282,"com.graphhopper.routing.PathTest.testTime":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":301,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":253,"com.graphhopper.util.GHUtilityTest.testSortDirected":331,"com.graphhopper.GraphHopperTest.testPrepareOnly":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":304,"com.graphhopper.GraphHopperTest.testVia":44,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":245,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":173,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":45,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":138,"com.graphhopper.GraphHopperTest.testFootOnly":70,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":338,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":46,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":82,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":24,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":127,"com.graphhopper.util.InstructionListTest.testFind":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":296},"transformations":[{"failures":[],"tindex":"815b51b5-829d-11e5-9c7b-9bd1bd5c722e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:339","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"variableMap":{"wayIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:208","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"815b78c6-829d-11e5-9c7b-b774d93b170f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:381","type":"CtForEachImpl","sourcecode":"for (java.nio.ByteBuffer java.nio.ByteBuffer : java.util.List<java.nio.ByteBuffer>) {\n    long += java.nio.ByteBuffer.capacity();\n}"},"status":-1},{"failures":[43],"tindex":"815b78c7-829d-11e5-9c7b-a3d340bb9d64","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"variableMap":{"keys":"weights","i":"ref","child":"ref"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:66","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-1},{"failures":[44,45,46,47,48,49,50],"tindex":"815b78c8-829d-11e5-9c7b-051527252000","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"variableMap":{"bits":"parts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"status":-1},{"failures":[],"tindex":"815b78c9-829d-11e5-9c7b-3fbe3981219f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:76","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,44,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,46,95,96,97,98,99,100,101,102,103,104,105,106,107,49,108,109,110,111,112,113,114,115],"tindex":"815b78ca-829d-11e5-9c7b-7dd644a68e82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:320","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((64 * 1024))"},"status":-1},{"failures":[44],"tindex":"815b9fdb-829d-11e5-9c7b-81e5a80c9369","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHResponse:215","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.InstructionList) == null)\n    throw new java.lang.IllegalArgumentException(\"To access instructions you need to enable creation before routing\");\n"},"variableMap":{"instructions":"fullInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:84","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction)"},"status":-1},{"failures":[],"tindex":"815b9fdc-829d-11e5-9c7b-a17ff4200a7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:39","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.SimpleIntDeque.pop()"},"status":-2},{"failures":[116,117,118,119,120],"tindex":"815b9fdd-829d-11e5-9c7b-0da5daff1a67","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"time","mask":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:56","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-1},{"failures":[],"tindex":"815b9fde-829d-11e5-9c7b-b953ca927cc0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:90","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType == null)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType;\n"},"variableMap":{"type":"com.graphhopper.storage.DAType.RAM_INT","defaultType":"com.graphhopper.storage.DAType.RAM_INT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:59","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring()) {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n} else {\n    com.graphhopper.storage.GHDirectory.put(\"locationIndex\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"edges\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n    com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType);\n}"},"status":-2},{"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,116,165,117,166,167,168,169,170,171,172,51,118,173,174,119,52,53,175,176,54,177,178,179,180,181,120,182,183,184,185,186,187,188,189,190,191,192,193,55,56,57,58,59,60,61,62,194,44,63,64,65,66,67,68,69,70,71,72,73,195,74,75,76,77,78,79,80,81,82,83,84,85,86,87,196,197,198,0,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,88,89,45,90,91,92,93,94,46,95,96,233,47,97,98,99,100,101,102,2,3,4,5,6,234,235,236,237,238,239,48,103,104,105,106,107,49,108,109,240,50,110,111,112,113,114,115,241,242,243,244,245,246,7,8,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,10,11,12,13,14,15,16,282,17,18,20,21,283,22,23,24,25,26,27,29,30,31,32,33,34,284,35,36,285,286,287,37,38,288,289,290,291,292,40,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"815bc6ef-829d-11e5-9c7b-ff70d3fb36c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"integ","nodeCount":"integ"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:85","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException((((\"Distance cannot be empty: \" + double) + \", maybe overflow issue? integer: \") + int));\n"},"status":-1},{"failures":[185],"tindex":"815bc6f0-829d-11e5-9c7b-3b796aa1f57f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"removedEdges","tmp":"removedEdges","segmentSizeInBytes":"min"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:245","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.array.TIntArrayList, int)"},"status":-1},{"failures":[342,343,344,345,346,347,348,56,65,70,71,74,75,76,77,79,80,81,82,85,86,87],"tindex":"815bc6f1-829d-11e5-9c7b-9bc023e6d1da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:343","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[],"tindex":"815bee02-829d-11e5-9c7b-e10bf76e96d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:742","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\n"},"variableMap":{"updatedA":"adjNode","nodeA":"tmpEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[4],"tindex":"815bee03-829d-11e5-9c7b-4bda4577de46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:255","type":"CtIfImpl","sourcecode":"if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n    int = int;\n    int = int + (int);\n} "},"status":-1},{"failures":[349,350],"tindex":"815bee04-829d-11e5-9c7b-75ed24ef0f92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:142","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"815bee05-829d-11e5-9c7b-e12db5b33861","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"variableMap":{"size":"fromNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:176","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getOtherNode(int, long)"},"status":-2},{"failures":[170,52,53,54,120,57,58,59,60,61,62,44,65,70,72],"tindex":"815bee06-829d-11e5-9c7b-db089e7f6990","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:403","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"origEdgeId","b":"origEdgeId","baseGraph":"mainGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:567","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"status":-1},{"failures":[123,124,127,128,131,132,150,154,156,158,159,163,164,116,165,117,166,167,168,170,171,172,51,118,173,174,119,52,53,175,176,54,179,180,181,120,57,58,59,60,61,62,44,63,64,65,66,67,69,70,72,73,334,335,336,337,338],"tindex":"815bee07-829d-11e5-9c7b-7d0d0db0e235","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[351,352,353,354,355],"tindex":"815c1518-829d-11e5-9c7b-83093d179406","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"value","retBucket":"value","i":"i","bucketSize":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:216","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}