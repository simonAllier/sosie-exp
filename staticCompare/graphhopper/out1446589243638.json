{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":26,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":60,"com.graphhopper.reader.OSMReaderTest.testMain":54,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":15,"com.graphhopper.reader.OSMReaderTest.testFerry":53,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":46,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":1,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":22,"com.graphhopper.util.BitUtilBigTest.testFromBitString":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":23,"com.graphhopper.storage.VLongStorageTest.testWrite":30,"com.graphhopper.reader.OSMReaderTest.testWithBounds":61,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":16,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":58,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":10,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":2,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":0,"com.graphhopper.coll.CompressedArrayTest.testCompress":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":14,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":40,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":24,"com.graphhopper.GraphHopperTest.testPrepare":19,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":25,"com.graphhopper.reader.OSMReaderTest.testFoot":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":13,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":27,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":4,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":28,"com.graphhopper.reader.OSMReaderTest.testOneWay":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":42,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":50,"com.graphhopper.coll.CompressedArrayTest.testCompress2":32,"com.graphhopper.GraphHopperTest.testPrepareOnly":45,"com.graphhopper.GraphHopperTest.testVia":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":39,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":51,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":35,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":56,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":3,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":57,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":47,"com.graphhopper.GraphHopperTest.testFootOnly":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":43,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":41,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":12,"com.graphhopper.reader.OSMReaderTest.testBarriers":34,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":9,"com.graphhopper.GraphHopperTest.testLoadOSM":48,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":8,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":17,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":29,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":31,"com.graphhopper.reader.OSMReaderTest.testSort":55},"transformations":[{"failures":[0,1,2,3,4],"tindex":"1f8bb023-8279-11e5-86e5-232361e08276","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:363","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"variableMap":{"segmentSizeInBytes":"segmentSizePower","length":"segmentSizePower","index":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:252","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[5,6,7,8,9,10,11],"tindex":"1f8bb024-8279-11e5-86e5-fbd4f8487d3d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"allowed","flags":"allowed","dir":"allowed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:283","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"1f8bd735-8279-11e5-86e5-9b66f8b0e58c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:138","type":"CtIfImpl","sourcecode":"if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[],"tindex":"1f8bd736-8279-11e5-86e5-197cbdf459bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:99","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-\")) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:149","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.(getMemRef()) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef))\n    java.lang.String = \"RAM\";\nelse\n    java.lang.String = \"UNSAFE\";\n"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"1f8bd737-8279-11e5-86e5-8bd3dfba9be1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"index","end":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:245","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromShort(byte[][][int], short, int)"},"status":-1},{"failures":[],"tindex":"1f8bd738-8279-11e5-86e5-6b5a1298ddac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:869","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:202","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,5,21,22,23,24,25,26,27,28],"tindex":"1f8bd739-8279-11e5-86e5-b3bb214550e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:38","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - double))"},"variableMap":{"fromHeight":"b_lon_deg","toHeight":"b_lon_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:180","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-1},{"failures":[29],"tindex":"1f8bfe4a-8279-11e5-86e5-ff0d7a43eced","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"allSegments","nodeCount":"allSegments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"status":-1},{"failures":[],"tindex":"1f8bfe4b-8279-11e5-86e5-910c1cc1caea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:178","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:73","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = java.io.StringWriter.toString().getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"1f8bfe4c-8279-11e5-86e5-515897a4c323","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:110","type":"CtReturnImpl","sourcecode":"return int * (int)"},"variableMap":{"retBucket":"hash","bucketSize":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"1f8bfe4d-8279-11e5-86e5-55901f2caa55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"a_lat_deg","weight":"r_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:147","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist(double, double, double, double)"},"status":0},{"failures":[30,31,32,33],"tindex":"1f8bfe4e-8279-11e5-86e5-71b6c8ef8c3c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:132","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[34,35],"tindex":"1f8bfe4f-8279-11e5-86e5-2beae0266a1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:872","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-1},{"failures":[36],"tindex":"1f8c4c70-8279-11e5-86e5-b7a4332ffe8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"bLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:96","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    byte byte = 0;\n    for (int int = 0 ; int < 8 ; int++) {\n        byte <<= 1;\n        if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n            byte |= 1;\n        \n        int++;\n    }\n    byte[][int] = byte;\n}"},"status":-1},{"failures":[37,38,39,40,41,42,43],"tindex":"1f8c4c71-8279-11e5-86e5-8bb253b7a785","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"priority","index":"polledNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:315","type":"CtIfImpl","sourcecode":"if (int > (com.graphhopper.coll.GHTreeMapComposed.peekValue())) {\n    com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n    com.graphhopper.util.StopWatch.stop();\n    continue;\n} "},"status":-1},{"failures":[6],"tindex":"1f8c4c72-8279-11e5-86e5-6d6115c07211","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:883","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.ShortestWeighting(com.graphhopper.routing.util.FlagEncoder)"},"variableMap":{"encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:887","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap)"},"status":-1},{"failures":[],"tindex":"1f8c4c73-8279-11e5-86e5-9f2f58322172","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setAdditionalNodeField(int, int)"},"variableMap":{"nodeAccess":"nodeAccess","newEntryIndex":"com.graphhopper.reader.OSMReader.TOWER_NODE","viaNode":"graphIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:870","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int)) {\n    int = (-int) - 3;\n    com.graphhopper.reader.OSMNode = new com.graphhopper.reader.OSMNode(com.graphhopper.reader.OSMReader.createNewNodeId() , com.graphhopper.storage.NodeAccess , int);\n} else {\n    int = int - 3;\n    com.graphhopper.reader.OSMNode = new com.graphhopper.reader.OSMNode(com.graphhopper.reader.OSMReader.createNewNodeId() , com.graphhopper.reader.PillarInfo , int);\n}"},"status":-2},{"failures":[],"tindex":"1f8c7384-8279-11e5-86e5-d7e4de81de3a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:196","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"variableMap":{"str":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:149","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"status":-2},{"failures":[44,45,46,18,19,20,5,47,48,49,50,51,6,52,53,7,54,55,34,56,57,58,59,35,60,61,62,63],"tindex":"1f8c7385-8279-11e5-86e5-2100cf58e6b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:612","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(load(java.lang.String))) {\n    com.graphhopper.GraphHopper.printInfo();\n    com.graphhopper.GraphHopper.process(java.lang.String);\n} else {\n    com.graphhopper.GraphHopper.printInfo();\n}"},"variableMap":{"ghLocation":"graphHopperLocation","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:630","type":"CtTryImpl","sourcecode":"try {\n    if (com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) {\n        com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n        com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, true);\n        if (!(com.graphhopper.storage.Lock.tryLock()))\n            throw new java.lang.RuntimeException((\"To avoid multiple writers we need to obtain a write lock but it failed. In \" + java.lang.String) , com.graphhopper.storage.Lock.getObtainFailedReason());\n        \n    } \n    try {\n        com.graphhopper.GraphHopper.importData();\n        com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()));\n    } catch (java.io.IOException ex) {\n        throw new java.lang.RuntimeException((\"Cannot parse OSM file \" + com.graphhopper.GraphHopper.(getOSMFile())) , java.io.IOException);\n    }\n    com.graphhopper.GraphHopper.cleanUp();\n    com.graphhopper.GraphHopper.postProcessing();\n    com.graphhopper.GraphHopper.flush();\n} finally {\n    if (com.graphhopper.storage.Lock != null)\n        com.graphhopper.storage.Lock.release();\n    \n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1f8bfe4d-8279-11e5-86e5-55901f2caa55","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.DistanceCalcEarth.calcNormalizedDist"]},"type":"staticDiff"}]}]}