{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":164,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":80,"com.graphhopper.GraphHopperAPITest.testNoLoad":29,"com.graphhopper.routing.PathTest.testFindInstruction":24,"com.graphhopper.reader.OSMReaderTest.testFerry":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":120,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":64,"com.graphhopper.util.InstructionListTest.testEmptyList":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":134,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":137,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":110,"com.graphhopper.reader.OSMReaderTest.testWithBounds":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":151,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":119,"com.graphhopper.GraphHopperTest.testPrepare":66,"com.graphhopper.util.InstructionListTest.testWayList2":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":141,"com.graphhopper.reader.OSMReaderTest.testFoot":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":126,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":162,"com.graphhopper.util.HelperTest.testGetLocale":43,"com.graphhopper.util.InstructionListTest.testWayList":48,"com.graphhopper.reader.OSMReaderTest.testOneWay":42,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":135,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":108,"com.graphhopper.GraphHopperAPITest.testDisconnected179":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":115,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":15,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":113,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":72,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":112,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":150,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":127,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":132,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":26,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":35,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":55,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":22,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":86,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":142,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":161,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":18,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":101,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":147,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":63,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":152,"com.graphhopper.GraphHopperTest.testLoadOSM":70,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":62,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":61,"com.graphhopper.reader.OSMReaderTest.testSort":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":103,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":136,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":139,"com.graphhopper.reader.OSMReaderTest.testMain":32,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":149,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":121,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":4,"com.graphhopper.routing.PathTest.testWayList":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":124,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":82,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":118,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":133,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":163,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":148,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":138,"com.graphhopper.GraphHopperTest.testFootAndCar":68,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":6,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.PathTest.testTime":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":129,"com.graphhopper.util.InstructionListTest.testCreateGPX":51,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":156,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":102,"com.graphhopper.GraphHopperTest.testPrepareOnly":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":116,"com.graphhopper.GraphHopperTest.testVia":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":79,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":73,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":96,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":49,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":111,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":38,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":78,"com.graphhopper.GraphHopperAPITest.testLoad":27,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":69,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":53,"com.graphhopper.util.TranslationMapTest.testToString":54,"com.graphhopper.GraphHopperTest.testFootOnly":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":143,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":107,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":83,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":37,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":105,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":21,"com.graphhopper.reader.OSMReaderTest.testBarriers":34,"com.graphhopper.util.InstructionListTest.testFind":44,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":160,"com.graphhopper.routing.PathTest.testFound":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":128,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":75,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":114},"transformations":[{"failures":[],"tindex":"867e77f0-8283-11e5-865a-99fb0f0ef4b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:43","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.clear()"},"status":-2},{"failures":[0,1],"tindex":"867e9f01-8283-11e5-865a-4b94848df787","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:145","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[2,3,4,5],"tindex":"867e9f02-8283-11e5-865a-edadfa489ebc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:269","type":"CtIfImpl","sourcecode":"if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n    int = int + (int);\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"867e9f03-8283-11e5-865a-c59ea7d1bec1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"variableMap":{"length":"visitedCount","factor":"visitedCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:178","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"867e9f04-8283-11e5-865a-fb0bfd22caf0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"nodesCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:702","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,1,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"867e9f05-8283-11e5-865a-373ebc7f370a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:45","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.io.File(\"\").getAbsolutePath()"},"variableMap":{"_location":"param"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:71","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(\"-\", \"_\")"},"status":-1},{"failures":[77,78,79,80,81],"tindex":"867e9f06-8283-11e5-865a-83735add9931","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[44],"tindex":"867ec617-8283-11e5-865a-e9ed9e562471","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:316","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"867ec618-8283-11e5-865a-6bec7d40c18e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:590","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMNode.getLon()"},"status":-2},{"failures":[32,35,36,74],"tindex":"867ec619-8283-11e5-865a-33b4822518f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:680","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException(\"Turn costs cannot be negative\");\n"},"variableMap":{"costs":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:778","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.is3D())\n    com.graphhopper.util.PointList.add(double, double, double);\nelse\n    com.graphhopper.util.PointList.add(double, double);\n"},"status":-1},{"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,42],"tindex":"867ec61a-8283-11e5-865a-a32c8f63ced5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:242","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"variableMap":{"indicesCopy":"removedNodes","filledIndices":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"status":-1},{"failures":[],"tindex":"867ec61b-8283-11e5-865a-07d268493aaa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,27,58,59,60,61,62,63,65,66,67,68,69,70,73,74],"tindex":"867ec61c-8283-11e5-865a-5fdd3940b124","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:211","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[],"tindex":"867eed2d-8283-11e5-865a-65944ffee40e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:243","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.isInfinite(double)) || (java.lang.Double.isNaN(double))) || (double < 0))\n    throw new java.lang.IllegalStateException((\"Invalid speed stored in edge! \" + double));\n"},"variableMap":{"speed":"azimuth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:147","type":"CtIfImpl","sourcecode":"if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":0},{"failures":[],"tindex":"867eed2e-8283-11e5-865a-3998488c8ef1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:176","type":"CtLocalVariableImpl","sourcecode":"double double = double + double"},"variableMap":{"gradient":"java.lang.Double.NaN","yend":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"status":-2},{"failures":[153,154,155,156,157],"tindex":"867eed2f-8283-11e5-865a-cd544d2759f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:80","type":"CtLocalVariableImpl","sourcecode":"long long = (long) * 2"},"variableMap":{"size":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:649","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[],"tindex":"867eed30-8283-11e5-865a-011305d42d09","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:188","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setNodeBitMask((int - (int)), int)"},"variableMap":{"nextNodeBit":"maxCount","usedBits":"removedEdges","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:178","type":"CtIfImpl","sourcecode":"if (int < (gnu.trove.list.array.TIntArrayList.size())) {\n    int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.TIntList, int);\n    int = gnu.trove.list.array.TIntArrayList.size();\n    gnu.trove.list.TIntList = gnu.trove.list.array.TIntArrayList;\n} else {\n    int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.array.TIntArrayList, int);\n}"},"status":-2},{"failures":[158,159,160,161,162],"tindex":"867eed31-8283-11e5-865a-e77072769cec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:190","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.write(byte[])"},"status":-1},{"failures":[45],"tindex":"867eed32-8283-11e5-865a-4952b4747424","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:132","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.storage.EdgeEntry) == null) || com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded())) || (!com.graphhopper.routing.Dijkstra.(finished())))\n    return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n"},"status":-1},{"failures":[163,164,131,134,137,138,141,145,58,59,60,61,62,65,66,67,68,69,70,73],"tindex":"867f1443-8283-11e5-865a-4f6a378b8b8f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:614","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + (com.graphhopper.routing.QueryGraph.int)))"},"variableMap":{"com.graphhopper.routing.QueryGraph.VE_BASE_REV":"edgeId","virtualEdges":"virtualEdges","i":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:570","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}