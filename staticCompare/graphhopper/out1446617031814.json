{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":95,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":34,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":42,"com.graphhopper.routing.PathTest.testFindInstruction":20,"com.graphhopper.routing.QueryGraphTest.testOneWay":41,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":89,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":93,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":37,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":53,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":86,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":66,"com.graphhopper.GraphHopperTest.testPrepare":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":51,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":28,"com.graphhopper.util.InstructionListTest.testWayList2":46,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":39,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":43,"com.graphhopper.util.InstructionListTest.testWayList":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":90,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":60,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":48,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":91,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":10,"com.graphhopper.GraphHopperTest.testLoadOSM":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":9,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":58,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":6,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":67,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":68,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":92,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":96,"com.graphhopper.routing.PathTest.testWayList":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":55,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":27,"com.graphhopper.GraphHopperTest.testFootAndCar":14,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":65,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":94,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":40,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":63,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":81,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":38,"com.graphhopper.GraphHopperTest.testPrepareOnly":71,"com.graphhopper.GraphHopperTest.testVia":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":21,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":17,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":84,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":15,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":72,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":36,"com.graphhopper.GraphHopperTest.testFootOnly":18,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":57,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":85,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.util.InstructionListTest.testFind":44,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":52},"transformations":[{"failures":[],"tindex":"d297756b-82b9-11e5-96a6-45bfe322d199","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"minLon","tmpNode":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:209","type":"CtIfImpl","sourcecode":"if (int < 10)\n    java.lang.String += \"0\";\n"},"status":-2},{"failures":[],"tindex":"d2979c7c-82b9-11e5-96a6-7bbfe908bebd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"maxLeafEntries"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"d297c38d-82b9-11e5-96a6-03b1fb905e76","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:282","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"d297c38e-82b9-11e5-96a6-8ba5144c82f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:373","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isInitialized()))\n    throw new java.lang.IllegalStateException(\"QueryGraph.lookup has to be called in before heading enforcement\");\n"},"variableMap":{"this":"routingGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:93","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n"},"status":-2},{"failures":[],"tindex":"d297c38f-82b9-11e5-96a6-13ebb8715303","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Dijkstra:118","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry) == null)\n    throw new java.lang.AssertionError(\"Empty edge cannot happen\");\n"},"variableMap":{"currEdge":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:311","type":"CtIfImpl","sourcecode":"if (double < (com.graphhopper.routing.PathBidirRef.getWeight())) {\n    com.graphhopper.routing.PathBidirRef.setSwitchToFrom(boolean);\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    com.graphhopper.routing.PathBidirRef.setWeight(double);\n} "},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,0,44,45,46,47,2,3,48,49,5,6,7,8,9,11,12,13,14,15,16,17,18,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"d297c390-82b9-11e5-96a6-872c365cfaf7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:361","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.reverse()"},"variableMap":{"clonePL":"pillarNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:917","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[71,16,17,52,65,72,73,74,75,68],"tindex":"d297eaa1-82b9-11e5-96a6-090a9614691a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:205","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[][].int) ; int++) {\n    int[] int[] = int[][][int];\n    int int = int[].int;\n    byte[] byte[] = new byte[int * 4];\n    for (int int = 0 ; int < int ; int++) {\n        com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4));\n    }\n    java.io.RandomAccessFile.write(byte[]);\n}"},"status":-1},{"failures":[],"tindex":"d297eaa2-82b9-11e5-96a6-55e9304f655f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GPXEntry:57","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"d297eaa3-82b9-11e5-96a6-0f80aeb8fd44","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:92","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.TurnCostExtension.getTurnCostFlags(int, int, int)"},"status":-2},{"failures":[76,77,78,79,80,25,81,82,30],"tindex":"d297eaa4-82b9-11e5-96a6-ebb6f6d7b60e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"node","from":"priority","end":"priority"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:279","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHTreeMapComposed.insert(int, int)"},"status":-1},{"failures":[83,84,85,75,86],"tindex":"d29811b5-82b9-11e5-96a6-4f96ea473008","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"status":-1},{"failures":[],"tindex":"d29811b6-82b9-11e5-96a6-834e1f031d0b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"nodeEntryBytes","S_SKIP_EDGE2":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:310","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"d29811b7-82b9-11e5-96a6-c7320c15f919","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:90","type":"CtReturnImpl","sourcecode":"return (int) + (int)"},"variableMap":{"visitedCountFrom":"nodeA","visitedCountTo":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:526","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"status":-2},{"failures":[],"tindex":"d29811b8-82b9-11e5-96a6-b1e50b65bcda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:140","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator)"},"status":0},{"failures":[87,88,89,90,91,92],"tindex":"d29811b9-82b9-11e5-96a6-b73e18718f1b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:192","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"variableMap":{"sacScale":"trackType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:87","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[],"tindex":"d29838ca-82b9-11e5-96a6-7baf95af76dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"status":-2},{"failures":[93,94,95,96],"tindex":"d29838cb-82b9-11e5-96a6-cf11c60e8e6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"d29838cc-82b9-11e5-96a6-19abb778f94b","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PillarInfo:122","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToEle(int)"},"variableMap":{"intVal":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:532","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"d2979c7c-82b9-11e5-96a6-7bbfe908bebd","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.coll.GHLongIntBTree$BTreeEntry_void_ensureSize(int).e1","com.graphhopper.coll.GHLongIntBTree$BTreeEntry_void_ensureSize(int).e2","com.graphhopper.coll.GHLongIntBTree_com.graphhopper.coll.GHLongIntBTree(int).e4","com.graphhopper.coll.GHLongIntBTree_com.graphhopper.coll.GHLongIntBTree(int).t4"],"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":["com.graphhopper.coll.GHLongIntBTree_com.graphhopper.coll.GHLongIntBTree(int).e4","com.graphhopper.coll.GHLongIntBTree_com.graphhopper.coll.GHLongIntBTree(int).t4"],"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":["com.graphhopper.coll.GHLongIntBTree_com.graphhopper.coll.GHLongIntBTree(int).t3","com.graphhopper.coll.GHLongIntBTree_com.graphhopper.coll.GHLongIntBTree(int).t4","com.graphhopper.coll.GHLongIntBTree_com.graphhopper.coll.GHLongIntBTree(int).e3"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.coll.GHLongIntBTree$BTreeEntry_void_ensureSize(int).e1","com.graphhopper.coll.GHLongIntBTree$BTreeEntry_void_ensureSize(int).e2","com.graphhopper.coll.GHLongIntBTree_com.graphhopper.coll.GHLongIntBTree(int).e4","com.graphhopper.coll.GHLongIntBTree_com.graphhopper.coll.GHLongIntBTree(int).t4"]},"type":"branch"}]},{"transformation":"d29811b8-82b9-11e5-96a6-b1e50b65bcda","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.QueryResult.setClosestEdge"]},"type":"staticDiff"}]}]}