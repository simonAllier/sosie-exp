{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":2,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":11,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":23,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":15,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":16,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":10,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":12,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":24},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"59914345-7943-11e5-93fa-1d51a0056a4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:526","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 1) * (int)))"},"status":-1},{"failures":[],"tindex":"59916a56-7943-11e5-93fa-dbb9689c9ff0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:886","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n    return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\nelse\n    return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n"},"variableMap":{"com.graphhopper.routing.util.PriorityWeighting.class":"com.graphhopper.routing.util.PriorityWeighting.class","weightingMap":"weightingMap","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:881","type":"CtIfImpl","sourcecode":"if (\"shortest\".equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.util.ShortestWeighting(com.graphhopper.routing.util.FlagEncoder);\n} else if ((\"fastest\".equalsIgnoreCase(java.lang.String)) || (java.lang.String.isEmpty())) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n        return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    else\n        return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    \n} "},"status":-2},{"failures":[],"tindex":"59916a57-7943-11e5-93fa-392493977848","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:421","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\n"},"variableMap":{"str":"wayTypeName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"59916a58-7943-11e5-93fa-5ddd171b6021","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:425","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"status":-2},{"failures":[],"tindex":"59916a59-7943-11e5-93fa-31f17c317b4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"low","speed":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"59916a5a-7943-11e5-93fa-5d57746bd6de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:517","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"currentBucket","id":"retBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:98","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = ~int;\n    int--;\n    if (int < 0) {\n        return com.graphhopper.coll.OSMIDSegmentedMap.((int)(getNoEntryValue()));\n    } \n    long long = long[][int];\n    if (long == long) {\n        return int * (int);\n    } \n    com.graphhopper.storage.VLongStorage com.graphhopper.storage.VLongStorage = com.graphhopper.storage.VLongStorage[][int];\n    long long = com.graphhopper.storage.VLongStorage.getPosition();\n    com.graphhopper.storage.VLongStorage.seek(0);\n    int int = (int) == int ? (int) + 1 : int;\n    int int = com.graphhopper.coll.OSMIDSegmentedMap.getNoEntryValue();\n    for (int int = 1 ; int < int ; int++) {\n        long += com.graphhopper.storage.VLongStorage.readVLong();\n        if (long == long) {\n            int = (int * (int)) + int;\n            break;\n        } else if (long > long) {\n            break;\n        } \n    }\n    com.graphhopper.storage.VLongStorage.seek(long);\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"5991916b-7943-11e5-93fa-cb57a3bc3fa7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"bytesForFlags","edgeId":"bytesForFlags","com.graphhopper.storage.EdgeAccess.NO_NODE":"bytesForFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:583","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.isEmpty()))\n    com.graphhopper.GraphHopper.setEncodingManager(new com.graphhopper.routing.util.EncodingManager(java.lang.String , int));\n"},"status":-2},{"failures":[],"tindex":"5991916c-7943-11e5-93fa-252b20b39f52","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:174","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.max(long, 100)"},"status":-2},{"failures":[],"tindex":"5991916d-7943-11e5-93fa-9d94ee43278c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:707","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIterator.detach(false))"},"variableMap":{"iter":"iter","vIter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:122","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n    double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n    double = float + double;\n    if (com.graphhopper.routing.AStar.AStarEdge == null) {\n        com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    } else {\n        assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.routing.AStar.AStarEdge.double = double;\n        com.graphhopper.routing.AStar.AStarEdge.double = float;\n    }\n    com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n} "},"status":-2},{"failures":[],"tindex":"5991916e-7943-11e5-93fa-f369df28bd84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:99","type":"CtAssignmentImpl","sourcecode":"int[] = java.util.Arrays.copyOf(int[], ((int)((int[].int) * (float))))"},"status":-2},{"failures":[],"tindex":"5991b87f-7943-11e5-93fa-6913297a963a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:984","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable.selectEdgeAccess()"},"variableMap":{"this":"edgeExplorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:273","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.storage.GraphHopperStorage.getNodes()) ; int++) {\n    if (com.graphhopper.routing.util.PrepareRoutingSubnetworks.detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer, int))\n        com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int);\n    \n}"},"status":-2},{"failures":[],"tindex":"5991b880-7943-11e5-93fa-d3879eb8797f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:410","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long))"},"status":-2},{"failures":[],"tindex":"5991b881-7943-11e5-93fa-5b3aa7763954","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100).create(10)"},"variableMap":{"heights":"nodesCH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:677","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-2},{"failures":[],"tindex":"5991b882-7943-11e5-93fa-f722623d9d0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"traversalId","tmpErr":"traversalId","y1":"traversalId","dLon":"traversalId","sLat":"traversalId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:224","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n"},"status":-2},{"failures":[],"tindex":"5991b883-7943-11e5-93fa-01a2390be23d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:472","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n} else {\n    com.graphhopper.reader.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n}"},"status":-2},{"failures":[],"tindex":"5991b884-7943-11e5-93fa-df117bc0be91","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:134","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double))"},"status":-2},{"failures":[],"tindex":"5991df95-7943-11e5-93fa-e151397144f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:116","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n        int++;\n    } \n    if (double > (float[][int])) {\n        int[][int] = int[][int];\n        float[][int] = float[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"5991df96-7943-11e5-93fa-95520a20b6df","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"normedDist","weight":"normedDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:57","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.DistanceCalcEarth.double) * 2) * java.lang.Math.(java.lang.Math.asin(java.lang.Math.java.lang.Math.sqrt(double)))"},"status":-2},{"failures":[],"tindex":"5991df97-7943-11e5-93fa-090e88f810af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:37","type":"CtIfImpl","sourcecode":"if (boolean)\n    double *= -1;\n"},"status":-2},{"failures":[],"tindex":"5991df98-7943-11e5-93fa-c9064fe06d38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"u_fromNode","bytes":"maxLevel","segmentSizeInBytes":"maxLevel"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:586","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n    continue;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}