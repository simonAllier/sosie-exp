{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":23,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":64,"com.graphhopper.GraphHopperAPITest.testNoLoad":67,"com.graphhopper.routing.PathTest.testFindInstruction":126,"com.graphhopper.reader.OSMReaderTest.testFerry":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":11,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":49,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":96,"com.graphhopper.util.InstructionListTest.testEmptyList":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":46,"com.graphhopper.reader.OSMReaderTest.testWithBounds":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":37,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":10,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":57,"com.graphhopper.GraphHopperTest.testPrepare":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":22,"com.graphhopper.util.InstructionListTest.testWayList2":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":38,"com.graphhopper.reader.OSMReaderTest.testFoot":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":13,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":30,"com.graphhopper.util.InstructionListTest.testWayList":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":31,"com.graphhopper.reader.OSMReaderTest.testOneWay":92,"com.graphhopper.GHRequestTest.testCorrectInit":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":19,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":108,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":118,"com.graphhopper.GraphHopperAPITest.testDisconnected179":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":133,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":117,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":14,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":78,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":84,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":128,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":54,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":109,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":107,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":58,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":99,"com.graphhopper.routing.PathBidirRefTest.testExtract":47,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":41,"com.graphhopper.GraphHopperTest.testLoadOSM":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":29,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":3,"com.graphhopper.reader.OSMReaderTest.testSort":82,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":44,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":21,"com.graphhopper.reader.OSMReaderTest.testMain":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":35,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":110,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":26,"com.graphhopper.routing.PathBidirRefTest.testExtract2":48,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":119,"com.graphhopper.routing.PathTest.testWayList":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":116,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":27,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":17,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":39,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":20,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":63,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":65,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":102,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":112,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":114,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":43,"com.graphhopper.routing.PathTest.testTime":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":15,"com.graphhopper.util.InstructionListTest.testCreateGPX":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":56,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":70,"com.graphhopper.GraphHopperTest.testPrepareOnly":94,"com.graphhopper.GraphHopperTest.testVia":97,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":104,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":72,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":88,"com.graphhopper.GraphHopperAPITest.testLoad":1,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":25,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":76,"com.graphhopper.util.TranslationMapTest.testToString":77,"com.graphhopper.GraphHopperTest.testFootOnly":105,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":132,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":123,"com.graphhopper.util.InstructionListTest.testFind":68,"com.graphhopper.reader.OSMReaderTest.testBarriers":83,"com.graphhopper.storage.EdgeTest.testCloneFull":131,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":59,"com.graphhopper.routing.PathTest.testFound":121,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":16},"transformations":[{"failures":[0],"tindex":"6b2a97fc-82ab-11e5-ad41-8b5427d2ea7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:102","type":"CtIfImpl","sourcecode":"if ((byte[].int) > 255) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4));\n    com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String));\n    java.lang.String = java.lang.String;\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"6b2abf0d-82ab-11e5-ad41-e9a2e131d3bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:50","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.util.EdgeIteratorState)).isShortcut())\n    return true;\n"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"6b2abf0e-82ab-11e5-ad41-fbef940f9301","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"weight","speed":"w"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:171","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,8,39,40,9,10,41,11,42,12,13,14,15,43,16,18,44,45,20,21,46,22,24,25,26,27,47,48],"tindex":"6b2ae61f-82ab-11e5-ad41-4572df1ff726","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:323","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TIntList.add(int)"},"status":-1},{"failures":[49,50,51,52,8,53,54,55,56,39,9,10,57,58,11,12,13,14,59,16,17,18,19,44,45,20,21,46,22,23,60,24,25,26,27],"tindex":"6b2ae620-82ab-11e5-ad41-e1dbd59a441e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"variableMap":{"id":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[61,62],"tindex":"6b2ae621-82ab-11e5-ad41-fb0506b2bbd3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:239","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-1},{"failures":[],"tindex":"6b2ae622-82ab-11e5-ad41-c303817750af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"newBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[63,64,65],"tindex":"6b2b0d33-82ab-11e5-ad41-7b0da95312b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:91","type":"CtReturnImpl","sourcecode":"return int + 1"},"variableMap":{"intVal":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:172","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[1,66,67,68,69,70,71,36,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,2,95,3,4,5,6,96,97,98,99,7,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"6b2b0d34-82ab-11e5-ad41-3b3ce6c7ad57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:151","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[129,9,10,12],"tindex":"6b2b0d35-82ab-11e5-ad41-714553fe10c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:248","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:144","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.toString().toLowerCase().replaceAll(\"\\\\W+\", \"_\")"},"status":-1},{"failures":[76],"tindex":"6b2b0d36-82ab-11e5-ad41-6133ca21c7ce","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"variableMap":{"speed":"azimuth"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:250","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    java.lang.StringBuilder.append(\"<gh:azimuth>\").append(com.graphhopper.util.Helper.round2(double)).append(\"<\/gh:azimuth>\");\n"},"status":-1},{"failures":[79,81,82,83,84,86,87,88,89,90,91,92,93,96,97,98,99,100,101,103,104],"tindex":"6b2b0d37-82ab-11e5-ad41-b17863441573","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"tmpNode","nextEdgeId":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:839","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMReader.addTowerNode(long, double, double, double)"},"status":-1},{"failures":[],"tindex":"6b2b0d38-82ab-11e5-ad41-63b81cc7410e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:237","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], 0)"},"status":0},{"failures":[130],"tindex":"6b2b3449-82ab-11e5-ad41-c33c4a3d11ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:51","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(5)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:69","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHRequest.this(new com.graphhopper.util.shapes.GHPoint(double , double), new com.graphhopper.util.shapes.GHPoint(double , double), double, double)"},"status":-1},{"failures":[131],"tindex":"6b2b344a-82ab-11e5-ad41-a9cd17ec651e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:118","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry) == null)\n    throw new java.lang.AssertionError(\"Empty edge cannot happen\");\n"},"variableMap":{"currEdge":"cl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:50","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.storage.EdgeEntry != null) {\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone();\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n}"},"status":-1},{"failures":[],"tindex":"6b2b344b-82ab-11e5-ad41-31035d1e4b55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:156","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"variableMap":{"tmp":"lon","tmpNo":"LON"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.Helper.degreeToInt(double))"},"status":-2},{"failures":[132,133],"tindex":"6b2b344c-82ab-11e5-ad41-d1331e6c9f38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:64","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int))"},"variableMap":{"stateStack":"stateStack","firstNode":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:105","type":"CtInvocationImpl","sourcecode":"java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator))"},"status":-1},{"failures":[86],"tindex":"6b2b344d-82ab-11e5-ad41-d13f19c2733f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:444","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\")) {\n    com.graphhopper.reader.OSMTurnRelation com.graphhopper.reader.OSMTurnRelation = com.graphhopper.reader.OSMReader.createTurnRelation(com.graphhopper.reader.OSMRelation);\n    if (com.graphhopper.reader.OSMTurnRelation != null) {\n        com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n        if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n            com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n            java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n            for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n                com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n            }\n        } \n    } \n} "},"status":-1},{"failures":[],"tindex":"6b2b5b5e-82ab-11e5-ad41-872aa98780d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:330","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"6b2ae622-82ab-11e5-ad41-c303817750af","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"6b2b0d38-82ab-11e5-ad41-63b81cc7410e","diffs":[{"methodsDiff":{"delete":["java.util.Arrays.fill"]},"type":"staticDiff"}]},{"transformation":"6b2abf0d-82ab-11e5-ad41-e9a2e131d3bd","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}