{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":15,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":3,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":29,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":32,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":6,"com.graphhopper.util.InstructionListTest.testWayList":36,"com.graphhopper.util.PointListTest.testReverse":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":17,"com.graphhopper.routing.PathTest.testWayList":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":18,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":14,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":31,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":2,"com.graphhopper.GraphHopperAPITest.testLoad":34,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":23,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":33,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":0,"com.graphhopper.reader.OSMReaderTest.testBarriers":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":9,"com.graphhopper.util.GHUtilityTest.testCopy":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":28,"com.graphhopper.GraphHopperTest.testPrepare":39,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":38,"com.graphhopper.GraphHopperTest.testFootAndCar":41},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"333380eb-793c-11e5-b486-2f822a2a1df9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"i","weights":"latitudes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:239","type":"CtAssignmentImpl","sourcecode":"double[][int] = double[][int]"},"status":-1},{"failures":[],"tindex":"3333a7fc-793c-11e5-b486-8d21a081a1f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"latSize","green":"latSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:393","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":-2},{"failures":[],"tindex":"3333cf0d-793c-11e5-b486-a1301ead8cc2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:112","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"3333cf0e-793c-11e5-b486-eb1b51191a7b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:243","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.isInfinite(double)) || (java.lang.Double.isNaN(double))) || (double < 0))\n    throw new java.lang.IllegalStateException((\"Invalid speed stored in edge! \" + double));\n"},"variableMap":{"speed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:207","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || boolean) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) {\n        long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n        long |= long;\n    } else {\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n        long |= long;\n    }\n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n    long = com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n    long |= long;\n}"},"status":-2},{"failures":[],"tindex":"3333cf0f-793c-11e5-b486-0d9dadff64ef","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:115","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"variableMap":{"numTiles":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:342","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.nio.ByteBuffer.put(byte[], 0, int);\n    java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1));\n    java.nio.ByteBuffer.position(0);\n    java.nio.ByteBuffer.put(byte[], int, int);\n} else {\n    java.nio.ByteBuffer.put(byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"3333f620-793c-11e5-b486-ab7d18a61305","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:255","type":"CtAssignmentImpl","sourcecode":"double = 30"},"variableMap":{"speed":"midLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-2},{"failures":[],"tindex":"3333f621-793c-11e5-b486-03c61ec75e25","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:143","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"variableMap":{"cp":"weighting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:298","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"3333f622-793c-11e5-b486-a98bcff6df31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:226","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdFrom());\n    com.graphhopper.reader.OSMReader.getOsmWayIdSet().add(com.graphhopper.reader.OSMTurnRelation.getOsmIdTo());\n} "},"status":-2},{"failures":[],"tindex":"3333f623-793c-11e5-b486-55275e70e393","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"com.graphhopper.reader.OSMElement.NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:930","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMElement.int) == (com.graphhopper.reader.OSMRelation.Member.type())) && (\"via\".equals(com.graphhopper.reader.OSMRelation.Member.role()))) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-2},{"failures":[],"tindex":"33341d34-793c-11e5-b486-5bbd8c9285d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"variableMap":{"latSize":"current","size":"current","lonSize":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:45","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.TIntArrayStack.pop()"},"status":-2},{"failures":[],"tindex":"33341d35-793c-11e5-b486-bfc52ae69e1a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:217","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.(getEncoder(java.lang.String, false)) != null"},"status":-2},{"failures":[],"tindex":"33341d36-793c-11e5-b486-ebc41e5a6839","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:773","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"33341d37-793c-11e5-b486-2b0f44ca2a90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.contractNodes()"},"status":-2},{"failures":[],"tindex":"33341d38-793c-11e5-b486-7f551aabb0be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:204","type":"CtAssignmentImpl","sourcecode":"double = 0"},"variableMap":{"factor":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:220","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"status":-2},{"failures":[],"tindex":"33344449-793c-11e5-b486-3b2ae4225ac2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:150","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"3334444a-793c-11e5-b486-1b13cd7c6792","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.WeightApproximator.setGoalNode(int)"},"status":-2},{"failures":[],"tindex":"3334444b-793c-11e5-b486-37cecf2cde82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:250","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:817","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"3334444c-793c-11e5-b486-f906acce4fca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:255","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:102","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.storage.index.QueryResult> java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>(2)"},"status":-2},{"failures":[],"tindex":"33346b5d-793c-11e5-b486-f523cf200bc9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:113","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.includePoint((int + 2), java.util.concurrent.atomic.AtomicInteger)"},"variableMap":{"daPointer":"daPointer","this":"this","counter":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger)"},"status":-2},{"failures":[],"tindex":"33346b5e-793c-11e5-b486-59bb52860673","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:133","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"variableMap":{"entry":"ghLocation","entryVal":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:766","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.Lock.tryLock()))\n    throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}