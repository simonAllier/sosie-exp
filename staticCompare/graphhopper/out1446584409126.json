{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":11,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":66,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":76,"com.graphhopper.reader.OSMReaderTest.testMain":58,"com.graphhopper.reader.OSMReaderTest.testFerry":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":42,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":8,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":39,"com.graphhopper.reader.OSMReaderTest.testWithBounds":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":24,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":30,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":10,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":1,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":2,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":40,"com.graphhopper.GraphHopperTest.testPrepare":47,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":75,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":51,"com.graphhopper.reader.OSMReaderTest.testFoot":57,"com.graphhopper.util.InstructionListTest.testCreateGPX":73,"com.graphhopper.reader.OSMReaderTest.testOneWay":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":26,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":5,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":70,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":15,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":33,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":19,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":37,"com.graphhopper.GraphHopperTest.testPrepareOnly":44,"com.graphhopper.coll.CompressedArrayTest.testCompress2":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":31,"com.graphhopper.GraphHopperTest.testVia":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":22,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":0,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":18,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":72,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":65,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":6,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":61,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":12,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":62,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":49,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":32,"com.graphhopper.GraphHopperTest.testFootOnly":53,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":74,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":9,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":48,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":64,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":13,"com.graphhopper.reader.OSMReaderTest.testBarriers":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":27,"com.graphhopper.GraphHopperTest.testLoadOSM":50,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":35,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":34,"com.graphhopper.reader.OSMReaderTest.testSort":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":36},"transformations":[{"failures":[],"tindex":"ddf3da87-826d-11e5-a780-8345b19e7387","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:134","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"status":-2},{"failures":[0,1,2],"tindex":"ddf40198-826d-11e5-a780-53cea35a9374","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"remainingSegNo","retBucket":"remainingSegNo","i":"remainingSegNo","bucketSize":"remainingSegNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:421","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"ddf40199-826d-11e5-a780-b908dd531f50","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:675","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable.setBaseNode(int)"},"variableMap":{"adjNodesToDelIter":"iter","removeNode":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:84","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.storage.GraphHopperStorage.createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).setBaseNode(int)"},"status":-2},{"failures":[],"tindex":"ddf428aa-826d-11e5-a780-037344bcabf6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:291","type":"CtIfImpl","sourcecode":"if ((short < (-1000)) || (short > 12000))\n    short = java.lang.Short.short;\n"},"status":-2},{"failures":[3,4,5,6],"tindex":"ddf428ab-826d-11e5-a780-f12f21151f9e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:180","type":"CtAssignmentImpl","sourcecode":"double = double + (double * (int - double))"},"variableMap":{"gradient":"costs","y2":"costs","yend":"costs","x2":"costs","xend":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:684","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[],"tindex":"ddf428ac-826d-11e5-a780-031479756b56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.readHeader(java.io.RandomAccessFile)"},"status":-2},{"failures":[7],"tindex":"ddf428ad-826d-11e5-a780-c77c21b57e50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:255","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"ddf428ae-826d-11e5-a780-0d800d15872d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:245","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromShort(byte[][][int], short, int)"},"status":0},{"failures":[],"tindex":"ddf428af-826d-11e5-a780-51904b369b76","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:787","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.putAlgorithmFactory(com.graphhopper.routing.util.Weighting, (com.graphhopper.routing.RoutingAlgorithmFactory = new com.graphhopper.routing.RoutingAlgorithmFactorySimple()))"},"status":0},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,0,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"ddf428b0-826d-11e5-a780-67b6b39e2d03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:400","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-1},{"failures":[],"tindex":"ddf44fc1-826d-11e5-a780-f5570f6e0186","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:388","type":"CtForEachImpl","sourcecode":"for (int int : java.util.List<java.lang.Integer>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + int));\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.VirtualEdgeIteratorState.fetchWayGeometry(3);\n    double double;\n    if (boolean) {\n        int int = com.graphhopper.util.PointList.getSize();\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n    } else {\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n    }\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double);\n    double double = double - double;\n    if ((java.lang.Math.abs(double)) > 1.74) {\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + com.graphhopper.routing.QueryGraph.(getPosOfReverseEdge(int))));\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[44,45,46,47,48,7,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"ddf44fc2-826d-11e5-a780-8dee3db17c93","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:771","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[70],"tindex":"ddf44fc3-826d-11e5-a780-6babf716503d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:215","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    return \"\";\n"},"status":-1},{"failures":[71],"tindex":"ddf44fc4-826d-11e5-a780-35f7347b14dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:90","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.CompressedArray.flush()"},"status":-1},{"failures":[],"tindex":"ddf476d5-826d-11e5-a780-450339ce2804","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:102","type":"CtTryImpl","sourcecode":"try {\n    if (int >= (java.util.List<byte[]>.size())) {\n        return null;\n    } \n    byte[] byte[] = java.util.List<byte[]>.get(int);\n    com.graphhopper.storage.VLongStorage com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(com.graphhopper.coll.CompressedArray.com.graphhopper.coll.CompressedArray.decompress(byte[]));\n    long long = com.graphhopper.storage.VLongStorage.getLength();\n    for (int int = 0 ; (com.graphhopper.storage.VLongStorage.getPosition()) < long ; int++) {\n        long long = com.graphhopper.storage.VLongStorage.readVLong();\n        if (int == int) {\n            com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n            com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n            return com.graphhopper.util.shapes.GHPoint;\n        } \n    }\n    return null;\n} catch (java.lang.ArrayIndexOutOfBoundsException ex) {\n    throw new java.lang.RuntimeException((((((((\"index \" + long) + \"=> segNo:\") + int) + \", entry=\") + int) + \", segments:\") + (java.util.List<byte[]>.size())) , java.lang.ArrayIndexOutOfBoundsException);\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"ddf476d6-826d-11e5-a780-55b144ddecb9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:929","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"calcPoints\", boolean)"},"variableMap":{"request":"request","calcPoints":"enableInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:928","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.GHRequest.getHints().getBool(\"instructions\", boolean)"},"status":0},{"failures":[],"tindex":"ddf476d7-826d-11e5-a780-21f00c6f92b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:237","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], 0)"},"status":0},{"failures":[72,73,74],"tindex":"ddf476d8-826d-11e5-a780-392406f5d329","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/gpx>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:215","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<trkseg>\")"},"status":-1},{"failures":[],"tindex":"ddf476d9-826d-11e5-a780-51679352ea21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:44","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"variableMap":{"fromNode":"oldNodeId","nodeAccess":"nodeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:201","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":0},{"failures":[75,76],"tindex":"ddf49dea-826d-11e5-a780-a73911fce58e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:115","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n    int = int;\n    break;\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"ddf476d9-826d-11e5-a780-51679352ea21","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointAccess.getLatitude"]},"type":"staticDiff"}]},{"transformation":"ddf476d6-826d-11e5-a780-55b144ddecb9","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHRequest.getHints","com.graphhopper.util.PMap.getBool"]},"type":"staticDiff"}]},{"transformation":"ddf476d7-826d-11e5-a780-21f00c6f92b2","diffs":[{"methodsDiff":{"delete":["java.util.Arrays.fill"]},"type":"staticDiff"}]}]}