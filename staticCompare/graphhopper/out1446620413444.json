{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":171,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":13,"com.graphhopper.reader.OSMReaderTest.testFerry":60,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":192,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":72,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":147,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":90,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":107,"com.graphhopper.reader.OSMReaderTest.testWithBounds":7,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":194,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":79,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":10,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":153,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":159,"com.graphhopper.GraphHopperTest.testPrepare":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":115,"com.graphhopper.util.InstructionListTest.testWayList":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":116,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":16,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":106,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":70,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":76,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":166,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":12,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":73,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":21,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":132,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":35,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":162,"com.graphhopper.GraphHopperTest.testLoadOSM":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":160,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":40,"com.graphhopper.reader.OSMReaderTest.testSort":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":47,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":33,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":144,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":120,"com.graphhopper.routing.PathTest.testWayList":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":119,"com.graphhopper.coll.GHSortedCollectionTest.testInsert":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":167,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":110,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":118,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":88,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":101,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":125,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":127,"com.graphhopper.util.GHUtilityTest.testSort":188,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":17,"com.graphhopper.routing.util.EncodedDoubleValueTest.testSetDoubleValue":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":32,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":87,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":135,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":28,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":78,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":174,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":137,"com.graphhopper.util.GHUtilityTest.testCopy":187,"com.graphhopper.routing.PathTest.testFindInstruction":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":91,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":18,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":37,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":138,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":31,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":155,"com.graphhopper.reader.PrinctonReaderTest.testRead":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":104,"com.graphhopper.util.InstructionListTest.testWayList2":58,"com.graphhopper.reader.OSMReaderTest.testFoot":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":20,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":41,"com.graphhopper.reader.OSMReaderTest.testOneWay":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":42,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":111,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":0,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":34,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":74,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":152,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":129,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":131,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":105,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":130,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":51,"com.graphhopper.util.GHUtilityTest.testSort2":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":170,"com.graphhopper.reader.OSMReaderTest.testMain":5,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":93,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":92,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":54,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":180,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":86,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":157,"com.graphhopper.storage.GraphHopperStorageTest.testClone":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":50,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":96,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":89,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":102,"com.graphhopper.routing.PathTest.testTime":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":173,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":176,"com.graphhopper.util.GHUtilityTest.testSortDirected":189,"com.graphhopper.GraphHopperTest.testPrepareOnly":146,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":168,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":193,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":59,"com.graphhopper.GraphHopperTest.testFootOnly":149,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":81,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":6,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":1,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":94,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":46,"com.graphhopper.util.InstructionListTest.testFind":56,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":68,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":22},"transformations":[{"failures":[0,1,2,3,4],"tindex":"b232c996-82c1-11e5-9b13-ff58a45c5b68","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"i","tmp":"from","segmentSizeInBytes":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:258","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[5,6,7,8,9],"tindex":"b232f0a7-82c1-11e5-9b13-8777dd7c92d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:171","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getElevation(0)"},"variableMap":{"pl":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:757","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLongitude(0)"},"status":-1},{"failures":[10],"tindex":"b232f0a8-82c1-11e5-9b13-f7b2164ed751","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:231","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[11,12],"tindex":"b232f0a9-82c1-11e5-9b13-2db0a69334da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"counter","guess":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:85","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,8,67,9,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"b232f0aa-82c1-11e5-9b13-872d21550638","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"variableMap":{"lastTime":"tmpValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"status":-1},{"failures":[127],"tindex":"b232f0ab-82c1-11e5-9b13-e550d1a89130","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:321","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int)"},"variableMap":{"bufferIndex":"bufferIndex","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:346","type":"CtAssignmentImpl","sourcecode":"java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1))"},"status":-1},{"failures":[128,10],"tindex":"b23317bc-82c1-11e5-9b13-ddf806446bf3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:54","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"variableMap":{"s":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:198","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"status":-1},{"failures":[129,65,130,131,66,8,67,132,9,133,134,135,112,115,136,137,138,116,139,118,140,141,142,143,144,119],"tindex":"b23317bd-82c1-11e5-9b13-f3e873163b36","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:180","type":"CtAssignmentImpl","sourcecode":"double = double + (double * (int - double))"},"variableMap":{"gradient":"prevLon","y2":"prevLon","yend":"prevLon","x2":"prevLon","xend":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:417","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-1},{"failures":[],"tindex":"b23317be-82c1-11e5-9b13-01fa2bf6e44f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:819","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"This graph does not support an additional edge field.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"You cannot configure this GraphStorage \" + \"after calling create or loadExisting. Calling one of the methods twice is also not allowed.\"))"},"status":-2},{"failures":[59,145],"tindex":"b23317bf-82c1-11e5-9b13-5f13ecd2dd0d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:199","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:218","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Instruction.com.graphhopper.util.AngleCalc.azimuth2compassPoint(double)"},"status":-1},{"failures":[146,147,8,67,133,134,148,149,150,151,152,153,154,155,156,157,111,158,159,160,161,162,112,114,115,136,163,164,165,137,166,167,138,116,168,169,117,139,118,170,140,141,171,142,143,172,144,119],"tindex":"b23317c0-82c1-11e5-9b13-ada739bda9b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"contractedNeighbors"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:557","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.CHEdgeIterator.isShortcut())\n    int++;\n"},"status":-1},{"failures":[],"tindex":"b2333ed1-82c1-11e5-9b13-c55dd7fac76e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:220","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>"},"variableMap":{"bestWeightMapTo":"fromMap","bestWeightMapOther":"fromMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:73","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.routing.AStar.AStarEdge>()"},"status":-1},{"failures":[],"tindex":"b2333ed2-82c1-11e5-9b13-83c820523dfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDirectory:31","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDirectory.this(\"\", false)"},"status":-2},{"failures":[],"tindex":"b2333ed3-82c1-11e5-9b13-67c3d3ff67e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"capacity","i":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,132],"tindex":"b2333ed4-82c1-11e5-9b13-1d2a180d9949","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:482","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setAdditionalField(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getAdditionalField())"},"variableMap":{"from":"from","to":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance())"},"status":-1},{"failures":[],"tindex":"b2333ed5-82c1-11e5-9b13-f794cc78a251","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:115","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new java.util.HashMap<java.lang.String, java.lang.Object>(2)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:78","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new java.util.HashMap<java.lang.String, java.lang.Object>()"},"status":-2},{"failures":[115,139],"tindex":"b2333ed6-82c1-11e5-9b13-2772ff845a31","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"mGarbage":"finishedTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:82","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo())"},"status":-1},{"failures":[191,129,65,130,131,66,192,193,194,137,139,118,141,119],"tindex":"b23365e7-82c1-11e5-9b13-f980bdfba8ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.TIntArrayListWithCap.reset()"},"variableMap":{"changedNodes":"ignoreEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:706","type":"CtIfImpl","sourcecode":"if (!(gnu.trove.list.array.TIntArrayList.contains(com.graphhopper.util.EdgeIterator.getEdge())))\n    com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIterator.detach(false));\n"},"status":-1},{"failures":[195],"tindex":"b23365e8-82c1-11e5-9b13-871758c1dfca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:117","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.iterator().next()"},"status":-1},{"failures":[8,67,133,134,149],"tindex":"b23365e9-82c1-11e5-9b13-df0e70302ea5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:750","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initCHAlgoFactories()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:857","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.prepare()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}