{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":54,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":77,"com.graphhopper.reader.OSMReaderTest.testFerry":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":39,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":52,"com.graphhopper.reader.OSMReaderTest.testWithBounds":133,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":65,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":136,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":66,"com.graphhopper.GraphHopperTest.testPrepare":118,"com.graphhopper.util.InstructionListTest.testWayList2":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":97,"com.graphhopper.search.NameIndexTest.testFlush":0,"com.graphhopper.reader.OSMReaderTest.testFoot":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":80,"com.graphhopper.util.InstructionListTest.testWayList":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":81,"com.graphhopper.reader.OSMReaderTest.testOneWay":135,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":48,"com.graphhopper.GraphHopperAPITest.testDisconnected179":108,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":71,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":64,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":74,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":32,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":127,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":29,"com.graphhopper.reader.dem.CGIARProviderTest.testDown":38,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":101,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":67,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":61,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":124,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":68,"com.graphhopper.GraphHopperTest.testLoadOSM":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":82,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":75,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":103,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":115,"com.graphhopper.reader.OSMReaderTest.testSort":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":114,"com.graphhopper.storage.RAMDataAccessTest.testSegments":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":87,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":51,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":2,"com.graphhopper.reader.OSMReaderTest.testMain":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":100,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":36,"com.graphhopper.storage.RAMDataAccessTest.testHeader":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":14,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":26,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":23,"com.graphhopper.routing.PathTest.testWayList":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":59,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":89,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":93,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":63,"com.graphhopper.storage.StorablePropertiesTest.testStore":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":105,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":70,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":6,"com.graphhopper.GraphHopperTest.testFootAndCar":120,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":44,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":24,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":123,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":92,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.GraphHopperTest.testVia":69,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":19,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":102,"com.graphhopper.GraphHopperAPITest.testLoad":107,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":16,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":57,"com.graphhopper.GraphHopperTest.testFootOnly":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":96,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":130,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":98,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":28,"com.graphhopper.reader.OSMReaderTest.testBarriers":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":43,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":138,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":86},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"27a41439-827f-11e5-b39b-ddd28b0863e4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"variableMap":{"segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:158","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[int][]"},"status":-1},{"failures":[],"tindex":"27a43b4a-827f-11e5-b39b-0db6d395c24c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"shortcutEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:623","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":-2},{"failures":[],"tindex":"27a43b4b-827f-11e5-b39b-898260e816b8","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:584","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[20,21,22,23,24,25],"tindex":"27a43b4c-827f-11e5-b39b-33a738a8702f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:193","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new java.lang.IllegalStateException(\"something went wrong: next entry would be the same\");\n"},"variableMap":{"turnCostIndex":"latSize","nextTurnCostIndex":"latSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:393","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":-1},{"failures":[],"tindex":"27a43b4d-827f-11e5-b39b-4b1dc5c38228","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType"},"variableMap":{"type":"com.graphhopper.storage.DAType.RAM"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:362","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"27a43b4e-827f-11e5-b39b-d75ee9858410","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:79","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Map<java.lang.String, java.lang.Object>>.add(java.util.Map<java.lang.String, java.lang.Object>)"},"status":-1},{"failures":[],"tindex":"27a4625f-827f-11e5-b39b-35b438587440","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:166","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[38],"tindex":"27a46260-827f-11e5-b39b-fd94c7102b56","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:270","type":"CtIfImpl","sourcecode":"if (!((double >= 0) || ((int - double) < (double))))\n    int = int - (int);\n"},"status":-1},{"failures":[],"tindex":"27a46261-827f-11e5-b39b-55eb517eb548","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"nodeBitMask","nodeFlags":"nodeBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":0},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"27a46262-827f-11e5-b39b-e97ce5c7ed55","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"variableMap":{"intVal":"prevOrNextEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:55","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, int)"},"status":-1},{"failures":[47,50,70,53,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,69,118,119,120,16,17,19,121],"tindex":"27a46263-827f-11e5-b39b-5bbb8262e9f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:181","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo = new com.graphhopper.geohash.SpatialKeyAlgo(int).bounds(com.graphhopper.util.shapes.BBox)"},"status":-1},{"failures":[122],"tindex":"27a46264-827f-11e5-b39b-0b750638c9cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"id","guess":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":-1},{"failures":[123,124],"tindex":"27a48975-827f-11e5-b39b-73e1c7e43fab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:207","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n        java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"foot\");\n        if ((java.lang.String == null) || (\"yes\".equals(java.lang.String)))\n            return (long) | (long);\n        \n    } \n    if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n        return long;\n    \n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"27a48976-827f-11e5-b39b-d70f60d2e64f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:700","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-2},{"failures":[125],"tindex":"27a48977-827f-11e5-b39b-bdfc43d4b072","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:125","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"27a48978-827f-11e5-b39b-5bbda690df8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:71","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(boolean))) {\n    if (com.graphhopper.routing.AbstractBidirAlgo.(getCurrentFromWeight()) < com.graphhopper.routing.AbstractBidirAlgo.(getCurrentToWeight()))\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    else\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    \n} else if (!(boolean)) {\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n} else {\n    boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n}"},"status":-2},{"failures":[],"tindex":"27a48979-827f-11e5-b39b-59ad9c089726","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:190","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"allRemoved":"size","removedEdges":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"status":0},{"failures":[],"tindex":"27a4897a-827f-11e5-b39b-cd7e557c0318","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"length","tmpSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:384","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    if ((long & long) > 0) {\n        com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n        long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n        if (int > 0) {\n            if (int < 0)\n                int = 0;\n            \n            long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n            long[][((long[].int) - 1)] = long;\n            gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        } else {\n            java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n            gnu.trove.list.TLongList.set(0, long);\n        }\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"27a4b08b-827f-11e5-b39b-dd5af08c7dfb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:89","type":"CtIfImpl","sourcecode":"if (int == 1)\n    return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1));\nelse if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"variableMap":{"mode":"mode","pointList":"com.graphhopper.util.PointList.EMPTY","com.graphhopper.util.PointList.EMPTY":"com.graphhopper.util.PointList.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:878","type":"CtIfImpl","sourcecode":"if (int == 0)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"status":-2},{"failures":[122,126,109,110,111,127,128,129,130,131,132,133,134,135,136,15,137,69,118,119,120,16,17,18,19,121,138],"tindex":"27a4b08c-827f-11e5-b39b-c30f60c15ba6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:173","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)))"},"variableMap":{"name":"ref","location":"ref"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:62","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TLongList.add(java.lang.Long.parseLong(java.lang.String))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}