{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":77,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":62,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":35,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":179,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":42,"com.graphhopper.reader.OSMReaderTest.testWithBounds":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":83,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":261,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":82,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":44,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":229,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":180,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":267,"com.graphhopper.GraphHopperTest.testPrepare":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":298,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":107,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":281,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":69,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":64,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":282,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":287,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":156,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":80,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":97,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":10,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":232,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":238,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":233,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":47,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":131,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":157,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":249,"com.graphhopper.reader.OSMReaderTest.testSort":19,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":293,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":200,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":137,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":204,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":303,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":189,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":280,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":288,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":172,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":211,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":149,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":252,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":213,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":59,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":196,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":295,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":86,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":284,"com.graphhopper.coll.IntIntBinHeapTest.testSize":312,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":226,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":203,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":201,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":217,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":246,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":12,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":223,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":302,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":152,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":109,"com.graphhopper.reader.OSMReaderTest.testBarriers":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":176,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":219,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":72,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":116,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":289,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":138,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":294,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":262,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":221,"com.graphhopper.reader.PrinctonReaderTest.testRead":305,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":67,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":224,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":50,"com.graphhopper.reader.OSMReaderTest.testFoot":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":90,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":85,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":143,"com.graphhopper.reader.OSMReaderTest.testOneWay":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":240,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":244,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":101,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":173,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":164,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":134,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":76,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":79,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":108,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":301,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":185,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":269,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":260,"com.graphhopper.routing.PathBidirRefTest.testExtract":276,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":253,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":243,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":311,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":88,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":309,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":104,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":75,"com.graphhopper.reader.OSMReaderTest.testMain":18,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":191,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":192,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":28,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":32,"com.graphhopper.routing.PathBidirRefTest.testExtract2":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":186,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":48,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":60,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":177,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":98,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":230,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":31,"com.graphhopper.storage.GraphHopperStorageTest.testClone":111,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":91,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":271,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":4,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":121,"com.graphhopper.GraphHopperTest.testFootAndCar":11,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":65,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":248,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":166,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":274,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":272,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":210,"com.graphhopper.GraphHopperTest.testPrepareOnly":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":171,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":291,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":24,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":150,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":132,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":49,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":78,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":197},"transformations":[{"failures":[0],"tindex":"89714578-8273-11e5-a0f2-f94f2392ada8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:147","type":"CtIfImpl","sourcecode":"if ((int++) > 1000) {\n    throw new java.lang.IllegalStateException(\"Something unexpected happened. A node probably will not have 1000+ relations.\");\n} "},"variableMap":{"i":"pathIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.ViaInstruction.setViaCount((int + 1))"},"status":-1},{"failures":[],"tindex":"89716c89-8273-11e5-a0f2-8113794d6d96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:515","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.Helper.isEmpty(java.lang.String)) && (com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n    \n    java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\";\n} "},"variableMap":{"graphHopperFolder":"com.graphhopper.routing.util.EncodingManager.MOTORCYCLE","ghLocation":"com.graphhopper.routing.util.EncodingManager.MOUNTAINBIKE","osmFile":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:153","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,0,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"8971939a-8273-11e5-a0f2-99e2ccae5304","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"variableMap":{"directionBitMask":"acceptBit","flags":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:231","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[30],"tindex":"8971939b-8273-11e5-a0f2-397f507eb8ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"variableMap":{"angle":"lon","com.graphhopper.util.AngleCalc.PI3_4":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:278","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((180 + double) / (int))"},"status":-1},{"failures":[31,32,33,34,13,14],"tindex":"8971baac-8273-11e5-a0f2-3f4dfc2cdecc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:689","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"8971baad-8273-11e5-a0f2-0d8ca6bc91e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:221","type":"CtForEachImpl","sourcecode":"for (java.io.File java.io.File : java.io.File.listFiles()) {\n    com.graphhopper.util.Helper.com.graphhopper.util.Helper.removeDir(java.io.File);\n}"},"status":-2},{"failures":[],"tindex":"8971baae-8273-11e5-a0f2-6fdd3acfaaf1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"lastIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:77","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"8971baaf-8273-11e5-a0f2-9d1357f532e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:825","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int).setLazyUpdates(int)"},"status":0},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,31,147,148,149,32,150,151,152,153,33,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,1,266,2,3,267,268,4,269,5,270,271,6,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,11,305,306,307],"tindex":"8971e1c0-8273-11e5-a0f2-2311d241d9a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:326","type":"CtReturnImpl","sourcecode":"return \"car\""},"status":-1},{"failures":[72,118,170,217],"tindex":"897208d1-8273-11e5-a0f2-7546a8a1f64d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:114","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = com.graphhopper.storage.DataAccess.getInt(((long + (int)) + 4));\n    long = com.graphhopper.util.BitUtil.combineIntsToLong(int, int);\n} "},"status":-1},{"failures":[],"tindex":"897208d2-8273-11e5-a0f2-71e47b467e60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"variableMap":{"val":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:608","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"897208d3-8273-11e5-a0f2-33ee420aa792","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"a":"closed","approx":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:136","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[82,128,180,227,21],"tindex":"897208d4-8273-11e5-a0f2-ddbdb86c6c2d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"tmp","angleXY":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:248","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-1},{"failures":[],"tindex":"89722fe5-8273-11e5-a0f2-b19fb814c8c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:517","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"sign","id":"sign"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:79","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"89722fe6-8273-11e5-a0f2-dbcc165119ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:363","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"variableMap":{"segmentSizeInBytes":"length","length":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:347","type":"CtLocalVariableImpl","sourcecode":"int int = (double[].int) / 3"},"status":-2},{"failures":[],"tindex":"89722fe7-8273-11e5-a0f2-0d556b8b40bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:247","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"variableMap":{"acceptBit":"size","ferryBit":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.BigLongIntMap:89","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"89722fe8-8273-11e5-a0f2-9be24b2cca26","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:421","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\n"},"variableMap":{"str":"osmFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:430","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"897256f9-8273-11e5-a0f2-c7c3d30b951c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"variableMap":{"fromX":"weight","toX":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:239","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)"},"status":-2},{"failures":[278,302,308,309,310,311,312,313],"tindex":"897256fa-8273-11e5-a0f2-6300d57c1c3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeEntry:63","type":"CtReturnImpl","sourcecode":"return -1"},"status":-1},{"failures":[314,315],"tindex":"897256fb-8273-11e5-a0f2-1b929c7e3713","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:421","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    throw new java.lang.IllegalArgumentException(\"OSM file cannot be empty.\");\n"},"variableMap":{"osmFileStr":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:150","type":"CtIfImpl","sourcecode":"if (\"service\".equals(java.lang.String)) {\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n} else if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (\"grade1\".equals(java.lang.String))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"8971baaf-8273-11e5-a0f2-9d1357f532e4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates","com.graphhopper.routing.ch.PrepareContractionHierarchies.setLazyUpdates"]},"type":"staticDiff"}]}]}