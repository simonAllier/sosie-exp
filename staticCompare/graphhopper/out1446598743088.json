{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":40,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":0,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":20,"com.graphhopper.GraphHopperTest.testPrepare":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":8,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":29,"com.graphhopper.coll.IntIntBinHeapTest.test0":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":36,"com.graphhopper.util.PointListTest.testEquals":7,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":52,"com.graphhopper.GraphHopperTest.testPrepareOnly":47,"com.graphhopper.GraphHopperTest.testVia":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":13,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":44,"com.graphhopper.GraphHopperTest.testFootOnly":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":22,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":28,"com.graphhopper.GraphHopperTest.testLoadOSM":51,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":31,"com.graphhopper.util.GHUtilityTest.testCopy":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":5},"transformations":[{"failures":[0,1],"tindex":"3da97d45-828f-11e5-a077-01592dd3c739","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:42","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(int)"},"status":-1},{"failures":[2],"tindex":"3da9a456-828f-11e5-a077-0991468bf14d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"variableMap":{"distance":"lat","dist":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:280","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((60 - double) / (int))"},"status":-1},{"failures":[],"tindex":"3da9a457-828f-11e5-a077-2316ad7fc3f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"variableMap":{"size":"initializedCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:238","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":0},{"failures":[3],"tindex":"3da9a458-828f-11e5-a077-f1f5f47947c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1125","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"variableMap":{"edgePointer":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:100","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isBackward(long))\n    long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, double);\n"},"status":-1},{"failures":[],"tindex":"3da9a459-828f-11e5-a077-97d4f6d6e394","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:149","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 4"},"variableMap":{"tmp":"com.graphhopper.util.AngleCalc.PI_4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:49","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"3da9cb6a-828f-11e5-a077-6d0c95accce9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:551","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"3da9cb6b-828f-11e5-a077-11050c22ee1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:351","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    com.graphhopper.util.PointList.add(double[][int], double[][int], double[][int]);\n}"},"status":0},{"failures":[],"tindex":"3da9cb6c-828f-11e5-a077-317067bc7cdf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"newBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:105","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[4,5,6,7],"tindex":"3da9cb6d-828f-11e5-a077-bf5451044475","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:327","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.isEmpty()) && (com.graphhopper.util.PointList.isEmpty()))\n    return true;\n"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,1,55],"tindex":"3da9cb6e-828f-11e5-a077-63e5557ba2f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"N_CH_REF"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:664","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1},{"failures":[],"tindex":"3da9f27f-828f-11e5-a077-d951f0599d24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:405","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.close()"},"status":0},{"failures":[56],"tindex":"3da9f280-828f-11e5-a077-c302a3fc1abb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:89","type":"CtIfImpl","sourcecode":"if (int == 1)\n    return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1));\nelse if (int == 2)\n    return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize());\nelse if (int == 0) {\n    if ((com.graphhopper.util.PointList.getSize()) == 1)\n        return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n    \n    return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"3da9f281-828f-11e5-a077-3df1f8ac87a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:156","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"variableMap":{"tmp":"ele","tmpNo":"N_ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.eleToInt(double))"},"status":-2},{"failures":[57],"tindex":"3da9f282-828f-11e5-a077-395948f8f6a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:437","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String = java.lang.String.substring(0, int).trim();\n    int = java.lang.Integer.parseInt(java.lang.String);\n    return int * 1.852;\n} "},"status":-1},{"failures":[],"tindex":"3daa1993-828f-11e5-a077-6ff555077ae0","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:80","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.peek_element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.peek_key()"},"status":-2},{"failures":[],"tindex":"3daa1994-828f-11e5-a077-8ff44e248438","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:242","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:149","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":-2},{"failures":[58],"tindex":"3daa1995-828f-11e5-a077-c3c2591d3325","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"size","frontIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:68","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum key.\");\n}"},"status":-1},{"failures":[48],"tindex":"3daa1996-828f-11e5-a077-69d6a50654c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"preciseIndexResolution"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:590","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"index.highResolution\", int)"},"status":-1},{"failures":[],"tindex":"3daa1997-828f-11e5-a077-cf4a7c30be7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"3da9cb6b-828f-11e5-a077-11050c22ee1e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointList.add"]},"branchesDiff":{"delete":["l0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.util.PointListTest.testReverse":["com.graphhopper.util.PointList_int_getSize().b","com.graphhopper.util.NumHelper_boolean_equalsEps(double,double,double).b","com.graphhopper.util.PointList_boolean_is3D().b","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).t2","com.graphhopper.util.NumHelper_boolean_equalsEps(double,double).b","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e3","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e4","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e5","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e6","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).l7","com.graphhopper.util.PointList_boolean_equals(java.lang.Object).e2"],"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":["com.graphhopper.util.PointList_void_reverse().l2","com.graphhopper.util.PointList_void_reverse().e1"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.routing.AbstractRoutingAlgorithm_void_setWeightLimit(double).b","com.graphhopper.routing.VirtualEdgeIterator_void_add(com.graphhopper.util.EdgeIteratorState).b","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).e6","com.graphhopper.routing.Path_gnu.trove.list.TIntList_calcNodes().e1","com.graphhopper.storage.EdgeAccess_com.graphhopper.util.EdgeIteratorState_getEdgeProps(int,int).e1","com.graphhopper.util.AngleCalc_double_alignOrientation(double,double).b","com.graphhopper.storage.EdgeEntry_int_compareTo(com.graphhopper.storage.EdgeEntry).b","com.graphhopper.routing.util.TraversalMode_int_createTraversalId(com.graphhopper.util.EdgeIteratorState,boolean).b","com.graphhopper.routing.Path_java.lang.String_getDebugInfo().b","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).b","com.graphhopper.util.AngleCalc_double_alignOrientation(double,double).t1","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).e1","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).e2","com.graphhopper.routing.DijkstraBidirectionRef_com.graphhopper.routing.Path_extractPath().t1","com.graphhopper.routing.AbstractBidirAlgo_void_runAlgo().b","com.graphhopper.routing.Path$2_void_next(com.graphhopper.util.EdgeIteratorState,int).b","com.graphhopper.routing.Path_int_getFromNode().e1","com.graphhopper.routing.VirtualEdgeIteratorState_double_getDistance().b","com.graphhopper.routing.util.AbstractFlagEncoder_double_getSpeed(long).b","com.graphhopper.GHResponse_com.graphhopper.util.PMap_getHints().b","com.graphhopper.routing.DijkstraBidirectionRef_com.graphhopper.routing.Path_extractPath().b","com.graphhopper.routing.DijkstraBidirectionRef_java.lang.String_getName().b","com.graphhopper.util.EdgeIterator$Edge_boolean_isValid(int).b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).l7","com.graphhopper.routing.util.TraversalMode_boolean_hasUTurnSupport().b","com.graphhopper.routing.Path_long_calcMillis(double,long,boolean).b","com.graphhopper.routing.AbstractRoutingAlgorithm_com.graphhopper.routing.AbstractRoutingAlgorithm(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder,com.graphhopper.routing.util.Weighting,com.graphhopper.routing.util.TraversalMode).b","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).l6","com.graphhopper.storage.GraphHopperStorage_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).b","com.graphhopper.routing.Path_com.graphhopper.routing.Path_setEdgeEntry(com.graphhopper.storage.EdgeEntry).b","com.graphhopper.routing.QueryGraph_boolean_enforceHeadingByEdgeId(int,int,boolean).e1","com.graphhopper.util.GHUtility_com.graphhopper.util.EdgeIteratorState_getEdge(com.graphhopper.storage.Graph,int,int).l2","com.graphhopper.util.PointList_double_getLat(int).b","com.graphhopper.routing.DijkstraBidirectionRef_com.graphhopper.routing.Path_createAndInitPath().b","com.graphhopper.routing.DijkstraBidirectionRef_double_getCurrentFromWeight().b","com.graphhopper.storage.EdgeAccess_com.graphhopper.util.EdgeIteratorState_getEdgeProps(int,int).t2","com.graphhopper.routing.Path_int_getFromNode().b","com.graphhopper.routing.VirtualEdgeIteratorState_boolean_getBoolean(int,boolean,boolean).b","com.graphhopper.routing.DijkstraBidirectionRef_void_initTo(int,double).t2","com.graphhopper.routing.AbstractBidirAlgo_void_runAlgo().l4","com.graphhopper.routing.DijkstraBidirectionRef_void_initTo(int,double).t1","com.graphhopper.routing.QueryGraph_void_addVirtualEdges(gnu.trove.map.TIntObjectMap,com.graphhopper.routing.util.EdgeFilter,boolean,int,int).t1","com.graphhopper.routing.QueryGraph_void_addVirtualEdges(gnu.trove.map.TIntObjectMap,com.graphhopper.routing.util.EdgeFilter,boolean,int,int).t2","com.graphhopper.routing.VirtualEdgeIterator_boolean_next().b","com.graphhopper.routing.DijkstraBidirectionRef_boolean_finished().e1","com.graphhopper.routing.Path_void_forEveryEdge(com.graphhopper.routing.Path$EdgeVisitor).b","com.graphhopper.routing.QueryGraph_int_getPosOfReverseEdge(int).b","com.graphhopper.storage.BaseGraph_void_checkAdjNodeBounds(int).e1","com.graphhopper.routing.Path_com.graphhopper.routing.Path(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.routing.DijkstraBidirectionRef_void_initFrom(int,double).e2","com.graphhopper.routing.AlgorithmOptions_com.graphhopper.routing.util.FlagEncoder_getFlagEncoder().b","com.graphhopper.util.PointList_double_getLon(int).b","com.graphhopper.GraphHopper_java.util.List_getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse).e14","com.graphhopper.routing.Path_long_getTime().b","com.graphhopper.routing.AbstractBidirAlgo_com.graphhopper.routing.AbstractBidirAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder,com.graphhopper.routing.util.Weighting,com.graphhopper.routing.util.TraversalMode).b","com.graphhopper.GraphHopper_java.util.List_getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse).e10","com.graphhopper.GraphHopper_java.util.List_getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse).e13","com.graphhopper.GraphHopper_java.util.List_getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse).e12","com.graphhopper.storage.EdgeAccess_com.graphhopper.util.EdgeIteratorState_getEdgeProps(int,int).b","com.graphhopper.routing.DijkstraBidirectionRef_double_getCurrentToWeight().b","com.graphhopper.routing.QueryGraph_boolean_enforceHeadingByEdgeId(int,int,boolean).b","com.graphhopper.GHResponse_com.graphhopper.GHResponse_setDebugInfo(java.lang.String).b","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_double_getDistance().b","com.graphhopper.routing.Path_gnu.trove.list.TIntList_calcNodes().b","com.graphhopper.routing.DijkstraBidirectionRef_boolean_fillEdgesFrom().b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.PathBidirRef_setEdgeEntryTo(com.graphhopper.storage.EdgeEntry).b","com.graphhopper.util.StopWatch_java.lang.String_toString().t1","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().l4","com.graphhopper.storage.BaseGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).e1","com.graphhopper.routing.DijkstraBidirectionRef_com.graphhopper.routing.DijkstraBidirectionRef(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder,com.graphhopper.routing.util.Weighting,com.graphhopper.routing.util.TraversalMode).b","com.graphhopper.routing.DijkstraBidirectionRef_void_initCollections(int).b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().l5","com.graphhopper.routing.DijkstraBidirectionRef_void_initFrom(int,double).t1","com.graphhopper.routing.Path_void_reverseOrder().b","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).t6","com.graphhopper.routing.QueryGraph_boolean_isVirtualEdge(int).b","com.graphhopper.routing.AbstractRoutingAlgorithm_com.graphhopper.storage.EdgeEntry_createEdgeEntry(int,double).b","com.graphhopper.routing.AbstractRoutingAlgorithm_boolean_accept(com.graphhopper.util.EdgeIterator,int).b","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).b","com.graphhopper.routing.Path_void_forEveryEdge(com.graphhopper.routing.Path$EdgeVisitor).l2","com.graphhopper.routing.util.TraversalMode_boolean_isEdgeBased().b","com.graphhopper.util.AngleCalc_double_calcOrientation(double,double,double,double).b","com.graphhopper.routing.DijkstraBidirectionRef_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).t1","com.graphhopper.routing.DijkstraBidirectionRef_void_initFrom(int,double).b","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).l3","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).l4","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).b","com.graphhopper.routing.util.TraversalMode_int_createTraversalId(com.graphhopper.util.EdgeIteratorState,boolean).e1","com.graphhopper.routing.DijkstraBidirectionRef_boolean_finished().b","com.graphhopper.routing.AlgorithmOptions_java.lang.String_getAlgorithm().b","com.graphhopper.storage.GraphHopperStorage_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).b","com.graphhopper.routing.VirtualEdgeIteratorState_boolean_getBoolean(int,boolean,boolean).t1","com.graphhopper.storage.EdgeEntry_com.graphhopper.storage.EdgeEntry(int,int,double).b","com.graphhopper.routing.RoutingAlgorithmFactorySimple_com.graphhopper.routing.RoutingAlgorithm_createAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.AlgorithmOptions).t1","com.graphhopper.routing.QueryGraph_boolean_enforceHeading(int,double,boolean).t4","com.graphhopper.routing.QueryGraph_boolean_enforceHeading(int,double,boolean).t5","com.graphhopper.routing.QueryGraph_boolean_enforceHeading(int,double,boolean).t2","com.graphhopper.routing.AbstractBidirAlgo_com.graphhopper.routing.Path_calcPath(int,int).b","com.graphhopper.storage.EdgeEntry_int_compareTo(com.graphhopper.storage.EdgeEntry).t1","com.graphhopper.routing.Path_void_processEdge(int,int).b","com.graphhopper.routing.AlgorithmOptions_com.graphhopper.routing.util.Weighting_getWeighting().b","com.graphhopper.storage.BaseGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).b","com.graphhopper.routing.Path_void_reverseOrder().e1","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().b","com.graphhopper.routing.VirtualEdgeIteratorState_boolean_isBackward(com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).e1","com.graphhopper.routing.VirtualEdgeIteratorState_com.graphhopper.util.PointList_fetchWayGeometry(int).e1","com.graphhopper.storage.EdgeAccess_double_getDist(long).b","com.graphhopper.routing.AlgorithmOptions_void_assertNotNull(java.lang.Object,java.lang.String).e1","com.graphhopper.routing.DijkstraBidirectionRef_boolean_fillEdgesTo().e1","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).e2","com.graphhopper.routing.DijkstraBidirectionRef_void_initTo(int,double).b","com.graphhopper.routing.util.EncodedDoubleValue_double_getDoubleValue(long).b","com.graphhopper.routing.AlgorithmOptions_void_assertNotNull(java.lang.Object,java.lang.String).b","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t1","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).e1","com.graphhopper.routing.QueryGraph_boolean_enforceHeading(int,double,boolean).e5","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t6","com.graphhopper.routing.QueryGraph_void_clearUnfavoredStatus().b","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).t1","com.graphhopper.GraphHopper_java.util.List_getPaths(com.graphhopper.GHRequest,com.graphhopper.GHResponse).t11","com.graphhopper.util.GHUtility_com.graphhopper.util.EdgeIteratorState_getEdge(com.graphhopper.storage.Graph,int,int).e1","com.graphhopper.routing.DijkstraBidirectionRef_boolean_isWeightLimitExceeded().b","com.graphhopper.routing.Path_com.graphhopper.routing.Path_setWeight(double).b","com.graphhopper.routing.VirtualEdgeIteratorState_boolean_isForward(com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.routing.AbstractRoutingAlgorithm_void_checkAlreadyRun().e1","com.graphhopper.routing.QueryGraph_void_addVirtualEdges(gnu.trove.map.TIntObjectMap,com.graphhopper.routing.util.EdgeFilter,boolean,int,int).b","com.graphhopper.routing.AbstractBidirAlgo_void_runAlgo().e2","com.graphhopper.storage.EdgeEntry_int_compareTo(com.graphhopper.storage.EdgeEntry).e1","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).t3","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).t4","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).t5","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e1","com.graphhopper.routing.util.AbstractFlagEncoder_boolean_isBackward(long).b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).t2","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).t5","com.graphhopper.routing.Path_void_addEdge(int).b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).t3","com.graphhopper.routing.AbstractBidirAlgo_void_runAlgo().t1","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).t4","com.graphhopper.routing.AbstractBidirAlgo_void_runAlgo().t2","com.graphhopper.routing.VirtualEdgeIterator_com.graphhopper.routing.VirtualEdgeIterator(int).b","com.graphhopper.routing.util.FastestWeighting_double_calcWeight(com.graphhopper.util.EdgeIteratorState,boolean,int).e1","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e6","com.graphhopper.routing.util.FastestWeighting_double_calcWeight(com.graphhopper.util.EdgeIteratorState,boolean,int).e2","com.graphhopper.util.StopWatch_java.lang.String_toString().b","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).e1","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).e2","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).e3","com.graphhopper.routing.VirtualEdgeIterator_com.graphhopper.util.EdgeIterator_reset().b","com.graphhopper.routing.QueryGraph_com.graphhopper.storage.NodeAccess_getNodeAccess().b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).t1","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).t2","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).t3","com.graphhopper.routing.Path_com.graphhopper.util.EdgeIteratorState_getFinalEdge().b","com.graphhopper.routing.AlgorithmOptions_com.graphhopper.routing.util.TraversalMode_getTraversalMode().b","com.graphhopper.routing.VirtualEdgeIteratorState_int_getBaseNode().b","com.graphhopper.util.GHUtility_com.graphhopper.util.EdgeIteratorState_getEdge(com.graphhopper.storage.Graph,int,int).b","com.graphhopper.routing.VirtualEdgeIterator_int_count().b","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).e4","com.graphhopper.routing.util.AbstractFlagEncoder_double_getReverseSpeed(long).b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().e1","com.graphhopper.routing.VirtualEdgeIterator_long_getFlags().b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().e3","com.graphhopper.routing.util.AbstractFlagEncoder_double_getSpeed(long).e1","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().e2","com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch(java.lang.String).b","com.graphhopper.routing.AbstractBidirAlgo_int_getVisitedNodes().b","com.graphhopper.routing.QueryGraph$3_boolean_execute(int).b","com.graphhopper.GHResponse_com.graphhopper.GHResponse_setDebugInfo(java.lang.String).t1","com.graphhopper.routing.AbstractRoutingAlgorithm_boolean_accept(com.graphhopper.util.EdgeIterator,int).t1","com.graphhopper.routing.QueryGraph_int_getPosOfReverseEdge(int).t1","com.graphhopper.routing.util.FastestWeighting_double_calcWeight(com.graphhopper.util.EdgeIteratorState,boolean,int).b","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_boolean_getBoolean(int,boolean,boolean).b","com.graphhopper.routing.AbstractRoutingAlgorithm_boolean_accept(com.graphhopper.util.EdgeIterator,int).e1","com.graphhopper.routing.Path_com.graphhopper.routing.Path_setEndNode(int).b","com.graphhopper.routing.AbstractRoutingAlgorithm_void_checkAlreadyRun().b","com.graphhopper.util.PointList$1_double_getLat(int).b","com.graphhopper.routing.DijkstraBidirectionRef_boolean_fillEdgesTo().b","com.graphhopper.routing.Path_double_getWeight().b","com.graphhopper.storage.BaseGraph_void_checkAdjNodeBounds(int).b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.PathBidirRef(com.graphhopper.storage.Graph,com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_boolean_isBackward(com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.routing.Path_void_forEveryEdge(com.graphhopper.routing.Path$EdgeVisitor).e1","com.graphhopper.routing.util.FastestWeighting_double_calcWeight(com.graphhopper.util.EdgeIteratorState,boolean,int).t2","com.graphhopper.routing.VirtualEdgeIteratorState_int_getEdge().b","com.graphhopper.routing.VirtualEdgeIteratorState_com.graphhopper.util.PointList_fetchWayGeometry(int).t2","com.graphhopper.routing.VirtualEdgeIteratorState_com.graphhopper.util.PointList_fetchWayGeometry(int).t1","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).b","com.graphhopper.routing.VirtualEdgeIteratorState_int_getAdjNode().b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.Path_extract().t3","com.graphhopper.storage.EdgeAccess_double_getDist(long).e1","com.graphhopper.routing.VirtualEdgeIterator_boolean_getBoolean(int,boolean,boolean).b","com.graphhopper.routing.PathBidirRef_com.graphhopper.routing.PathBidirRef_setSwitchToFrom(boolean).b","com.graphhopper.routing.DijkstraBidirectionRef_void_fillEdges(com.graphhopper.storage.EdgeEntry,java.util.PriorityQueue,gnu.trove.map.TIntObjectMap,com.graphhopper.util.EdgeExplorer,boolean).b","com.graphhopper.routing.QueryGraph_void_clearUnfavoredStatus().l1","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).e2","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).e1","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer().b","com.graphhopper.routing.VirtualEdgeIteratorState_void_setVirtualEdgePreference(boolean).b","com.graphhopper.routing.Path_long_calcMillis(double,long,boolean).e1","com.graphhopper.routing.QueryGraph_void_fillVirtualEdges(gnu.trove.map.TIntObjectMap,int,com.graphhopper.util.EdgeExplorer).t2","com.graphhopper.routing.DijkstraBidirectionRef_boolean_fillEdgesFrom().e1","com.graphhopper.routing.Path_long_calcMillis(double,long,boolean).e3","com.graphhopper.routing.Path_long_calcMillis(double,long,boolean).e2","com.graphhopper.routing.RoutingAlgorithmFactorySimple_com.graphhopper.routing.RoutingAlgorithm_createAlgo(com.graphhopper.storage.Graph,com.graphhopper.routing.AlgorithmOptions).b","com.graphhopper.routing.Path_com.graphhopper.routing.Path_setFromNode(int).b","com.graphhopper.routing.VirtualEdgeIteratorState_long_getFlags().b","com.graphhopper.routing.VirtualEdgeIterator_int_getAdjNode().b","com.graphhopper.routing.VirtualEdgeIterator_double_getDistance().b","com.graphhopper.util.AngleCalc_double_alignOrientation(double,double).e2","com.graphhopper.routing.VirtualEdgeIterator_int_getEdge().b","com.graphhopper.routing.QueryGraph_com.graphhopper.util.EdgeIteratorState_getEdgeIteratorState(int,int).b","com.graphhopper.routing.Path_com.graphhopper.routing.Path_setFound(boolean).b"]},"type":"branch"}]},{"transformation":"3da9f27f-828f-11e5-a077-d951f0599d24","diffs":[{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.DijkstraOneToMany_void_close().b"],"com.graphhopper.GraphHopperTest.testFootOnly":["com.graphhopper.routing.DijkstraOneToMany_void_close().b"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":["com.graphhopper.routing.DijkstraOneToMany_void_close().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.routing.DijkstraOneToMany.close"]},"type":"staticDiff"}]},{"transformation":"3da9cb6c-828f-11e5-a077-317067bc7cdf","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}