{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":62,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":87,"com.graphhopper.routing.PathTest.testFindInstruction":96,"com.graphhopper.reader.OSMReaderTest.testFerry":74,"com.graphhopper.routing.QueryGraphTest.testOneWay":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":71,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":18,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":91,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":58,"com.graphhopper.reader.OSMReaderTest.testWithBounds":12,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":39,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":21,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":14,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":45,"com.graphhopper.reader.OSMReaderTest.testFoot":75,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":68,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":65,"com.graphhopper.util.HelperTest.testGetLocale":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":66,"com.graphhopper.reader.OSMReaderTest.testOneWay":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":107,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":114,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":0,"com.graphhopper.GraphHopperAPITest.testDisconnected179":84,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":113,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":59,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":9,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":108,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":28,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":16,"com.graphhopper.GraphHopperTest.testLoadOSM":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":27,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":25,"com.graphhopper.reader.OSMReaderTest.testSort":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":73,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":80,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":15,"com.graphhopper.reader.OSMReaderTest.testMain":8,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":69,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":90,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":37,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":41,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":104,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":61,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":19,"com.graphhopper.GraphHopperTest.testFootAndCar":4,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":93,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":105,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":110,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":64,"com.graphhopper.util.InstructionListTest.testCreateGPX":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":40,"com.graphhopper.reader.OSMReaderTest.testRelation":94,"com.graphhopper.GraphHopperTest.testPrepareOnly":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":1,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":89,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":34,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":50,"com.graphhopper.GraphHopperAPITest.testLoad":83,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":38,"com.graphhopper.GraphHopperTest.testFootOnly":5,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":44,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":46,"com.graphhopper.reader.OSMReaderTest.testBarriers":77,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":72},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"1f2d7c1c-82a4-11e5-b46d-71e8717f4ec8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:171","type":"CtReturnImpl","sourcecode":"return !boolean"},"variableMap":{"obtained":"is3D"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:61","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"1f2da32d-82a4-11e5-b46d-87ce89fe90b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:869","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(long)"},"status":-2},{"failures":[13,14,15,16],"tindex":"1f2da32e-82a4-11e5-b46d-090772d8ebf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:348","type":"CtIfImpl","sourcecode":"if (boolean) {\n    super.rename(java.lang.String);\n} "},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,2,3,30,4,31,32,33,34,5,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,8,76,77,9,10,78,11,79,80,12,81,82,83,84],"tindex":"1f2dca3f-82a4-11e5-b46d-ddbceaa91864","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:175","type":"CtOperatorAssignmentImpl","sourcecode":"int += byte[][int]"},"status":-1},{"failures":[85,86,87,88,89,90,51,69],"tindex":"1f2dca40-82a4-11e5-b46d-df64fd2d0868","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:93","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"variableMap":{"orientation":"queryLat","resultOrientation":"queryLon","baseOrientation":"foundDist","java.lang.Math.PI":"foundDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:99","type":"CtForImpl","sourcecode":"for (int int = 0, int int ; int < 2 ; int++) {\n    if (int == 0) {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    } else {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    }\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if (double < 0)\n        continue;\n    \n    if (double < double) {\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        double = double;\n    } \n    if (int > 0)\n        continue;\n    \n    int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n        double double = com.graphhopper.util.DistanceCalc.calcDenormalizedDist(com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double));\n        if (double < double) {\n            com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n            com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n            if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n                com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n            \n            double = double;\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"1f2df151-82a4-11e5-b46d-2f159dc695b8","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"toLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:31","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"1f2df152-82a4-11e5-b46d-9535e8b2d749","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"lon","incDist2DSum":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:659","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) - double"},"status":0},{"failures":[],"tindex":"1f2df153-82a4-11e5-b46d-cfbd1cb9f240","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:183","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode"},"variableMap":{"traversalMode":"traversalMode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.com.graphhopper.routing.util.TraversalMode"},"status":0},{"failures":[10,91,92],"tindex":"1f2e1864-82a4-11e5-b46d-9787ac80193d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"variableMap":{"indexCopy":"heights","index":"heights"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:252","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(byte[].int)"},"status":-1},{"failures":[],"tindex":"1f2e1865-82a4-11e5-b46d-87add394863e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:903","type":"CtIfImpl","sourcecode":"if ((double) <= (double))\n    return false;\n"},"variableMap":{"equalNormedDelta":"weight","currNormedDist":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:184","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)) >= (com.graphhopper.routing.PathBidirRef.getWeight())"},"status":-2},{"failures":[10,91,93,92],"tindex":"1f2e1866-82a4-11e5-b46d-25b9c580cff6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:149","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"W\""},"variableMap":{"cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:196","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"status":-1},{"failures":[],"tindex":"1f2e1867-82a4-11e5-b46d-99aed397de01","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:239","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"1f2e3f78-82a4-11e5-b46d-89b39e2de626","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:199","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:214","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[94],"tindex":"1f2e3f79-82a4-11e5-b46d-7bac6a2c6514","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:86","type":"CtLocalVariableImpl","sourcecode":"long long = long - (long)"},"variableMap":{"lastKey":"oldRelationFlags","key":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:626","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[],"tindex":"1f2e3f7a-82a4-11e5-b46d-5d415c034be6","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:164","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"variableMap":{"maxLatTmp":"maxLon","minLatTmp":"maxLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"1f2e3f7b-82a4-11e5-b46d-a9f378fbea85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[18,19,20,95,96,97,98,99,100,101,23,24,25,26,27,2,87,89,50,51,54,68,69,72,102],"tindex":"1f2e668c-82a4-11e5-b46d-bd8f6a4a7fb0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"r_lon","incDist2DSum":"a_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:228","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-1},{"failures":[],"tindex":"1f2e668d-82a4-11e5-b46d-3fee70dd93fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:182","type":"CtInvocationImpl","sourcecode":"java.text.SimpleDateFormat.setTimeZone(java.util.TimeZone.getTimeZone(\"UTC\"))"},"status":0},{"failures":[103],"tindex":"1f2e668e-82a4-11e5-b46d-6bbeaea92e33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:69","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[104,105,106,107,108,109,110,111,112,113,114],"tindex":"1f2e668f-82a4-11e5-b46d-b50e79f24581","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:421","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1f2e668d-82a4-11e5-b46d-3fee70dd93fc","diffs":[{"methodsDiff":{"delete":["java.text.DateFormat.setTimeZone","java.util.TimeZone.getTimeZone"]},"type":"staticDiff"}]},{"transformation":"1f2e3f7b-82a4-11e5-b46d-a9f378fbea85","diffs":[{"branches":{"com.graphhopper.routing.PathBidirRefTest.testExtract":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_start().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.start"]},"type":"staticDiff"}]},{"transformation":"1f2df152-82a4-11e5-b46d-9535e8b2d749","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t2","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e2"]},"type":"branch"}]}]}