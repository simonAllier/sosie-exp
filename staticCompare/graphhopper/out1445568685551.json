{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":159,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":252,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":142,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":148,"com.graphhopper.reader.OSMReaderTest.testFerry":84,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":240,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":241,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":64,"com.graphhopper.routing.QueryGraphTest.testOneWay":69,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":140,"com.graphhopper.reader.OSMReaderTest.testWithBounds":95,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":157,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":162,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":1,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":195,"com.graphhopper.GraphHopperTest.testPrepare":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":58,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":27,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":117,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":43,"com.graphhopper.util.InstructionListTest.testWayList":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":51,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":236,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":234,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":154,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":15,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":276,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":141,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":26,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":79,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":90,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":170,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":11,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":109,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":225,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":280,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":270,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":119,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":179,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":277,"com.graphhopper.reader.OSMReaderTest.testSort":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":78,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":35,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":61,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":253,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":100,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":49,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":212,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":207,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":204,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":55,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":25,"com.graphhopper.util.GHUtilityTest.testSort":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":155,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":46,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":71,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":230,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":210,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":262,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":174,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":83,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":255,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":16,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":245,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":263,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":220,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":112,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":74,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":105,"com.graphhopper.reader.OSMReaderTest.testBarriers":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":193,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":18,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":152,"com.graphhopper.util.GHUtilityTest.testCopy":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":209,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":217,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":50,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":264,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":124,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":186,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":200,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":218,"com.graphhopper.reader.PrinctonReaderTest.testRead":98,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":37,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":63,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":196,"com.graphhopper.util.InstructionListTest.testWayList2":238,"com.graphhopper.reader.OSMReaderTest.testFoot":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":167,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":163,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":281,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":126,"com.graphhopper.reader.OSMReaderTest.testOneWay":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":181,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":82,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":113,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":185,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":216,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":260,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":104,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":161,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":89,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":197,"com.graphhopper.routing.PathBidirRefTest.testExtract":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":30,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":258,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":232,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":249,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":166,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":231,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":137,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":165,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":146,"com.graphhopper.util.GHUtilityTest.testSort2":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":56,"com.graphhopper.reader.OSMReaderTest.testMain":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":175,"com.graphhopper.routing.PathBidirRefTest.testExtract2":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":198,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":271,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":73,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":139,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":194,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":247,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":180,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":259,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":34,"com.graphhopper.storage.GraphHopperStorageTest.testClone":107,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":278,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":203,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":211,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":189,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":267,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":52,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":274,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":269,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":176,"com.graphhopper.GraphHopperTest.testFootOnly":17,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":135,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":92,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":136,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":160,"com.graphhopper.util.InstructionListTest.testFind":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":282},"transformations":[{"failures":[],"tindex":"f386b1e5-7930-11e5-99ee-a7932b2962b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:66","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FlagEncoder.getSpeed(com.graphhopper.util.EdgeIteratorState.getFlags())"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"f386d8f6-7930-11e5-99ee-5ddff0836b0d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"newEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int)"},"status":-1},{"failures":[],"tindex":"f3870007-7930-11e5-99ee-bbb70771708d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1045","type":"CtAssertImpl","sourcecode":"assert (int) != (int) : ((((((\"endless loop detected for base node: \" + (int)) + \", adj node: \") + (int)) + \", edge pointer: \") + (long)) + \", edge: \") + (int)"},"variableMap":{"edgePointer":"hash","edgeId":"i","baseNode":"i","adjNode":"i","nextEdgeId":"allBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:195","type":"CtIfImpl","sourcecode":"if (int < (int))\n    long <<= 1;\nelse\n    break;\n"},"status":0},{"failures":[245,246,247,248],"tindex":"f3870008-7930-11e5-99ee-4d18a231d02a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:404","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.Set<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-1},{"failures":[0,3,4,5,6,7,249,9,10,11,12,13,14,16,17,47,50,54,55,58,62,63,250,251,252,65,67,253,254,68,69,86,87,88,255,256,257,258,259,128,260,129,130,261,262,263,264,265,266,267,131,268,132,269,133,134,270,271,135,136,272,273,274,137,138,275,139,276,140,141,277,278,142,143,279,280,281,144,145,282,146,173],"tindex":"f3872719-7930-11e5-99ee-6d6221b8a444","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:67","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[76,78,79,97,112,114,122,156,158,166,189,191,199,216,218,226],"tindex":"f387271a-7930-11e5-99ee-0328dfb3a67f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.storage.EdgeAccess.int)"},"status":-1},{"failures":[],"tindex":"f387271b-7930-11e5-99ee-e13e2abc73ac","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:539","type":"CtIfImpl","sourcecode":"if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n"},"status":-2},{"failures":[],"tindex":"f3874e2c-7930-11e5-99ee-87926a9aafef","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"com.graphhopper.util.EdgeIterator.NO_EDGE","capacity":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:283","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"f3874e2d-7930-11e5-99ee-b15de0e65700","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":-2},{"failures":[],"tindex":"f3874e2e-7930-11e5-99ee-1dfef42bcd39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:255","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\""},"variableMap":{"baseUrl":"key","fileDetails":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:80","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.PMap.get(java.lang.String)"},"status":-2},{"failures":[],"tindex":"f3874e2f-7930-11e5-99ee-499056dc39d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:100","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"f3874e30-7930-11e5-99ee-fb4084584513","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:112","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f3874e31-7930-11e5-99ee-bf8d0e187a6b","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1074","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.getHints().put(\"visited_nodes.sum\", long)"},"variableMap":{"visitedNodesSum":"visitedNodesSum","rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1075","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.getHints().put(\"visited_nodes.average\", (((float)(long)) / ((java.util.List<com.graphhopper.util.shapes.GHPoint>.size()) - 1)))"},"status":-2},{"failures":[],"tindex":"f3874e32-7930-11e5-99ee-8d8e1be67f63","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:683","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f3877543-7930-11e5-99ee-0fef4da32321","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:376","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    return false;\n"},"variableMap":{"favoredHeading":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:742","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.index.TIntHashSet.isEmpty())) {\n    double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int);\n    double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, com.graphhopper.storage.index.TIntHashSet);\n    if (double < double)\n        return true;\n    \n} "},"status":-2},{"failures":[],"tindex":"f3877544-7930-11e5-99ee-0595b6d9d185","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"bytePos","key":"tmpIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:256","type":"CtIfImpl","sourcecode":"if ((long * 2) == long)\n    int[][][int][int] = short;\nelse\n    int[][][int][int] = short << 16;\n"},"status":-2},{"failures":[],"tindex":"f3877545-7930-11e5-99ee-4fad2eecb76b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:75","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f3877546-7930-11e5-99ee-39f00306e2aa","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"com.graphhopper.util.Helper.MB","highKey":"com.graphhopper.util.Helper.MB","key":"com.graphhopper.util.Helper.MB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"status":-2},{"failures":[],"tindex":"f3877547-7930-11e5-99ee-11aae254715e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1074","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.getHints().put(\"visited_nodes.sum\", long)"},"status":-2},{"failures":[],"tindex":"f3877548-7930-11e5-99ee-55225706caf3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:150","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"variableMap":{"x1":"a_lat_deg","x2":"a_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:176","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}