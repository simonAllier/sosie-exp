{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":221,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":330,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":290,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":117,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":208,"com.graphhopper.reader.OSMReaderTest.testFerry":35,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":63,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":64,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":278,"com.graphhopper.routing.QueryGraphTest.testOneWay":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":14,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":113,"com.graphhopper.reader.OSMReaderTest.testWithBounds":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":218,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":284,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":341,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":165,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":297,"com.graphhopper.util.BitUtilLittleTest.testToDouble":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":225,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":148,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":20,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":189,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":191,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":305,"com.graphhopper.GraphHopperTest.testPrepare":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":329,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":243,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":258,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":293,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":312,"com.graphhopper.util.InstructionListTest.testWayList":67,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":272,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":321,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":0,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":62,"com.graphhopper.GraphHopperAPITest.testDisconnected179":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":164,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":17,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":111,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":318,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":114,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":56,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":359,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":108,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":176,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":239,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":50,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":308,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":306,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":115,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":172,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":264,"com.graphhopper.reader.OSMReaderTest.testSort":38,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":324,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":187,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":269,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":302,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":237,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":76,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":334,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":57,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":241,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":350,"com.graphhopper.routing.PathTest.testWayList":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":238,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":181,"com.graphhopper.coll.OSMIDMapTest.testGet2":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":199,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":112,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":273,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":83,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":206,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":326,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":24,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":358,"com.graphhopper.util.GHUtilityTest.testSort":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":119,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":316,"com.graphhopper.coll.OSMIDMapTest.testGetLong":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":109,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":291,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":94,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":144,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":166,"com.graphhopper.util.AngleCalcTest.testCalcAzimuth":2,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":200,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":285,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":337,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":75,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":260,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":15,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":86,"com.graphhopper.GraphHopperAPITest.testLoad":58,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":333,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":170,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":245,"com.graphhopper.reader.OSMReaderTest.testBarriers":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":229,"com.graphhopper.routing.PathTest.testFound":352,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":145,"com.graphhopper.util.GHUtilityTest.testCopy":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":317,"com.graphhopper.routing.PathTest.testFindInstruction":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":309,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":88,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":216,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":320,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":135,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":270,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":325,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":102,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":328,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":299,"com.graphhopper.reader.PrinctonReaderTest.testRead":55,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":84,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":212,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":242,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":277,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":194,"com.graphhopper.util.InstructionListTest.testWayList2":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":13,"com.graphhopper.reader.OSMReaderTest.testFoot":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":228,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":120,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":275,"com.graphhopper.reader.OSMReaderTest.testOneWay":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":185,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":177,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":267,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":87,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":303,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":222,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":244,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":250,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":298,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":158,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":332,"com.graphhopper.coll.OSMIDMapTest.testGet":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":307,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":296,"com.graphhopper.routing.PathBidirRefTest.testExtract":348,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":365,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":338,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":118,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":364,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":160,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":230,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":362,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":361,"com.graphhopper.util.GHUtilityTest.testSort2":70,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":219,"com.graphhopper.reader.OSMReaderTest.testMain":37,"com.graphhopper.util.BitUtilLittleTest.testToLong":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":201,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":282,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":4,"com.graphhopper.routing.PathBidirRefTest.testExtract2":349,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":196,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":310,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":124,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":139,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":339,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":163,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":186,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":188,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":12,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":47,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":331,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":116,"com.graphhopper.storage.GraphHopperStorageTest.testClone":246,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":233,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":193,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":255,"com.graphhopper.GraphHopperTest.testFootAndCar":51,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":213,"com.graphhopper.routing.PathTest.testTime":353,"com.graphhopper.util.InstructionListTest.testCreateGPX":10,"com.graphhopper.util.AngleCalcTest.checkAzimuthConsitency":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":210,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":300,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":323,"com.graphhopper.util.GHUtilityTest.testSortDirected":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":192,"com.graphhopper.GraphHopperTest.testPrepareOnly":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":183,"com.graphhopper.GraphHopperTest.testVia":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":18,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":322,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":168,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":283,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":11,"com.graphhopper.GraphHopperTest.testFootOnly":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":153,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":43,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":155,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":182,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":354,"com.graphhopper.util.InstructionListTest.testFind":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":314,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":175},"transformations":[{"failures":[],"tindex":"9100d0fa-8281-11e5-97b6-4342683cfc03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"status":0},{"failures":[0,1,2],"tindex":"9100f80b-8281-11e5-97b6-81efa79267ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"orientation","java.lang.Math.PI":"orientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"status":-1},{"failures":[3,4,5,6,7,8,9],"tindex":"9100f80c-8281-11e5-97b6-3fb47c659068","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:467","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadEdgesHeader()"},"status":-1},{"failures":[10,11],"tindex":"9100f80d-8281-11e5-97b6-abb8594f1bb4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:215","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<trkseg>\")"},"variableMap":{"track":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:242","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:distance>\").append(com.graphhopper.util.Helper.round(com.graphhopper.util.Instruction.getDistance(), 1))"},"status":-1},{"failures":[],"tindex":"91011f1e-8281-11e5-97b6-f51e47bfa093","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"maxLeafEntries":"previousEntryIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:145","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"91011f1f-8281-11e5-97b6-f9d37190c618","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:987","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"91011f20-8281-11e5-97b6-b7389101eadb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:73","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints())"},"status":0},{"failures":[12,13,14,15,16,17,18],"tindex":"91011f21-8281-11e5-97b6-89b18a20df5b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:551","type":"CtIfImpl","sourcecode":"if (((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"use_sidepath\"))) || (\"parking_aisle\".equals(java.lang.String))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"yes\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[19],"tindex":"91014632-8281-11e5-97b6-639f423eda45","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-1},{"failures":[20,7,21,22,23,8,24,25,9,26,27],"tindex":"91014633-8281-11e5-97b6-ab8fe19544ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:765","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, false)"},"status":-1},{"failures":[],"tindex":"91014634-8281-11e5-97b6-332ebabaa9c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.reverseOrder()"},"status":-2},{"failures":[28,29,30,31,32,33,34],"tindex":"91014635-8281-11e5-97b6-3f7e90c5c58a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:77","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 40))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:78","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 4)] = ((byte)(long >> 32))"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,20,7,22,49,50,51,23,8,25,9,52,26],"tindex":"91014636-8281-11e5-97b6-096d4f4c4e86","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:58","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\");\n    gnu.trove.list.TLongList.add(java.lang.Long.parseLong(java.lang.String));\n} "},"status":-1},{"failures":[10,11],"tindex":"91016d47-8281-11e5-97b6-51bb16775a7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:255","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rtept>\")"},"status":-1},{"failures":[36,37,38,39,42,43,44,45,46,11,53,54,20,21,22,49,50,51,23,8,25,9],"tindex":"91016d48-8281-11e5-97b6-9b874bca5ca2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:80","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"variableMap":{"time":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:279","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,55,56,57,58,59,60,61,62,63,64,65,66,67,68,11,69,70,71,72,73,3,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,4,168,169,170,171,5,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,6,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,20,7,360,361,362,363,364,365,22,49,50,51,23,8,25,9,52,26],"tindex":"91019459-8281-11e5-97b6-cd65cc3860e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1056","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((int) == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException(((((\"call next before detaching or setEdgeId (edgeId:\" + (int)) + \" vs. next \") + (int)) + \")\"));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"E_NODEB","edgeId":"nodeOther","nextEdgeId":"E_NODEB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:199","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[],"tindex":"9101bb6a-8281-11e5-97b6-b78541a253a1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:133","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSetFrom","ase":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:107","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"status":-1},{"failures":[],"tindex":"9101bb6b-8281-11e5-97b6-b922329be15e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:224","type":"CtIfImpl","sourcecode":"if (int < (int)) {\n    throw new java.lang.IllegalStateException(\"BinHeap contains too many elements to fit in new capacity.\");\n} "},"variableMap":{"size":"key","capacity":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint)"},"status":0},{"failures":[48,79,88,93,100,101,175,184,189,196,197,209,218,223,230,231,245,254,259,266,267,339,344,345],"tindex":"9101bb6c-8281-11e5-97b6-1fd9830ac5b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:224","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"variableMap":{"shift":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:750","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-1},{"failures":[],"tindex":"9101bb6d-8281-11e5-97b6-f995bdd1010d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:487","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 1000000.0))) / 1000000.0"},"variableMap":{"value":"resultOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:107","type":"CtReturnImpl","sourcecode":"return double"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"91011f20-8281-11e5-97b6-b7389101eadb","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).t1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).t1","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).b","com.graphhopper.util.PointList_void_trimToSize(int).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList,int,int).b","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).e1","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).t3","com.graphhopper.util.DouglasPeucker_void_compressNew(com.graphhopper.util.PointList,int).l5","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2","com.graphhopper.util.PointList_void_trimToSize(int).e1"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.DouglasPeucker.simplify","com.graphhopper.util.Instruction.getPoints"]},"type":"staticDiff"}]},{"transformation":"9101bb6b-8281-11e5-97b6-b922329be15e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.geohash.KeyAlgo.decode"]},"type":"staticDiff"}]}]}