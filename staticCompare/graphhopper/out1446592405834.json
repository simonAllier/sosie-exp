{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":0,"com.graphhopper.search.NameIndexTest.testCreate":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":135,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":104,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":181,"com.graphhopper.reader.OSMReaderTest.testFerry":69,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":138,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":139,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":286,"com.graphhopper.routing.QueryGraphTest.testOneWay":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":310,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":177,"com.graphhopper.reader.OSMReaderTest.testWithBounds":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":59,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":363,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":38,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":24,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":203,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":149,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":121,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":25,"com.graphhopper.GraphHopperTest.testPrepare":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":349,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":4,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":237,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":42,"com.graphhopper.search.NameIndexTest.testFlush":66,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":254,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":11,"com.graphhopper.util.InstructionListTest.testWayList":48,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":14,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":142,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":220,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":145,"com.graphhopper.GraphHopperAPITest.testDisconnected179":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":301,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":275,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":379,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":163,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":175,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":129,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":178,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":288,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":365,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":33,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":295,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":159,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":243,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":359,"com.graphhopper.GraphHopperTest.testLoadOSM":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":179,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":259,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":289,"com.graphhopper.reader.OSMReaderTest.testSort":72,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":39,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":328,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":264,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":46,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":18,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":36,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":236,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":85,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":86,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":230,"com.graphhopper.routing.PathTest.testWayList":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":362,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":300,"com.graphhopper.coll.OSMIDMapTest.testGet2":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":318,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":244,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":374,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":125,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":176,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":354,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":339,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":280,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":341,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":218,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":324,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":3,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":162,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":92,"com.graphhopper.util.GHUtilityTest.testSort":52,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":321,"com.graphhopper.coll.OSMIDMapTest.testGetLong":371,"com.graphhopper.search.NameIndexTest.testPut":65,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":105,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":366,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":172,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":353,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":279,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":331,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":112,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":193,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":329,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":287,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":169,"com.graphhopper.storage.MMapDirectoryTest.testSynched":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":345,"com.graphhopper.GraphHopperAPITest.testLoad":19,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":83,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":350,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":249,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":284,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":239,"com.graphhopper.reader.OSMReaderTest.testBarriers":28,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":335,"com.graphhopper.routing.PathTest.testFound":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":326,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":166,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":13,"com.graphhopper.util.GHUtilityTest.testCopy":51,"com.graphhopper.routing.PathTest.testFindInstruction":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":10,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":62,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":67,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":325,"com.graphhopper.util.InstructionListTest.testEmptyList":141,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":170,"com.graphhopper.coll.GHSortedCollectionTest.testPoll":375,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":265,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":15,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":146,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":348,"com.graphhopper.reader.PrinctonReaderTest.testRead":31,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":342,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":283,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":120,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":314,"com.graphhopper.util.InstructionListTest.testWayList2":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":209,"com.graphhopper.reader.OSMReaderTest.testFoot":70,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":37,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":184,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":269,"com.graphhopper.reader.OSMReaderTest.testOneWay":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":340,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":364,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":111,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":304,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":296,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":361,"com.graphhopper.storage.RAMDirectoryTest.testSynched":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":119,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":346,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":221,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":238,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":245,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":73,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":213,"com.graphhopper.coll.OSMIDMapTest.testGet":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":315,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":44,"com.graphhopper.routing.PathBidirRefTest.testExtract":94,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":196,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":370,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":148,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":155,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":113,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":285,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":367,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":215,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":152,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":378,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":6,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":234,"com.graphhopper.util.GHUtilityTest.testSort2":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":134,"com.graphhopper.reader.OSMReaderTest.testMain":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":23,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":99,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":320,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":80,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":281,"com.graphhopper.routing.PathBidirRefTest.testExtract2":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":316,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":330,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":207,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":106,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":219,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":64,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":308,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":356,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":376,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":136,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":291,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":45,"com.graphhopper.storage.StorablePropertiesTest.testStore":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":180,"com.graphhopper.storage.GraphHopperStorageTest.testClone":241,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":270,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":312,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":273,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":250,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":56,"com.graphhopper.routing.PathTest.testTime":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":298,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":204,"com.graphhopper.reader.OSMReaderTest.testRelation":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":132,"com.graphhopper.util.GHUtilityTest.testSortDirected":147,"com.graphhopper.storage.StorablePropertiesTest.testLoad":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":338,"com.graphhopper.GraphHopperTest.testPrepareOnly":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":303,"com.graphhopper.GraphHopperTest.testVia":157,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":173,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":131,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":30,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":202,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":282,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":143,"com.graphhopper.GraphHopperTest.testFootOnly":165,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":260,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":208,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":222,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":380,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":210,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":274,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":89,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":302,"com.graphhopper.util.InstructionListTest.testFind":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":293},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"7c5e2f3b-8280-11e5-b378-cd23f8c85091","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:160","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1))"},"variableMap":{"res":"res","fullPL":"fullPL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:163","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2))"},"status":-1},{"failures":[],"tindex":"7c5e7d5c-8280-11e5-b378-893e7ff26df7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"variableMap":{"pavementName":"str","wayTypeName":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:421","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return \"\";\n"},"status":-2},{"failures":[],"tindex":"7c5e7d5d-8280-11e5-b378-bd3958d2b9a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:377","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[8,9,10,11,12,13,14,15,3,16,4,17,18,5,19,20,21,22,23,24,25,26,27],"tindex":"7c5e7d5e-8280-11e5-b378-7be357163f72","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:99","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.util.PointList)"},"variableMap":{"tmpPoints":"pillarNodes","fullPoints":"pillarNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:913","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.reverse()"},"status":-1},{"failures":[28,29,30,31,32,33,34,0,35,36,1,37,38,39,40,41,42,43,44,45,46,47,12,14,3,4,5,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"7c5ea46f-8280-11e5-b378-49a56bc84e67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:150","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return ;\n} "},"variableMap":{"size":"nodeIndex","i":"nodeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:323","type":"CtIfImpl","sourcecode":"if (int < (int))\n    return ;\n"},"status":-1},{"failures":[],"tindex":"7c5ea470-8280-11e5-b378-c9408020bf95","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:71","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int) * 1.5F))"},"variableMap":{"currentBucket":"old"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:265","type":"CtLocalVariableImpl","sourcecode":"int int = gnu.trove.list.TIntList.get(int)"},"status":-2},{"failures":[],"tindex":"7c5ea471-8280-11e5-b378-19989cfd9615","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:291","type":"CtIfImpl","sourcecode":"if ((short < (-1000)) || (short > 12000))\n    short = java.lang.Short.short;\n"},"status":-2},{"failures":[64,65,66,67,68,69,70,71,72,28,73,8,29,74,75,76,30,77,78,79,80,81,31,32,82,83,84,85,86,33,87,88,89,90,9,91,92,93,94,95,96,96,97,97,98,98,34,34,0,0,99,99,35,35,100,100,101,101,36,36,1,1,102,102,103,103,104,104,105,105,37,37,106,107,108,38,109,39,40,41,110,111,112,113,42,43,114,44,115,116,117,118,45,46,119,120,121,122,123,47,10,124,125,11,12,126,127,128,13,129,130,2,14,131,132,133,15,3,134,16,4,135,136,17,137,18,5,138,139,140,141,142,48,49,143,144,145,146,50,51,52,147,148,149,150,151,6,152,153,154,155,156,157,158,159,7,160,161,162,163,164,165,166,167,19,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,53,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,54,250,251,252,253,254,255,256,20,257,258,259,260,261,262,55,263,264,265,21,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,56,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,57,304,305,306,307,308,309,310,22,311,312,313,314,315,316,58,317,318,319,23,320,321,322,323,324,325,326,61,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,62,347,348,349,350,351,352,353,26,354,355,356,357,358,359,63,360,361,362,27,363,364,365,366,367,368,369,370,371,372],"tindex":"7c5ecb82-8280-11e5-b378-1d6738f6d040","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"variableMap":{"algo":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:110","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[69,70,71,72,28,73,8,29,74,30,77,78,79,81,149,150,156,157,158,159,7,160,161,163,164,165,166],"tindex":"7c5ef293-8280-11e5-b378-b74528cffff6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathNative:53","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.EdgeIterator.Edge.isValid(int)))\n    break;\n"},"variableMap":{"edgeId":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:187","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int))"},"status":-1},{"failures":[71,72,28,0,1,37,13,2,3,4,373,374,157,158,159,7,160,161,164,165,175,177,178,179,180,183,186,187,188,189,191,192,199,202,204,205,206,207,210,213,214,215,216,218,219],"tindex":"7c5f19a4-8280-11e5-b378-81a9520aadfa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:210","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.util.shapes.GHPoint(double , (double / double))"},"status":-1},{"failures":[],"tindex":"7c5f19a5-8280-11e5-b378-7363f8639539","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:71","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin(((double / 2) / (com.graphhopper.util.DistanceCalcEarth.double)))"},"variableMap":{"this":"this","dist":"toLat","com.graphhopper.util.DistanceCalcEarth.R":"fromLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:64","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"status":-2},{"failures":[],"tindex":"7c5f19a6-8280-11e5-b378-610c094f46d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:115","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new java.util.HashMap<java.lang.String, java.lang.Object>(2)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:78","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object> java.util.Map<java.lang.String, java.lang.Object> = new java.util.HashMap<java.lang.String, java.lang.Object>()"},"status":-2},{"failures":[375],"tindex":"7c5f40b7-8280-11e5-b378-ef53080d58ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"size","to":"size","lonSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[376,377,378,379],"tindex":"7c5f40b8-8280-11e5-b378-f746aab6e6e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"speed","S_SKIP_EDGE2":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:389","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[],"tindex":"7c5f40b9-8280-11e5-b378-db06da342c5a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHBitSetImpl:78","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"variableMap":{"bs":"indicesCopy","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:247","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n        int = int;\n        int = int + 1;\n    } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n        int = int;\n        int = int + (int);\n    } \n} else {\n    if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n        int = int + 1;\n        int = int;\n    } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n        int = int + (int);\n        int = int;\n    } \n}"},"status":-2},{"failures":[96],"tindex":"7c5f40ba-8280-11e5-b378-1b9a28243eaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:411","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState)"},"status":-1},{"failures":[69,380],"tindex":"7c5f67cb-8280-11e5-b378-e79a8cd09b42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:58","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isNaN(double))\n    throw new java.lang.IllegalStateException(\"Value cannot be NaN\");\n"},"variableMap":{"value":"durationInHours"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:532","type":"CtIfImpl","sourcecode":"if (java.lang.Number != null) {\n    double double = (java.lang.Number.doubleValue()) / 1000;\n    double = java.lang.Math.round(((double / double) / 1.4));\n    if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n        double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"7c5f67cc-8280-11e5-b378-d90708080023","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:541","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.elevation.cachedir\", \"\")"},"status":-2},{"failures":[69,70,71,72,28,73,8,29,74,30,77,78,79,81,149,150,156,157,158,159,7,160,161,163,164,165,166],"tindex":"7c5f67cd-8280-11e5-b378-4dbd2f9c219e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:285","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << int"},"variableMap":{"delta":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:676","type":"CtLocalVariableImpl","sourcecode":"long long = gnu.trove.list.TLongList.get(int)"},"status":-1},{"failures":[],"tindex":"7c5f67ce-8280-11e5-b378-7537c2059583","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:362","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkInit()"},"variableMap":{"this":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:341","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.freeze()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}