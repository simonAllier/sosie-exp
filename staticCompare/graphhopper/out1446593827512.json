{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":24,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":29,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":42,"com.graphhopper.routing.PathTest.testFindInstruction":32,"com.graphhopper.reader.OSMReaderTest.testFerry":80,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":21,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":52,"com.graphhopper.reader.OSMReaderTest.testWithBounds":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":74,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":20,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":79,"com.graphhopper.GraphHopperTest.testPrepare":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":37,"com.graphhopper.util.InstructionListTest.testWayList2":49,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":72,"com.graphhopper.reader.OSMReaderTest.testFoot":81,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":28,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":55,"com.graphhopper.util.InstructionListTest.testWayList":47,"com.graphhopper.reader.OSMReaderTest.testOneWay":90,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":51,"com.graphhopper.GraphHopperAPITest.testDisconnected179":96,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":53,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":101,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":38,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":97,"com.graphhopper.GraphHopperTest.testLoadOSM":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":11,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":9,"com.graphhopper.reader.OSMReaderTest.testSort":82,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":59,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":87,"com.graphhopper.reader.OSMReaderTest.testMain":0,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":71,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":89,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":103,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":27,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":98,"com.graphhopper.routing.PathTest.testWayList":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":39,"com.graphhopper.util.PointListTest.testIterable":40,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":83,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":61,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":36,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":41,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":44,"com.graphhopper.GraphHopperTest.testFootAndCar":15,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":77,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":54,"com.graphhopper.util.InstructionListTest.testCreateGPX":48,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":60,"com.graphhopper.reader.OSMReaderTest.testRelation":84,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":26,"com.graphhopper.GraphHopperTest.testPrepareOnly":92,"com.graphhopper.GraphHopperTest.testVia":12,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":18,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":22,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":86,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":85,"com.graphhopper.util.DouglasPeuckerTest.testParse":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":63,"com.graphhopper.GraphHopperAPITest.testLoad":6,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":16,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":25,"com.graphhopper.GraphHopperTest.testFootOnly":19,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":50,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":62,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":99,"com.graphhopper.reader.OSMReaderTest.testBarriers":1,"com.graphhopper.util.InstructionListTest.testFind":46,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":33,"com.graphhopper.util.GHUtilityTest.testCopy":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":68},"transformations":[{"failures":[],"tindex":"cbc10781-8283-11e5-b556-d9ad9cd94de5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"i","degree":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:194","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"cbc12e92-8283-11e5-b556-5f2e4fefe593","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:382","type":"CtReturnImpl","sourcecode":"return -(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:219","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"cbc12e93-8283-11e5-b556-9b0473f3c0ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:137","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:195","type":"CtReturnImpl","sourcecode":"return double[][int]"},"status":-1},{"failures":[],"tindex":"cbc155a4-8283-11e5-b556-7d716b0de144","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"fullDistance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:53","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.routing.Path.getDistance()"},"status":-2},{"failures":[],"tindex":"cbc155a5-8283-11e5-b556-d76a595124d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"variableMap":{"need":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:261","type":"CtReturnImpl","sourcecode":"return ((int)((long) / (int)))"},"status":-2},{"failures":[80,81,0,82,1,2,3,83,4,84,85,86,87,5,88,89,90,91,92,93,12,13,14,15,16,17,94,18,19,95],"tindex":"cbc155a6-8283-11e5-b556-81e8282c9321","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:974","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.routing.util.EncodingManager = com.graphhopper.routing.util.EncodingManager"},"status":-1},{"failures":[],"tindex":"cbc17cb7-8283-11e5-b556-472df99e0e51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Directory.remove(com.graphhopper.storage.DataAccess)"},"status":-2},{"failures":[0,2,3,19],"tindex":"cbc17cb8-8283-11e5-b556-9f05b5b12886","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:349","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.PointList.clone(true)"},"variableMap":{"basePoints":"pointList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:760","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.PointList.getSize()) - 2) , com.graphhopper.storage.NodeAccess.is3D())"},"status":-1},{"failures":[31,47,48,49,50],"tindex":"cbc17cb9-8283-11e5-b556-5fa27a141858","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:269","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_left\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_right\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_right\");\n        break;\n    case com.graphhopper.util.Instruction.int :\n        java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_right\");\n        break;\n}"},"status":-1},{"failures":[0,4,5,12,15],"tindex":"cbc1a3ca-8283-11e5-b556-f592198ac89a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"prevLat","orientation":"lon","java.lang.Math.PI":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:773","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-1},{"failures":[6,96,7,8,9,10,11,97,12,13,14,15,16,17,18,19],"tindex":"cbc1a3cb-8283-11e5-b556-0138d0fc5ae5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:335","type":"CtReturnImpl","sourcecode":"return \"motorcycle\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:215","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"cbc1a3cc-8283-11e5-b556-03dd3b7159d5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"status":-2},{"failures":[],"tindex":"cbc1a3cd-8283-11e5-b556-3fed9772a3c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:570","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.this.setWeight(this, double)"},"variableMap":{"weight":"subqueryLonB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:727","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double)"},"status":-2},{"failures":[],"tindex":"cbc1cade-8283-11e5-b556-b3bccb38f347","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:131","type":"CtReturnImpl","sourcecode":"return !(java.util.Collection<com.graphhopper.storage.CHGraphImpl>.isEmpty())"},"status":-2},{"failures":[],"tindex":"cbc1cadf-8283-11e5-b556-75171dcf3f5a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:564","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(java.lang.String)"},"status":-2},{"failures":[],"tindex":"cbc1cae0-8283-11e5-b556-710c53805057","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.insert_(java.lang.Number.doubleValue(), java.lang.Integer)"},"status":-2},{"failures":[98,99,100,101,102,103],"tindex":"cbc1cae1-8283-11e5-b556-e9535fd0bc28","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:84","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[6,12,13,14,15,16,17,18],"tindex":"cbc1cae2-8283-11e5-b556-65543c2ca140","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"origPoints","edge2":"origPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:55","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.InstructionList com.graphhopper.util.InstructionList = com.graphhopper.routing.Path.calcInstructions(com.graphhopper.util.Translation);\n    if (!(com.graphhopper.util.InstructionList.isEmpty())) {\n        if (com.graphhopper.util.PointList.isEmpty()) {\n            com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(0).getPoints();\n            com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((com.graphhopper.util.InstructionList.size()) * (java.lang.Math.min(10, com.graphhopper.util.PointList.size()))) , com.graphhopper.util.PointList.is3D());\n        } \n        for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : com.graphhopper.util.InstructionList) {\n            if (boolean) {\n                int += com.graphhopper.util.Instruction.getPoints().size();\n                com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints());\n            } \n            com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction);\n            com.graphhopper.util.PointList.add(com.graphhopper.util.Instruction.getPoints());\n        }\n        if ((int + 1) < (java.util.List<com.graphhopper.routing.Path>.size())) {\n            com.graphhopper.util.ViaInstruction com.graphhopper.util.ViaInstruction = new com.graphhopper.util.ViaInstruction(com.graphhopper.util.InstructionList.get(((com.graphhopper.util.InstructionList.size()) - 1)));\n            com.graphhopper.util.ViaInstruction.setViaCount((int + 1));\n            com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction);\n        } \n    } \n} else if (boolean) {\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.Path.calcPoints();\n    if (com.graphhopper.util.PointList.isEmpty())\n        com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n    \n    if (boolean) {\n        int = com.graphhopper.util.PointList.getSize();\n        com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n    } \n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointList);\n} "},"status":-1},{"failures":[],"tindex":"cbc1f1f3-8283-11e5-b556-09979a0b82f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:110","type":"CtLocalVariableImpl","sourcecode":"double double = float[][int]"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}