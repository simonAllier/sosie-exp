{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":68,"com.graphhopper.routing.PathTest.testFindInstruction":38,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":28,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":65,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":33,"com.graphhopper.routing.PathTest.testWayList":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":58,"com.graphhopper.coll.CompressedArrayTest.testCompress":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":64,"com.graphhopper.reader.OSMNodeTest.testSetTags":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":27,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":24,"com.graphhopper.util.InstructionListTest.testWayList2":18,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":26,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":39,"com.graphhopper.util.InstructionListTest.testWayList":16,"com.graphhopper.util.InstructionListTest.testCreateGPX":17,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":31,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":62,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":54,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":53,"com.graphhopper.coll.CompressedArrayTest.testCompress2":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":63,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":32,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":0,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":55,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":50,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":40,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":41,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":36,"com.graphhopper.GraphHopperAPITest.testLoad":10,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":69,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":34,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":19,"com.graphhopper.GraphHopperTest.testFootOnly":20,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":51,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":49,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":35,"com.graphhopper.util.InstructionListTest.testFind":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":47,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":60,"com.graphhopper.reader.OSMElementTest.testSetTags":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":61},"transformations":[{"failures":[],"tindex":"03cd07be-8293-11e5-9f5f-f10a3d15387e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:142","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Translation com.graphhopper.util.Translation : java.util.Map<java.lang.String, com.graphhopper.util.Translation>.values()) {\n    java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = com.graphhopper.util.Translation.asMap();\n    for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n        java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n            java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n            continue;\n        } \n        int int = com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.countOccurence(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), \"\\\\%\");\n        if (int != com.graphhopper.util.TranslationMap.(com.graphhopper.util.TranslationMap.countOccurence(java.lang.String, \"\\\\%\"))) {\n            java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n        } else {\n            java.lang.Object[] java.lang.Object[] = new java.lang.String[int];\n            java.util.Arrays.fill(java.lang.Object[], \"tmp\");\n            try {\n                java.lang.String.format(java.lang.String, java.lang.Object[]);\n            } catch (java.lang.Exception ex) {\n                java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n            }\n        }\n    }\n}"},"status":0},{"failures":[0],"tindex":"03cd2ecf-8293-11e5-9f5f-d7553f1bc371","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:73","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return float[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum key.\");\n}"},"status":-1},{"failures":[1],"tindex":"03cd2ed0-8293-11e5-9f5f-a5ec7dd0b103","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:94","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"status":-1},{"failures":[],"tindex":"03cd55e1-8293-11e5-9f5f-3f3b14e1d0e0","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:81","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[(int) + 10]"},"variableMap":{"endIndexPlusOne":"read"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:167","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[int]"},"status":-2},{"failures":[],"tindex":"03cd55e2-8293-11e5-9f5f-1f0b822f2a9f","series":0,"name":"add","transplant":{"position":"com.graphhopper.search.NameIndex:128","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:156","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[2],"tindex":"03cd55e3-8293-11e5-9f5f-6f5935c84abd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseLongLongArray:361","type":"CtAssignmentImpl","sourcecode":"long[] = long[]"},"variableMap":{"mKeys":"keys","nkeys":"keys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:73","type":"CtAssignmentImpl","sourcecode":"long[] = java.util.Arrays.copyOf(long[], int)"},"status":-1},{"failures":[],"tindex":"03cd55e4-8293-11e5-9f5f-151e4c860dc8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:120","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = gnu.trove.map.hash.TIntObjectHashMap<java.lang.String>.put(int, java.lang.String)"},"status":-2},{"failures":[3,4,5,6,7,8,9,10],"tindex":"03cd55e5-8293-11e5-9f5f-79dccb4cd166","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"origPoints","tmpSize":"origPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:68","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : com.graphhopper.util.InstructionList) {\n    if (boolean) {\n        int += com.graphhopper.util.Instruction.getPoints().size();\n        com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints());\n    } \n    com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction);\n    com.graphhopper.util.PointList.add(com.graphhopper.util.Instruction.getPoints());\n}"},"status":-1},{"failures":[11],"tindex":"03cd7cf6-8293-11e5-9f5f-8f924be94a4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:161","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMNode.setTags(java.util.Map<java.lang.String, java.lang.String>)"},"variableMap":{"osmNode":"this","tags":"newTags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:99","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    com.graphhopper.reader.OSMElement.setTag(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"03cd7cf7-8293-11e5-9f5f-f16fcdcaa5a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:252","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.String> == null) {\n    java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n} "},"variableMap":{"tags":"enMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:145","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n        java.util.Map<java.lang.String, java.lang.String>.put(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n        continue;\n    } \n    int int = com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.countOccurence(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue(), \"\\\\%\");\n    if (int != com.graphhopper.util.TranslationMap.(com.graphhopper.util.TranslationMap.countOccurence(java.lang.String, \"\\\\%\"))) {\n        java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n    } else {\n        java.lang.Object[] java.lang.Object[] = new java.lang.String[int];\n        java.util.Arrays.fill(java.lang.Object[], \"tmp\");\n        try {\n            java.lang.String.format(java.lang.String, java.lang.Object[]);\n        } catch (java.lang.Exception ex) {\n            java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"03cd7cf8-8293-11e5-9f5f-1fcb2576b3bc","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:848","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"variableMap":{"tmpNode":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:491","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-2},{"failures":[],"tindex":"03cd7cf9-8293-11e5-9f5f-63eb48e6100f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:87","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"variableMap":{"version":"param"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:72","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"_\")"},"status":-2},{"failures":[],"tindex":"03cda40a-8293-11e5-9f5f-a733e5c1dc87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"status":-1},{"failures":[],"tindex":"03cda40b-8293-11e5-9f5f-0bfa0a7c4a77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:482","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * double))) / double"},"variableMap":{"factor":"java.lang.Double.POSITIVE_INFINITY","value":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:647","type":"CtReturnImpl","sourcecode":"return (long & (long)) == 0 ? 0 : java.lang.Double.double"},"status":-2},{"failures":[12,13],"tindex":"03cda40c-8293-11e5-9f5f-115c6d19f653","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:199","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.Inflater.setInput(byte[]);\n    final byte[] byte[] = new byte[1024];\n    while (!(java.util.zip.Inflater.finished())) {\n        int int = java.util.zip.Inflater.inflate(byte[]);\n        java.io.ByteArrayOutputStream.write(byte[], 0, int);\n    }\n} finally {\n    java.util.zip.Inflater.end();\n}"},"status":-1},{"failures":[14,15,16,17,18,19,3,4,5,6,7,8,9,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,10,41,42],"tindex":"03cda40d-8293-11e5-9f5f-f72dd340fd22","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:215","type":"CtAssignmentImpl","sourcecode":"double[] = null"},"variableMap":{"weights":"elevations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:55","type":"CtAssignmentImpl","sourcecode":"double[] = new double[int]"},"status":-1},{"failures":[],"tindex":"03cda40e-8293-11e5-9f5f-1f7844767f99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:85","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.max((10 * 4), long)"},"status":0},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"03cda40f-8293-11e5-9f5f-a17516616857","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"03cda410-8293-11e5-9f5f-bf07a6f943c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:84","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getSize()) == 0)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"variableMap":{"pointList":"points","com.graphhopper.util.PointList.EMPTY":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:153","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"03cd7cf7-8293-11e5-9f5f-f16fcdcaa5a3","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"]},"type":"branch"},{"methodsDiff":{"delete":["java.util.Map<java.lang.String, java.lang.String>.get","com.graphhopper.util.Helper.isEmpty","java.util.Arrays.fill","java.lang.StringBuilder.append","java.util.Map<java.lang.String, java.lang.String>.put","java.lang.Throwable.getMessage","com.graphhopper.util.Translation.getLocale","java.util.Map.Entry<java.lang.String, java.lang.String>.getKey","com.graphhopper.util.TranslationMap.countOccurence","java.util.Map.Entry<java.lang.String, java.lang.String>.getValue","java.lang.String.format"]},"branchesDiff":{"delete":["c4","l3","t0","t1","e2"]},"type":"staticDiff"}]},{"transformation":"03cd07be-8293-11e5-9f5f-f10a3d15387e","diffs":[{"methodsDiff":{"delete":["java.util.Arrays.fill","java.util.Map<java.lang.String, java.lang.String>.entrySet","java.lang.StringBuilder.append","com.graphhopper.util.Translation.asMap","java.lang.String.format","java.util.Map<java.lang.String, java.lang.String>.get","com.graphhopper.util.Helper.isEmpty","java.util.Map<java.lang.String, java.lang.String>.put","java.lang.Throwable.getMessage","com.graphhopper.util.Translation.getLocale","java.util.Map.Entry<java.lang.String, java.lang.String>.getKey","com.graphhopper.util.TranslationMap.countOccurence","java.util.Map.Entry<java.lang.String, java.lang.String>.getValue"]},"branchesDiff":{"delete":["c5","l3","l4","t0","t1","e2"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b"]},"type":"branch"}]},{"transformation":"03cda40e-8293-11e5-9f5f-1f7844767f99","diffs":[{"methodsDiff":{"delete":["java.lang.Math.max"]},"type":"staticDiff"}]}]}