{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":114,"com.graphhopper.reader.OSMReaderTest.testFerry":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":45,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":90,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":15,"com.graphhopper.reader.OSMReaderTest.testWithBounds":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":63,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":20,"com.graphhopper.util.BitUtilBigTest.testReverse":5,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":44,"com.graphhopper.GraphHopperTest.testPrepare":52,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":7,"com.graphhopper.reader.OSMReaderTest.testFoot":68,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":96,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":116,"com.graphhopper.util.BitUtilLittleTest.testToBitString":0,"com.graphhopper.reader.OSMReaderTest.testOneWay":77,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":66,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":18,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":17,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":31,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":91,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":65,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":24,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":82,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":36,"com.graphhopper.GraphHopperTest.testLoadOSM":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":105,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":26,"com.graphhopper.reader.OSMReaderTest.testSort":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":64,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":100,"com.graphhopper.reader.OSMReaderTest.testMain":69,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":46,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":111,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":43,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":73,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":104,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":42,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":112,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":119,"com.graphhopper.GraphHopperTest.testFootAndCar":54,"com.graphhopper.util.BitUtilBigTest.testToBitString":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":98,"com.graphhopper.util.BitUtilLittleTest.testReverse":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":41,"com.graphhopper.GraphHopperTest.testPrepareOnly":49,"com.graphhopper.GraphHopperTest.testVia":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":28,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":19,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":16,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":109,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":102,"com.graphhopper.GraphHopperTest.testFootOnly":59,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":78,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":62,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":74,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":107,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":67,"com.graphhopper.reader.OSMReaderTest.testBarriers":84,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":80,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":60,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":99},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"f786917f-791a-11e5-8383-9b518103ab1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:233","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"f786b890-791a-11e5-8383-d3581f81537a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:935","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.getNodes()"},"status":-1},{"failures":[49,60],"tindex":"f786b891-791a-11e5-8383-bba4d2eb44a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:262","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.isEmpty())) && (!(com.graphhopper.routing.util.EncodingManager.toDetailsString().equalsIgnoreCase(java.lang.String)))) {\n    throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())));\n} "},"status":-1},{"failures":[54],"tindex":"f786b892-791a-11e5-8383-afd540397b42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:255","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"f786b893-791a-11e5-8383-cdba5adb57c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"variableMap":{"wayTypeName":"wayTypeName","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:438","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[78,48,49,50,51,52,53,54,55,56,57,58,59,60,79,80,81,82,83,68,69,70,84,71,72,73,74,85,75,76,86,77],"tindex":"f786b894-791a-11e5-8383-1ff7dbb30fa2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"includeWay","backwardBit":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,51,52,53,54,55,56,58,59,114,115,116,117,118,119,120,69,70,84],"tindex":"f786dfa5-791a-11e5-8383-b94c7c23ca7d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:210","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.util.shapes.GHPoint(double , (double / double))"},"status":-1},{"failures":[],"tindex":"f786dfa6-791a-11e5-8383-4fabd88dbad3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:183","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef"},"status":-2},{"failures":[],"tindex":"f786dfa7-791a-11e5-8383-97f2880bbe09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.initLatLonSize(int)"},"status":-2},{"failures":[],"tindex":"f786dfa8-791a-11e5-8383-13dc7c695965","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.GHPoint:52","type":"CtReturnImpl","sourcecode":"return (!(java.lang.Double.isNaN(double))) && (!(java.lang.Double.isNaN(double)))"},"variableMap":{"lon":"lat","lat":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:64","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[],"tindex":"f786dfa9-791a-11e5-8383-7bf196f46fc4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:183","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef"},"variableMap":{"bestPath":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:195","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.Path.setFound(true)"},"status":-2},{"failures":[],"tindex":"f786dfaa-791a-11e5-8383-55bccc38b7e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:61","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[8 * 1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:84","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.fromLong(long)"},"status":-2},{"failures":[],"tindex":"f786dfab-791a-11e5-8383-491321978c2b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"variableMap":{"keys":"keys","i":"i","child":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:214","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":-2},{"failures":[],"tindex":"f78706bc-791a-11e5-8383-6d2fec089eb1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:247","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"variableMap":{"acceptBit":"flags","ferryBit":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:259","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f78706bd-791a-11e5-8383-2b9e94e0c9d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:424","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"fetchWayGeometry\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:197","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n        continue;\n    \n    int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, boolean);\n    double double = (com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, boolean, com.graphhopper.storage.EdgeEntry.int)) + (com.graphhopper.storage.EdgeEntry.double);\n    if (java.lang.Double.isInfinite(double))\n        continue;\n    \n    com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.get(int);\n    if (com.graphhopper.storage.EdgeEntry == null) {\n        com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n        com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.storage.EdgeEntry.double = double;\n        com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n    } else\n        continue;\n    \n    if (boolean)\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n    \n}"},"status":-2},{"failures":[],"tindex":"f78706be-791a-11e5-8383-bda809744953","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:713","type":"CtReturnImpl","sourcecode":"return (java.util.List<com.graphhopper.storage.index.QueryResult>) != null"},"status":-2},{"failures":[],"tindex":"f78706bf-791a-11e5-8383-a9451baa4188","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:52","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.storage.DataAccess.getCapacity()))"},"variableMap":{"da":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:105","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[],"tindex":"f78706c0-791a-11e5-8383-6938a31c9889","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:289","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"variableMap":{"sacScale":"sacScale","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:284","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"cycleway\")) && (com.graphhopper.reader.OSMWay.hasTag(\"sac_scale\", \"hiking\")))\n        return long;\n    \n    if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n        return 0;\n    \n} "},"status":-2},{"failures":[],"tindex":"f78706c1-791a-11e5-8383-d5a834301ee2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"E_DIST"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:50","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"f7872dd2-791a-11e5-8383-dbb0345ea48f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"x1","tmpSize":"y1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:128","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}