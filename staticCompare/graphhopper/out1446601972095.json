{"failureDictionary":{"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":23,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":52,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":7,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":66,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":93,"com.graphhopper.storage.VLongStorageTest.testWrite":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":79,"com.graphhopper.coll.CompressedArrayTest.testCompress":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":81,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":82,"com.graphhopper.GraphHopperTest.testPrepare":28,"com.graphhopper.util.InstructionListTest.testWayList2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":70,"com.graphhopper.reader.OSMReaderTest.testFoot":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":55,"com.graphhopper.util.InstructionListTest.testWayList":44,"com.graphhopper.reader.OSMReaderTest.testOneWay":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":21,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":43,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":95,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":94,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":61,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":39,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":51,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":49,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":71,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":47,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":16,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":83,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":84,"com.graphhopper.GraphHopperTest.testLoadOSM":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":89,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":88,"com.graphhopper.reader.OSMReaderTest.testSort":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":87,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":68,"com.graphhopper.reader.OSMReaderTest.testMain":37,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":73,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":91,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":67,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":15,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":22,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":24,"com.graphhopper.GraphHopperTest.testFootAndCar":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":92,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":96,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":58,"com.graphhopper.util.InstructionListTest.testCreateGPX":104,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":17,"com.graphhopper.GraphHopperTest.testPrepareOnly":26,"com.graphhopper.coll.CompressedArrayTest.testCompress2":102,"com.graphhopper.GraphHopperTest.testVia":18,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":64,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":3,"com.graphhopper.GraphHopperAPITest.testLoad":36,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":31,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":4,"com.graphhopper.GraphHopperTest.testFootOnly":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":72,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":41,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":48,"com.graphhopper.reader.OSMReaderTest.testBarriers":2,"com.graphhopper.util.InstructionListTest.testFind":42,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":57,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":60},"transformations":[{"failures":[],"tindex":"c250d230-8296-11e5-a350-59a4301f88f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:89","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.UnsafeDataAccess.getCapacity()"},"variableMap":{"this":"keys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:94","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.coll.OSMIDMap.binarySearch(com.graphhopper.storage.DataAccess, 0, com.graphhopper.coll.OSMIDMap.getSize(), long)"},"status":-2},{"failures":[0,1],"tindex":"c2512051-8296-11e5-a350-3b6093ed4a57","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:98","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt((long * 4))"},"variableMap":{"retIndex":"tmp","values":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:808","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getInt(long)"},"status":-1},{"failures":[2,3],"tindex":"c2512052-8296-11e5-a350-9b2fe439c34f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:368","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleNodeTags(com.graphhopper.reader.OSMNode);\n}"},"status":-1},{"failures":[],"tindex":"c2512053-8296-11e5-a350-81637e92883b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1049","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.RoutingAlgorithm.setWeightLimit(double)"},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"c2512054-8296-11e5-a350-4715a1d2f390","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:91","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"variableMap":{"size":"ferryBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:191","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"status":-1},{"failures":[],"tindex":"c2514765-8296-11e5-a350-116b61a8eba0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:308","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n    if (int > 0)\n        int++;\n    \n} else {\n    double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n    if (int > 0)\n        int++;\n    \n}"},"status":-2},{"failures":[21],"tindex":"c2514766-8296-11e5-a350-8180544d9af9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[22,23,24,25,26,27,18,28,29,30,31,32,33,34,35,36,37,38,2,39,40,41,3],"tindex":"c2514767-8296-11e5-a350-f77203651c0a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:130","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[42,43,44,45,4,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,21,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,0,80,1,81,82,83,84,85,86,87,88,89,90,18,28,29,30,31,32,34,35,36],"tindex":"c2516e78-8296-11e5-a350-595f2ce8425d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1033","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    return false;\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"prevOrNextEdgeId","nextEdgeId":"prevOrNextEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:75","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport())) && ((com.graphhopper.util.EdgeIterator.getEdge()) == int))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"c2516e79-8296-11e5-a350-2f563c91ea07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:265","type":"CtInvocationImpl","sourcecode":"((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).force()"},"status":0},{"failures":[6,8,10,91,92,93,94,95,96,97,98],"tindex":"c2516e7a-8296-11e5-a350-918abce12f41","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:465","type":"CtReturnImpl","sourcecode":"return (java.lang.Character.toUpperCase(java.lang.String.charAt(0))) + (java.lang.String.substring(1))"},"variableMap":{"sayText":"pavementName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:461","type":"CtReturnImpl","sourcecode":"return (java.lang.String + \", \") + java.lang.String"},"status":-1},{"failures":[22,23,24],"tindex":"c2516e7b-8296-11e5-a350-c5cd4418caf7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:260","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:76","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)))"},"status":-1},{"failures":[],"tindex":"c251958c-8296-11e5-a350-053577765492","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:773","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.postProcessing()"},"variableMap":{"this":"com.graphhopper.GraphHopper.class"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:109","type":"CtTryImpl","sourcecode":"try {\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"builddate\") , com.graphhopper.util.Helper.java.nio.charset.Charset));\n    java.lang.String = java.util.List<java.lang.String>.get(0);\n} catch (java.lang.Exception ex) {\n}"},"status":-2},{"failures":[99],"tindex":"c251958d-8296-11e5-a350-c33feeecada5","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:203","type":"CtIfImpl","sourcecode":"if ((((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\")))) && (!(java.lang.String.equals(\"grade2\")))) && (!(java.lang.String.equals(\"grade3\"))))\n    return 0;\n"},"variableMap":{"tt":"firstValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    return 0;\n"},"status":-1},{"failures":[100,101,102,103],"tindex":"c251958e-8296-11e5-a350-939164280534","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:132","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[],"tindex":"c251bc9f-8296-11e5-a350-377616a9e4fa","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.Circle:140","type":"CtIfImpl","sourcecode":"if ((double) > (com.graphhopper.util.shapes.BBox.double)) {\n    return ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) > 0;\n} "},"variableMap":{"b":"b","minLon":"lon","bbox":"b","maxLon":"lon","lon":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:108","type":"CtIfImpl","sourcecode":"if ((double) > (com.graphhopper.util.shapes.BBox.double)) {\n    if ((double) < (com.graphhopper.util.shapes.BBox.double)) {\n        return com.graphhopper.util.shapes.Circle.(normDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double)) <= (double);\n    } \n    if ((double) > (com.graphhopper.util.shapes.BBox.double)) {\n        return com.graphhopper.util.shapes.Circle.(normDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double)) <= (double);\n    } \n    return ((com.graphhopper.util.shapes.BBox.double) - (com.graphhopper.util.shapes.BBox.double)) > 0;\n} "},"status":0},{"failures":[39,40],"tindex":"c251bca0-8296-11e5-a350-e780dd7a0943","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"includeElevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:362","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[104,4],"tindex":"c251bca1-8296-11e5-a350-a1b3eba99b81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:207","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Instruction = com.graphhopper.util.Instruction"},"status":-1},{"failures":[],"tindex":"c251bca2-8296-11e5-a350-8b1a78b9d01e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:237","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"c251e3b3-8296-11e5-a350-dffa301f30aa","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:779","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Lock.release()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c2512053-8296-11e5-a350-81637e92883b","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.routing.AbstractRoutingAlgorithm_void_setWeightLimit(double).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.routing.AbstractRoutingAlgorithm_void_setWeightLimit(double).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.routing.RoutingAlgorithm.setWeightLimit"]},"type":"staticDiff"}]},{"transformation":"c2516e79-8296-11e5-a350-2f563c91ea07","diffs":[{"methodsDiff":{"delete":["java.nio.MappedByteBuffer.force"]},"type":"staticDiff"}]}]}