{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":212,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":95,"com.graphhopper.reader.OSMReaderTest.testFerry":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":245,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":258,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":286,"com.graphhopper.reader.OSMReaderTest.testWithBounds":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":116,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":237,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":115,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":304,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":221,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":172,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":126,"com.graphhopper.GraphHopperTest.testPrepare":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":211,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":56,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":194,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":163,"com.graphhopper.GraphHopperAPITest.testDisconnected179":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":102,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":243,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":195,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":150,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":157,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":113,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":130,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":261,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":42,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":37,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":227,"com.graphhopper.GraphHopperTest.testLoadOSM":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":295,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":307,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":80,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":288,"com.graphhopper.reader.OSMReaderTest.testSort":273,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":206,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":169,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":86,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":312,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":8,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":216,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":183,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":193,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":285,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":166,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":141,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":17,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":319,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":190,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":208,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":46,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":30,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":5,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":149,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":246,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":152,"com.graphhopper.GraphHopperAPITest.testLoad":268,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":262,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":234,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":215,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":226,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":145,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":11,"com.graphhopper.reader.OSMReaderTest.testBarriers":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":170,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":220,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":267,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":301,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":23,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":105,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":65,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":202,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":87,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":39,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":25,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":144,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":310,"com.graphhopper.reader.OSMReaderTest.testFoot":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":296,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":293,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":92,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":188,"com.graphhopper.reader.OSMReaderTest.testOneWay":283,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":294,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":44,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":50,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":167,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":158,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":22,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":248,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":57,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":112,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":179,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":236,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":257,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":229,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":242,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":291,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":256,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":316,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":121,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":240,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":254,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":253,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":108,"com.graphhopper.reader.OSMReaderTest.testMain":272,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":186,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":192,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":308,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":135,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":171,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":302,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":131,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":34,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":213,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":138,"com.graphhopper.storage.GraphHopperStorageTest.testClone":60,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":289,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":176,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":70,"com.graphhopper.GraphHopperTest.testFootAndCar":0,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":147,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":98,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":298,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":165,"com.graphhopper.GraphHopperTest.testPrepareOnly":251,"com.graphhopper.GraphHopperTest.testVia":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":204,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":315,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":143,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":81,"com.graphhopper.GraphHopperTest.testFootOnly":266,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":232,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":241,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":278,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":111,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":300},"transformations":[{"failures":[],"tindex":"a7f0eacf-8270-11e5-bb67-696d8d8b4b85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:349","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-2},{"failures":[],"tindex":"a7f111e0-8270-11e5-bb67-91c41be851b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"sw2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:155","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":0},{"failures":[],"tindex":"a7f111e1-8270-11e5-bb67-afa748d8af1d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:697","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-2},{"failures":[],"tindex":"a7f111e2-8270-11e5-bb67-697e470773df","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"indexCopy":"nodes","index":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:392","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247],"tindex":"a7f111e3-8270-11e5-bb67-2deed3913305","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders().get(0)"},"variableMap":{"encodingManager":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:222","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodingManager.getEncoder(java.lang.String, true)"},"status":-1},{"failures":[],"tindex":"a7f16004-8270-11e5-bb67-594230e8fc10","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[213],"tindex":"a7f16005-8270-11e5-bb67-a9676fff41b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:134","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef"},"status":-1},{"failures":[],"tindex":"a7f16006-8270-11e5-bb67-ef3dc8a538fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:72","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"compressionLevel":"lineNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:60","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"a7f16007-8270-11e5-bb67-97707d47c1c3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"bytes":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:271","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[248],"tindex":"a7f16008-8270-11e5-bb67-5ff5be613784","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:697","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":-1},{"failures":[],"tindex":"a7f16009-8270-11e5-bb67-73c078450415","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:111","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.GHNodeAccess.getLongitude(int)"},"variableMap":{"this":"nodeAccess","nodeId":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:547","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int)) {\n    int = (-int) - 3;\n    return com.graphhopper.storage.NodeAccess.getLongitude(int);\n} else if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLon(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[249],"tindex":"a7f2bf9a-8270-11e5-bb67-7faaa2260bf9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:229","type":"CtAssignmentImpl","sourcecode":"float[] = java.util.Arrays.copyOf(float[], (int + 1))"},"status":-1},{"failures":[],"tindex":"a7f2bf9b-8270-11e5-bb67-99a82fb33ba3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-2},{"failures":[],"tindex":"a7f2bf9c-8270-11e5-bb67-591f81d54344","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"currTo","edgeEntry":"currTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:167","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.poll()"},"status":-2},{"failures":[250,251,252,253,254,255,256,257,258,259,260,261,0,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"tindex":"a7f2bf9d-8270-11e5-bb67-93bcde0378ce","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:1087","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareIndex()"},"variableMap":{"tmpIndex":"tmpIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1082","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setResolution(int)"},"status":-1},{"failures":[250,251,252,253,254,255,256,257,258,259,260,261,0,262,263,264,265,266,267,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,133,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,135,202,207,208,211,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"tindex":"a7f2bf9e-8270-11e5-bb67-c5c2ef3e63a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:175","type":"CtOperatorAssignmentImpl","sourcecode":"int += byte[][int]"},"status":-1},{"failures":[],"tindex":"a7f2e6af-8270-11e5-bb67-5d7f001bea77","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"N_EDGE_REF"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:272","type":"CtForImpl","sourcecode":"for (long long = int, long long = com.graphhopper.storage.BaseGraph.int ; long < long ; long += int , long += com.graphhopper.storage.BaseGraph.int) {\n    if (long >= long)\n        throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n    \n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":-2},{"failures":[],"tindex":"a7f2e6b0-8270-11e5-bb67-ed36271efd91","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"tmpLat","incDist2DSum":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:100","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"a7f2e6b1-8270-11e5-bb67-13cabc574b10","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:525","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"variableMap":{"nodeB":"visitedNodes","edgeId":"visitedNodes","nodeA":"visitedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:141","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"a7f2e6b2-8270-11e5-bb67-b5f85f011a1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:247","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isFerry(long))) {\n    double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay);\n    double = com.graphhopper.routing.util.AbstractFlagEncoder.applyMaxSpeed(com.graphhopper.reader.OSMWay, double, true);\n    if ((double > 30) && (com.graphhopper.reader.OSMWay.hasTag(\"surface\", java.util.Set<java.lang.String>)))\n        double = 30;\n    \n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n    boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\");\n    if (boolean)\n        long = com.graphhopper.routing.util.AbstractFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true);\n    \n    boolean boolean = ((((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", java.util.Set<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:backward\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\"));\n    if (boolean || boolean) {\n        boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"));\n        if (boolean)\n            long |= long;\n        else\n            long |= long;\n        \n    } else\n        long |= long;\n    \n} else {\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"service\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"residential\"));\n    long |= long;\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a7f111e0-8270-11e5-bb67-91c41be851b7","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop"]},"type":"staticDiff"}]},{"transformation":"a7f111e2-8270-11e5-bb67-697e470773df","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.create"]},"type":"staticDiff"}]}]}