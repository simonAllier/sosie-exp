{"failureDictionary":{"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.util.InstructionListTest.testFind":1,"com.graphhopper.routing.PathTest.testFindInstruction":0,"com.graphhopper.util.AngleCalcTest.testAzimuthCompassPoint":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":4},"transformations":[{"failures":[0,1],"tindex":"f6bd2b0b-7913-11e5-8bf0-4fc4bffa0101","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"foundInstruction"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:295","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < com.graphhopper.util.InstructionList.(getSize()) ; int++) {\n    com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(int).getPoints();\n    for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n        double double = com.graphhopper.util.PointList.getLatitude(int);\n        double double = com.graphhopper.util.PointList.getLongitude(int);\n        if (!((int == 0) && (int == 0))) {\n            double double;\n            int int = int;\n            if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n                double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n                if (int > 0)\n                    int++;\n                \n            } else {\n                double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n                if (int > 0)\n                    int++;\n                \n            }\n            if (double < double) {\n                double = double;\n                int = int;\n            } \n        } \n        double = double;\n        double = double;\n    }\n}"},"status":-1},{"failures":[2,3,4,5],"tindex":"f6bd521c-7913-11e5-8bf0-df8a6889b4c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:601","type":"CtIfImpl","sourcecode":"if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-1},{"failures":[6,7],"tindex":"f6bd521d-7913-11e5-8bf0-154e7fa1e8da","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:426","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-\""},"variableMap":{"str":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:143","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"S\""},"status":-1},{"failures":[],"tindex":"f6bd521e-7913-11e5-8bf0-2588462e1fe5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:590","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMNode.getLon()"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:589","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMNode.getLat()"},"status":-2},{"failures":[],"tindex":"f6bd792f-7913-11e5-8bf0-9915430e9c11","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:80","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.DijkstraOneToMany.findEndNode(int, int)"},"variableMap":{"this":"this","from":"hash","to":"hash","endNode":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:383","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + (java.lang.Object.toString().hashCode())"},"status":-2},{"failures":[],"tindex":"f6bd7930-7913-11e5-8bf0-45c6a7351d11","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:179","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"SYNC\"))\n    com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true);\n"},"variableMap":{"dataAccess":"dataAccess","type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"MMAP\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"status":-2},{"failures":[],"tindex":"f6bd7931-7913-11e5-8bf0-097c056589ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"variableMap":{"hasOther":"allowWrites","hasRel":"allowWrites"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:101","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"f6bd7932-7913-11e5-8bf0-b7341deb5d67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:829","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.PillarInfo.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"f6bd7933-7913-11e5-8bf0-1d5d276944d6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:149","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false)"},"variableMap":{"byteCount":"bytes","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:77","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long)"},"status":-2},{"failures":[],"tindex":"f6bd7934-7913-11e5-8bf0-3bec3d682e47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:162","type":"CtReturnImpl","sourcecode":"return int <= int ? long + (int) : long + (int)"},"status":-2},{"failures":[],"tindex":"f6bda045-7913-11e5-8bf0-09f945d656dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:296","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int))"},"status":-2},{"failures":[],"tindex":"f6bda046-7913-11e5-8bf0-3900db11c763","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:85","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.setFromNode(com.graphhopper.storage.EdgeEntry.int)"},"status":-2},{"failures":[],"tindex":"f6bda047-7913-11e5-8bf0-2f4fed539ea2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"firstNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:735","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"f6bda048-7913-11e5-8bf0-7fdbd631c388","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:403","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"edgeId","b":"adjNode","baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:415","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getEdgeIteratorState(int, int)"},"status":-2},{"failures":[],"tindex":"f6bda049-7913-11e5-8bf0-271e261808da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"_default"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:90","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"f6bda04a-7913-11e5-8bf0-7306e0b44ccf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:47","type":"CtReturnImpl","sourcecode":"return double * double"},"variableMap":{"dist":"com.graphhopper.util.DistanceCalcEarth.R"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:62","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.DistanceCalcEarth.double) * 2) * java.lang.Math.(java.lang.Math.asin(java.lang.Math.java.lang.Math.sqrt(double)))"},"status":-2},{"failures":[],"tindex":"f6bdc75b-7913-11e5-8bf0-e3c1e0029d39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:68","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"f6bdc75c-7913-11e5-8bf0-abbfbb142dd4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:828","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.PillarInfo.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"f6bdc75d-7913-11e5-8bf0-f3fe46aef33f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:350","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMRelation.setTags(java.util.Map<java.lang.String, java.lang.String>)"},"variableMap":{"osmRelation":"this","tags":"newTags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:98","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.String> != null)\n    for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n        com.graphhopper.reader.OSMElement.setTag(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n    }\n"},"status":-2},{"failures":[],"tindex":"f6bdc75e-7913-11e5-8bf0-6192d7835692","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:68","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    return int[][1];\n} else {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum key.\");\n}"},"variableMap":{"size":"index","keys":"mKeys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}