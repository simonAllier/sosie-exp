{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":131,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":58,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":70,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":120,"com.graphhopper.coll.CompressedArrayTest.testCompress":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":115,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":24,"com.graphhopper.GraphHopperTest.testPrepare":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":117,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":54,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":29,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":26,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":67,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":40,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":74,"com.graphhopper.GraphHopperTest.testLoadOSM":1,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":109,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":111,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":94,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":142,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":121,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":124,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":59,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":8,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":144,"com.graphhopper.coll.IntIntBinHeapTest.testSize":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":132,"com.graphhopper.GraphHopperTest.testPrepareOnly":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":123,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":93,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":81,"com.graphhopper.GHRequestTest.testGetHint":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":18,"com.graphhopper.GraphHopperTest.testFootOnly":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":66,"com.graphhopper.util.GHUtilityTest.testCopy":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":114},"transformations":[{"failures":[0],"tindex":"a446bdcf-828c-11e5-8b15-bf911ea59004","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setInstructions(com.graphhopper.util.InstructionList)"},"status":-1},{"failures":[1,2],"tindex":"a4470bf0-828c-11e5-8b15-535f80f89cb1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:100","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11],"tindex":"a4470bf1-828c-11e5-8b15-b50c7e75ceab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:235","type":"CtAssignmentImpl","sourcecode":"this.int = 0"},"variableMap":{"size":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:854","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"a4470bf2-828c-11e5-8b15-e70de728bf4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:694","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double)"},"status":-1},{"failures":[26,27,3,4,5,6,7,8,9,10,11],"tindex":"a4470bf3-828c-11e5-8b15-a14c91eb975e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:68","type":"CtReturnImpl","sourcecode":"return 3"},"status":-1},{"failures":[28,29],"tindex":"a4470bf4-828c-11e5-8b15-1314be41067c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"a4473305-828c-11e5-8b15-29f8bba0730e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:797","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String.split(\"\\\\|\")) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    int int = java.lang.String.indexOf(\"=\");\n    if (int < 0)\n        continue;\n    \n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n    if (java.lang.String.equals(java.lang.String))\n        return java.lang.String;\n    \n}"},"variableMap":{"str":"vehicle","key":"vehicle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:261","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"a4473306-828c-11e5-8b15-c345ec977cb5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:149","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:242","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.StopWatch com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"status":-2},{"failures":[],"tindex":"a4473307-828c-11e5-8b15-2dabb8eb7a7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:669","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:892","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a4473308-828c-11e5-8b15-79c6070a5e13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:305","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int).putInt(int, int)"},"variableMap":{"index":"i","bufferIndex":"i","value":"i","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:407","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.set(int, null)"},"status":-1},{"failures":[30,31,32,33],"tindex":"a4475a19-828c-11e5-8b15-6f442463b882","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:168","type":"CtForEachImpl","sourcecode":"for (gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList : java.util.List<gnu.trove.list.array.TIntArrayList>) {\n    if (int < 0) {\n        int = gnu.trove.list.array.TIntArrayList.size();\n        gnu.trove.list.TIntList = gnu.trove.list.array.TIntArrayList;\n        continue;\n    } \n    int int;\n    if (int < (gnu.trove.list.array.TIntArrayList.size())) {\n        int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.TIntList, int);\n        int = gnu.trove.list.array.TIntArrayList.size();\n        gnu.trove.list.TIntList = gnu.trove.list.array.TIntArrayList;\n    } else {\n        int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.array.TIntArrayList, int);\n    }\n    int += int;\n}"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,0,42,43,1,44,45,46,47,48,49,12,50,51,52,53,54,13,55,14,56,57,15,58,59,16,60,61,62,63,17,18,64,19,65,66,20,67,68,69,70,71,21,72,22,23,24,73,25,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,10,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,11,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147],"tindex":"a4475a1a-828c-11e5-8b15-a354807271ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:280","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n        throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n    \n}"},"variableMap":{"chGraphs":"chGraphs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:186","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.create(long);\n}"},"status":-1},{"failures":[148],"tindex":"a447812b-828c-11e5-8b15-ad3e048f2898","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:177","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[]"},"status":-1},{"failures":[],"tindex":"a447812c-828c-11e5-8b15-79202ce0bbb6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:607","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadWayGeometryHeader()"},"variableMap":{"clonedG":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:417","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setWayGeometryHeader()"},"status":0},{"failures":[],"tindex":"a447812d-828c-11e5-8b15-efa7e5bf291c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:582","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.flagEncoders\", \"\")"},"status":-2},{"failures":[],"tindex":"a447a83e-828c-11e5-8b15-a73d274897b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:637","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int))) {\n    gnu.trove.set.hash.TIntHashSet.add(int);\n    com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, false, int, int);\n} "},"status":-2},{"failures":[35,36,37,149],"tindex":"a447a83f-828c-11e5-8b15-fd06da427180","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:588","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"a447a840-828c-11e5-8b15-dd2f334fc97d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:118","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    int[][int] = int[][int];\n    int[][int] = int[][int];\n} else {\n    break;\n}"},"variableMap":{"elem":"keys","keys":"elem","i":"key","lastPrio":"i","child":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (int[][(int / 2)]) > int ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    int[][int] = int[][(int / 2)];\n}"},"status":-2},{"failures":[23,25,150],"tindex":"a447a841-828c-11e5-8b15-7175fcfa2548","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"element","y2":"element","x1":"i","x2":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:150","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"a447cf52-828c-11e5-8b15-815f8b72873f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:634","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.getNodes()"},"variableMap":{"this":"g"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:47","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.Graph.getNodes()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}