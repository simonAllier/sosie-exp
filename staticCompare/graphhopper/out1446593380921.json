{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":52,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":39,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":25,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":44,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":74,"com.graphhopper.routing.QueryGraphTest.testOneWay":77,"com.graphhopper.routing.PathBidirRefTest.testExtract2":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":66,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":40,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":50,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":71,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":69,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":38,"com.graphhopper.GraphHopperTest.testPrepare":11,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":58,"com.graphhopper.GraphHopperTest.testFootAndCar":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":19,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":75,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":31,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":61,"com.graphhopper.GraphHopperTest.testVia":10,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":23,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":51,"com.graphhopper.GraphHopperAPITest.testLoad":17,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":43,"com.graphhopper.GraphHopperTest.testFootOnly":48,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":65,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":20,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":78,"com.graphhopper.routing.PathBidirRefTest.testExtract":53,"com.graphhopper.routing.util.EncodedValueTest.testSwap":46,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":68,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":24,"com.graphhopper.GraphHopperTest.testLoadOSM":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":4,"com.graphhopper.coll.GHTBitSetTest.testCopy":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":7,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":5},"transformations":[{"failures":[],"tindex":"c1907fbc-8282-11e5-9db6-41131b52aabb","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:333","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"variableMap":{"edge":"toIndex","adjNode":"fromIndex","g":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:798","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.edge(int, int).setDistance(double).setFlags(long)"},"status":-2},{"failures":[],"tindex":"c190cddd-8282-11e5-9db6-6f55657dc162","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:166","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"c190cdde-8282-11e5-9db6-b195e132b685","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:315","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"c190cddf-8282-11e5-9db6-1deb4d967ca2","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:175","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"variableMap":{"speed":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY","tInt":"com.graphhopper.coll.GHTreeMapComposed.NOT_EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:65","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Long, java.lang.Integer>.put(long, com.graphhopper.coll.GHTreeMapComposed.java.lang.Integer)"},"status":-2},{"failures":[0,1,2,3],"tindex":"c190f4f0-8282-11e5-9db6-f16034ea34f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:289","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.BikeCommonFlagEncoder.(allowedSacScale(java.lang.String)))\n    return 0;\n"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"c190f4f1-8282-11e5-9db6-a5a1cc31fc33","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"tmpEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:93","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.EdgeEntry.int"},"status":-1},{"failures":[],"tindex":"c190f4f2-8282-11e5-9db6-1989a92dd96a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:87","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"autoRemoveTemporary":"alreadyRun"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:90","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[46],"tindex":"c1911c03-8282-11e5-9db6-3d2c094a42c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"variableMap":{"cap":"flags","bytes":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:121","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodedValue.getValue(long)"},"status":-1},{"failures":[],"tindex":"c1911c04-8282-11e5-9db6-4d84fcc5bc96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:441","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage) == null)\n    throw new java.lang.IllegalStateException(\"GraphHopper storage not initialized\");\n"},"variableMap":{"ghStorage":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1110","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.freeze()"},"status":0},{"failures":[47],"tindex":"c1911c05-8282-11e5-9db6-e5a45e99aa76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:80","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,48,17,19,20,21,22,23,49,24,25,26,27,28,29,30,31,32,33,34,50,35,36,51,52,37,38,39,40,41,42,43,44,45],"tindex":"c1911c06-8282-11e5-9db6-3325ddbaeac2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"traversalId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:224","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n"},"status":-1},{"failures":[],"tindex":"c1914317-8282-11e5-9db6-8fda9bf94682","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.RAMDataAccess) {\n    com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess);\n    com.graphhopper.storage.RAMDataAccess com.graphhopper.storage.RAMDataAccess = ((com.graphhopper.storage.RAMDataAccess)(com.graphhopper.storage.DataAccess));\n    com.graphhopper.storage.RAMDataAccess.byte[][] = new byte[byte[][].int][];\n    for (int int = 0 ; int < (byte[][].int) ; int++) {\n        byte[] byte[] = byte[][][int];\n        com.graphhopper.storage.RAMDataAccess.byte[][][int] = java.util.Arrays.copyOf(byte[], byte[].int);\n    }\n    com.graphhopper.storage.RAMDataAccess.setSegmentSize(int);\n    return com.graphhopper.storage.DataAccess;\n} else {\n    return super.copyTo(com.graphhopper.storage.DataAccess);\n}"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,14,15,16,48,17,53,18,19,20,22,23,49,24,25,27,28,29,30,31,32,33,34,36,52,37,38,39,40,41,42,43,45],"tindex":"c1914318-8282-11e5-9db6-295fef76510a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:80","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.Edge.isValid(com.graphhopper.storage.EdgeEntry.int)) {\n    com.graphhopper.routing.Path.processEdge(com.graphhopper.storage.EdgeEntry.int, com.graphhopper.storage.EdgeEntry.int);\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n}"},"status":-1},{"failures":[10,13,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"c1914319-8282-11e5-9db6-6bbcc39d3c58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:80","type":"CtReturnImpl","sourcecode":"return (double) / 1000000.0"},"variableMap":{"max":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:375","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[],"tindex":"c1916a2a-8282-11e5-9db6-8304cd1988d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:118","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(float))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"c1916a2b-8282-11e5-9db6-4bca204067be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:689","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = com.graphhopper.storage.CHGraphImpl.shortcut(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    com.graphhopper.util.CHEdgeIteratorState.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n    com.graphhopper.util.CHEdgeIteratorState.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIteratorState.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    int++;\n} "},"status":-2},{"failures":[68],"tindex":"c1916a2c-8282-11e5-9db6-9d2f54284b8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:172","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"variableMap":{"elem":"takenFrom","i":"i","child":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:232","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[4,5,7,8,69,70,71,72,73,74,75,76,77,38,41,45],"tindex":"c191913d-8282-11e5-9db6-df39b2df3da8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.QueryResult:163","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIteratorState) == null)\n    throw new java.lang.IllegalStateException(\"No closest edge?\");\n"},"variableMap":{"closestEdge":"adjEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:619","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState)"},"status":-1},{"failures":[78,79],"tindex":"c191913e-8282-11e5-9db6-ebd6b07704bc","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"variableMap":{"edgeId":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:51","type":"CtIfImpl","sourcecode":"if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphHopperStorage.isNodeRemoved(int)))) {\n    com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c1911c04-8282-11e5-9db6-4d84fcc5bc96","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.freeze"]},"type":"staticDiff"}]}]}