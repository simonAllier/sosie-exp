{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":311,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":226,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":125,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":300,"com.graphhopper.reader.OSMReaderTest.testFerry":64,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":363,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":364,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":20,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":166,"com.graphhopper.routing.QueryGraphTest.testOneWay":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":346,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":239,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":121,"com.graphhopper.reader.OSMReaderTest.testWithBounds":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":145,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":158,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":295,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":314,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":168,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":161,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":93,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":238,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":211,"com.graphhopper.GraphHopperTest.testPrepare":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":286,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":320,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":77,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":82,"com.graphhopper.search.NameIndexTest.testFlush":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":200,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":35,"com.graphhopper.util.InstructionListTest.testWayList":12,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":265,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":39,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":361,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":173,"com.graphhopper.GraphHopperAPITest.testDisconnected179":241,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":305,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":60,"com.graphhopper.util.PointListTest.testEquals":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":119,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":301,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":36,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":122,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":1,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":7,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":297,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":172,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":323,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":56,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":214,"com.graphhopper.GraphHopperTest.testLoadOSM":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":129,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":123,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":261,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":332,"com.graphhopper.reader.OSMReaderTest.testSort":67,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":224,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":72,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":344,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":263,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":208,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":274,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":46,"com.graphhopper.storage.RAMDataAccessTest.testHeader":167,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":242,"com.graphhopper.storage.MMapDataAccessTest.testHeader":183,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":2,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":243,"com.graphhopper.routing.PathTest.testWayList":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":339,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":47,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":351,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":272,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":221,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":277,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":327,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":106,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":357,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":41,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":6,"com.graphhopper.util.GHUtilityTest.testSort":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":306,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":354,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":199,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":298,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":138,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":288,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":326,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":352,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":229,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":191,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":258,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":282,"com.graphhopper.GraphHopperAPITest.testLoad":63,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":287,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":330,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":78,"com.graphhopper.reader.OSMReaderTest.testBarriers":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":162,"com.graphhopper.routing.PathTest.testFound":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":345,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":240,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":37,"com.graphhopper.util.GHUtilityTest.testCopy":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":302,"com.graphhopper.routing.PathTest.testFindInstruction":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":143,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":146,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":307,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":251,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":38,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":136,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":264,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":40,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":83,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":292,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":336,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":350,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":285,"com.graphhopper.reader.PrinctonReaderTest.testRead":0,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":280,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":329,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":210,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":349,"com.graphhopper.util.InstructionListTest.testWayList2":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":270,"com.graphhopper.reader.OSMReaderTest.testFoot":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":317,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":127,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":268,"com.graphhopper.reader.OSMReaderTest.testOneWay":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":296,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":342,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":335,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":310,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":209,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":283,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":159,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":245,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":250,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":68,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":202,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":213,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":116,"com.graphhopper.routing.PathBidirRefTest.testExtract":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":203,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":53,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":362,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":237,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":331,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":299,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":104,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":163,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":134,"com.graphhopper.util.GHUtilityTest.testSort2":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":309,"com.graphhopper.reader.OSMReaderTest.testMain":66,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":181,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":193,"com.graphhopper.routing.PathBidirRefTest.testExtract2":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":131,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":140,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":230,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":107,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":175,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":291,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":192,"com.graphhopper.storage.GraphHopperStorageTest.testClone":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":124,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":269,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":356,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":348,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":254,"com.graphhopper.GraphHopperTest.testFootAndCar":57,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":304,"com.graphhopper.routing.PathTest.testTime":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":347,"com.graphhopper.util.GHUtilityTest.testSortDirected":359,"com.graphhopper.GraphHopperTest.testPrepareOnly":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":341,"com.graphhopper.GraphHopperTest.testVia":54,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":139,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":222,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":92,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":328,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":14,"com.graphhopper.GraphHopperTest.testFootOnly":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":98,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":71,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":99,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":312,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":340,"com.graphhopper.util.InstructionListTest.testFind":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":201,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":171},"transformations":[{"failures":[],"tindex":"cd909a7c-8287-11e5-91e0-652f62b3bde0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"cd90c18d-8287-11e5-91e0-f915192b77e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:408","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"cd90c18e-8287-11e5-91e0-99a651175163","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.postImportHook()"},"status":0},{"failures":[0,1],"tindex":"cd90c18f-8287-11e5-91e0-75f36a30dae4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"variableMap":{"allBits":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:77","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    int = java.lang.Integer.parseInt(java.lang.String[][int]);\n} else {\n    double = java.lang.Double.parseDouble(java.lang.String[][int]);\n}"},"status":-1},{"failures":[],"tindex":"cd90c190-8287-11e5-91e0-7fc5064870b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:32","type":"CtReturnImpl","sourcecode":"return java.lang.Math.java.lang.Math.sqrt(com.graphhopper.util.DistanceCalc2D.calcNormalizedDist(double, double, double, double))"},"variableMap":{"this":"calc","fromX":"lon1","toX":"lon","fromY":"lon","toY":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:74","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"cd90c191-8287-11e5-91e0-fb28f1aa8d0e","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:656","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"variableMap":{"nextTowerId":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:333","type":"CtLocalVariableImpl","sourcecode":"int int = (double[].int) / 2"},"status":-2},{"failures":[],"tindex":"cd90e8a2-8287-11e5-91e0-855a8fc6d795","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:48","type":"CtAssignmentImpl","sourcecode":"double = (double - double) / (double + double)"},"variableMap":{"r":"java.lang.Double.MAX_VALUE","x":"java.lang.Double.MAX_VALUE","absY":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:85","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"cd90e8a3-8287-11e5-91e0-25b12cb79c8f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:174","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"cd90e8a4-8287-11e5-91e0-3dd482c976ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >> 1"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"cd90e8a5-8287-11e5-91e0-451a1059ed62","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:69","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Dijkstra.runAlgo()"},"status":-1},{"failures":[15,16],"tindex":"cd90e8a6-8287-11e5-91e0-6deea2676c82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"variableMap":{"bytePos":"nodeFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:572","type":"CtIfImpl","sourcecode":"if (long != 0)\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n"},"status":-1},{"failures":[5,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,9,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,15,68,69,70,71,16,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,10,12,13,14],"tindex":"cd910fb7-8287-11e5-91e0-175e8f831964","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:369","type":"CtReturnImpl","sourcecode":"return ((int)(double * (com.graphhopper.util.Helper.float)))"},"status":-1},{"failures":[],"tindex":"cd910fb8-8287-11e5-91e0-27cd9b80e71d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:319","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"lazySW":"sw"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1047","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":0},{"failures":[187,188],"tindex":"cd910fb9-8287-11e5-91e0-1373eab09070","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"start","y2":"start","x1":"start","x2":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:116","type":"CtIfImpl","sourcecode":"if ((int[][int]) == (int[][int])) {\n    gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList();\n    int int;\n    while ((int = gnu.trove.stack.array.TIntArrayStack.pop()) != int) {\n        gnu.trove.list.array.TIntArrayList.add(int);\n        com.graphhopper.coll.GHBitSetImpl.clear(int);\n    }\n    gnu.trove.list.array.TIntArrayList.add(int);\n    gnu.trove.list.array.TIntArrayList.trimToSize();\n    com.graphhopper.coll.GHBitSetImpl.clear(int);\n    java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList);\n} "},"status":-1},{"failures":[189,48,59,60,61,76,190,89,141,191,166,167,192,193,169,182,183],"tindex":"cd9136ca-8287-11e5-91e0-1b175f56fcfc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"segmentSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:104","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeInt(int)"},"status":-1},{"failures":[76,141,169,194],"tindex":"cd9136cb-8287-11e5-91e0-ab5f60d669d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:330","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.(getSize()) != (com.graphhopper.util.PointList.getSize())) || (com.graphhopper.util.PointList.(is3D()) != (com.graphhopper.util.PointList.is3D())))\n    return false;\n"},"variableMap":{"other":"other","this":"other"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:327","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.isEmpty()) && (com.graphhopper.util.PointList.isEmpty()))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"cd9136cc-8287-11e5-91e0-53be4fd04cf0","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:74","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[195,196,2,3,197,198,4,5,17,18,6,7,19,20,21,22,23,24,25,26,27,28,29,30,31,32,199,33,200,201,202,203,204,205,8,206,207,208,209,210,211,212,213,214,34,215,216,35,36,217,218,219,37,220,221,38,39,222,223,224,40,41,225,42,43,226,44,45,227,46,47,228,229,230,187,231,232,233,234,235,188,236,237,238,48,49,9,50,51,52,53,239,54,55,56,57,58,59,60,61,62,240,63,241,242,64,65,66,67,15,68,69,70,71,16,72,73,74,75,0,1,243,76,190,244,77,245,78,246,79,247,248,249,250,251,252,253,81,254,255,256,257,82,83,258,84,259,260,261,85,86,87,262,263,264,88,265,266,267,268,269,90,91,92,93,94,95,96,97,98,270,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,271,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,272,273,191,274,142,275,143,276,144,277,278,279,280,281,282,283,146,284,285,286,287,147,148,288,149,289,290,291,150,151,152,292,293,294,153,295,296,297,298,299,154,300,155,301,156,302,303,304,305,306,307,308,158,309,310,311,312,159,160,313,161,314,315,316,162,163,164,317,318,319,165,320,321,322,323,324,325,168,326,327,193,328,329,330,331,169,332,170,333,171,334,172,335,336,337,338,339,340,341,174,342,343,344,345,175,176,346,177,347,348,349,178,179,180,350,351,352,181,353,354,355,356,357,358,184,185,186,359,360,361,10,11,12,13,14,362,363,364],"tindex":"cd9136cd-8287-11e5-91e0-6f00e6e1fcca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:48","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[17],"tindex":"cd915dde-8287-11e5-91e0-9f0546eaa993","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"tmpIndex","guess":"pointsIndex","low":"pointsIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:103","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"cd915ddf-8287-11e5-91e0-354f3f1ec6d8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:52","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.storage.DataAccess.getCapacity()))"},"variableMap":{"da":"values"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:73","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"cd90c18e-8287-11e5-91e0-99a651175163","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.TranslationMap.postImportHook"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_com.graphhopper.util.Translation_get(java.lang.String).b","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_com.graphhopper.util.Translation_get(java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l4"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l4"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_void_postImportHook().l4"]},"type":"branch"}]},{"transformation":"cd910fb8-8287-11e5-91e0-27cd9b80e71d","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1"]},"type":"branch"}]}]}