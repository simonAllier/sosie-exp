{"failureDictionary":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":34,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":9,"com.graphhopper.reader.OSMReaderTest.testFoot":25,"com.graphhopper.reader.OSMReaderTest.testMain":26,"com.graphhopper.reader.OSMReaderTest.testFerry":24,"com.graphhopper.reader.OSMReaderTest.testOneWay":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":1,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":13,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":4,"com.graphhopper.GraphHopperTest.testPrepareOnly":12,"com.graphhopper.GraphHopperTest.testVia":14,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":21,"com.graphhopper.reader.OSMReaderTest.testWithBounds":35,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":31,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":33,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":29,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":30,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":18,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":36,"com.graphhopper.GraphHopperTest.testFootOnly":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":2,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":16,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":32,"com.graphhopper.reader.OSMReaderTest.testBarriers":28,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":11,"com.graphhopper.GraphHopperTest.testLoadOSM":19,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":23,"com.graphhopper.GraphHopperTest.testPrepare":15,"com.graphhopper.GraphHopperTest.testFootAndCar":17,"com.graphhopper.reader.OSMReaderTest.testSort":27},"transformations":[{"failures":[],"tindex":"0f125fbe-7938-11e5-9766-47c1d2393dab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:157","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"0f1286cf-7938-11e5-9766-a3d8a7d01669","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"variableMap":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"0f1286d0-7938-11e5-9766-6917024ef018","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:752","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"class:bicycle:\" + (java.lang.String.toString())"},"variableMap":{"specificBicycleClass":"message","subkey":"message"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"0f1286d1-7938-11e5-9766-d3f025f5b9ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMInputFile.openXMLStream(java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"0f1286d2-7938-11e5-9766-ab68df5cf386","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"com.graphhopper.reader.OSMElement.NODE","from":"com.graphhopper.reader.OSMElement.NODE","end":"com.graphhopper.reader.OSMElement.RELATION"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:286","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n    switch (com.graphhopper.reader.OSMElement.getType()) {\n        case com.graphhopper.reader.OSMElement.int :\n            if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n                com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n            } \n            break;\n        case com.graphhopper.reader.OSMElement.int :\n            if (long < 0) {\n                com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n                long = long;\n            } \n            com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n            break;\n        case com.graphhopper.reader.OSMElement.int :\n            if (long < 0) {\n                com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n                long = long;\n            } \n            com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n            break;\n    }\n    if (((++long) % 100000000) == 0) {\n        com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", locs:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long))) + \" (\") + (long)) + \") \") + (com.graphhopper.util.Helper.getMemInfo())));\n    } \n}"},"status":-2},{"failures":[],"tindex":"0f12ade3-7938-11e5-9766-95028e90ebed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:614","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    continue;\n"},"variableMap":{"existingDirectWeight":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:303","type":"CtIfImpl","sourcecode":"if (!((int == 0) && (int == 0))) {\n    double double;\n    int int = int;\n    if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    } else {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    }\n    if (double < double) {\n        double = double;\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"0f12ade4-7938-11e5-9766-b5a6651712d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:534","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"variableMap":{"intIndex":"minOneWayNetworkSize","len":"minOneWayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:228","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter, java.util.List<com.graphhopper.routing.util.TIntArrayList>, int)"},"status":-2},{"failures":[],"tindex":"0f12ade5-7938-11e5-9766-fbf45f75ff42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"variableMap":{"speed":"minLatTmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"status":-2},{"failures":[],"tindex":"0f12ade6-7938-11e5-9766-9ff08797ee86","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:458","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:104","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"0f12ade7-7938-11e5-9766-69258f743691","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"variableMap":{"need":"nextSC"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:198","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.storage.BaseGraph.int)"},"status":-2},{"failures":[],"tindex":"0f12d4f8-7938-11e5-9766-b70af3d800b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:273","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.storage.GraphHopperStorage.getNodes()) ; int++) {\n    if (com.graphhopper.routing.util.PrepareRoutingSubnetworks.detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer, int))\n        com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int);\n    \n}"},"status":-2},{"failures":[],"tindex":"0f12d4f9-7938-11e5-9766-09f6217fdca4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:72","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-2},{"failures":[],"tindex":"0f12d4fa-7938-11e5-9766-c7880ed553e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:243","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.TIntLongMap) == null)\n    com.graphhopper.reader.TIntLongMap = new TIntLongHashMap(com.graphhopper.reader.OSMReader.getOsmWayIdSet().size() , 0.5F , -1 , -1);\n"},"status":-2},{"failures":[],"tindex":"0f12d4fb-7938-11e5-9766-713b6ea54fab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"b_lat_deg","r_lat":"b_lat_deg","a_lat":"b_lat_deg","delta_lon":"b_lat_deg","r_lon":"b_lat_deg","a_lon":"b_lat_deg","norm":"b_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:179","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-2},{"failures":[],"tindex":"0f12d4fc-7938-11e5-9766-c9b2ee23eda4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:324","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.flush()"},"status":-2},{"failures":[],"tindex":"0f12d4fd-7938-11e5-9766-13624f986443","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:92","type":"CtReturnImpl","sourcecode":"return int[][1]"},"status":-2},{"failures":[],"tindex":"0f12d4fe-7938-11e5-9766-5b63a741d60f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:94","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n        int = com.graphhopper.util.EdgeIterator.getEdge();\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"0f12d4ff-7938-11e5-9766-b71f1f17588a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n            int++;\n        } \n        if (int > (int[][int])) {\n            int[][int] = int[][int];\n            int[][int] = int[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    int[][int] = int;\n} else {\n    while ((int[][(int / 2)]) > int) {\n        int[][int] = int[][(int / 2)];\n        int[][int] = int[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    int[][int] = int;\n}"},"variableMap":{"elem":"area","size":"intLen","keys":"area","i":"intLen","value":"intLen","key":"intLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:210","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4));\n}"},"status":-2},{"failures":[],"tindex":"0f12fc10-7938-11e5-9766-23c167fd4dec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:323","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((long) + (int)), int)"},"variableMap":{"edgePointer":"pointer","S_SKIP_EDGE1":"value","shortcuts":"dataAccess","edge1":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:594","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    com.graphhopper.storage.index.TIntHashSet.add(-(int + 1));\n} else {\n    long long = ((long)(int)) * 4;\n    for (long long = long + 4 ; long < long ; long += 4) {\n        com.graphhopper.storage.index.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long));\n    }\n}"},"status":-2},{"failures":[],"tindex":"0f12fc11-7938-11e5-9766-3b5108219be7","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:303","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    if ((int[][int]) == int) {\n        return int;\n    } \n}"},"variableMap":{"mSize":"index","value":"index","mValues":"mKeys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:231","type":"CtReturnImpl","sourcecode":"return int[][int]"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}