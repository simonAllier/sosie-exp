{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":47,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":48,"com.graphhopper.reader.OSMReaderTest.testFerry":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":54,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":13,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":36,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":15,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":60,"com.graphhopper.GraphHopperTest.testPrepare":6,"com.graphhopper.GraphHopperTest.testFootAndCar":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":16,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":66,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":46,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":33,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":21,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":68,"com.graphhopper.GraphHopperTest.testPrepareOnly":31,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":25,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":45,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":52,"com.graphhopper.GraphHopperTest.testFootOnly":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":53,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":62,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":64,"com.graphhopper.reader.OSMReaderTest.testBarriers":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":63,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":27},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"a9ee657a-82c1-11e5-94e9-17855b98fb3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:491","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"variableMap":{"len":"current","start":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:72","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getEdge()"},"status":-1},{"failures":[],"tindex":"a9ee8c8b-82c1-11e5-94e9-f33afd634243","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:69","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String[][int])) {\n    continue;\n} "},"variableMap":{"args":"this","j":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:771","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getBaseNode();\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    java.lang.String java.lang.String = ((((((((((((((((((((((com.graphhopper.util.EdgeIterator.getEdge()) + \", r.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", r.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", tr.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", tr.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", base:\") + int) + \", adj:\") + int) + \", nodeCount:\") + (int);\n    if (int >= (int))\n        throw new java.lang.RuntimeException((\"Adj.node problem with edge \" + java.lang.String));\n    \n    if (int >= (int))\n        throw new java.lang.RuntimeException((\"Base node problem with edge \" + java.lang.String));\n    \n    try {\n        com.graphhopper.util.EdgeExplorer.setBaseNode(int).toString();\n    } catch (java.lang.Exception ex) {\n        org.slf4j.LoggerFactory.getLogger(java.lang.Object.getClass()).error((\"adj:\" + int));\n    }\n    try {\n        com.graphhopper.util.EdgeExplorer.setBaseNode(int).toString();\n    } catch (java.lang.Exception ex) {\n        org.slf4j.LoggerFactory.getLogger(java.lang.Object.getClass()).error((\"base:\" + int));\n    }\n}"},"status":-2},{"failures":[],"tindex":"a9eeb39c-82c1-11e5-94e9-49f9bb9a4783","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:677","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:222","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"File does not exist!? \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) + \" Make sure that you flushed before renaming. Otherwise it could make problems\") + \" for memory mapped DataAccess objects\"))"},"status":0},{"failures":[],"tindex":"a9eeb39d-82c1-11e5-94e9-8baeba054ffe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:861","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), 0)"},"status":0},{"failures":[],"tindex":"a9eeb39e-82c1-11e5-94e9-41d34354951c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:527","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.PREFER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:359","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[22,23,24,25,26],"tindex":"a9eeb39f-82c1-11e5-94e9-f730c5126388","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:238","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"keyIndex":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:136","type":"CtIfImpl","sourcecode":"if (double < double) {\n    com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator);\n    if (double > (com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double)))\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n    \n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"a9eedab0-82c1-11e5-94e9-051690f4d5fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:558","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.setBaseURL(java.lang.String)"},"variableMap":{"baseURL":"cacheDirStr","tmpProvider":"tmpProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:556","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider.setCacheDir(new java.io.File(java.lang.String))"},"status":0},{"failures":[27,28],"tindex":"a9eedab1-82c1-11e5-94e9-f94865f6be56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:423","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphExtension.flush()"},"status":-1},{"failures":[29],"tindex":"a9eedab2-82c1-11e5-94e9-290985885950","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:284","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TLongList.add(long)"},"variableMap":{"wayNodes":"partIds","nodeId":"wayFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:403","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long))"},"status":-1},{"failures":[],"tindex":"a9eedab3-82c1-11e5-94e9-01c0918d63c2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:81","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(long >> 8))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:77","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 40))"},"status":0},{"failures":[20,30],"tindex":"a9ef01c4-82c1-11e5-94e9-c5194bf03347","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"max"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:343","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointList, int);\n}"},"status":-1},{"failures":[],"tindex":"a9ef01c5-82c1-11e5-94e9-df9689487561","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"indi"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:134","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.Instruction.int)) {\n    if (!(boolean)) {\n        java.lang.String = com.graphhopper.util.Translation.tr(\"roundaboutEnter\");\n    } else {\n        java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"roundaboutExit\", com.graphhopper.util.RoundaboutInstruction.getExitNumber()) : com.graphhopper.util.Translation.tr(\"roundaboutExitOnto\", com.graphhopper.util.RoundaboutInstruction.getExitNumber(), java.lang.String);\n    }\n} else {\n    throw new java.lang.IllegalStateException((int + \"no Roundabout indication\"));\n}"},"status":-2},{"failures":[31,32,5,6,9,10,33,34,35,36,37,38,39,40,41,12,42,43,13,44,45,46,47,14,15,48,49,16,50,51,52,53,54,17,55,56,57,58,59,60,61,62,63],"tindex":"a9ef01c6-82c1-11e5-94e9-4b1463c3ab42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"lastNodesLazyUpdates","pointer":"lastNodesLazyUpdates","maxCapacity":"lastNodesLazyUpdates","baseCapacity":"lastNodesLazyUpdates"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:311","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHTreeMapComposed.isEmpty())) && ((com.graphhopper.coll.GHTreeMapComposed.getSize()) < long)) {\n    com.graphhopper.util.StopWatch.start();\n    int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n    if (int > (com.graphhopper.coll.GHTreeMapComposed.peekValue())) {\n        com.graphhopper.coll.GHTreeMapComposed.insert(int, int);\n        com.graphhopper.util.StopWatch.stop();\n        continue;\n    } \n    com.graphhopper.util.StopWatch.stop();\n} "},"status":-1},{"failures":[64,65],"tindex":"a9ef28d7-82c1-11e5-94e9-0babdbd13f63","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"err":"minutes","dLat":"minutes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:500","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[66,67,68],"tindex":"a9ef28d8-82c1-11e5-94e9-a137470d6b75","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"variableMap":{"edgeId":"ret"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:131","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"a9ef28d9-82c1-11e5-94e9-fd4f5adfc7bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"status":-2},{"failures":[],"tindex":"a9ef4fea-82c1-11e5-94e9-c99020c47243","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:564","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMReader.isInBounds(com.graphhopper.reader.OSMNode)) {\n    com.graphhopper.reader.OSMReader.addNode(com.graphhopper.reader.OSMNode);\n    if (com.graphhopper.reader.OSMNode.hasTags()) {\n        long long = com.graphhopper.routing.util.EncodingManager.handleNodeTags(com.graphhopper.reader.OSMNode);\n        if (long != 0)\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n        \n    } \n    (long)++;\n} else {\n    (long)++;\n}"},"status":-2},{"failures":[],"tindex":"a9ef4feb-82c1-11e5-94e9-9f939a739f9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setSkippedEdges\")"},"variableMap":{"this":"baseRevEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:616","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"a9ef4fec-82c1-11e5-94e9-d998f19a2946","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:95","type":"CtIfImpl","sourcecode":"if (long < 0)\n    return int;\n"},"variableMap":{"retIndex":"turnRestrictionBit","noEntryValue":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:606","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    long = 1L << int;\n    return int + 1;\n} "},"status":0},{"failures":[],"tindex":"a9ef4fed-82c1-11e5-94e9-1509d55a023d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:290","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>) == (gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"a9eeb39c-82c1-11e5-94e9-49f9bb9a4783","diffs":[{"branches":{"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":["com.graphhopper.storage.AbstractDataAccess_java.lang.String_getFullName().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.AbstractDataAccess.getFullName"]},"type":"staticDiff"}]},{"transformation":"a9eedab0-82c1-11e5-94e9-051690f4d5fb","diffs":[{"methodsDiff":{"delete":["com.graphhopper.reader.dem.ElevationProvider.setCacheDir"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":["com.graphhopper.reader.dem.ElevationProvider$1_com.graphhopper.reader.dem.ElevationProvider_setCacheDir(java.io.File).b","com.graphhopper.reader.dem.ElevationProvider$1_com.graphhopper.reader.dem.ElevationProvider_setBaseURL(java.lang.String).b"]},"type":"branch"}]},{"transformation":"a9eeb39d-82c1-11e5-94e9-8baeba054ffe","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setInt"]},"type":"staticDiff"}]}]}