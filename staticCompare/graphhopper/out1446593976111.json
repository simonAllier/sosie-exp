{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":1,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":334,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":160,"com.graphhopper.GraphHopperAPITest.testNoLoad":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":68,"com.graphhopper.reader.OSMReaderTest.testFerry":424,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":258,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":283,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":320,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":263,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":10,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":319,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":184,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":15,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":88,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":231,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":441,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":50,"com.graphhopper.GraphHopperTest.testPrepare":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":409,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":454,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":401,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":112,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":394,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":399,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":143,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":284,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":460,"com.graphhopper.GraphHopperTest.testLoadOSM":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":126,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":144,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":344,"com.graphhopper.reader.OSMReaderTest.testSort":427,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":435,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":168,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":250,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":101,"com.graphhopper.routing.DijkstraTest.initializationError":417,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":59,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":392,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":174,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":313,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":138,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":66,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":406,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":300,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":270,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":397,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":396,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":194,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":171,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":25,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":304,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":364,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":185,"com.graphhopper.GraphHopperAPITest.testLoad":421,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":330,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":232,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":175,"com.graphhopper.reader.OSMReaderTest.testBarriers":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":398,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":309,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":162,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":327,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":176,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":387,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":339,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":159,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":372,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":251,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":382,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":416,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":73,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":459,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":152,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":208,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":280,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":43,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":214,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":286,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":186,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":113,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":221,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":429,"com.graphhopper.routing.AStarTest.initializationError":389,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":55,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":340,"com.graphhopper.routing.PathBidirRefTest.testExtract":418,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":287,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":453,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":448,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":211,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":452,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":135,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":451,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":94,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":316,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":450,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":278,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":449,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":157,"com.graphhopper.util.GHUtilityTest.testSort2":443,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":407,"com.graphhopper.reader.OSMReaderTest.testMain":426,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":56,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":293,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":198,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":370,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":437,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":29,"com.graphhopper.storage.GraphHopperStorageTest.testClone":224,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":52,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":234,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":356,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":308,"com.graphhopper.util.InstructionListTest.testCreateGPX":446,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":36,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":363,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":87,"com.graphhopper.reader.OSMReaderTest.testRelation":433,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":41,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":445,"com.graphhopper.GraphHopperTest.testFootOnly":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":128,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":317,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":114,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":353,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":395,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":368,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":146,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":49,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":142,"com.graphhopper.reader.OSMReaderTest.testWithBounds":436,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":384,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":89,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":341,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":123,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":302,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":383,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":328,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":197,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":111,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":190,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":393,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":253,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":39,"com.graphhopper.GraphHopperAPITest.testDisconnected179":422,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":75,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":355,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":380,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":440,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":86,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":349,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":292,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":266,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":226,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":201,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":331,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":244,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":277,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":404,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":415,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":457,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":131,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":358,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":132,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":298,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":305,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":172,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":413,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":295,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":102,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":414,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":400,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":291,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":17,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":181,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":225,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":369,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.util.GHUtilityTest.testSort":444,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":63,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":210,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":223,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":161,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":118,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":374,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":105,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":167,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":169,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":303,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":301,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":268,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":412,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":93,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":274,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":345,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":119,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":329,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":390,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":187,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":78,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":0,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":310,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":405,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":348,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":346,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":408,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":58,"com.graphhopper.reader.PrinctonReaderTest.testRead":439,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":378,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":314,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":371,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":282,"com.graphhopper.reader.OSMReaderTest.testFoot":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":149,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":150,"com.graphhopper.reader.OSMReaderTest.testOneWay":438,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":34,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":248,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":204,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":324,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":458,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":85,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":228,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":133,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":285,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":357,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":455,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":108,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":333,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":318,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":81,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":61,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":216,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":442,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":18,"com.graphhopper.routing.PathBidirRefTest.testExtract2":419,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":391,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":127,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":153,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":139,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":246,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":312,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":120,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":431,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":104,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":335,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":381,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":456,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":65,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":249,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":359,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":241,"com.graphhopper.GraphHopperTest.testFootAndCar":267,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":71,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":343,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":360,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":361,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":403,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":178,"com.graphhopper.GraphHopperTest.testPrepareOnly":262,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":163,"com.graphhopper.GraphHopperTest.testVia":264,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":402,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":434,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":19,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":245,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":447,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":336,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":432,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":130,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":84,"com.graphhopper.routing.AStarBidirectionTest.initializationError":388,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":165},"transformations":[{"failures":[],"tindex":"2451c291-8284-11e5-a24b-e1af1b01e16c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:105","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.GHNodeAccess.getLatitude(int)"},"variableMap":{"this":"this","nodeId":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:111","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.GHNodeAccess.getLongitude(int)"},"status":-2},{"failures":[0,1],"tindex":"2451c292-8284-11e5-a24b-f325dbddb19b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:103","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry) != null) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.storage.EdgeEntry.int, int), com.graphhopper.storage.EdgeEntry, int);\n} "},"status":-1},{"failures":[],"tindex":"2451e9a3-8284-11e5-a24b-f1f1e05e9451","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"startNode","y2":"startNode","x1":"startNode","x2":"startNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:35","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.push(int)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10],"tindex":"2451e9a4-8284-11e5-a24b-3751fba4f17c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:453","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 3))\n    return \"\";\n"},"status":-1},{"failures":[11],"tindex":"2451e9a5-8284-11e5-a24b-bfb3ba35fc43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:226","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"variableMap":{"sacScale":"firstValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:219","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"2451e9a6-8284-11e5-a24b-173f997f9386","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.TranslationMap.postImportHook()"},"status":0},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,2,282,283,284,285,286,287,288,289,290,291,292,3,293,294,295,296,297,298,299,300,301,302,303,304,4,5,305,306,307,308,309,310,6,311,312,313,314,315,316,317,318,7,319,320,321,322,323,324,325,326,8,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,11,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,9,373,374,375,376,377,378,379,380,381,382,383,10,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,0,401,402,403,404,405,406,407,408,409,1,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440],"tindex":"2451e9a7-8284-11e5-a24b-73627980725a","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:720","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"-gh\""},"variableMap":{"graphHopperFolder":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:128","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim().toLowerCase()"},"status":-1},{"failures":[],"tindex":"245210b8-8284-11e5-a24b-3d3bf3bcc9a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:361","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-2},{"failures":[441,263,264,265,266,267,268,269,271,272,274,350,352,353,356,11,360,425,426,427,428,430,431,432,434,435,436,437,442,438],"tindex":"245210b9-8284-11e5-a24b-9fe5f1771024","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:224","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n        return 0;\n    \n} "},"variableMap":{"sacScale":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:200","type":"CtIfImpl","sourcecode":"if (\"track\".equals(java.lang.String)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if ((((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\")))) && (!(java.lang.String.equals(\"grade2\")))) && (!(java.lang.String.equals(\"grade3\"))))\n        return 0;\n    \n} "},"status":-1},{"failures":[258,259,443,444],"tindex":"245237ca-8284-11e5-a24b-2d991288927f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"connectedId","tmpSize":"connectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:54","type":"CtInvocationImpl","sourcecode":"gnu.trove.stack.array.TIntArrayStack.push(int)"},"status":-1},{"failures":[],"tindex":"245237cb-8284-11e5-a24b-f174aa8e500e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:192","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"245237cc-8284-11e5-a24b-8d2129bc8b40","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"lazySW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[445,446,447],"tindex":"245237cd-8284-11e5-a24b-fd7c7760061e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:199","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('(')"},"variableMap":{"sb":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:225","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkseg>\")"},"status":-1},{"failures":[],"tindex":"245237ce-8284-11e5-a24b-8be9e04a8b3b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:312","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"variableMap":{"bytePos":"bytes","indexDivisor":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:95","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[448,449,450,451,452,453,264,265,266,267,268,269,272,273,390,391,392,393,394,395,396,397,398,399,400,0,401,402,404,405,406,407,408,409,411,412,413,414,454,455,456,457,458,459,460,421],"tindex":"245237cf-8284-11e5-a24b-953f287e0dd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtWhileImpl","sourcecode":"while ((!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) && (!com.graphhopper.routing.AbstractRoutingAlgorithm.(isWeightLimitExceeded()))) {\n    if ((!(boolean)) && (!(boolean))) {\n        if (com.graphhopper.routing.AbstractBidirAlgo.(getCurrentFromWeight()) < com.graphhopper.routing.AbstractBidirAlgo.(getCurrentToWeight()))\n            boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n        else\n            boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n        \n    } else if (!(boolean)) {\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    } else {\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    }\n}"},"status":-1},{"failures":[],"tindex":"24525ee0-8284-11e5-a24b-65795d66cff8","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:404","type":"CtIfImpl","sourcecode":"if ((int > (com.graphhopper.routing.util.BikeCommonFlagEncoder.int)) && ((!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.Set<java.lang.String>))) && (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"highway\", \"steps\"))\n        int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2;\n    else\n        int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int;\n    \n} "},"status":-2},{"failures":[],"tindex":"24525ee1-8284-11e5-a24b-dfa0ab84e8fe","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:284","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"status":0},{"failures":[],"tindex":"24525ee2-8284-11e5-a24b-fbabf523fa74","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:857","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.prepare()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:856","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(isPrepared()))\n    com.graphhopper.GraphHopper.prepare();\n"},"status":0},{"failures":[],"tindex":"24525ee3-8284-11e5-a24b-e3e9a514ca4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:48","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"24525ee4-8284-11e5-a24b-7f42d39465d9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:133","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"2451e9a6-8284-11e5-a24b-173f997f9386","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_com.graphhopper.util.Translation_get(java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l4","com.graphhopper.util.TranslationMap_com.graphhopper.util.Translation_get(java.lang.String).b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l4"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).e1","com.graphhopper.util.TranslationMap_void_postImportHook().b","com.graphhopper.util.TranslationMap_void_postImportHook().e3","com.graphhopper.util.TranslationMap_void_postImportHook().t1","com.graphhopper.util.TranslationMap_void_postImportHook().e2","com.graphhopper.util.TranslationMap_void_postImportHook().e1","com.graphhopper.util.TranslationMap$TranslationHashMap_java.util.Map_asMap().b","com.graphhopper.util.TranslationMap_int_countOccurence(java.lang.String,java.lang.String).b","com.graphhopper.util.TranslationMap_void_postImportHook().l5","com.graphhopper.util.TranslationMap_void_postImportHook().l4"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.TranslationMap.postImportHook"]},"type":"staticDiff"}]},{"transformation":"24525ee2-8284-11e5-a24b-fbabf523fa74","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.GraphHopper_boolean_isPrepared().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.GraphHopper_boolean_isPrepared().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.prepare"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}