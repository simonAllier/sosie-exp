{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":54,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":30,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":81,"com.graphhopper.reader.OSMReaderTest.testMain":33,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":23,"com.graphhopper.reader.OSMReaderTest.testFerry":46,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":83,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":78,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":27,"com.graphhopper.routing.QueryGraphTest.testOneWay":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":76,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":37,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":16,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":19,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":69,"com.graphhopper.reader.OSMReaderTest.testWithBounds":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":0,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":51,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":25,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":71,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":56,"com.graphhopper.reader.OSMNodeTest.testSetTags":74,"com.graphhopper.storage.StorablePropertiesTest.testStore":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":75,"com.graphhopper.storage.GraphHopperStorageTest.testClone":67,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":20,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":85,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":17,"com.graphhopper.GraphHopperTest.testPrepare":39,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":58,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":60,"com.graphhopper.GraphHopperTest.testFootAndCar":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":77,"com.graphhopper.reader.OSMReaderTest.testFoot":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":4,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":5,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":31,"com.graphhopper.reader.OSMReaderTest.testOneWay":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":63,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":84,"com.graphhopper.GraphHopperAPITest.testDisconnected179":32,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":43,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":65,"com.graphhopper.GraphHopperTest.testPrepareOnly":36,"com.graphhopper.GraphHopperTest.testVia":38,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":22,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":82,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":53,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":2,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":50,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":41,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":61,"com.graphhopper.GraphHopperTest.testFootOnly":13,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":62,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":66,"com.graphhopper.reader.OSMReaderTest.testBarriers":48,"com.graphhopper.GraphHopperTest.testLoadOSM":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":7,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":45,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":14,"com.graphhopper.util.GHUtilityTest.testCopy":70,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":9,"com.graphhopper.reader.OSMReaderTest.testSort":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":80},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"d0e7654d-829d-11e5-ba4f-315e014e854b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:180","type":"CtIfImpl","sourcecode":"if (double < 1)\n    return ;\n"},"variableMap":{"fullDist2D":"tmpLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:172","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.QueryResult.Position) != (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position)) {\n    com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(double , double , double);\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"d0e78c5e-829d-11e5-ba4f-476c915b60a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:164","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(java.lang.Object[], \"tmp\")"},"status":-2},{"failures":[35,36,37,38,39,40,12,41,42,43,44,13,45,46,47,33,34,48,49,50,51,52,53,54,55,56,57],"tindex":"d0e78c5f-829d-11e5-ba4f-b9c2764dbd63","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:186","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\")"},"variableMap":{"parser":"parser"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:61","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\")"},"status":-1},{"failures":[],"tindex":"d0e78c60-829d-11e5-ba4f-af49204e2ea3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"origPoints","nextEdgeOther":"origPoints","nodeOther":"origPoints","nextEdge":"origPoints"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:94","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int = com.graphhopper.util.PointList.getSize();\n    com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n} "},"status":0},{"failures":[],"tindex":"d0e7b371-829d-11e5-ba4f-89eac2088a9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:364","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.isCHPossible()"},"status":0},{"failures":[],"tindex":"d0e7b372-829d-11e5-ba4f-7d5ac3a1f72d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"val","child":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:440","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d0e7b373-829d-11e5-ba4f-6524cc28a997","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:136","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.split(\"\\\\|\")[0]"},"variableMap":{"entry":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:405","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"d0e7b374-829d-11e5-ba4f-1b8a6d3ac714","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:323","type":"CtIfImpl","sourcecode":"if (int < (int))\n    return ;\n"},"variableMap":{"nodeIndex":"delNodes","nodeCount":"delNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:231","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    return ;\n"},"status":0},{"failures":[58,59,60],"tindex":"d0e7b375-829d-11e5-ba4f-b979e292fd0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:68","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = 500;\n    int int = (int / int) + 1;\n    int int = 0;\n    for (int int = 0 ; int < int ; int++) {\n        int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)));\n        int += int;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, 0, (int - 1));\n}"},"status":-1},{"failures":[61,62,63,64,65,66,67,68,69,70],"tindex":"d0e7b376-829d-11e5-ba4f-fb3ebe1910d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:281","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    com.graphhopper.routing.util.AllEdgesIterator.copyPropertiesTo(com.graphhopper.storage.Graph.edge(int, int));\n}"},"status":-1},{"failures":[],"tindex":"d0e7b377-829d-11e5-ba4f-adacf3dbd9bf","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance())"},"variableMap":{"from":"from","to":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()).setWayGeometry(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.fetchWayGeometry(0))"},"status":0},{"failures":[],"tindex":"d0e7da88-829d-11e5-ba4f-b94d1532def3","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"variableMap":{"i":"removedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:247","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"d0e7da89-829d-11e5-ba4f-976c8f81cb07","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"javax.xml.stream.XMLStreamConstants.START_ELEMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:56","type":"CtWhileImpl","sourcecode":"while ((int != (javax.xml.stream.XMLStreamConstants.int)) && (javax.xml.stream.XMLStreamReader.getLocalName().equals(\"nd\"))) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"ref\");\n        gnu.trove.list.TLongList.add(java.lang.Long.parseLong(java.lang.String));\n    } \n    int = javax.xml.stream.XMLStreamReader.nextTag();\n}"},"status":-2},{"failures":[],"tindex":"d0e7da8a-829d-11e5-ba4f-a984198169fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:191","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.RAMDataAccess.getCapacity();\n    com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    for (int int = 0 ; int < (byte[][].int) ; int++) {\n        byte[] byte[] = byte[][][int];\n        java.io.RandomAccessFile.write(byte[]);\n    }\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-2},{"failures":[],"tindex":"d0e7da8b-829d-11e5-ba4f-f569938ab19d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:241","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"indexCopy":"shortcuts","index":"shortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:671","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"d0e8019c-829d-11e5-ba4f-99dcf57c6a78","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:428","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"mp\")"},"variableMap":{"str":"version"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:87","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"-\")"},"status":-2},{"failures":[71,72,73],"tindex":"d0e8019d-829d-11e5-ba4f-a73cbdf0f305","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:292","type":"CtIfImpl","sourcecode":"if (\"hiking\".equals(java.lang.String))\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\nelse\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n"},"variableMap":{"speedEncoder":"speedEncoder","sacScale":"sacScale","com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED":"com.graphhopper.routing.util.FootFlagEncoder.SLOW_SPEED","encoded":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:290","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (\"hiking\".equals(java.lang.String))\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n    else\n        long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n    \n} else {\n    long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int);\n}"},"status":-1},{"failures":[49,74],"tindex":"d0e8019e-829d-11e5-ba4f-5330e237a5a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:87","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null)\n    java.lang.Object = null;\nelse if (java.lang.Object instanceof java.lang.String) {\n    java.lang.String java.lang.String = ((java.lang.String)(java.lang.Object));\n    java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\");\n    if (java.lang.String.isEmpty())\n        java.lang.Object = null;\n    else\n        try {\n            java.lang.Object = java.lang.Double.parseDouble(java.lang.String);\n        } catch (java.lang.NumberFormatException ex) {\n            return ;\n        }\n    \n} else\n    java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue();\n"},"status":-1},{"failures":[75,76,77,78,79,80,81,82,83,84,85,36,41,42,44,45],"tindex":"d0e8019f-829d-11e5-ba4f-9fd6615808d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:68","type":"CtTryImpl","sourcecode":"try {\n    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n    com.graphhopper.util.Helper.saveProperties(java.util.Map<java.lang.String, java.lang.String>, java.io.StringWriter);\n    byte[] byte[] = java.io.StringWriter.toString().getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset);\n    com.graphhopper.storage.DataAccess.setBytes(0, byte[], byte[].int);\n    com.graphhopper.storage.DataAccess.flush();\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":-1},{"failures":[],"tindex":"d0e801a0-829d-11e5-ba4f-f9da427c6e02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:202","type":"CtReturnImpl","sourcecode":"return long"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"d0e7b374-829d-11e5-ba4f-1b8a6d3ac714","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.storage.BaseGraph$CommonEdgeIterator_java.lang.String_toString().b","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).l24","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).l23","com.graphhopper.storage.BaseGraph_boolean_isTestingEnabled().b","com.graphhopper.coll.GHBitSetImpl_com.graphhopper.coll.GHBitSet_copyTo(com.graphhopper.coll.GHBitSet).b","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).e13","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).t11","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).t6","com.graphhopper.util.Helper_int_idealByteArraySize(int).b","com.graphhopper.storage.GraphHopperStorage_void_optimize().t2","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).e2","com.graphhopper.coll.GHBitSetImpl_int_next(int).b","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).b","com.graphhopper.coll.SparseIntIntArray_com.graphhopper.coll.SparseIntIntArray(int).b","com.graphhopper.storage.BaseGraph_void_trimToSize().b","com.graphhopper.coll.GHBitSetImpl_com.graphhopper.coll.GHBitSet_copyTo(com.graphhopper.coll.GHBitSet).t1","com.graphhopper.util.Helper_int_idealByteArraySize(int).l2","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).e10","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).e12","com.graphhopper.storage.GraphHopperStorage_void_optimize().e2","com.graphhopper.util.Helper_int_idealIntArraySize(int).b","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).t1","com.graphhopper.util.Helper_int_idealByteArraySize(int).t1","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).b"],"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":["com.graphhopper.storage.BaseGraph$CommonEdgeIterator_java.lang.String_toString().b","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).l24","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).l23","com.graphhopper.coll.GHBitSetImpl_boolean_contains(int).b","com.graphhopper.coll.GHBitSetImpl_com.graphhopper.coll.GHBitSet_copyTo(com.graphhopper.coll.GHBitSet).b","com.graphhopper.storage.BaseGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer(com.graphhopper.routing.util.EdgeFilter).b","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_int_getEdge().b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_boolean_next().t1","com.graphhopper.storage.BaseGraph$AllEdgeIterator_boolean_checkRange().b","com.graphhopper.util.Helper_int_idealByteArraySize(int).b","com.graphhopper.storage.BaseGraph$1_int_getEntryBytes().b","com.graphhopper.storage.GraphHopperStorage_void_optimize().t2","com.graphhopper.coll.GHBitSetImpl_int_next(int).b","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).b","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_int_getAdjNode().b","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).e1","com.graphhopper.storage.BaseGraph_void_trimToSize().b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_boolean_next().e1","com.graphhopper.storage.BaseGraph$AllEdgeIterator_boolean_next().e2","com.graphhopper.coll.GHBitSetImpl_com.graphhopper.coll.GHBitSet_copyTo(com.graphhopper.coll.GHBitSet).t1","com.graphhopper.storage.GraphHopperStorage_void_optimize().e2","com.graphhopper.util.Helper_int_idealIntArraySize(int).b","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).t2","com.graphhopper.storage.BaseGraph_com.graphhopper.routing.util.AllEdgesIterator_getAllEdges().b","com.graphhopper.storage.BaseGraph$EdgeIterable_com.graphhopper.util.EdgeIterator_setBaseNode(int).b","com.graphhopper.storage.BaseGraph_boolean_isTestingEnabled().b","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).e13","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).t6","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).t11","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.storage.BaseGraph$AllEdgeIterator(com.graphhopper.storage.BaseGraph,com.graphhopper.storage.EdgeAccess).b","com.graphhopper.storage.BaseGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer().b","com.graphhopper.storage.BaseGraph$EdgeIterable_void__setBaseNode(int).b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_boolean_next().b","com.graphhopper.coll.SparseIntIntArray_com.graphhopper.coll.SparseIntIntArray(int).b","com.graphhopper.util.Helper_int_idealByteArraySize(int).l2","com.graphhopper.storage.BaseGraph$AllEdgeIterator_boolean_next().l3","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).e10","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).e12","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_int_getBaseNode().b","com.graphhopper.util.Helper_int_idealByteArraySize(int).t1","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).b"],"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":["com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).t6","com.graphhopper.storage.GraphHopperStorage_void_optimize().t2"],"com.graphhopper.GraphHopperTest.testLoadOSM":["com.graphhopper.storage.BaseGraph$CommonEdgeIterator_java.lang.String_toString().b","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).l24","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).l23","com.graphhopper.storage.BaseGraph_boolean_isTestingEnabled().b","com.graphhopper.coll.GHBitSetImpl_com.graphhopper.coll.GHBitSet_copyTo(com.graphhopper.coll.GHBitSet).b","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).e13","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).t11","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).t6","com.graphhopper.util.Helper_int_idealByteArraySize(int).b","com.graphhopper.storage.GraphHopperStorage_void_optimize().t2","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).e2","com.graphhopper.coll.GHBitSetImpl_int_next(int).b","com.graphhopper.coll.SparseIntIntArray_com.graphhopper.coll.SparseIntIntArray(int).b","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).b","com.graphhopper.storage.BaseGraph_void_trimToSize().b","com.graphhopper.coll.GHBitSetImpl_com.graphhopper.coll.GHBitSet_copyTo(com.graphhopper.coll.GHBitSet).t1","com.graphhopper.util.Helper_int_idealByteArraySize(int).l2","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).e10","com.graphhopper.storage.BaseGraph_void_inPlaceNodeRemove(int).e12","com.graphhopper.storage.GraphHopperStorage_void_optimize().e2","com.graphhopper.util.Helper_int_idealIntArraySize(int).b","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).t1","com.graphhopper.storage.RAMIntDataAccess_void_trimTo(long).b","com.graphhopper.util.Helper_int_idealByteArraySize(int).t1"]},"type":"branch"}]},{"transformation":"d0e7b371-829d-11e5-ba4f-89eac2088a9c","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.GraphHopperStorage.isCHPossible"]},"type":"staticDiff"}]},{"transformation":"d0e7da8b-829d-11e5-ba4f-f569938ab19d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setSegmentSize"]},"type":"staticDiff"}]}]}