{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":295,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":122,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":71,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":281,"com.graphhopper.reader.OSMReaderTest.testFerry":32,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":128,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":129,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":59,"com.graphhopper.routing.QueryGraphTest.testOneWay":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":263,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":23,"com.graphhopper.reader.OSMReaderTest.testWithBounds":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":302,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":65,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":350,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":301,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":300,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":27,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":98,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":264,"com.graphhopper.GraphHopperTest.testPrepare":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":311,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":86,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":216,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":105,"com.graphhopper.util.InstructionListTest.testWayList":132,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":114,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":131,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":136,"com.graphhopper.GraphHopperAPITest.testDisconnected179":153,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":288,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":160,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":44,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":55,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":352,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":314,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":17,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":205,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":345,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":344,"com.graphhopper.GraphHopperTest.testLoadOSM":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":166,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":161,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":222,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":243,"com.graphhopper.reader.OSMReaderTest.testSort":12,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":117,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":259,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":227,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":95,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":318,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":126,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":45,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":46,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":197,"com.graphhopper.routing.PathTest.testWayList":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":348,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":272,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":22,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":112,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":324,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":238,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":326,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":190,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":279,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":119,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":54,"com.graphhopper.util.GHUtilityTest.testSort":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":289,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":276,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":72,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":353,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":157,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":338,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":237,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":273,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":84,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":172,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":10,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":218,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":329,"com.graphhopper.GraphHopperAPITest.testLoad":20,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":335,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":241,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":201,"com.graphhopper.reader.OSMReaderTest.testBarriers":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":320,"com.graphhopper.routing.PathTest.testFound":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":304,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":110,"com.graphhopper.util.GHUtilityTest.testCopy":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":285,"com.graphhopper.routing.PathTest.testFindInstruction":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":102,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":331,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":290,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":155,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":228,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":118,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":137,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":333,"com.graphhopper.reader.PrinctonReaderTest.testRead":43,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":240,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":97,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":267,"com.graphhopper.util.InstructionListTest.testWayList2":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":184,"com.graphhopper.reader.OSMReaderTest.testFoot":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":307,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":24,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":25,"com.graphhopper.reader.OSMReaderTest.testOneWay":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":351,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":83,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":257,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":249,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":96,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":330,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":192,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":200,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":297,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":124,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":88,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":268,"com.graphhopper.routing.PathBidirRefTest.testExtract":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":89,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":175,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":142,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":149,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":242,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":306,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":354,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":188,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":305,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":145,"com.graphhopper.util.GHUtilityTest.testSort2":138,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":171,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":120,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":293,"com.graphhopper.reader.OSMReaderTest.testMain":11,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":7,"com.graphhopper.routing.PathBidirRefTest.testExtract2":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":309,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":182,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":74,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":191,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":261,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":342,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":123,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":244,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":94,"com.graphhopper.storage.StorablePropertiesTest.testStore":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":162,"com.graphhopper.storage.GraphHopperStorageTest.testClone":203,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":234,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":266,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":212,"com.graphhopper.GraphHopperTest.testFootAndCar":18,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":287,"com.graphhopper.routing.PathTest.testTime":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":169,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":299,"com.graphhopper.util.GHUtilityTest.testSortDirected":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":323,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":255,"com.graphhopper.GraphHopperTest.testVia":15,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":158,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":115,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":26,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":239,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":134,"com.graphhopper.GraphHopperTest.testFootOnly":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":183,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":37,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":193,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":185,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":50,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":296,"com.graphhopper.util.InstructionListTest.testFind":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":246},"transformations":[{"failures":[],"tindex":"55825f53-829a-11e5-81ce-b3637bbfbac8","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:284","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"variableMap":{"maxBits":"adj"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:251","type":"CtLocalVariableImpl","sourcecode":"int int = gnu.trove.list.TIntList.get(int)"},"status":-2},{"failures":[],"tindex":"55828664-829a-11e5-81ce-336a1c226e51","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"id","segmentSizePower":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:555","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":0},{"failures":[],"tindex":"55828665-829a-11e5-81ce-7760ddeeb5c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:329","type":"CtIfImpl","sourcecode":"if (long < (int))\n    long = int;\n"},"variableMap":{"segmentSizeInBytes":"oldValue","capacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:88","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.GHLongIntBTree.ReturnValue.int) == (int)) {\n    (long)++;\n    if (((long) % 1000000) == 0)\n        com.graphhopper.coll.GHLongIntBTree.optimize();\n    \n} "},"status":-2},{"failures":[],"tindex":"5582ad76-829a-11e5-81ce-c19f74a1ef10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:900","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TLongList.add(long)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"5582ad77-829a-11e5-81ce-cd11437e54fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:605","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setWayGeometryHeader()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:415","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.setNodesHeader()"},"status":-1},{"failures":[],"tindex":"5582ad78-829a-11e5-81ce-09f3f82c6121","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"variableMap":{"oldValueIndex":"flags","lastKey":"flags","key":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:660","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    if (((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getAdjNode()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) && (com.graphhopper.util.CHEdgeIterator.canBeOverwritten(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long))) {\n        if ((com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double) >= (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.CHEdgeIterator, false, com.graphhopper.util.EdgeIterator.int)))\n            continue NEXT_SC;\n        \n        if (((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) || ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) {\n            throw new java.lang.IllegalStateException((((((((((((((((((\"Shortcut cannot update itself! \" + (com.graphhopper.util.CHEdgeIterator.getEdge())) + \", skipEdge1:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", skipEdge2:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", edge \") + com.graphhopper.util.CHEdgeIterator) + \":\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.CHEdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", sc:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut) + \", skippedEdge1: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", skippedEdge2: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", neighbors:\") + (com.graphhopper.util.GHUtility.getNeighbors(com.graphhopper.util.CHEdgeIterator))));\n        } \n        com.graphhopper.util.CHEdgeIterator.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n        com.graphhopper.util.CHEdgeIterator.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIterator.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIterator.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIterator.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        boolean = true;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"5582d489-829a-11e5-81ce-119217481d61","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:989","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"status":-2},{"failures":[],"tindex":"5582d48a-829a-11e5-81ce-cd299e981400","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:899","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TLongList.clear()"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,1,3,20,21,22,23,24,25,26,27,28,29,30],"tindex":"5582fb9b-829a-11e5-81ce-333416a4b234","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:176","type":"CtOperatorAssignmentImpl","sourcecode":"long *= int[][int]"},"status":-1},{"failures":[],"tindex":"5582fb9c-829a-11e5-81ce-33698b4ff5f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:201","type":"CtInvocationImpl","sourcecode":"java.util.zip.Inflater.setInput(byte[])"},"status":-2},{"failures":[],"tindex":"5582fb9d-829a-11e5-81ce-3fb5ff5c1493","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:88","type":"CtReturnImpl","sourcecode":"return -1"},"status":0},{"failures":[],"tindex":"5582fb9e-829a-11e5-81ce-718be8492eb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"status":-2},{"failures":[],"tindex":"5582fb9f-829a-11e5-81ce-63159720aa22","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:433","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"variableMap":{"val":"com.graphhopper.reader.OSMReader.TOWER_NODE","com.graphhopper.util.DistanceCalcEarth.KM_MILE":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:533","type":"CtIfImpl","sourcecode":"if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLatitude(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[0,19,1,2,3,31,4,5,6,7,8,9,10],"tindex":"558322b0-829a-11e5-81ce-0bafe4126d20","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.getBytes(0, byte[], int)"},"status":-1},{"failures":[32,33,11,12,13,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,14,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,0,144,145,146,147,148,149,150,15,16,17,18,19,1,2,3,151,152,20,153,154,155,156,157,158,159,21,22,23,160,161,162,163,164,165,24,25,166,167,168,169,170,171,172,173,174,175,176,177,178,179,26,27,28,180,181,182,183,184,185,29,30,186,187,188,189,190,191,192,193,194,195,196,197,4,5,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,7,239,240,241,242,8,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,9,316,317,10,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354],"tindex":"558322b1-829a-11e5-81ce-d90d0c24408b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"variableMap":{"latSize":"E_LINKB","size":"E_LINKB","lonSize":"E_LINKB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:49","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"558349c2-829a-11e5-81ce-f1d59ba84b99","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"shift","i":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:233","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedValue.getBits())"},"status":-2},{"failures":[],"tindex":"558370d3-829a-11e5-81ce-793a96e6f3e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:589","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMNode.getLat()"},"status":-2},{"failures":[],"tindex":"558370d4-829a-11e5-81ce-bf7b66fbe153","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:80","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter)"},"status":0},{"failures":[],"tindex":"558370d5-829a-11e5-81ce-3defffe077c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:244","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(0)"},"status":-2},{"failures":[12,17],"tindex":"558370d6-829a-11e5-81ce-79c5a8916113","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:708","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"variableMap":{"fullyLoaded":"sortGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:841","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((com.graphhopper.storage.GraphHopperStorage.isCHPossible()) && com.graphhopper.GraphHopper.(isPrepared()))\n        throw new java.lang.IllegalArgumentException(\"Sorting a prepared CHGraph is not possible yet. See #12\");\n    \n    com.graphhopper.storage.GraphHopperStorage com.graphhopper.storage.GraphHopperStorage = com.graphhopper.util.GHUtility.newStorage(com.graphhopper.storage.GraphHopperStorage);\n    com.graphhopper.util.GHUtility.sortDFS(com.graphhopper.storage.GraphHopperStorage, com.graphhopper.storage.GraphHopperStorage);\n    org.slf4j.Logger.info(((\"graph sorted (\" + (com.graphhopper.util.Helper.getMemInfo())) + \")\"));\n    com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage;\n} "},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"5582ad76-829a-11e5-81ce-c19f74a1ef10","diffs":[{"methodsDiff":{"delete":["gnu.trove.list.TLongList.add"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t4","com.graphhopper.storage.index.LocationIndexTree$XFirstSearchCheck_boolean_checkAdjacent(com.graphhopper.util.EdgeIteratorState).e3","com.graphhopper.util.BreadthFirstSearch_void_start(com.graphhopper.util.EdgeExplorer,int).t2","com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).e4","com.graphhopper.util.BreadthFirstSearch_void_start(com.graphhopper.util.EdgeExplorer,int).t1","com.graphhopper.reader.OSMReader_com.graphhopper.util.EdgeIteratorState_addEdge(int,int,com.graphhopper.util.PointList,long,long).t6","com.graphhopper.storage.index.LocationIndexTree$XFirstSearchCheck_boolean_checkAdjacent(com.graphhopper.util.EdgeIteratorState).t3","com.graphhopper.storage.BaseGraph_com.graphhopper.util.PointList_fetchWayGeometry_(long,boolean,int,int,int).t8","com.graphhopper.coll.GHTBitSet_boolean_contains(int).b","com.graphhopper.storage.BaseGraph_com.graphhopper.util.PointList_fetchWayGeometry_(long,boolean,int,int,int).t5","com.graphhopper.storage.BaseGraph$EdgeIterable_boolean_next().e2","com.graphhopper.storage.index.LocationIndexTree_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t3"]},"type":"branch"}]}]}