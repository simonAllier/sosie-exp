{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":49,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":30,"com.graphhopper.reader.OSMReaderTest.testMain":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":18,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":55,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":91,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":88,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":35,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":26,"com.graphhopper.reader.OSMReaderTest.testWithBounds":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":10,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":63,"com.graphhopper.util.PMapTest.propertyFromStringWithMultiplePropertiesCanBeRetrieved":87,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":13,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":29,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":53,"com.graphhopper.GraphHopperTest.testPrepare":77,"com.graphhopper.GraphHopperTest.testFootAndCar":79,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":4,"com.graphhopper.reader.OSMReaderTest.testFoot":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":32,"com.graphhopper.reader.OSMReaderTest.testOneWay":67,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":43,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":5,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":36,"com.graphhopper.GraphHopperAPITest.testDisconnected179":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.reader.OSMReaderTest.testRelation":8,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":25,"com.graphhopper.GraphHopperTest.testPrepareOnly":69,"com.graphhopper.GraphHopperTest.testVia":76,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":83,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":27,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":61,"com.graphhopper.util.PMapTest.keyCanHaveAnyCasing":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":20,"com.graphhopper.GraphHopperAPITest.testLoad":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":50,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":62,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":80,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":11,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":90,"com.graphhopper.GraphHopperTest.testFootOnly":84,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":16,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":64,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":40,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":17,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":75,"com.graphhopper.reader.OSMReaderTest.testBarriers":60,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":1,"com.graphhopper.GraphHopperTest.testLoadOSM":81,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":70,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":73,"com.graphhopper.reader.OSMReaderTest.testSort":59,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":71},"transformations":[{"failures":[],"tindex":"bad16e91-7920-11e5-b647-17b372bf806b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:845","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"bad195a2-7920-11e5-b647-7f59d1a043b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"bad195a3-7920-11e5-b647-43b6daff98e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"startNode","index":"startNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:35","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.push(int)"},"status":-1},{"failures":[86,87,69,88,76,77,80,81,89,82,84,85,90],"tindex":"bad1bcb4-7920-11e5-b647-6f326fe21a23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:145","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"bad1bcb5-7920-11e5-b647-171c2645786d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(4, 1)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.FootFlagEncoder.this(((int)(com.graphhopper.util.PMap.getLong(\"speedBits\", 4))), com.graphhopper.util.PMap.getDouble(\"speedFactor\", 1))"},"status":0},{"failures":[],"tindex":"bad1bcb6-7920-11e5-b647-2789964076c3","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:101","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"variableMap":{"index":"bytePos","entriesPerSegment":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:328","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[91],"tindex":"bad1bcb7-7920-11e5-b647-d9b23e9460ac","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:784","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.RuntimeException((\"Base node problem with edge \" + java.lang.String));\n"},"variableMap":{"str":"str","nodeCount":"charI","base":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:99","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    byte <<= 1;\n    if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n        byte |= 1;\n    \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"bad1e3c8-7920-11e5-b647-25791f071398","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:800","type":"CtIfImpl","sourcecode":"if (int > 2) {\n    if (boolean)\n        com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n    \n    com.graphhopper.util.EdgeIteratorState.setWayGeometry(com.graphhopper.util.PointList);\n} "},"status":-2},{"failures":[],"tindex":"bad1e3c9-7920-11e5-b647-fd323fec39ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:166","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"bad1e3ca-7920-11e5-b647-c5f518885dbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:136","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"bad1e3cb-7920-11e5-b647-232f5d9c84c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:107","type":"CtReturnImpl","sourcecode":"return new java.util.zip.GZIPInputStream(java.io.InputStream , 50000)"},"variableMap":{"ips":"ips"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:104","type":"CtIfImpl","sourcecode":"if (((byte[][0]) == 31) && ((byte[][1]) == (-117))) {\n    java.io.InputStream.reset();\n    return new java.util.zip.GZIPInputStream(java.io.InputStream , 50000);\n} else if (((((((byte[][0]) == 0) && ((byte[][1]) == 0)) && ((byte[][2]) == 0)) && ((byte[][4]) == 10)) && ((byte[][5]) == 9)) && (((byte[][3]) == 13) || ((byte[][3]) == 14))) {\n    java.io.InputStream.reset();\n    boolean = true;\n    return java.io.InputStream;\n} else if (((byte[][0]) == 'P') && ((byte[][1]) == 'K')) {\n    java.io.InputStream.reset();\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    return java.util.zip.ZipInputStream;\n} else if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    java.io.InputStream.reset();\n    return java.io.InputStream;\n} else if ((java.lang.String.endsWith(\".bz2\")) || (java.lang.String.endsWith(\".bzip2\"))) {\n    java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\";\n    try {\n        java.lang.Class java.lang.Class = java.lang.Class.forName(java.lang.String);\n        java.io.InputStream.reset();\n        java.lang.reflect.Constructor<java.io.InputStream> java.lang.reflect.Constructor<java.io.InputStream> = java.lang.Class.getConstructor(java.io.InputStream.java.io.InputStream, boolean.boolean);\n        return java.lang.reflect.Constructor<java.io.InputStream>.newInstance(java.io.InputStream, true);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.IllegalArgumentException((\"Cannot instantiate \" + java.lang.String) , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalArgumentException((\"Input file is not of valid type \" + (java.io.File.getPath())));\n}"},"status":-2},{"failures":[],"tindex":"bad20adc-7920-11e5-b647-33051ecbb340","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:101","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:144","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-2},{"failures":[],"tindex":"bad20add-7920-11e5-b647-af671bf11e4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"daPointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:109","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int += com.graphhopper.reader.dem.HeightTile.includePoint((int - 2), java.util.concurrent.atomic.AtomicInteger);\n"},"status":-2},{"failures":[],"tindex":"bad20ade-7920-11e5-b647-7b65b5740700","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:81","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeEntry":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[],"tindex":"bad231ef-7920-11e5-b647-0743de6456e4","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:54","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"maxLeafEntries":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:113","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.reader.dem.HeightTile.includePoint((int + 2), java.util.concurrent.atomic.AtomicInteger)"},"status":-2},{"failures":[],"tindex":"bad231f0-7920-11e5-b647-0b6a46255166","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:366","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"status":-2},{"failures":[],"tindex":"bad231f1-7920-11e5-b647-efcee1d097ac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:154","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"longSegmentSize":"fullTimeInMillis","bufferStart":"fullTimeInMillis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:52","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.getTime()"},"status":-2},{"failures":[],"tindex":"bad231f2-7920-11e5-b647-8ba847b6c70f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:469","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.loadExisting()"},"variableMap":{"this":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.getCapacity())"},"status":-2},{"failures":[],"tindex":"bad231f3-7920-11e5-b647-51a0c3933f64","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:590","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) << 2"},"status":-2},{"failures":[],"tindex":"bad231f4-7920-11e5-b647-9564f5b24870","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"resultOrientation","speed":"orientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:98","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}