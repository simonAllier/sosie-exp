{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":35,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":26,"com.graphhopper.reader.OSMReaderTest.testMain":38,"com.graphhopper.reader.OSMReaderTest.testFerry":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":33,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":60,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":22,"com.graphhopper.reader.OSMReaderTest.testWithBounds":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":5,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":43,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":18,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":75,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":25,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":2,"com.graphhopper.GraphHopperTest.testPrepare":62,"com.graphhopper.GraphHopperTest.testFootAndCar":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":12,"com.graphhopper.reader.OSMReaderTest.testFoot":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":30,"com.graphhopper.reader.OSMReaderTest.testOneWay":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":78,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":76,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":32,"com.graphhopper.GraphHopperAPITest.testDisconnected179":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":7,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":67,"com.graphhopper.GraphHopperTest.testPrepareOnly":53,"com.graphhopper.GraphHopperTest.testVia":61,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":23,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":45,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":15,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":42,"com.graphhopper.GraphHopperAPITest.testLoad":50,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":14,"com.graphhopper.GraphHopperTest.testFootOnly":69,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":11,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":59,"com.graphhopper.reader.OSMReaderTest.testBarriers":40,"com.graphhopper.GraphHopperTest.testLoadOSM":66,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":29,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":54,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":57,"com.graphhopper.reader.OSMReaderTest.testSort":39,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":55},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"73223c8c-827b-11e5-b83c-310aa055857f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"minResolutionInMeter","index":"minResolutionInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:302","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), int)"},"status":-1},{"failures":[],"tindex":"7322639d-827b-11e5-b83c-43dd0013bfaf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDirectory:31","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDirectory.this(\"\", false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDirectory:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDirectory.this(java.lang.String, false)"},"status":0},{"failures":[],"tindex":"7322639e-827b-11e5-b83c-a1eb5d48839f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:409","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int, double, boolean)"},"variableMap":{"a":"b","b":"b","distance":"distance","bothDirections":"bothDirection","baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:357","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int).setDistance(double).setFlags(com.graphhopper.routing.util.EncodingManager.flagsDefault(true, boolean))"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,61,62,63,64,65,66,68,69],"tindex":"7322639f-827b-11e5-b83c-b7813693ae0d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"tmpNode","retBucket":"tmpNode","i":"tmpNode","bucketSize":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:727","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-1},{"failures":[71,72,73,74,37,53,64,69],"tindex":"732263a0-827b-11e5-b83c-4d30eec67e5f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:257","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[43],"tindex":"73228ab1-827b-11e5-b83c-b75c4db57d49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:447","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n    if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n        com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n        java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n        for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n            com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n        }\n    } \n} "},"status":-1},{"failures":[],"tindex":"73228ab2-827b-11e5-b83c-ed4b47d72f20","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:134","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2},{"failures":[],"tindex":"73228ab3-827b-11e5-b83c-d11b747bc14a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:97","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"73228ab4-827b-11e5-b83c-3fefdcb3862b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:458","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    return java.lang.String;\nelse\n    return (java.lang.String + \", \") + java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"73228ab5-827b-11e5-b83c-43559dcb78ea","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"sw2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:155","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":0},{"failures":[75,76],"tindex":"73228ab6-827b-11e5-b83c-f9a1353b6963","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:190","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:85","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"7322b1c7-827b-11e5-b83c-13c4ed3e2243","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"counter":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:404","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[],"tindex":"7322b1c8-827b-11e5-b83c-b77c51456135","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"variableMap":{"this":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:287","type":"CtForImpl","sourcecode":"for (long long = long + (int) ; long < long ; long += int) {\n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n}"},"status":-2},{"failures":[],"tindex":"7322b1c9-827b-11e5-b83c-b1321e76c83f","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:257","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    com.graphhopper.util.EdgeIterator.setFlags(com.graphhopper.routing.util.FlagEncoder.setAccess(com.graphhopper.util.EdgeIterator.getFlags(), false, false));\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"7322b1ca-827b-11e5-b83c-5d78ff48fbbc","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"flags","flags":"flags","dir":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:87","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Bike2WeightFlagEncoder.setLowSpeed(long, double, true)"},"status":-2},{"failures":[],"tindex":"7322b1cb-827b-11e5-b83c-3561d9903522","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:115","type":"CtReturnImpl","sourcecode":"return (int) / 8"},"variableMap":{"bitsForEdgeFlags":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:384","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[77,78],"tindex":"7322b1cc-827b-11e5-b83c-ef1e992b019e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:715","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getCapacity()) + (com.graphhopper.storage.DataAccess.getCapacity())"},"variableMap":{"shortcuts":"dataAccess","nodesCH":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:365","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getCapacity()"},"status":-1},{"failures":[],"tindex":"7322d8dd-827b-11e5-b83c-73d480b8cee7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:103","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    return java.util.Collections.emptyList();\n"},"status":0},{"failures":[],"tindex":"7322d8de-827b-11e5-b83c-8f82beaaa803","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","nextEdgeOther":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","nodeOther":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","nextEdge":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:157","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"7322d8df-827b-11e5-b83c-cb53521dafa7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"variableMap":{"relationCodeEncoder":"wayTypeEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"7322d8dd-827b-11e5-b83c-73d480b8cee7","diffs":[{"methodsDiff":{"delete":["java.util.Collections.emptyList"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}