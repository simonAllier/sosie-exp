{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":10,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":13,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":68,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":1,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":57,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":64,"com.graphhopper.routing.QueryGraphTest.testOneWay":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":34,"com.graphhopper.routing.PathBidirRefTest.testExtract2":39,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":49,"com.graphhopper.routing.PathTest.testWayList":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":11,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":40,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":48,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":7,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":47,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":25,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":26,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":73,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":75,"com.graphhopper.GraphHopperTest.testPrepare":83,"com.graphhopper.GraphHopperTest.testFootAndCar":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":18,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":65,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":6,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":45,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":69,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":54,"com.graphhopper.util.InstructionListTest.testWayList":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":8,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":30,"com.graphhopper.util.PointListTest.testAddPL":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":9,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":63,"com.graphhopper.GraphHopperTest.testVia":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":24,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":58,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":5,"com.graphhopper.coll.BitSetImplTest.testCopy":89,"com.graphhopper.GraphHopperAPITest.testLoad":41,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":44,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":15,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":35,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":16,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":27,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":50,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":84,"com.graphhopper.routing.PathBidirRefTest.testExtract":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":37,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":55,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":28,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":52,"com.graphhopper.GraphHopperTest.testLoadOSM":87,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":70,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":80,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":79,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":78},"transformations":[{"failures":[],"tindex":"4f510c3c-8289-11e5-93b5-0faecab49a63","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:273","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = double"},"status":-2},{"failures":[0],"tindex":"4f51334d-8289-11e5-93b5-2f8cf6cd38a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:217","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))\n    return long;\n"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"4f515a5e-8289-11e5-93b5-9f31b1efc272","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:714","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"variableMap":{"i":"b","lastIndex":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:184","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.init(int, int)"},"status":-1},{"failures":[],"tindex":"4f515a5f-8289-11e5-93b5-8947ac8f708f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:617","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:94","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Long, java.lang.Integer>.size()"},"status":0},{"failures":[],"tindex":"4f515a60-8289-11e5-93b5-27ab1bbcdd2d","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:183","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:132","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"status":-2},{"failures":[38,39,1,3,40,41,42,43],"tindex":"4f515a61-8289-11e5-93b5-6d47e812f5b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:226","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[44,45,46,47],"tindex":"4f518172-8289-11e5-93b5-4fe445c8c6a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"lonSimilar"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"status":-1},{"failures":[],"tindex":"4f518173-8289-11e5-93b5-01c7f13726fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:179","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"4f518174-8289-11e5-93b5-83e5db9137cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:59","type":"CtIfImpl","sourcecode":"if ((int) != int) {\n    int = 2;\n} "},"variableMap":{"clockwise2":"from","clockwise":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:65","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n} "},"status":0},{"failures":[48],"tindex":"4f518175-8289-11e5-93b5-8be8c254b963","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:74","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[49,50,51,52,53,54],"tindex":"4f51a886-8289-11e5-93b5-89d08ef23d2b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:82","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(long))"},"variableMap":{"offset":"offset","bytes":"values","value":"address"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:248","type":"CtAssignmentImpl","sourcecode":"byte[][int] = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.getByte((((long) + long) + int))"},"status":-1},{"failures":[],"tindex":"4f51a887-8289-11e5-93b5-bdd9cbceee16","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:757","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"4f51a888-8289-11e5-93b5-f14db6a7d2e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"edgeFrom","newBaseIndex":"nodeVia"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:444","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\")) {\n    com.graphhopper.reader.OSMTurnRelation com.graphhopper.reader.OSMTurnRelation = com.graphhopper.reader.OSMReader.createTurnRelation(com.graphhopper.reader.OSMRelation);\n    if (com.graphhopper.reader.OSMTurnRelation != null) {\n        com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n        if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n            com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n            java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n            for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n                com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n            }\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"4f51cf99-8289-11e5-93b5-0ddeba7389b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:60","type":"CtReturnImpl","sourcecode":"return double / (double)"},"variableMap":{"distance":"java.lang.Double.POSITIVE_INFINITY","maxSpeed":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:608","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[55],"tindex":"4f51cf9a-8289-11e5-93b5-57acceee9a7d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"variableMap":{"latSize":"from","size":"from","lonSize":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:289","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,11,12,14,15,17,72,31,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"4f51cf9b-8289-11e5-93b5-69e0ea359d02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:112","type":"CtAssignmentImpl","sourcecode":"double[] = java.util.Arrays.copyOf(double[], int)"},"status":-1},{"failures":[],"tindex":"4f51cf9c-8289-11e5-93b5-8d2a0a2164a5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"com.graphhopper.storage.EdgeAccess.NO_NODE","NO_TURN_ENTRY":"com.graphhopper.storage.EdgeAccess.NO_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:670","type":"CtForImpl","sourcecode":"for (int int = com.graphhopper.coll.GHBitSet.next(0) ; int >= 0 ; int = com.graphhopper.coll.GHBitSet.next((int + 1))) {\n    com.graphhopper.storage.BaseGraph.EdgeIterable.setBaseNode(int);\n    long long = com.graphhopper.util.EdgeIterator.int;\n    while (com.graphhopper.storage.BaseGraph.EdgeIterable.next()) {\n        int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getAdjNode();\n        if ((int != (com.graphhopper.storage.EdgeAccess.int)) && (com.graphhopper.coll.GHBitSet.contains(int))) {\n            int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge();\n            long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n            com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(int, long, int, int);\n            com.graphhopper.storage.EdgeAccess.invalidateEdge(long);\n        } else {\n            long = com.graphhopper.storage.BaseGraph.EdgeIterable.long;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"4f51f6ad-8289-11e5-93b5-558aacc1a1e0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:176","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"variableMap":{"nodesContracted":"prevLat","nodesContractedPercentage":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:326","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":0},{"failures":[89],"tindex":"4f51f6ae-8289-11e5-93b5-1ddcacd6cefd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:71","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.coll.GHBitSetImpl)(com.graphhopper.coll.GHBitSet)).or(this)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"4f518174-8289-11e5-93b5-83e5db9137cb","diffs":[{"branches":{"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":["com.graphhopper.routing.Dijkstra_com.graphhopper.routing.Path_calcPath(int,int).e1","com.graphhopper.routing.Dijkstra_com.graphhopper.routing.Path_calcPath(int,int).t1"],"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":["com.graphhopper.routing.Dijkstra_com.graphhopper.routing.Path_calcPath(int,int).e1","com.graphhopper.routing.Dijkstra_com.graphhopper.routing.Path_calcPath(int,int).t1","com.graphhopper.routing.util.TraversalMode_boolean_isEdgeBased().b"],"com.graphhopper.util.InstructionListTest.testFind":["com.graphhopper.routing.Dijkstra_com.graphhopper.routing.Path_calcPath(int,int).e1","com.graphhopper.routing.Dijkstra_com.graphhopper.routing.Path_calcPath(int,int).t1","com.graphhopper.routing.util.TraversalMode_boolean_isEdgeBased().b"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":["com.graphhopper.routing.Dijkstra_com.graphhopper.routing.Path_calcPath(int,int).e1","com.graphhopper.routing.Dijkstra_com.graphhopper.routing.Path_calcPath(int,int).t1"]},"type":"branch"},{"methodsDiff":{"delete":["gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"4f515a5f-8289-11e5-93b5-8947ac8f708f","diffs":[{"methodsDiff":{"delete":["java.util.TreeMap<java.lang.Long, java.lang.Integer>.size"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":["com.graphhopper.coll.GHTreeMapComposed_int_peekValue().b","com.graphhopper.routing.ch.PrepareContractionHierarchies_void_contractNodes().e9","com.graphhopper.routing.ch.PrepareContractionHierarchies_void_contractNodes().t8"]},"type":"branch"}]}]}