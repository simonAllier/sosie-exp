{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":199,"com.graphhopper.search.NameIndexTest.testCreate":265,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":75,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":95,"com.graphhopper.reader.OSMReaderTest.testFerry":139,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":175,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":217,"com.graphhopper.routing.QueryGraphTest.testOneWay":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":292,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":250,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":161,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":234,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":249,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":236,"com.graphhopper.reader.OSMReaderTest.testWithBounds":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":4,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":295,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":281,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":124,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":110,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":153,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":253,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":62,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":14,"com.graphhopper.GraphHopperTest.testPrepare":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":198,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":258,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":42,"com.graphhopper.search.NameIndexTest.testFlush":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":298,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":190,"com.graphhopper.util.InstructionListTest.testWayList":131,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":194,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":55,"com.graphhopper.GraphHopperAPITest.testDisconnected179":128,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":248,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":28,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":69,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":191,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":233,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":72,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":213,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":145,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":297,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":54,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":8,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":164,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":304,"com.graphhopper.GraphHopperTest.testLoadOSM":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":80,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":73,"com.graphhopper.reader.OSMReaderTest.testSort":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":313,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":149,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":296,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":301,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":119,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":240,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":202,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":260,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":223,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":204,"com.graphhopper.routing.PathTest.testWayList":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":123,"com.graphhopper.coll.OSMIDMapTest.testGet2":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":17,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":70,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":177,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":311,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":57,"com.graphhopper.reader.OSMNodeTest.testSetTags":261,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":257,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":244,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":68,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":196,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":231,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":212,"com.graphhopper.util.GHUtilityTest.testSort":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":77,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":270,"com.graphhopper.coll.OSMIDMapTest.testGetLong":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":308,"com.graphhopper.search.NameIndexTest.testPut":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":23,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":187,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":96,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":230,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":182,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":173,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":169,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":291,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":238,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":93,"com.graphhopper.GraphHopperAPITest.testLoad":127,"com.graphhopper.util.BitUtilLittleTest.testToShort":284,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":286,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":315,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":294,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":35,"com.graphhopper.reader.OSMReaderTest.testBarriers":143,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":11,"com.graphhopper.routing.PathTest.testFound":206,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":107,"com.graphhopper.util.GHUtilityTest.testCopy":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":192,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":254,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":97,"com.graphhopper.routing.PathTest.testFindInstruction":211,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":22,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":264,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":193,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":195,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":43,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":24,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":2,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":256,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":174,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":241,"com.graphhopper.util.InstructionListTest.testWayList2":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":235,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":216,"com.graphhopper.reader.OSMReaderTest.testFoot":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":81,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":188,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":287,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":79,"com.graphhopper.reader.OSMReaderTest.testOneWay":152,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":266,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":58,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":172,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":271,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":48,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":302,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":7,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":144,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":201,"com.graphhopper.coll.OSMIDMapTest.testGet":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":299,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":103,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":219,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":276,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":155,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":159,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":122,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":157,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":86,"com.graphhopper.util.GHUtilityTest.testSort2":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":5,"com.graphhopper.reader.OSMReaderTest.testMain":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":67,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":269,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":82,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":242,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":126,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":108,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":227,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":151,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":259,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":300,"com.graphhopper.storage.StorablePropertiesTest.testStore":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":268,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":273,"com.graphhopper.storage.GraphHopperStorageTest.testClone":36,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":74,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":40,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":44,"com.graphhopper.GraphHopperTest.testFootAndCar":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":52,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":239,"com.graphhopper.routing.PathTest.testTime":207,"com.graphhopper.util.InstructionListTest.testCreateGPX":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":1,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":19,"com.graphhopper.util.GHUtilityTest.testSortDirected":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":56,"com.graphhopper.GraphHopperTest.testPrepareOnly":154,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":98,"com.graphhopper.GraphHopperTest.testVia":162,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":312,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":109,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":180,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":45,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":133,"com.graphhopper.GraphHopperTest.testFootOnly":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":115,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":147,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":246,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":117,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":208,"com.graphhopper.util.InstructionListTest.testFind":129,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":85},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213],"tindex":"c9a13549-8283-11e5-a376-87a205cca659","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:664","type":"CtIfImpl","sourcecode":"if (double != 0)\n    throw new java.lang.IllegalArgumentException(\"Only restrictions are supported\");\n"},"variableMap":{"costs":"maxLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:102","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-1},{"failures":[214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"tindex":"c9a15c5a-8283-11e5-a376-278fc1e4c20c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-1},{"failures":[131,255,133],"tindex":"c9a1836b-8283-11e5-a376-95a1f40bb95f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:91","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"variableMap":{"size":"timeOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:151","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.InstructionList.get(int).fillGPXList(java.util.List<com.graphhopper.util.GPXEntry>, long, com.graphhopper.util.Instruction, com.graphhopper.util.Instruction, boolean)"},"status":-1},{"failures":[],"tindex":"c9a1836c-8283-11e5-a376-973b64bc1825","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:758","type":"CtTryImpl","sourcecode":"try {\n    if ((com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) && com.graphhopper.GraphHopper.(isAllowWrites())) {\n        com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n        com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, false);\n        if (!(com.graphhopper.storage.Lock.tryLock()))\n            throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n        \n    } \n    if (!(com.graphhopper.storage.GraphHopperStorage.loadExisting()))\n        return false;\n    \n    com.graphhopper.GraphHopper.postProcessing();\n    boolean = true;\n    return true;\n} finally {\n    if (com.graphhopper.storage.Lock != null)\n        com.graphhopper.storage.Lock.release();\n    \n}"},"status":-2},{"failures":[],"tindex":"c9a1836d-8283-11e5-a376-adb8860f945d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:189","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:624","type":"CtReturnImpl","sourcecode":"return 3"},"status":0},{"failures":[256,9,12,14,16,257,27,30,32,34,258,44,47,49,52,259,62,65,67,71,73,111,113,131,132,141,144,145,170,174,177,178,181,260,183,184,186,188,201,210],"tindex":"c9a1836e-8283-11e5-a376-e73052149a04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:899","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D()) {\n    com.graphhopper.util.PointList.add(double, double, com.graphhopper.util.Helper.intToEle(com.graphhopper.util.BitUtil.toInt(byte[], int)));\n    int += 4;\n} else {\n    com.graphhopper.util.PointList.add(double, double);\n}"},"status":-1},{"failures":[261,144],"tindex":"c9a1836f-8283-11e5-a376-79538c69af9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:89","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    java.lang.String java.lang.String = ((java.lang.String)(java.lang.Object));\n    java.lang.String = java.lang.String.trim().replaceAll(\"\\\\,\", \".\");\n    if (java.lang.String.isEmpty())\n        java.lang.Object = null;\n    else\n        try {\n            java.lang.Object = java.lang.Double.parseDouble(java.lang.String);\n        } catch (java.lang.NumberFormatException ex) {\n            return ;\n        }\n    \n} else\n    java.lang.Object = ((java.lang.Number)(java.lang.Object)).doubleValue();\n"},"status":-1},{"failures":[],"tindex":"c9a1aa80-8283-11e5-a376-03681b17689c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"variableMap":{"lazySW":"sw"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1047","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"status":0},{"failures":[262,263,264,265,16,257,27,30,32,266,34,258,44,47,49,267,268,269,52,259,62,65,67,270,71,73,111,113,271,272,273,129,130,131,132,133,136,141,144,145,274,275,276,277,278,154,162,166,167,168,169,170,174,177,178,260,183,186,188,201,204,205,208,209,210,211,212,213],"tindex":"c9a1d191-8283-11e5-a376-35d23a215cff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"variableMap":{"size":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[279,280,281],"tindex":"c9a1f8a2-8283-11e5-a376-ff51d3dc3c3d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:134","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NE\""},"variableMap":{"cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:212","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"0\""},"status":-2},{"failures":[282,283,284,285,286,287],"tindex":"c9a1f8a3-8283-11e5-a376-83d7aaa99719","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:34","type":"CtReturnImpl","sourcecode":"return ((short)((((byte[][int]) & 255) << 8) | ((byte[][(int + 1)]) & 255)))"},"variableMap":{"b":"b","offset":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:34","type":"CtReturnImpl","sourcecode":"return ((short)((((byte[][(int + 1)]) & 255) << 8) | ((byte[][int]) & 255)))"},"status":-1},{"failures":[288],"tindex":"c9a1f8a4-8283-11e5-a376-6d0af391c642","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:324","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[0,2,3,4,6,8,289,12,13,18,20,21,22,24,26,290,30,31,35,37,38,39,41,43,291,47,48,53,55,56,57,59,61,292,65,66,293,294,295,296,297],"tindex":"c9a1f8a5-8283-11e5-a376-c3f5f58b2d6a","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[127,155,156,157,158,159,160,162,163,164,165,166,167,169,170,298,299,300,301,302,303,304,189,305,306,190,191,307,308,309,192,310,311,193,194,312,313,195,196,314,197,198,201,315,202,203],"tindex":"c9a1f8a6-8283-11e5-a376-21b0a430339c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.runAlgo()"},"status":-1},{"failures":[143,148],"tindex":"c9a1f8a7-8283-11e5-a376-e101a02f14d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"variableMap":{"err":"lastBarrier","tmpErr":"lastBarrier","y1":"lastBarrier","dLon":"lastBarrier","sLat":"lastBarrier"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:396","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"status":-1},{"failures":[],"tindex":"c9a21fb8-8283-11e5-a376-9d412c64cce1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:749","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getEdge()"},"variableMap":{"iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:113","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-1},{"failures":[],"tindex":"c9a21fb9-8283-11e5-a376-3164b283e429","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.WORST":"com.graphhopper.routing.util.PriorityCode.PREFER","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.PREFER","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:526","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"c9a21fba-8283-11e5-a376-d5cb9c528029","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:225","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << 63"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:271","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"c9a21fbb-8283-11e5-a376-ef3e8651a801","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:193","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.abs(com.graphhopper.reader.dem.SRTMProvider.down(double))"},"status":-2},{"failures":[1,10,16,19,28,34,36,45,52,54,63,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,92,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,193,195,196,198],"tindex":"c9a246cc-8283-11e5-a376-3d44bf5b6d88","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"maxLat","java.lang.Math.PI":"maxLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:94","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c9a1aa80-8283-11e5-a376-03681b17689c","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.start"]},"type":"staticDiff"}]}]}