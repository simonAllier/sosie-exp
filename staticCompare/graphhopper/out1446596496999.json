{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":70,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":214,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":46,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":103,"com.graphhopper.reader.OSMReaderTest.testFerry":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":2,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":195,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":99,"com.graphhopper.reader.OSMReaderTest.testWithBounds":13,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":149,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":42,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":221,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":80,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":167,"com.graphhopper.GraphHopperTest.testPrepare":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":69,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":151,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":76,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":52,"com.graphhopper.util.InstructionListTest.testWayList":96,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":61,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":187,"com.graphhopper.GraphHopperAPITest.testDisconnected179":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":156,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":190,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":98,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":58,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":100,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":196,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":204,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":29,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":139,"com.graphhopper.GraphHopperTest.testLoadOSM":32,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":124,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":101,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":188,"com.graphhopper.reader.OSMReaderTest.testSort":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":64,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":0,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":85,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":128,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":129,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":205,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":208,"com.graphhopper.routing.PathTest.testWayList":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":133,"com.graphhopper.coll.OSMIDMapTest.testGet2":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":51,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":157,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":160,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":66,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":144,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":177,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":55,"com.graphhopper.coll.OSMIDMapTest.testGetLong":180,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":202,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":117,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":159,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":91,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":34,"com.graphhopper.GraphHopperAPITest.testLoad":16,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":31,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":218,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":73,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":164,"com.graphhopper.reader.OSMReaderTest.testBarriers":6,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":57,"com.graphhopper.util.GHUtilityTest.testCopy":93,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":49,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":82,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":154,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":163,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":226,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":142,"com.graphhopper.util.InstructionListTest.testWayList2":97,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":194,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":105,"com.graphhopper.reader.OSMReaderTest.testOneWay":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":191,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":90,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":153,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":198,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":173,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":223,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":113,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":7,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":130,"com.graphhopper.coll.OSMIDMapTest.testGet":178,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":88,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":79,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":174,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":220,"com.graphhopper.routing.PathBidirRefTest.testExtract":224,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":199,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":25,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":92,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":213,"com.graphhopper.storage.RAMDataAccessTest.testCopy":143,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":132,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":21,"com.graphhopper.storage.RAMDataAccessTest.testSegments":147,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":189,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":67,"com.graphhopper.reader.OSMReaderTest.testMain":4,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":161,"com.graphhopper.routing.PathBidirRefTest.testExtract2":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":168,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":206,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":135,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":119,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":215,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":102,"com.graphhopper.GraphHopperTest.testFootAndCar":30,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":165,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":145,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":185,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":63,"com.graphhopper.GraphHopperTest.testPrepareOnly":19,"com.graphhopper.GraphHopperTest.testVia":27,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":62,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":11,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":131,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":121,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":162,"com.graphhopper.GraphHopperTest.testFootOnly":35,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":227,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":126,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":10,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":127,"com.graphhopper.util.InstructionListTest.testFind":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":136},"transformations":[{"failures":[],"tindex":"02e492a8-828a-11e5-a20e-bf344a111a33","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:491","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"variableMap":{"len":"intVal","start":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:90","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"02e4e0c9-828a-11e5-a20e-4fd110455052","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"oldRelationFlags","len":"oldRelationFlags","start":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:318","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"02e4e0ca-828a-11e5-a20e-0d6ccba101af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"weight","shortTripsSpeed":"tmpWeight","durationInHours":"tmpWeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:218","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":-2},{"failures":[],"tindex":"02e4e0cb-828a-11e5-a20e-8fbc7c253e9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:103","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long))\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n"},"status":0},{"failures":[0,1,2],"tindex":"02e507dc-828a-11e5-a20e-7def556667d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:665","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"variableMap":{"ghLocation":"dim","osmFile":"dim"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:446","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equalsIgnoreCase((\"\" + (com.graphhopper.storage.NodeAccess.getDimension())))))\n    throw new java.lang.IllegalStateException((((((\"Configured dimension (\" + (com.graphhopper.storage.NodeAccess.getDimension())) + \") is not equal \") + \"to dimension of loaded graph (\") + java.lang.String) + \")\"));\n"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"tindex":"02e507dd-828a-11e5-a20e-5b40d72a77b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:284","type":"CtLocalVariableImpl","sourcecode":"int int = 64 - int"},"variableMap":{"maxBits":"segmentSizePower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:226","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"02e52eee-828a-11e5-a20e-c93db0ffb6b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:98","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 2 ; int++) {\n    byte[] = java.lang.String.getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset);\n    if ((byte[].int) > 255) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4));\n        com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String));\n        java.lang.String = java.lang.String;\n        continue;\n    } \n    break;\n}"},"status":-2},{"failures":[182],"tindex":"02e52eef-828a-11e5-a20e-b569899c26d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"mGarbage":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:468","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222],"tindex":"02e52ef0-828a-11e5-a20e-e91af2ea5e08","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:95","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-1},{"failures":[114,115,116,117],"tindex":"02e55601-828a-11e5-a20e-cd32b86249bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:239","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess);\n    com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet);\n    int = com.graphhopper.coll.GHBitSet.getCardinality();\n    for (int int = 0 ; int < int ; int++) {\n        int int = -1;\n        int int = -1;\n        if (com.graphhopper.coll.GHBitSet.contains(int)) {\n            if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n                int = int;\n                int = int + 1;\n            } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n                int = int;\n                int = int + (int);\n            } \n        } else {\n            if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n                int = int + 1;\n                int = int;\n            } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n                int = int + (int);\n                int = int;\n            } \n        }\n        if (int >= 0) {\n            if ((int[][int]) >= 0) {\n                if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n                    continue;\n                } \n            } \n            com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)));\n            int[][int] = int[][int];\n            com.graphhopper.coll.GHBitSet.add(int);\n            int++;\n        } \n    }\n}"},"status":-1},{"failures":[53,60,70,74,84,223],"tindex":"02e55602-828a-11e5-a20e-4f22a9ebcdb4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"currFrom","entryCurrent":"currFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:76","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[],"tindex":"02e55603-828a-11e5-a20e-0115d84319fe","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:147","type":"CtLocalVariableImpl","sourcecode":"gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:696","type":"CtLocalVariableImpl","sourcecode":"gnu.trove.list.array.TIntArrayList gnu.trove.list.array.TIntArrayList = new gnu.trove.list.array.TIntArrayList(((com.graphhopper.routing.VirtualEdgeIterator.count()) * 2))"},"status":-2},{"failures":[146,174],"tindex":"02e57d14-828a-11e5-a20e-a771bfd751c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1125","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"variableMap":{"edgePointer":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:329","type":"CtIfImpl","sourcecode":"if (long < (int))\n    long = int;\n"},"status":-1},{"failures":[],"tindex":"02e57d15-828a-11e5-a20e-afecf892db14","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:81","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[(int) + 10]"},"variableMap":{"endIndexPlusOne":"read"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:167","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[int]"},"status":0},{"failures":[],"tindex":"02e57d16-828a-11e5-a20e-8d9794d183d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:593","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":-2},{"failures":[16,27,224,225,49,50,51,52,53,54,55,57,60,61,64,65,66,67,68,69,73,74,75,76,78,81,82,85,223,226,89,96,227],"tindex":"02e57d17-828a-11e5-a20e-a3477a29d5c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:39","type":"CtReturnImpl","sourcecode":"return java.lang.Math.sqrt(((double * double) + (double * double)))"},"variableMap":{"len":"distance","delta":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:141","type":"CtReturnImpl","sourcecode":"return double"},"status":-1},{"failures":[4,5,6,16,17,20,21,22,23,24,25,27,28,29,30,31,32,34,35],"tindex":"02e5a428-828a-11e5-a20e-2bec50df8df8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1087","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareIndex()"},"status":-1},{"failures":[],"tindex":"02e5a429-828a-11e5-a20e-590f582c1ebd","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1125","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"variableMap":{"edgePointer":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:649","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint)"},"status":0},{"failures":[36],"tindex":"02e5a42a-828a-11e5-a20e-0ba1f707624e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:411","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState)"},"status":-1},{"failures":[],"tindex":"02e5a42b-828a-11e5-a20e-afcee0bc6433","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:85","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"variableMap":{"com.graphhopper.util.PointList.EMPTY":"list"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:104","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"02e4e0cb-828a-11e5-a20e-8fbc7c253e9e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"},{"branches":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":["com.graphhopper.routing.util.AbstractFlagEncoder_boolean_isForward(long).b"],"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":["com.graphhopper.routing.util.AbstractFlagEncoder_boolean_isForward(long).b"]},"type":"branch"}]}]}