{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":20,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":27,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":14,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":35,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":32,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":33,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":36,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":24,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":31,"com.graphhopper.routing.QueryGraphTest.testOneWay":34,"com.graphhopper.routing.PathTest.testWayList":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":17,"com.graphhopper.util.PointListTest.testAddPL":12,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":18,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":22,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":25,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":29,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":26,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":38,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":28,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":7,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":23,"com.graphhopper.GraphHopperTest.testLoadOSM":10,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":4,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":3,"com.graphhopper.GraphHopperTest.testPrepare":6,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":13,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":15,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.GraphHopperTest.testFootAndCar":8,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"9c34756f-790c-11e5-8e79-77122f475e7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:111","type":"CtAssignmentImpl","sourcecode":"double[] = java.util.Arrays.copyOf(double[], int)"},"status":-1},{"failures":[],"tindex":"9c349c80-790c-11e5-8e79-29c2c7c7136b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:755","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:366","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed\"))"},"status":-2},{"failures":[],"tindex":"9c349c81-790c-11e5-8e79-379df56bbc6f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"variableMap":{"high":"oldRelationFlags","guess":"oldRelationFlags","low":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-2},{"failures":[],"tindex":"9c349c82-790c-11e5-8e79-c919511022d3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"variableMap":{"len":"indexDivisor","start":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:285","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"9c349c83-790c-11e5-8e79-abd8ed180d50","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:230","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.getRemovedNodes().getCardinality()"},"variableMap":{"baseGraph":"fromGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:260","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.Graph.getNodes()"},"status":-2},{"failures":[],"tindex":"9c349c84-790c-11e5-8e79-e3320c16e826","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:87","type":"CtReturnImpl","sourcecode":"return double + double"},"variableMap":{"turnCosts":"maxSpeed","weight":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:821","type":"CtIfImpl","sourcecode":"if (boolean || (double < double))\n    return double * 0.9;\n"},"status":-2},{"failures":[],"tindex":"9c349c85-790c-11e5-8e79-ebeb5ee765fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:489","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:502","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMTurnRelation.getRestrictionAsEntries(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer, com.graphhopper.util.EdgeExplorer, this)"},"status":-2},{"failures":[],"tindex":"9c34c396-790c-11e5-8e79-a5be498364de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:236","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"foot\", java.util.Set<java.lang.String>))\n    return long;\n"},"variableMap":{"acceptBit":"acceptBit","intendedValues":"ferries","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:242","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-2},{"failures":[],"tindex":"9c34c397-790c-11e5-8e79-3397f4f3a697","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:411","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} else if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"9c34c398-790c-11e5-8e79-6b9164959fa7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:165","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"variableMap":{"dataAccess":"wayTypeName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:441","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"off_bike\")"},"status":-2},{"failures":[],"tindex":"9c34c399-790c-11e5-8e79-6797f47dbcc5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:50","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.util.EdgeExplorer com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer();\n    for ( ; int < int ; int++) {\n        double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n        if ((double > 90) || (double < (-90)))\n            java.util.List<java.lang.String>.add((\"latitude is not within its bounds \" + double));\n        \n        double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n        if ((double > 180) || (double < (-180)))\n            java.util.List<java.lang.String>.add((\"longitude is not within its bounds \" + double));\n        \n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) >= int) {\n                java.util.List<java.lang.String>.add(((((\"edge of \" + int) + \" has a node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())) + \" greater or equal to getNodes\"));\n            } \n            if ((com.graphhopper.util.EdgeIterator.getAdjNode()) < 0) {\n                java.util.List<java.lang.String>.add((((\"edge of \" + int) + \" has a negative node \") + (com.graphhopper.util.EdgeIterator.getAdjNode())));\n            } \n        }\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"problem with node \" + int) , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"9c34c39a-790c-11e5-8e79-5b409c980994","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"N_LEVEL","speed":"N_LEVEL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:663","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"9c34eaab-790c-11e5-8e79-3f4ec1844d36","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:130","type":"CtIfImpl","sourcecode":"if ((byte[][].int) > 0)\n    throw new java.lang.IllegalStateException(\"already initialized\");\n"},"variableMap":{"length":"length","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:288","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-2},{"failures":[],"tindex":"9c34eaac-790c-11e5-8e79-91c401e7b80a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"9c34eaad-790c-11e5-8e79-6775b8bc9370","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:73","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"9c34eaae-790c-11e5-8e79-d5fc9127ff04","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:774","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"9c34eaaf-790c-11e5-8e79-0f5d5175cd84","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_NAME_IDX":"com.graphhopper.util.Constants.VERSION_LOCATION_IDX","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"locationIndex.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"9c34eab0-790c-11e5-8e79-c59b82cbfa6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:111","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:542","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((((\"adjNode \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \")\"))"},"status":-2},{"failures":[],"tindex":"9c34eab1-790c-11e5-8e79-49c89ac1b34e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:305","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int).putInt(int, int)"},"variableMap":{"index":"i","bufferIndex":"i","value":"i","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:407","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.set(int, null)"},"status":-2},{"failures":[],"tindex":"9c3510c2-790c-11e5-8e79-63da14976bcc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:313","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"variableMap":{"lazySW":"neighborSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:306","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}