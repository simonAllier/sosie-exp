{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":301,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":146,"com.graphhopper.GraphHopperAPITest.testNoLoad":82,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":287,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":152,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":153,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":272,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":71,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":170,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.storage.MMapDataAccessTest.testSegments":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":363,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":93,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":298,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":102,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":305,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":248,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":362,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":226,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":194,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":64,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":121,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":190,"com.graphhopper.GraphHopperTest.testPrepare":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":335,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":364,"com.graphhopper.coll.GHLongIntBTreeTest.testThrowException_IfPutting_NoNumber":365,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":109,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":232,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":128,"com.graphhopper.util.InstructionListTest.testWayList":56,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":137,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":48,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":155,"com.graphhopper.GraphHopperAPITest.testDisconnected179":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":294,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":3,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":168,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":358,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":134,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":354,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":171,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":40,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":86,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":45,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":32,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":316,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":74,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":355,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":341,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":342,"com.graphhopper.GraphHopperTest.testLoadOSM":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":172,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":236,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":253,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":140,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":269,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":241,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":202,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":203,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":319,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":150,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":31,"com.graphhopper.routing.PathTest.testWayList":37,"com.graphhopper.storage.MMapDataAccessTest.testCopy":353,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":346,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":207,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":279,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":223,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":318,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":169,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":244,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":325,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":250,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":327,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":208,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":285,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":142,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":76,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":42,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":39,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":49,"com.graphhopper.util.GHUtilityTest.testSort":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":295,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":282,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":97,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":350,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":165,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":338,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":249,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":280,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":185,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":13,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":234,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":330,"com.graphhopper.GraphHopperAPITest.testLoad":80,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":1,"com.graphhopper.util.TranslationMapTest.testToString":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":149,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":227,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":252,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":218,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":84,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":321,"com.graphhopper.routing.PathTest.testFound":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":307,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":133,"com.graphhopper.util.GHUtilityTest.testCopy":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":291,"com.graphhopper.routing.PathTest.testFindInstruction":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":125,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":332,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":296,"com.graphhopper.util.InstructionListTest.testEmptyList":53,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":136,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":163,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":242,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":141,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":156,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":334,"com.graphhopper.reader.PrinctonReaderTest.testRead":85,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":243,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":251,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":120,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":336,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":356,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":274,"com.graphhopper.util.InstructionListTest.testWayList2":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":200,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":310,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":177,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":246,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":326,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":44,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":348,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":267,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":259,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":300,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":119,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":331,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":210,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":217,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":302,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":63,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":204,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":329,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":112,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":188,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":70,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":161,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":108,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":65,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":309,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":351,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":68,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":206,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":308,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":66,"com.graphhopper.util.GHUtilityTest.testSort2":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":299,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":337,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":10,"com.graphhopper.routing.PathBidirRefTest.testExtract2":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":312,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":198,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":99,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":209,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":270,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":340,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":117,"com.graphhopper.storage.StorablePropertiesTest.testStore":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":173,"com.graphhopper.storage.GraphHopperStorageTest.testClone":220,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":247,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":311,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":229,"com.graphhopper.GraphHopperTest.testFootAndCar":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":11,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":293,"com.graphhopper.routing.PathTest.testTime":34,"com.graphhopper.util.InstructionListTest.testCreateGPX":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":290,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":261,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":304,"com.graphhopper.util.GHUtilityTest.testSortDirected":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":324,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":265,"com.graphhopper.GraphHopperTest.testVia":72,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":166,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":288,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":138,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":205,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":193,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":92,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":61,"com.graphhopper.GraphHopperTest.testFootOnly":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":199,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":201,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":35,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":361,"com.graphhopper.util.InstructionListTest.testFind":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":256},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"2e632ef4-82bd-11e5-b8ee-c1a10bc51f53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:93","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.Object.toString())"},"status":-1},{"failures":[],"tindex":"2e635605-82bd-11e5-b8ee-8732cb1eb1dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:143","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0)\n            return false;\n        \n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        byte[][] = new byte[int][];\n        for (int int = 0 ; int < int ; int++) {\n            byte[] byte[] = new byte[int];\n            int int = java.io.RandomAccessFile.read(byte[]);\n            if (int <= 0)\n                throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n            \n            byte[][][int] = byte[];\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"2e637d16-82bd-11e5-b8ee-6d74f9291f9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"edge","index":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:89","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.Edge.isValid(int)) {\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.Path.processEdge(int, com.graphhopper.storage.EdgeEntry.int);\n    int = com.graphhopper.storage.EdgeEntry.int;\n}"},"status":-2},{"failures":[],"tindex":"2e637d17-82bd-11e5-b8ee-5560dea51c36","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:136","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"variableMap":{"store":"found"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:118","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"2e637d18-82bd-11e5-b8ee-1f5068bf5c6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"variableMap":{"defaultUTurnCost":"com.graphhopper.util.DistanceCalcEarth.KM_MILE","weight":"com.graphhopper.util.DistanceCalcEarth.KM_MILE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:433","type":"CtReturnImpl","sourcecode":"return int * (com.graphhopper.util.DistanceCalcEarth.double)"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,28,29,29,30,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,0,65,66,67,68,69,70,71,72,73,74,75,1,2,76,3,4,77,78,79,80,81,82],"tindex":"2e63a429-82bd-11e5-b8ee-f79bb8592370","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:118","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"variableMap":{"baseUrl":"line"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:163","type":"CtWhileImpl","sourcecode":"while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n    java.util.List<java.lang.String>.add(java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"2e63a42a-82bd-11e5-b8ee-295aeb6d532c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"minLat","shrinkFactor":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:657","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) - double"},"status":0},{"failures":[],"tindex":"2e63cb3b-82bd-11e5-b8ee-2b6528192631","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:199","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"variableMap":{"factor":"subqueryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:726","type":"CtIfImpl","sourcecode":"if (int > 0)\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n"},"status":0},{"failures":[21,83,12],"tindex":"2e63cb3c-82bd-11e5-b8ee-73f92e5beefd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int), com.graphhopper.storage.NodeAccess.getElevation(int));\nelse\n    com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int));\n"},"variableMap":{"node":"newEntryIndex","tna":"nodeAccess","fna":"nodeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setAdditionalNodeField(int, int)"},"status":-1},{"failures":[14,84],"tindex":"2e63cb3d-82bd-11e5-b8ee-b136130f7495","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"minutes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:500","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"2e63cb3e-82bd-11e5-b8ee-01ddb90a47d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"edge","nextEdgeOther":"edge","nodeOther":"edge","nextEdge":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:214","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-2},{"failures":[],"tindex":"2e63f24f-82bd-11e5-b8ee-7d5e750b8a10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:240","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(\"tmp.lock\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:37","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.lang.String)"},"status":-2},{"failures":[],"tindex":"2e63f250-82bd-11e5-b8ee-67f14c95325d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:916","type":"CtIfImpl","sourcecode":"if ((int & 2) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-2},{"failures":[0],"tindex":"2e63f251-82bd-11e5-b8ee-47f2ec1cec38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())))"},"variableMap":{"str":"acceptStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:264","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())))"},"status":-1},{"failures":[],"tindex":"2e641962-82bd-11e5-b8ee-8bebbe3ea820","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:534","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"variableMap":{"intIndex":"mainNodes","len":"mainNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:459","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.PointList.getSize()) + (int)"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,25,26,27,85,86,87,31,32,33,34,35,36,37,38,39,40,88,89,83,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,52,55,56,60,61,154,155,156,157,158,159,160,161,64,0,65,66,67,68,69,70,72,73,74,75,1,2,3,4,77,78,80,81,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,7,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,10,251,252,11,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,12,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351],"tindex":"2e641963-82bd-11e5-b8ee-c3b7f46b6b53","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"variableMap":{"err":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:521","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[352,353,354,355,356,357,358,359,211,212,213,214,7,11,286,287,288,289,290,291,292,293,294,295,360,297,298,299,300,301,361,302,303,304,362,305,363,306,307,308,309,310,311,312,313,364,314,315,316,317,12,318],"tindex":"2e644074-82bd-11e5-b8ee-ff2f09be0856","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:148","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"variableMap":{"width":"indexDivisor","i":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:304","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[365],"tindex":"2e644075-82bd-11e5-b8ee-23f26712cc82","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:77","type":"CtIfImpl","sourcecode":"if (long == (int)) {\n    throw new java.lang.IllegalArgumentException((\"Illegal key \" + long));\n} "},"status":-1},{"failures":[],"tindex":"2e646786-82bd-11e5-b8ee-2fd0eb2a1947","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:703","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"2e646787-82bd-11e5-b8ee-5fcf33cbb750","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"toLon","java.lang.Math.PI":"toLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:31","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"2e63a42a-82bd-11e5-b8ee-295aeb6d532c","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).t1","com.graphhopper.storage.index.LocationIndexTree_double_calculateRMin(double,double,int).e1"]},"type":"branch"}]}]}