{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":68,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":83,"com.graphhopper.reader.OSMReaderTest.testMain":12,"com.graphhopper.reader.OSMReaderTest.testFerry":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":58,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":37,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.util.InstructionListTest.testEmptyList":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":41,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":72,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":28,"com.graphhopper.reader.OSMReaderTest.testWithBounds":18,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":16,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":64,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":19,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":48,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":22,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":55,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":45,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":67,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":82,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":69,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":38,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":39,"com.graphhopper.reader.OSMReaderTest.testFoot":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":63,"com.graphhopper.util.InstructionListTest.testCreateGPX":80,"com.graphhopper.reader.OSMReaderTest.testOneWay":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":30,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":73,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":44,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":23,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":62,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":81,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":14,"com.graphhopper.util.DouglasPeuckerTest.testParse":84,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":15,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":76,"com.graphhopper.GraphHopperTest.testFootOnly":8,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":71,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":56,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":17,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":10,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":57,"com.graphhopper.GraphHopperTest.testLoadOSM":6,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":51,"com.graphhopper.reader.OSMReaderTest.testSort":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":40,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":43},"transformations":[{"failures":[0],"tindex":"d6769401-8283-11e5-9012-95a999fe3485","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:84","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double * (com.graphhopper.storage.EdgeAccess.double)))"},"variableMap":{"distance":"y2","com.graphhopper.storage.EdgeAccess.INT_DIST_FACTOR":"y1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:61","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.signum((double - double))))"},"status":-1},{"failures":[1,2,3,4,5,6,7,8],"tindex":"d676bb12-8283-11e5-9012-03a2a6aae9d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:809","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null)"},"variableMap":{"algoFactories":"algoFactories","weighting":"weighting"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:830","type":"CtInvocationImpl","sourcecode":"java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, com.graphhopper.routing.ch.PrepareContractionHierarchies)"},"status":-1},{"failures":[9,10],"tindex":"d676bb13-8283-11e5-9012-bb29749fbf70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:243","type":"CtIfImpl","sourcecode":"if (((java.lang.Double.isInfinite(double)) || (java.lang.Double.isNaN(double))) || (double < 0))\n    throw new java.lang.IllegalStateException((\"Invalid speed stored in edge! \" + double));\n"},"variableMap":{"speed":"shortTripsSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:529","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n    if (java.lang.Number != null) {\n        double double = (java.lang.Number.doubleValue()) / 1000;\n        double = java.lang.Math.round(((double / double) / 1.4));\n        if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n            double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n        \n        double = double;\n    } \n} catch (java.lang.Exception ex) {\n}"},"status":-1},{"failures":[9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"d676bb14-8283-11e5-9012-b12a6300a51b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"relationFlags","key":"relationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:352","type":"CtIfImpl","sourcecode":"if (long != 0)\n    int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)));\n"},"status":-1},{"failures":[],"tindex":"d676bb15-8283-11e5-9012-e51c8c1c154d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:589","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.EdgeIterator.getDistance()"},"status":-2},{"failures":[],"tindex":"d676e226-8283-11e5-9012-a394c980773e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setInstructions(com.graphhopper.util.InstructionList)"},"status":-2},{"failures":[],"tindex":"d676e227-8283-11e5-9012-ff80ede1380c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:207","type":"CtIfImpl","sourcecode":"if ((int) > (int)) {\n    com.graphhopper.coll.IntDoubleBinHeap.ensureCapacity(((int)((int) * (com.graphhopper.coll.IntDoubleBinHeap.double))));\n} "},"status":-2},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"d676e228-8283-11e5-9012-2320f03ae358","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:65","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"initLeafSize":"S_SKIP_EDGE2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:660","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-1},{"failures":[],"tindex":"d676e229-8283-11e5-9012-11cc5c58a5c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"variableMap":{"segNumber":"length","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:72","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.int[][][int] = java.util.Arrays.copyOf(int[], int[].int)"},"status":-2},{"failures":[9,10,78],"tindex":"d676e22a-8283-11e5-9012-d3f7fe149e43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:242","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\");\n    if (((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"variableMap":{"acceptBit":"acceptBit","ferryBit":"ferryBit","ferries":"ferries","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"route\", java.util.Set<java.lang.String>)) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motorcar\");\n    if (java.lang.String == null)\n        java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n    \n    if ((((java.lang.String == null) && (!(com.graphhopper.reader.OSMWay.hasTag(\"foot\")))) && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\")))) || (\"yes\".equals(java.lang.String)))\n        return (long) | (long);\n    \n} "},"status":-1},{"failures":[],"tindex":"d677093b-8283-11e5-9012-a95f6bd1e635","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:153","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.add(com.graphhopper.storage.MMapDataAccess.newByteBuffer(long, long))"},"status":-2},{"failures":[79],"tindex":"d677093c-8283-11e5-9012-eb02bb13b8eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:114","type":"CtIfImpl","sourcecode":"if (java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.isEmpty())\n    break;\n"},"status":-1},{"failures":[],"tindex":"d677093d-8283-11e5-9012-979a5a206229","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:346","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMWay.getId()"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:371","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.handleWayTags(com.graphhopper.reader.OSMWay, long, long)"},"status":-2},{"failures":[80],"tindex":"d677093e-8283-11e5-9012-1565dca44b39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:183","type":"CtReturnImpl","sourcecode":"return \"racingbike\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:170","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionList.createGPX(\"GraphHopper\", new java.util.Date().getTime())"},"status":-1},{"failures":[81],"tindex":"d677093f-8283-11e5-9012-b170777df645","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"variableMap":{"prepared":"includeElevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:220","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n"},"status":-1},{"failures":[],"tindex":"d6770940-8283-11e5-9012-db390f89375b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1033","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    return false;\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"endIndexPlusOne","nextEdgeId":"endIndexPlusOne"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:67","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[],"tindex":"d6770941-8283-11e5-9012-b72e8ad28064","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int)"},"status":0},{"failures":[82,83,84,85],"tindex":"d6773052-8283-11e5-9012-37b303afdf1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:433","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"d6773053-8283-11e5-9012-1b1b4169cfd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:367","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new java.lang.IllegalArgumentException(\"from must be smaller or equals to end\");\n"},"variableMap":{"from":"com.graphhopper.storage.index.Location2IDQuadtree.MAGIC_INT","end":"com.graphhopper.storage.index.Location2IDQuadtree.MAGIC_INT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:392","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, com.graphhopper.storage.index.Location2IDQuadtree.int)"},"status":0},{"failures":[],"tindex":"d6773054-8283-11e5-9012-ab72476f1011","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:371","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setWeight\")"},"variableMap":{"this":"edgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:88","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"d6773053-8283-11e5-9012-1b1b4169cfd8","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setHeader"]},"type":"staticDiff"}]}]}