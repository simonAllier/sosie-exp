{"failureDictionary":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":1,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":13,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":4,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":14,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":28,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":15,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":36,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":31,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":25,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":18,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":23,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":24,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":22,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":37,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":30,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":38},"transformations":[{"failures":[],"tindex":"572adfce-7945-11e5-bd7a-27f9fe8c7c9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:95","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[6]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:150","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"572b06df-7945-11e5-bd7a-edc280fd1f17","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:479","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"572b2df0-7945-11e5-bd7a-c5597c239a19","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:590","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) << 2"},"variableMap":{"intIndex":"E_NODEA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:224","type":"CtLocalVariableImpl","sourcecode":"long long = (com.graphhopper.storage.DataAccess.getInt((long + (int)))) == int ? long + (int) : long + (int)"},"status":-2},{"failures":[],"tindex":"572b2df1-7945-11e5-bd7a-7b4435f4d2f0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1101","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.storage.BaseGraph.AllEdgeIterator.(checkRange()))\n    return false;\n"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.DefaultEdgeFilter:49","type":"CtReturnImpl","sourcecode":"return ((boolean) && (com.graphhopper.util.EdgeIteratorState.isForward(com.graphhopper.routing.util.FlagEncoder))) || ((boolean) && (com.graphhopper.util.EdgeIteratorState.isBackward(com.graphhopper.routing.util.FlagEncoder)))"},"status":-2},{"failures":[],"tindex":"572b2df2-7945-11e5-bd7a-739956405833","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:348","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.put(byte[], int, int)"},"variableMap":{"bb":"bb","values":"values","length":"length","delta":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:367","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":0},{"failures":[],"tindex":"572b2df3-7945-11e5-bd7a-b3db33fb0b1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:293","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"572b5504-7945-11e5-bd7a-0b7285764f34","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:306","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n    return ;\n"},"variableMap":{"traversalMode":"traversalMode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:240","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TraversalMode.isEdgeBased()) {\n    if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int))\n        throw new java.lang.IllegalStateException((\"cannot happen for edge based execution of \" + com.graphhopper.routing.DijkstraBidirectionRef.(getName())));\n    \n    if ((com.graphhopper.storage.EdgeEntry.int) != (com.graphhopper.storage.EdgeEntry.int)) {\n        com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n        double -= com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIteratorState, boolean, com.graphhopper.util.EdgeIterator.int);\n    } else {\n        if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n            return ;\n        \n    }\n} "},"status":-2},{"failures":[],"tindex":"572b5505-7945-11e5-bd7a-f526db4c9b86","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"No encoder set to calculate turn weight\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already closed\")"},"status":-2},{"failures":[],"tindex":"572b5506-7945-11e5-bd7a-d91886590368","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:240","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"572b7c17-7945-11e5-bd7a-b55155a0e2c6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:241","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:588","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.routing.util.BikeCommonFlagEncoder.isPushingSection(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"572b7c18-7945-11e5-bd7a-2fdde0eef830","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"variableMap":{"dMinLon":"deltaLat","dMinLat":"queryLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:734","type":"CtLocalVariableImpl","sourcecode":"double double = double + (int * (double))"},"status":-2},{"failures":[],"tindex":"572b7c19-7945-11e5-bd7a-3b2903040e69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:423","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[],"tindex":"572b7c1a-7945-11e5-bd7a-955ba50cbe23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:257","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    throw new java.lang.IllegalStateException((\"No key provided:\" + java.lang.String));\n"},"variableMap":{"line":"fileDetails","key":"fileDetails"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:253","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n    java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n    java.io.InputStream java.io.InputStream;\n    if (!(java.io.File.exists())) {\n        for (int int = 0 ; int < 3 ; int++) {\n            try {\n                com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                break;\n            } catch (java.net.SocketTimeoutException ex) {\n                java.lang.Thread.sleep(2000);\n                continue;\n            } catch (java.io.FileNotFoundException ex) {\n                java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                continue;\n            }\n        }\n    } \n    java.io.InputStream = new java.io.FileInputStream(java.io.File);\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n    int int;\n    while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n        for (int int = 0 ; int < int ; int += 2) {\n            short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n            if ((short < (-1000)) || (short > 12000))\n                short = java.lang.Short.short;\n            \n            com.graphhopper.storage.DataAccess.setShort(int, short);\n        }\n    }\n    com.graphhopper.storage.DataAccess.flush();\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"572ba32b-7945-11e5-bd7a-c3c824750154","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:281","type":"CtForImpl","sourcecode":"for (long long = long + (int) ; long < long ; long += int) {\n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.util.EdgeIterator.int);\n}"},"status":-2},{"failures":[],"tindex":"572ba32c-7945-11e5-bd7a-eb49ad4f1f23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"variableMap":{"dLat":"from","dLon":"lonSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:302","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"status":-2},{"failures":[],"tindex":"572ba32d-7945-11e5-bd7a-1b2154190ce2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:78","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((long) + 4))"},"status":-2},{"failures":[],"tindex":"572ba32e-7945-11e5-bd7a-eba31380f2ac","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:262","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n"},"status":-2},{"failures":[],"tindex":"572bca3f-7945-11e5-bd7a-415298f73975","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-2},{"failures":[],"tindex":"572bca40-7945-11e5-bd7a-0b96d7cef903","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:278","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((180 + double) / (int))"},"variableMap":{"degree":"i","lon":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:416","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-2},{"failures":[],"tindex":"572bca41-7945-11e5-bd7a-e348789cb8d8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:201","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean))\n    return true;\n"},"variableMap":{"finishedTo":"edgeBased","finishedFrom":"edgeBased"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:126","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}