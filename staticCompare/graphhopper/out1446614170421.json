{"failureDictionary":{"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":88,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":28,"com.graphhopper.reader.OSMReaderTest.testFerry":61,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":37,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":55,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":14,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":113,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":15,"com.graphhopper.reader.OSMReaderTest.testWithBounds":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":96,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":79,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":94,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":99,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":48,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":100,"com.graphhopper.GraphHopperTest.testPrepare":57,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":9,"com.graphhopper.reader.OSMReaderTest.testFoot":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":104,"com.graphhopper.util.BitUtilLittleTest.testToBitString":89,"com.graphhopper.reader.OSMReaderTest.testOneWay":74,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":110,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":20,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":29,"com.graphhopper.GraphHopperAPITest.testDisconnected179":76,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":27,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":84,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":108,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":117,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":58,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":93,"com.graphhopper.routing.util.EncodedValueTest.testSwap":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":102,"com.graphhopper.GraphHopperTest.testLoadOSM":33,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":49,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":52,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":51,"com.graphhopper.reader.OSMReaderTest.testSort":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":50,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":114,"com.graphhopper.reader.OSMReaderTest.testMain":63,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":24,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":25,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":26,"com.graphhopper.storage.MMapDataAccessTest.testCopy":86,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":17,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":119,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":6,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":68,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":82,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":97,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":10,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":43,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":47,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":87,"com.graphhopper.GraphHopperTest.testFootAndCar":59,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":11,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":4,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":38,"com.graphhopper.reader.OSMReaderTest.testRelation":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":112,"com.graphhopper.GraphHopperTest.testPrepareOnly":31,"com.graphhopper.GraphHopperTest.testVia":56,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":111,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":70,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":83,"com.graphhopper.GraphHopperAPITest.testLoad":75,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":32,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":36,"com.graphhopper.GraphHopperTest.testFootOnly":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":118,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":69,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":80,"com.graphhopper.reader.OSMReaderTest.testBarriers":65,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":8,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":106,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":60,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":81,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":41},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"292d7594-82b3-11e5-ba6c-b9fce9a19a8e","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"flags","backwardBit":"mask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"292d9ca5-82b3-11e5-ba6c-e5e4a46be600","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:221","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"292d9ca6-82b3-11e5-ba6c-4993f9769bd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:202","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int)"},"status":-1},{"failures":[48,31,49,50,51,52,53,54,55,56,57,58,59,32,33,34,35,0,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,41,77],"tindex":"292dc3b7-82b3-11e5-ba6c-d7307775c038","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:102","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-2},{"failures":[],"tindex":"292dc3b8-82b3-11e5-ba6c-4da670171f82","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"key","y2":"key","x1":"key","x2":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.KeyAlgo.decode(int, com.graphhopper.util.shapes.GHPoint)"},"status":0},{"failures":[67,78,79],"tindex":"292dc3b9-82b3-11e5-ba6c-67ca019762b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"variableMap":{"da":"heights"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.setHeights(com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"292deaca-82b3-11e5-ba6c-b7e0dcbbc624","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:287","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_right\")"},"variableMap":{"dir":"streetName","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:293","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? java.lang.String : com.graphhopper.util.Translation.tr(\"turn_onto\", java.lang.String, java.lang.String)"},"status":-2},{"failures":[80],"tindex":"292deacb-82b3-11e5-ba6c-df5086e2df20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:494","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[58,64],"tindex":"292deacc-82b3-11e5-ba6c-730e217c7f87","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:116","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"graph":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:324","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.GraphHopperStorage.getCHWeightings() , com.graphhopper.storage.Directory , com.graphhopper.storage.GraphHopperStorage.getEncodingManager() , boolean , com.graphhopper.storage.GraphHopperStorage.getExtension()).create(com.graphhopper.storage.GraphHopperStorage.getNodes())"},"status":-1},{"failures":[81,82,10,11,14,83,16,18,84,21,22,25,27,29],"tindex":"292deacd-82b3-11e5-ba6c-654e27c93d40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:173","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)))"},"variableMap":{"name":"highway","location":"highway"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:733","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[],"tindex":"292e11de-82b3-11e5-ba6c-5bf35cbb15b2","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"WIDTH"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:249","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    byte[] byte[] = new byte[(2 * (int)) * (int)];\n    com.graphhopper.storage.DataAccess.create(byte[].int);\n    try {\n        java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n        java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n        java.io.InputStream java.io.InputStream;\n        if (!(java.io.File.exists())) {\n            for (int int = 0 ; int < 3 ; int++) {\n                try {\n                    com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                    break;\n                } catch (java.net.SocketTimeoutException ex) {\n                    java.lang.Thread.sleep(2000);\n                    continue;\n                } catch (java.io.FileNotFoundException ex) {\n                    java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                    continue;\n                }\n            }\n        } \n        java.io.InputStream = new java.io.FileInputStream(java.io.File);\n        java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n        java.util.zip.ZipInputStream.getNextEntry();\n        java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n        int int;\n        while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n            for (int int = 0 ; int < int ; int += 2) {\n                short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n                if ((short < (-1000)) || (short > 12000))\n                    short = java.lang.Short.short;\n                \n                com.graphhopper.storage.DataAccess.setShort(int, short);\n            }\n        }\n        com.graphhopper.storage.DataAccess.flush();\n    } catch (java.lang.Exception ex) {\n        throw new java.lang.RuntimeException(java.lang.Exception);\n    }\n} "},"status":0},{"failures":[],"tindex":"292e5fff-82b3-11e5-ba6c-53060a07056a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:70","type":"CtReturnImpl","sourcecode":"return long | long"},"variableMap":{"flags":"acceptBit","tmpValue":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:247","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"292e8710-82b3-11e5-ba6c-834c75d11285","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:62","type":"CtReturnImpl","sourcecode":"return ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (com.graphhopper.routing.ch.PrepareEncoder.long)) || ((long & (com.graphhopper.routing.ch.PrepareEncoder.long)) == (long & (com.graphhopper.routing.ch.PrepareEncoder.long)))"},"variableMap":{"flags2":"internalFlags","com.graphhopper.routing.ch.PrepareEncoder.scDirMask":"ferryBit","flags1":"ferryBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:690","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":0},{"failures":[],"tindex":"292e8711-82b3-11e5-ba6c-c3958453cc36","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:199","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"status":-2},{"failures":[68],"tindex":"292e8712-82b3-11e5-ba6c-df12d910ae2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:243","type":"CtIfImpl","sourcecode":"if ((gnu.trove.map.TIntLongMap) == null)\n    gnu.trove.map.TIntLongMap = new gnu.trove.map.hash.TIntLongHashMap(com.graphhopper.reader.OSMReader.getOsmWayIdSet().size() , 0.5F , -1 , -1);\n"},"status":-1},{"failures":[85,86],"tindex":"292e8713-82b3-11e5-ba6c-512dfc43c044","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[57,58,59,0,63,66,67,75,87,88],"tindex":"292eae24-82b3-11e5-ba6c-856932cf8dfd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"freeIndex","currentIndex":"freeIndex","bucketSize":"freeIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"status":-1},{"failures":[89,90],"tindex":"292eae25-82b3-11e5-ba6c-4bb410345e42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:199","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('(')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:125","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-1},{"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"292eae26-82b3-11e5-ba6c-0173d560d744","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"maxLevel","bLen":"maxLevel"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:214","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setLevel(int, int)"},"status":-1},{"failures":[],"tindex":"292eae27-82b3-11e5-ba6c-c3096a914742","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"variableMap":{"exitNumber":"endNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathNative:57","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"292e11de-82b3-11e5-ba6c-5bf35cbb15b2","diffs":[{"branches":{"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":["com.graphhopper.reader.dem.SRTMProvider_java.lang.String_getFileString(double,double).t5","com.graphhopper.reader.dem.SRTMProvider_java.lang.String_getFileString(double,double).t1"]},"type":"branch"}]},{"transformation":"292d9ca5-82b3-11e5-ba6c-e5e4a46be600","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.EncodedValue.getBits"]},"type":"staticDiff"}]}]}