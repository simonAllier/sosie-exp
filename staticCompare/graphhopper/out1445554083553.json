{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"f40d8d6b-790e-11e5-bbf8-9d106c04617b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"com.graphhopper.reader.OSMElement.WAY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:177","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n    final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n    boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n    if (boolean) {\n        TLongList TLongList = com.graphhopper.reader.OSMWay.getNodes();\n        int int = com.graphhopper.reader.TLongList.size();\n        for (int int = 0 ; int < int ; int++) {\n            com.graphhopper.reader.OSMReader.prepareHighwayNode(com.graphhopper.reader.TLongList.get(int));\n        }\n        if (((++long) % 5000000) == 0) {\n            com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"f40d8d6c-790e-11e5-bbf8-bb88e7b414a4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"variableMap":{"defaultUTurnCost":"java.lang.Double.POSITIVE_INFINITY","turnCosts":"java.lang.Double.POSITIVE_INFINITY","edgeId":"maxTurnCosts","prevOrNextEdgeId":"maxTurnCosts","weight":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:643","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return 0;\nelse if ((int) == 1)\n    return (long & (long)) == 0 ? 0 : java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"f40db47d-790e-11e5-bbf8-bbfc64b392c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:291","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMinResolutionInMeter(com.graphhopper.storage.DataAccess.getHeader((2 * 4)))"},"status":-2},{"failures":[],"tindex":"f40db47e-790e-11e5-bbf8-2daa859ddb38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:47","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AStarBidirection.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()))"},"status":-2},{"failures":[],"tindex":"f40db47f-790e-11e5-bbf8-4d91a86bf54d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"firstNode","hash":"firstNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:735","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"f40db480-790e-11e5-bbf8-298798ff783f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"variableMap":{"intVal":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:210","type":"CtReturnImpl","sourcecode":"return double[][int]"},"status":-2},{"failures":[],"tindex":"f40db481-790e-11e5-bbf8-0581d66be64a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:683","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalArgumentException(\"No OSM file specified\");\n"},"variableMap":{"osmFile":"vehicle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:952","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    java.lang.String = com.graphhopper.GraphHopper.getDefaultVehicle().toString();\n"},"status":-2},{"failures":[],"tindex":"f40db482-790e-11e5-bbf8-8d633493dbbf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"variableMap":{"val":"estimationFullDist","shortTripsSpeed":"estimationFullDist","durationInHours":"estimationFullDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:273","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.double = double"},"status":-2},{"failures":[],"tindex":"f40db483-790e-11e5-bbf8-a55308d43202","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"mode","currentIndex":"mode","bucketSize":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:884","type":"CtIfImpl","sourcecode":"if ((int & 2) != 0)\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n"},"status":-2},{"failures":[],"tindex":"f40ddb94-790e-11e5-bbf8-c3f297149a73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:83","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"=\")"},"variableMap":{"tagTxt":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:286","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(')')"},"status":-2},{"failures":[],"tindex":"f40ddb95-790e-11e5-bbf8-f529bf61ba9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:67","type":"CtIfImpl","sourcecode":"if (\"BeelineSimplification\".equals(java.lang.String)) {\n    com.graphhopper.routing.util.BeelineWeightApproximator com.graphhopper.routing.util.BeelineWeightApproximator = new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.AlgorithmOptions.getWeighting());\n    com.graphhopper.routing.util.BeelineWeightApproximator.setDistanceCalc(com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection);\n    return com.graphhopper.routing.util.BeelineWeightApproximator;\n} else if (\"BeelineAccurate\".equals(java.lang.String)) {\n    com.graphhopper.routing.util.BeelineWeightApproximator com.graphhopper.routing.util.BeelineWeightApproximator = new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.AlgorithmOptions.getWeighting());\n    com.graphhopper.routing.util.BeelineWeightApproximator.setDistanceCalc(com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc);\n    return com.graphhopper.routing.util.BeelineWeightApproximator;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Approximation \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"f40ddb96-790e-11e5-bbf8-934bf7366ddd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:106","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"f40ddb97-790e-11e5-bbf8-2bb000aab315","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:33","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(4, 2, 0)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:43","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(((int)(com.graphhopper.util.PMap.getLong(\"speedBits\", 4))), com.graphhopper.util.PMap.getLong(\"speedFactor\", 2), (com.graphhopper.util.PMap.getBool(\"turnCosts\", false) ? 1 : 0))"},"status":-2},{"failures":[],"tindex":"f40ddb98-790e-11e5-bbf8-0f3205d5f674","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:742","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.index.TIntHashSet.isEmpty())) {\n    double double = com.graphhopper.storage.index.LocationIndexTree.calculateRMin(double, double, int);\n    double double = com.graphhopper.storage.index.LocationIndexTree.calcMinDistance(double, double, com.graphhopper.storage.index.TIntHashSet);\n    if (double < double)\n        return true;\n    \n} "},"status":-2},{"failures":[],"tindex":"f40ddb99-790e-11e5-bbf8-b9cc6ff79217","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"status":-2},{"failures":[],"tindex":"f40ddb9a-790e-11e5-bbf8-9be7861d66a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:247","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n        int = int;\n        int = int + 1;\n    } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n        int = int;\n        int = int + (int);\n    } \n} else {\n    if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n        int = int + 1;\n        int = int;\n    } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n        int = int + (int);\n        int = int;\n    } \n}"},"variableMap":{"len":"to","indicesCopy":"filledIndices","i":"to","from":"to","to":"to","lonSize":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:290","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[],"tindex":"f40e02ab-790e-11e5-bbf8-c3fce18191cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:78","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((long) + 4))"},"variableMap":{"size":"tmp","values":"originalEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:796","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + 4))"},"status":-2},{"failures":[],"tindex":"f40e02ac-790e-11e5-bbf8-e13a3071e923","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:219","type":"CtLocalVariableImpl","sourcecode":"double double = double > 1 ? double / double : 0"},"variableMap":{"incEleSum":"maxLonTmp","incDist2DSum":"maxLonTmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:184","type":"CtLocalVariableImpl","sourcecode":"double double = (double + double) / 2"},"status":-2},{"failures":[],"tindex":"f40e02ad-790e-11e5-bbf8-a93192c1d3c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:340","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.BaseGraph.isFrozen()))\n    com.graphhopper.storage.BaseGraph.freeze();\n"},"variableMap":{"baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:397","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initStorage()"},"status":-2},{"failures":[],"tindex":"f40e02ae-790e-11e5-bbf8-1d7d8b143e7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:581","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.CmdArgs.getDouble(\"osmreader.wayPointMaxDistance\", double)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}