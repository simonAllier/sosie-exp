{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":103,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":236,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":294,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":310,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":96,"com.graphhopper.reader.OSMReaderTest.testFerry":357,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":166,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":167,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":222,"com.graphhopper.routing.QueryGraphTest.testOneWay":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":212,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":370,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":290,"com.graphhopper.reader.OSMReaderTest.testWithBounds":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":183,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":193,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":256,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":266,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":336,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":265,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":316,"com.graphhopper.util.BitUtilBigTest.testReverse":9,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":368,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":48,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":67,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":335,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":109,"com.graphhopper.GraphHopperTest.testPrepare":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":269,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":38,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":121,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":17,"com.graphhopper.util.BitUtilLittleTest.testToBitString":219,"com.graphhopper.util.InstructionListTest.testWayList":163,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":26,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":162,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":363,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":207,"com.graphhopper.GraphHopperAPITest.testDisconnected179":355,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":100,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":23,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":291,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":77,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":150,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":62,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":258,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":135,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":110,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":177,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":277,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":189,"com.graphhopper.GraphHopperTest.testLoadOSM":180,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":319,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":122,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":292,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":341,"com.graphhopper.reader.OSMReaderTest.testSort":358,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":28,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":61,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":140,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":45,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":270,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":246,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":36,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":356,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":70,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":273,"com.graphhopper.routing.PathTest.testWayList":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":192,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":327,"com.graphhopper.util.BitUtilBigTest.testFromBitString":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":350,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":24,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":224,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":286,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":289,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":209,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":337,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":328,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":354,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":30,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":216,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":76,"com.graphhopper.util.GHUtilityTest.testSort":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":101,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":352,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":94,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":250,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":276,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":307,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":145,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":53,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":330,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":245,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":204,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":86,"com.graphhopper.GraphHopperAPITest.testLoad":148,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":251,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":200,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":130,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":80,"com.graphhopper.reader.OSMReaderTest.testBarriers":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":106,"com.graphhopper.routing.PathTest.testFound":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":346,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":372,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":314,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":99,"com.graphhopper.util.GHUtilityTest.testCopy":168,"com.graphhopper.util.AngleCalcTest.testAtan2":218,"com.graphhopper.routing.PathTest.testFindInstruction":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":81,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":185,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":102,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":25,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":309,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":125,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":29,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":91,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":203,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":343,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":186,"com.graphhopper.reader.PrinctonReaderTest.testRead":149,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":252,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":217,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":47,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":261,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":142,"com.graphhopper.util.InstructionListTest.testWayList2":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":322,"com.graphhopper.reader.OSMReaderTest.testFoot":151,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":105,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":234,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":3,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":4,"com.graphhopper.reader.OSMReaderTest.testOneWay":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":257,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":136,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":206,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":184,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":282,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":104,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":113,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":117,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":359,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":143,"com.graphhopper.routing.PathBidirRefTest.testExtract":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":40,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":333,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":160,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":174,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":340,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":259,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":326,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":197,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":302,"com.graphhopper.util.GHUtilityTest.testSort2":365,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":263,"com.graphhopper.reader.OSMReaderTest.testMain":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":146,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":338,"com.graphhopper.routing.PathBidirRefTest.testExtract2":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":213,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":320,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":299,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":313,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":329,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":141,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":89,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":361,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":237,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":44,"com.graphhopper.storage.GraphHopperStorageTest.testClone":115,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":293,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":268,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":349,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":279,"com.graphhopper.GraphHopperTest.testFootAndCar":178,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":281,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":54,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":262,"com.graphhopper.routing.PathTest.testTime":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":98,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":344,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":239,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":300,"com.graphhopper.util.BitUtilLittleTest.testReverse":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":348,"com.graphhopper.util.GHUtilityTest.testSortDirected":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":208,"com.graphhopper.GraphHopperTest.testPrepareOnly":369,"com.graphhopper.GraphHopperTest.testVia":175,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":312,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":27,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":325,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":5,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":339,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":165,"com.graphhopper.GraphHopperTest.testFootOnly":182,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":321,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":155,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":304,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":373,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":323,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":73,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":264,"com.graphhopper.util.InstructionListTest.testFind":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":301},"transformations":[{"failures":[0],"tindex":"bc1fce40-82c4-11e5-bdfd-419de2f40df4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:115","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"variableMap":{"numTiles":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"status":-1},{"failures":[1],"tindex":"bc1fce41-82c4-11e5-bdfd-0911187eda37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:105","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[2,3,4,5,6,7,8,9],"tindex":"bc1ff552-82c4-11e5-bdfd-994f3edca016","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:608","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"variableMap":{"turnRestrictionBit":"res","shift":"maxBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:259","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[],"tindex":"bc1ff553-82c4-11e5-bdfd-2580ec21eec5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"newOrExistingEdge","NO_TURN_ENTRY":"fromNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.setEdgeRef(int, int)"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,1,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"tindex":"bc1ff554-82c4-11e5-bdfd-25179e932585","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:181","type":"CtAssignmentImpl","sourcecode":"long = 1L << int"},"status":-1},{"failures":[],"tindex":"bc1ff555-82c4-11e5-bdfd-a7c159067e6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:67","type":"CtIfImpl","sourcecode":"if (\"BeelineSimplification\".equals(java.lang.String)) {\n    com.graphhopper.routing.util.BeelineWeightApproximator com.graphhopper.routing.util.BeelineWeightApproximator = new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.AlgorithmOptions.getWeighting());\n    com.graphhopper.routing.util.BeelineWeightApproximator.setDistanceCalc(com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection);\n    return com.graphhopper.routing.util.BeelineWeightApproximator;\n} else if (\"BeelineAccurate\".equals(java.lang.String)) {\n    com.graphhopper.routing.util.BeelineWeightApproximator com.graphhopper.routing.util.BeelineWeightApproximator = new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.AlgorithmOptions.getWeighting());\n    com.graphhopper.routing.util.BeelineWeightApproximator.setDistanceCalc(com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc);\n    return com.graphhopper.routing.util.BeelineWeightApproximator;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Approximation \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"bc201c66-82c4-11e5-bdfd-050c1b58472a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:155","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":0},{"failures":[],"tindex":"bc201c67-82c4-11e5-bdfd-fb5ba84099b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:260","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"variableMap":{"length":"i","factor":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"status":0},{"failures":[56,57,59,61,62,81,183,184,185,186,187,188,189,190,97,191,192,193,194,195,196,197,198,114,199,200,201,202,203,204,205,206,134,207,208,209,210,211,212,213,214,159],"tindex":"bc201c68-82c4-11e5-bdfd-6f0e2dc0abc9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"toMoveNodes","index":"toMoveNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:655","type":"CtForImpl","sourcecode":"for ( ; int >= 0 ; int--) {\n    if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"bc201c69-82c4-11e5-bdfd-718ac5c03ea8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:981","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable.setEdgeId(int)"},"variableMap":{"tmpEdgeId":"connectedId","this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:101","type":"CtIfImpl","sourcecode":"if ((int[][int]) == 0) {\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.resumeState(int, com.graphhopper.util.EdgeIterator));\n    java.util.Stack<com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState>.push(com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.TarjanState.startState(int));\n    continue nextState;\n} else if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.min(int[][int], int[][int]);\n} "},"status":-2},{"failures":[],"tindex":"bc201c6a-82c4-11e5-bdfd-ef89f2d607b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:648","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.cleanUp()"},"status":0},{"failures":[215,216],"tindex":"bc20437b-82c4-11e5-bdfd-877d8685752b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"status":-1},{"failures":[],"tindex":"bc20437c-82c4-11e5-bdfd-eb16c8ec03e9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:966","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:333","type":"CtLocalVariableImpl","sourcecode":"int int = (double[].int) / 2"},"status":-2},{"failures":[15,38,45,49,128,217,130],"tindex":"bc20437d-82c4-11e5-bdfd-e9d34dfb5f43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:211","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.ensureNodeIndex(java.lang.Math.max(int, int))"},"status":-1},{"failures":[218],"tindex":"bc20437e-82c4-11e5-bdfd-1feb0e34a7fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"y","weight":"angle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-1},{"failures":[],"tindex":"bc20437f-82c4-11e5-bdfd-9bc7c74d21da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:429","type":"CtInvocationImpl","sourcecode":"com.graphhopper.search.NameIndex.close()"},"status":-2},{"failures":[],"tindex":"bc204380-82c4-11e5-bdfd-4dacdd9d9b79","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"variableMap":{"tmpDegreeCounter":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:309","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":0},{"failures":[219,220],"tindex":"bc204381-82c4-11e5-bdfd-9d10188eea07","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:279","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:125","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-1},{"failures":[10,11,221,222,223,224,225,226,227,228,229,12,230,13,231,232,233,234,14,15,16,17,18,19,20,21,22,23,24,25,26,27,235,28,29,30,31,32,33,236,237,34,35,36,37,38,238,39,40,41,42,43,239,44,45,46,47,48,240,49,50,51,241,53,56,57,58,59,60,61,62,63,64,70,71,242,72,73,74,1,75,76,77,78,243,244,245,246,79,80,81,247,82,83,248,249,84,85,86,184,185,250,186,87,251,88,187,188,252,253,254,89,90,189,190,91,255,92,93,256,257,258,94,259,95,96,97,260,98,99,261,262,100,101,102,192,193,263,194,103,264,104,195,196,265,266,267,105,106,197,198,107,268,108,109,269,270,271,110,272,273,111,274,275,112,113,114,276,115,116,277,278,117,118,119,200,201,279,202,120,280,121,203,204,281,282,283,122,123,205,206,124,284,125,126,285,286,287,127,288,2,289,290,291,292,293,294,295,296,3,4,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,5,316,317,318,319,320,321,322,323,6,7,324,325,326,327,328,329,330,331,332,333,334,335,128,336,129,337,338,339,217,130,340,131,341,132,133,134,342,135,136,343,344,137,138,139,208,209,345,210,140,346,141,211,212,347,348,349,142,143,213,214,144,350,145,146,351,352,353,147,354,148,355,356,149,150,357,151,152,358,153,359,360,154,155,156,157,158,361,159,160,161,162,163,164,165,362,363,166,167,364,365,168,366,367,368,369,169,170,171,172,173,174,370,175,176,177,178,179,180,371,181,182,372],"tindex":"bc206a92-82c4-11e5-bdfd-bb65ee21745f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"newOrExistingEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.setEdgeRef(int, int)"},"status":-1},{"failures":[373,357],"tindex":"bc206a93-82c4-11e5-bdfd-65092567cbfa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:527","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.(com.graphhopper.routing.util.AbstractFlagEncoder.parseDuration(com.graphhopper.reader.OSMWay.getTag(\"duration\"))) / 60.0"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"bc201c6a-82c4-11e5-bdfd-ef89f2d607b9","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.cleanUp"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_goFurther(int).t1","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_removeEdges(com.graphhopper.util.EdgeExplorer,com.graphhopper.routing.util.FlagEncoder,gnu.trove.list.TIntList,int).t1","com.graphhopper.coll.GHBitSetImpl_boolean_contains(int).b","com.graphhopper.coll.GHBitSetImpl_com.graphhopper.coll.GHBitSetImpl(int).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_removeEdges(com.graphhopper.util.EdgeExplorer,com.graphhopper.routing.util.FlagEncoder,gnu.trove.list.TIntList,int).l2","com.graphhopper.storage.GraphHopperStorage_void_optimize().t2","com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter_com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter(com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.util.SimpleIntDeque_com.graphhopper.util.SimpleIntDeque(int,float).e1","com.graphhopper.util.SimpleIntDeque_com.graphhopper.util.SimpleIntDeque(int,float).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_com.graphhopper.routing.util.PrepareRoutingSubnetworks_setMinOneWayNetworkSize(int).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_getMaxSubnetworks().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_java.util.List_findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_boolean_detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer,int).e1","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_goFurther(int).t3","com.graphhopper.util.SimpleIntDeque_int_pop().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_doWork().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_doWork().e1","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_doWork().e2","com.graphhopper.routing.util.PrepareRoutingSubnetworks_com.graphhopper.routing.util.PrepareRoutingSubnetworks(com.graphhopper.storage.GraphHopperStorage,java.util.Collection).b","com.graphhopper.routing.util.EdgeFilter$1_boolean_accept(com.graphhopper.util.EdgeIteratorState).b","com.graphhopper.storage.BaseGraph$EdgeIterable_boolean_next().e2","com.graphhopper.routing.util.PrepareRoutingSubnetworks_java.util.List_findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter).t1","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_checkAdjacent(com.graphhopper.util.EdgeIteratorState).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_java.util.List_findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter).l4","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_markNodesRemovedIfUnreachable().l2","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_markNodesRemovedIfUnreachable().b","com.graphhopper.storage.BaseGraph_com.graphhopper.util.EdgeExplorer_createEdgeExplorer().b","com.graphhopper.util.BreadthFirstSearch_void_start(com.graphhopper.util.EdgeExplorer,int).b","com.graphhopper.routing.util.EncodingManager_java.util.List_fetchEdgeEncoders().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_doWork().l3","com.graphhopper.util.BreadthFirstSearch_void_start(com.graphhopper.util.EdgeExplorer,int).e2","com.graphhopper.util.BreadthFirstSearch_void_start(com.graphhopper.util.EdgeExplorer,int).e1","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_checkAdjacent(com.graphhopper.util.EdgeIteratorState).t1","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_boolean_isBackward(com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.storage.GraphHopperStorage_boolean_isFrozen().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_checkAdjacent(com.graphhopper.util.EdgeIteratorState).t2","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_long_getDirectFlags().e1","com.graphhopper.coll.GHBitSetImpl_void_add(int).b","com.graphhopper.util.BreadthFirstSearch_void_start(com.graphhopper.util.EdgeExplorer,int).t2","com.graphhopper.routing.util.PrepareRoutingSubnetworks_com.graphhopper.routing.util.PrepareRoutingSubnetworks_setMinNetworkSize(int).b","com.graphhopper.util.BreadthFirstSearch_void_start(com.graphhopper.util.EdgeExplorer,int).l3","com.graphhopper.GraphHopper_void_cleanUp().b","com.graphhopper.util.BreadthFirstSearch_void_start(com.graphhopper.util.EdgeExplorer,int).l4","com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter_com.graphhopper.routing.util.FlagEncoder_getEncoder().b","com.graphhopper.util.SimpleIntDeque_com.graphhopper.util.SimpleIntDeque().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_goFurther(int).e1","com.graphhopper.routing.util.DefaultEdgeFilter_com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_goFurther(int).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_boolean_detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer,int).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).t2","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).t1","com.graphhopper.storage.BaseGraph_com.graphhopper.coll.GHBitSet_getRemovedNodes().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).l5","com.graphhopper.util.SimpleIntDeque_void_push(int).e1","com.graphhopper.util.SimpleIntDeque_void_push(int).b","com.graphhopper.storage.GraphHopperStorage_void_optimize().e1","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_removeEdges(com.graphhopper.util.EdgeExplorer,com.graphhopper.routing.util.FlagEncoder,gnu.trove.list.TIntList,int).b","com.graphhopper.util.SimpleIntDeque_int_pop().e1","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_goFurther(int).e3","com.graphhopper.routing.util.PrepareRoutingSubnetworks_boolean_detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer,int).t1","com.graphhopper.routing.util.PrepareRoutingSubnetworks_boolean_detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer,int).l3","com.graphhopper.routing.util.AbstractFlagEncoder_boolean_isBackward(long).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_boolean_detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer,int).l2","com.graphhopper.storage.BaseGraph$CommonEdgeIterator_long_getFlags().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).e4","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).e3","com.graphhopper.storage.GraphHopperStorage_com.graphhopper.util.EdgeExplorer_createEdgeExplorer().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).e2","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).e1","com.graphhopper.util.SimpleIntDeque_boolean_isEmpty().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).b","com.graphhopper.storage.GraphHopperStorage_void_optimize().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_com.graphhopper.coll.GHBitSet_createBitSet().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_markNodesRemovedIfUnreachable().e1","com.graphhopper.routing.util.PrepareRoutingSubnetworks_java.util.List_findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter).e1","com.graphhopper.coll.GHBitSetImpl_int_getCardinality().b","com.graphhopper.storage.BaseGraph_com.graphhopper.coll.GHBitSet_getRemovedNodes().t1","com.graphhopper.storage.BaseGraph$AllEdgeIterator_int_getMaxId().b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_goFurther(int).t1","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_removeEdges(com.graphhopper.util.EdgeExplorer,com.graphhopper.routing.util.FlagEncoder,gnu.trove.list.TIntList,int).t1","com.graphhopper.coll.GHBitSetImpl_boolean_contains(int).b","com.graphhopper.coll.GHBitSetImpl_com.graphhopper.coll.GHBitSetImpl(int).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_removeEdges(com.graphhopper.util.EdgeExplorer,com.graphhopper.routing.util.FlagEncoder,gnu.trove.list.TIntList,int).l2","com.graphhopper.storage.GraphHopperStorage_void_optimize().t2","com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter_com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter(com.graphhopper.routing.util.FlagEncoder).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_com.graphhopper.routing.util.PrepareRoutingSubnetworks_setMinOneWayNetworkSize(int).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_getMaxSubnetworks().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_boolean_detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer,int).e1","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_goFurther(int).t3","com.graphhopper.routing.util.PrepareRoutingSubnetworks_java.util.List_findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_doWork().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_doWork().e1","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_doWork().e2","com.graphhopper.routing.util.PrepareRoutingSubnetworks_com.graphhopper.routing.util.PrepareRoutingSubnetworks(com.graphhopper.storage.GraphHopperStorage,java.util.Collection).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_java.util.List_findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter).t1","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_checkAdjacent(com.graphhopper.util.EdgeIteratorState).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_java.util.List_findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter).l4","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_markNodesRemovedIfUnreachable().l2","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_markNodesRemovedIfUnreachable().b","com.graphhopper.routing.util.EncodingManager_java.util.List_fetchEdgeEncoders().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_doWork().l3","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_checkAdjacent(com.graphhopper.util.EdgeIteratorState).t1","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_checkAdjacent(com.graphhopper.util.EdgeIteratorState).t2","com.graphhopper.storage.GraphHopperStorage_boolean_isFrozen().b","com.graphhopper.coll.GHBitSetImpl_void_add(int).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_com.graphhopper.routing.util.PrepareRoutingSubnetworks_setMinNetworkSize(int).b","com.graphhopper.GraphHopper_void_cleanUp().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter_com.graphhopper.routing.util.FlagEncoder_getEncoder().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_goFurther(int).e1","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_goFurther(int).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_boolean_detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer,int).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).t2","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).t1","com.graphhopper.storage.BaseGraph_com.graphhopper.coll.GHBitSet_getRemovedNodes().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).l5","com.graphhopper.storage.GraphHopperStorage_void_optimize().e1","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_removeEdges(com.graphhopper.util.EdgeExplorer,com.graphhopper.routing.util.FlagEncoder,gnu.trove.list.TIntList,int).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_boolean_detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer,int).t1","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_boolean_goFurther(int).e3","com.graphhopper.routing.util.PrepareRoutingSubnetworks_boolean_detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer,int).l3","com.graphhopper.routing.util.PrepareRoutingSubnetworks_boolean_detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer,int).l2","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).e4","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).e3","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).e2","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).e1","com.graphhopper.storage.GraphHopperStorage_void_optimize().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_int_keepLargeNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter,java.util.List).b","com.graphhopper.routing.util.PrepareRoutingSubnetworks$1_com.graphhopper.coll.GHBitSet_createBitSet().b","com.graphhopper.routing.util.PrepareRoutingSubnetworks_void_markNodesRemovedIfUnreachable().e1","com.graphhopper.routing.util.PrepareRoutingSubnetworks_java.util.List_findSubnetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks$PrepEdgeFilter).e1","com.graphhopper.coll.GHBitSetImpl_int_getCardinality().b","com.graphhopper.storage.BaseGraph_com.graphhopper.coll.GHBitSet_getRemovedNodes().t1"]},"type":"branch"}]},{"transformation":"bc201c66-82c4-11e5-bdfd-050c1b58472a","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop"]},"type":"staticDiff"}]}]}