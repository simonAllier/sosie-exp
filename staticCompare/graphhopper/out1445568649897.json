{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":37,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":165,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":178,"com.graphhopper.reader.OSMReaderTest.testFerry":326,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":304,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":305,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":194,"com.graphhopper.routing.QueryGraphTest.testOneWay":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":217,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":314,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":161,"com.graphhopper.reader.OSMReaderTest.testWithBounds":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":99,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":185,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":47,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":131,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":306,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":55,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":218,"com.graphhopper.GraphHopperTest.testPrepare":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":43,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":259,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":19,"com.graphhopper.util.BitUtilLittleTest.testToBitString":345,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":274,"com.graphhopper.util.InstructionListTest.testWayList":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":28,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":294,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":147,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":207,"com.graphhopper.GraphHopperAPITest.testDisconnected179":344,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":182,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":114,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":25,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":162,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":70,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":342,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":77,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":124,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":201,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":317,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":116,"com.graphhopper.GraphHopperTest.testLoadOSM":320,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":134,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":163,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":196,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":265,"com.graphhopper.reader.OSMReaderTest.testSort":329,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":76,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":213,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":52,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":236,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":88,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":346,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":41,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":285,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":325,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":61,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":235,"com.graphhopper.routing.PathTest.testWayList":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":227,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":18,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":160,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":275,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":210,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":96,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":145,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":234,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":69,"com.graphhopper.util.GHUtilityTest.testSort":301,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":231,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":125,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":244,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":109,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":186,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":287,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":84,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":86,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":195,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":100,"com.graphhopper.GraphHopperAPITest.testLoad":343,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":319,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":106,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":191,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":243,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":90,"com.graphhopper.reader.OSMReaderTest.testBarriers":330,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":288,"com.graphhopper.routing.PathTest.testFound":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":280,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":324,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":24,"com.graphhopper.util.GHUtilityTest.testCopy":300,"com.graphhopper.routing.PathTest.testFindInstruction":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":91,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":102,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":279,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":250,"com.graphhopper.util.InstructionListTest.testEmptyList":293,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":177,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":272,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":118,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":260,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":104,"com.graphhopper.reader.PrinctonReaderTest.testRead":341,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":190,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":200,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":222,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":289,"com.graphhopper.util.InstructionListTest.testWayList2":296,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":137,"com.graphhopper.reader.OSMReaderTest.testFoot":327,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":168,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":232,"com.graphhopper.reader.OSMReaderTest.testOneWay":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":123,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":211,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":237,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":202,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":269,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":101,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":148,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":249,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":331,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":46,"com.graphhopper.routing.PathBidirRefTest.testExtract":59,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":156,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":303,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":313,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":80,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":166,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":126,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":312,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":143,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":311,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":310,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":175,"com.graphhopper.util.GHUtilityTest.testSort2":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":34,"com.graphhopper.reader.OSMReaderTest.testMain":328,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":230,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":188,"com.graphhopper.routing.PathBidirRefTest.testExtract2":60,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":224,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":172,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":146,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":128,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":113,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":282,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":164,"com.graphhopper.storage.GraphHopperStorageTest.testClone":245,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":233,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":220,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":255,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":262,"com.graphhopper.GraphHopperTest.testFootAndCar":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":193,"com.graphhopper.routing.PathTest.testTime":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":173,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":219,"com.graphhopper.util.GHUtilityTest.testSortDirected":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":209,"com.graphhopper.GraphHopperTest.testPrepareOnly":307,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":180,"com.graphhopper.GraphHopperTest.testVia":315,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":29,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":336,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":130,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":189,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":266,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":297,"com.graphhopper.GraphHopperTest.testFootOnly":323,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":136,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":334,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":138,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":65,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":208,"com.graphhopper.util.InstructionListTest.testFind":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":199},"transformations":[{"failures":[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],"tindex":"de4541db-7930-11e5-9e01-e1998776cb84","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"variableMap":{"flags":"bytePos","mask":"bytePos"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:230","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"status":-1},{"failures":[315,316,317,319,320,322,323,328,329,330,331,332,333,334,337,338],"tindex":"de4568ec-7930-11e5-9e01-cd7f825cf797","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"status":-1},{"failures":[],"tindex":"de458ffd-7930-11e5-9e01-bf741c3c3647","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"variableMap":{"y1":"fromDist","x1":"fromDist","y2":"fromDist","x2":"fromDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:117","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setQueryDistance(double)"},"status":0},{"failures":[33,71,73,74,76,77,130,132,133,143,149,150,151,159,161,162,172,290,291,306,307,314,316,317,318,319,320,321,322,323,324,327,328,329,331,332,333,334,337,338,340],"tindex":"de458ffe-7930-11e5-9e01-f9beb0abde42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"connectedId","y2":"connectedId","x1":"connectedId","x2":"connectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:49","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-1},{"failures":[24,27,32,33,36,42,315,316,319,320],"tindex":"de458fff-7930-11e5-9e01-1b42a9b187cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:174","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"de459000-7930-11e5-9e01-e5a1a0f40b7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:482","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"low":"turnCostsCount","guess":"turnCostsCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:114","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(4)"},"status":0},{"failures":[345,346],"tindex":"de459001-7930-11e5-9e01-8fe35e507903","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:127","type":"CtOperatorAssignmentImpl","sourcecode":"byte <<= 1"},"status":-1},{"failures":[],"tindex":"de459002-7930-11e5-9e01-9f4cc1fbe688","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:70","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.LinearKeyAlgo.setBounds(-180, 180, -90, 90)"},"status":0},{"failures":[],"tindex":"de459003-7930-11e5-9e01-0dc112055090","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:480","type":"CtIfImpl","sourcecode":"if (long < long) {\n    int = int;\n} else {\n    int = int;\n}"},"variableMap":{"high":"i","low":"newSegments","guess":"newSegments","guessedKey":"longSegmentSize","key":"bufferStart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:151","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    java.util.List<java.nio.ByteBuffer>.add(com.graphhopper.storage.MMapDataAccess.newByteBuffer(long, long));\n    long += long;\n}"},"status":0},{"failures":[],"tindex":"de45b714-7930-11e5-9e01-4520a16133b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:497","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 100))) / 100.0"},"variableMap":{"value":"distance"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:67","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.Weighting.getMinWeight(double)"},"status":0},{"failures":[],"tindex":"de45b715-7930-11e5-9e01-01ee9cc3ac02","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"current","index":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:57","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[],"tindex":"de45b716-7930-11e5-9e01-950a59b4ad7d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:70","type":"CtIfImpl","sourcecode":"if (!(java.util.zip.Inflater.finished())) {\n    throw new java.lang.RuntimeException(\"PBF blob contains incomplete compressed data.\");\n} "},"variableMap":{"inflater":"decompressor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:201","type":"CtInvocationImpl","sourcecode":"java.util.zip.Inflater.setInput(byte[])"},"status":-2},{"failures":[],"tindex":"de45b717-7930-11e5-9e01-b9b3c3af540a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:62","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"de45b718-7930-11e5-9e01-bfecfdd04036","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"directionBitMask","flags":"directionBitMask","dir":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:239","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"barrier\", java.util.Set<java.lang.String>)) {\n    boolean boolean = false;\n    if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n        boolean = true;\n    \n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        if ((!boolean) && (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>)))\n            return 0;\n        \n        if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>))\n            return long;\n        \n    }\n    if (boolean)\n        return long;\n    \n} "},"status":-2},{"failures":[],"tindex":"de45b719-7930-11e5-9e01-09f1e5302655","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:84","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"status":-2},{"failures":[],"tindex":"de45de2a-7930-11e5-9e01-4f000a1a71e9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:151","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError(\"Empty edge cannot happen\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:946","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Call load or importOrLoad before routing\")"},"status":-2},{"failures":[],"tindex":"de45de2b-7930-11e5-9e01-db82a61e8b2b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:212","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.BaseGraph.nextEdgeId(), int, int)"},"status":-2},{"failures":[],"tindex":"de45de2c-7930-11e5-9e01-050c2367ff9c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:270","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"variableMap":{"periodSW":"neighborSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:306","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"status":-2},{"failures":[],"tindex":"de45de2d-7930-11e5-9e01-ddc58eab6f6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:175","type":"CtWhileImpl","sourcecode":"while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n    if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n        final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n        boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n        if (boolean) {\n            TLongList TLongList = com.graphhopper.reader.OSMWay.getNodes();\n            int int = com.graphhopper.reader.TLongList.size();\n            for (int int = 0 ; int < int ; int++) {\n                com.graphhopper.reader.OSMReader.prepareHighwayNode(com.graphhopper.reader.TLongList.get(int));\n            }\n            if (((++long) % 5000000) == 0) {\n                com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n            } \n        } \n    } \n    if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n        final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n        if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n            com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n        \n        if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n            com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n        \n        if (((++long) % 50000) == 0) {\n            com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"de45de2e-7930-11e5-9e01-d99c96bdfbe7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:69","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Dijkstra.runAlgo()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}