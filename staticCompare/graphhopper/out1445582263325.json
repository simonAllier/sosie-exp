{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":65,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":24,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":40,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":57,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":15,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":18,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":36,"com.graphhopper.GraphHopperTest.testPrepare":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":76,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":5,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":11,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":13,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":63,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":69,"com.graphhopper.GraphHopperTest.testVia":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":58,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":50,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":30,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":51,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":4,"com.graphhopper.GraphHopperTest.testLoadOSM":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":47,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":55},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"90815e87-7950-11e5-bc9c-5361eedb3f9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:101","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"retBucket":"toSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"90815e88-7950-11e5-bc9c-7faffe2b84a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:431","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"setWayGeometry\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:111","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getEdge();\n    long long = com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(int);\n    if ((((int != int) && ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))) && (long != (this.long))) || ((((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type)) && (long == (this.long))) && (long >= 0))) {\n        final com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = new com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry();\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long = com.graphhopper.routing.util.TurnCostEncoder.getTurnFlags(true, 0);\n        java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.add(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        if ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))\n            break;\n        \n    } \n}"},"status":-2},{"failures":[],"tindex":"90818599-7950-11e5-bc9c-3191e4f94d2a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"com.graphhopper.util.Instruction.TURN_SHARP_RIGHT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:263","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.Instruction.int)) {\n    java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"continue\") : com.graphhopper.util.Translation.tr(\"continue_onto\", java.lang.String);\n} else {\n    java.lang.String java.lang.String = null;\n    switch (int) {\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_left\");\n            break;\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_left\");\n            break;\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_left\");\n            break;\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_right\");\n            break;\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_right\");\n            break;\n        case com.graphhopper.util.Instruction.int :\n            java.lang.String = com.graphhopper.util.Translation.tr(\"turn_sharp_right\");\n            break;\n    }\n    if (java.lang.String == null)\n        throw new java.lang.IllegalStateException((\"Turn indication not found \" + int));\n    \n    java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? java.lang.String : com.graphhopper.util.Translation.tr(\"turn_onto\", java.lang.String, java.lang.String);\n}"},"status":-2},{"failures":[47,48,49,50,51],"tindex":"9081859a-7950-11e5-bc9c-b9b949f11882","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:120","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    double = double;\n} "},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"9081859b-7950-11e5-bc9c-9bdf6383de77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"avoidSpeedLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:532","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double > 0) && (double <= 30))) {\n    if (double < (int)) {\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n} else {\n    if ((java.util.Set<java.lang.String>.contains(java.lang.String)) || ((double >= (int)) && (!(\"track\".equals(java.lang.String))))) {\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n            java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n        \n    } \n}"},"status":-1},{"failures":[],"tindex":"9081859c-7950-11e5-bc9c-9bb05256890a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"chEnabled"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:329","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":-2},{"failures":[],"tindex":"9081acad-7950-11e5-bc9c-4901c2cce056","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"currLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:326","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"9081acae-7950-11e5-bc9c-7d30c0f7d155","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:976","type":"CtAssignmentImpl","sourcecode":"this.int = this.int = int"},"variableMap":{"edgeId":"lineNo","nextEdgeId":"lineNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:60","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"9081acaf-7950-11e5-bc9c-e7310654174c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"MAGIC_INT","nextEdgeOther":"MAGIC_INT","nodeOther":"MAGIC_INT","nextEdge":"MAGIC_INT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:300","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-2},{"failures":[],"tindex":"9081acb0-7950-11e5-bc9c-09f6424885ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:685","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.storage.DataAccess.loadExisting())) || (!(com.graphhopper.storage.DataAccess.loadExisting())))\n    return false;\n"},"variableMap":{"shortcuts":"da","nodesCH":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:49","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.DataAccess.loadExisting()))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"9081acb1-7950-11e5-bc9c-8de70b58c4f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:621","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"status":-2},{"failures":[],"tindex":"9081acb2-7950-11e5-bc9c-1fdc69a11d4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:96","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.TurnCostEncoder.getTurnCost(long)"},"status":-2},{"failures":[],"tindex":"9081acb3-7950-11e5-bc9c-675ed3325513","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"variableMap":{"id":"maxRegionSearch"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:591","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"index.maxRegionSearch\", int)"},"status":-2},{"failures":[],"tindex":"9081d3c4-7950-11e5-bc9c-5310ae45aee2","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"variableMap":{"flags":"flags","reverseSpeedEncoder":"reverseSpeedEncoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"9081d3c5-7950-11e5-bc9c-8b47e8a368ef","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:159","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"9081d3c6-7950-11e5-bc9c-210c9fa0c08d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:829","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.PillarInfo.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"9081d3c7-7950-11e5-bc9c-6d00537a576f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"com.graphhopper.storage.index.LocationIndexTree.START_POINTER","length":"com.graphhopper.storage.index.LocationIndexTree.START_POINTER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:321","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.store(com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.com.graphhopper.storage.index.LocationIndexTree.InMemTreeEntry, com.graphhopper.storage.index.LocationIndexTree.int);\n    com.graphhopper.storage.index.LocationIndexTree.flush();\n} catch (java.lang.Exception ex) {\n    throw new java.lang.IllegalStateException((\"Problem while storing location index. \" + (com.graphhopper.util.Helper.getMemInfo())) , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"9081d3c8-7950-11e5-bc9c-9b490cfa1294","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:204","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(')')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:275","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"status":-2},{"failures":[],"tindex":"9081d3c9-7950-11e5-bc9c-4db3e27fed34","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:659","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"variableMap":{"S_SKIP_EDGE1":"low","S_SKIP_EDGE2":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:404","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[],"tindex":"9081d3ca-7950-11e5-bc9c-8fd6c9212502","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:77","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}