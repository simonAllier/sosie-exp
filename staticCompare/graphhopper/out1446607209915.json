{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":139,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":132,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":144,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":61,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":189,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":73,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":57,"com.graphhopper.reader.OSMReaderTest.testWithBounds":24,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":135,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":46,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":190,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":173,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":164,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":167,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":29,"com.graphhopper.util.BitUtilLittleTest.testToBitString":52,"com.graphhopper.util.InstructionListTest.testWayList":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":30,"com.graphhopper.GraphHopperAPITest.testDisconnected179":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":105,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":195,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":154,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":58,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":1,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":174,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":65,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":59,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":159,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":23,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":90,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":82,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":166,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":201,"com.graphhopper.routing.PathTest.testWayList":146,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":124,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":86,"com.graphhopper.coll.OSMIDMapTest.testGet2":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":148,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":187,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":87,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":198,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":161,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":62,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":151,"com.graphhopper.coll.OSMIDMapTest.testGetLong":185,"com.graphhopper.coll.GHTreeMapComposedTest.testInsert":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":108,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":126,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":200,"com.graphhopper.GraphHopperAPITest.testLoad":181,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":8,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":113,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":196,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":127,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":71,"com.graphhopper.util.GHUtilityTest.testCopy":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":153,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":171,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":104,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":38,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":136,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":128,"com.graphhopper.util.InstructionListTest.testWayList2":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":191,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":66,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":63,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":64,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":103,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":91,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":37,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":165,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":44,"com.graphhopper.coll.OSMIDMapTest.testGet":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":40,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":169,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":184,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":180,"com.graphhopper.storage.RAMDataAccessTest.testCopy":129,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":175,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":188,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":85,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":98,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":177,"com.graphhopper.storage.RAMDataAccessTest.testSegments":133,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":162,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":118,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":88,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":72,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":36,"com.graphhopper.storage.StorablePropertiesTest.testStore":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":199,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":60,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":114,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":48,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":131,"com.graphhopper.util.BitUtilLittleTest.testToFloat":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":68,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":158,"com.graphhopper.GraphHopperTest.testPrepareOnly":42,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":157,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":84,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":111,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":0,"com.graphhopper.GraphHopperTest.testFootOnly":43,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":47,"com.graphhopper.util.BitUtilLittleTest.testToInt":54,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":79,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":119},"transformations":[{"failures":[],"tindex":"f4495ed1-82a2-11e5-9b04-65895990a833","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1116","type":"CtIfImpl","sourcecode":"if (!((java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue()) instanceof com.graphhopper.routing.ch.PrepareContractionHierarchies))\n    throw new java.lang.IllegalStateException((\"RoutingAlgorithmFactory is not suited for CH preparation \" + (java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue())));\n"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1119","type":"CtInvocationImpl","sourcecode":"((com.graphhopper.routing.ch.PrepareContractionHierarchies)(java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue())).doWork()"},"status":0},{"failures":[],"tindex":"f44985e2-82a2-11e5-9b04-57ad97c5ef9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:45","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:240","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[0],"tindex":"f449acf3-82a2-11e5-9b04-79a5e3f46966","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:250","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    java.lang.StringBuilder.append(\"<gh:azimuth>\").append(com.graphhopper.util.Helper.round2(double)).append(\"<\/gh:azimuth>\");\n"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"f449acf4-82a2-11e5-9b04-237e38aaf97e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"relBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:580","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"f449acf5-82a2-11e5-9b04-4db600079148","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:539","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.elevation.provider\", \"noop\").toLowerCase()"},"status":-2},{"failures":[],"tindex":"f449d406-82a2-11e5-9b04-a3af8cc27d02","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.Circle:172","type":"CtIfImpl","sourcecode":"if (double < 0) {\n    return false;\n} "},"variableMap":{"res":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.GHPoint3D:66","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double)) && (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))) && (com.graphhopper.util.NumHelper.equalsEps(double, com.graphhopper.util.shapes.GHPoint3D.double))"},"status":-2},{"failures":[],"tindex":"f449d407-82a2-11e5-9b04-abc6dbe8f8d9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:184","type":"CtIfImpl","sourcecode":"if (double > 0.1) {\n    double = double;\n    double = double;\n} else if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"incEleSum":"lon","eleDelta":"lat","incDist2DSum":"lat","decEleSum":"lon","fullDist2D":"lat","decDist2DSum":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:654","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NodeAccess.setNode(int, double, double)"},"status":0},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,5,8,9,41],"tindex":"f449d408-82a2-11e5-9b04-9d83f7f38cc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:326","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"variableMap":{"nodeCount":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:64","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.BitUtil.toLong(int, int)"},"status":-1},{"failures":[2,42,3,4,5,6,7,8,9,10,11,43,12,44,45,46,47,48,13,14,15,16,17,18,19,20,22,23,24,25,26,27],"tindex":"f449fb19-82a2-11e5-9b04-91bf8f9f8df1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:191","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Helper.idealIntArraySize(((int) + 1))"},"variableMap":{"mSize":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int = int + int"},"status":-1},{"failures":[49],"tindex":"f449fb1a-82a2-11e5-9b04-9198bacaecf8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"-1\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle:forward\", \"no\"))"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:302","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,29,149,150,151,152,153,154,155,156,30,157,158,159,160,161,162,163,164,31,165,32,166,33,167,168,34,169,35,170,171,36,172,173,40,174,42,175,176,177,178,179,180,4,5,6,7,8,9,11,43,181,182,183,184,185,186,13,15,16,17,18,19,20,21,22,23,24,25,27],"tindex":"f449fb1b-82a2-11e5-9b04-2f9e6db11748","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >>> 16))"},"variableMap":{"offset":"value","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-1},{"failures":[56,187,57,58,59,60,61,188,62,63,64,65,66,67,68,189,69,70,71,72,74,190,75,76,77,78,79,191,80,81,82,83,84,85,86,192,87,88,156,160,161,164,2,42,175,176,177,178,179,180,3,4,5,6,7,8,9,10,11,43,12,181,193,13,14,15,16,17,18,19,20,21,22,23,24,25,27],"tindex":"f44a222c-82a2-11e5-9b04-614be8fb07e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:170","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.initEntries(gnu.trove.list.array.TIntArrayList.toArray())"},"status":-1},{"failures":[194,195,196],"tindex":"f44a222d-82a2-11e5-9b04-7745fe7cdb3a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:130","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.TIntArrayListWithCap.reset()"},"variableMap":{"changedNodes":"component"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:126","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.trimToSize()"},"status":-1},{"failures":[],"tindex":"f44a493e-82a2-11e5-9b04-89a553c94c1a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1))"},"variableMap":{"pointList":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:153","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-2},{"failures":[],"tindex":"f44a493f-82a2-11e5-9b04-3715f2b299a3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:317","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setSkippedEdges\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:122","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n    double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n    double = float + double;\n    if (com.graphhopper.routing.AStar.AStarEdge == null) {\n        com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n        gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    } else {\n        assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.routing.AStar.AStarEdge.double = double;\n        com.graphhopper.routing.AStar.AStarEdge.double = float;\n    }\n    com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n} "},"status":-2},{"failures":[42,3,4,5,8,9,10,43],"tindex":"f44a4940-82a2-11e5-9b04-2dc026cbb0fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:650","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.flush()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.createCHPreparations()"},"status":-1},{"failures":[197,100,198,199,110,114,119,200,42,8,9,10,11],"tindex":"f44a7051-82a2-11e5-9b04-75ee92416954","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:102","type":"CtTryImpl","sourcecode":"try {\n    while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n        if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n            continue;\n        } \n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n            continue;\n        } \n        int int = java.lang.String.indexOf(\"=\");\n        if (int < 0) {\n            com.graphhopper.util.Helper.org.slf4j.Logger.warn((\"Skipping configuration at line:\" + java.lang.String));\n            continue;\n        } \n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n    }\n} finally {\n    java.io.BufferedReader.close();\n}"},"status":-1},{"failures":[201,20],"tindex":"f44a7052-82a2-11e5-9b04-a5aa40631435","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"edgeIdFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int"},"status":-1},{"failures":[],"tindex":"f44a7053-82a2-11e5-9b04-7732316301d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:257","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"f44a7054-82a2-11e5-9b04-ffa10c63045e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:106","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"f4495ed1-82a2-11e5-9b04-65895990a833","diffs":[{"methodsDiff":{"delete":["java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue","com.graphhopper.routing.ch.PrepareContractionHierarchies.doWork"]},"type":"staticDiff"}]}]}