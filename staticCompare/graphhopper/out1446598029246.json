{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":89,"com.graphhopper.reader.OSMReaderTest.testFerry":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":60,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":119,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":121,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":124,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":99,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":63,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":13,"com.graphhopper.reader.OSMReaderTest.testWithBounds":37,"com.graphhopper.reader.PrinctonReaderTest.testRead":117,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":103,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":8,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":125,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":72,"com.graphhopper.GraphHopperTest.testPrepare":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":95,"com.graphhopper.reader.OSMReaderTest.testFoot":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":105,"com.graphhopper.util.InstructionListTest.testWayList":58,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":11,"com.graphhopper.reader.OSMReaderTest.testOneWay":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":108,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":102,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":101,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":122,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":97,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":80,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":118,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":9,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":10,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":87,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":85,"com.graphhopper.GraphHopperTest.testLoadOSM":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":94,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":100,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":26,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":44,"com.graphhopper.reader.OSMReaderTest.testSort":12,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":42,"com.graphhopper.util.GHUtilityTest.testSort2":14,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":36,"com.graphhopper.reader.OSMReaderTest.testMain":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":113,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":74,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":65,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":27,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":84,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":82,"com.graphhopper.storage.GraphHopperStorageTest.testClone":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":116,"com.graphhopper.GraphHopperTest.testFootAndCar":49,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":79,"com.graphhopper.util.GHUtilityTest.testSort":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":3,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":0,"com.graphhopper.util.GHUtilityTest.testSortDirected":17,"com.graphhopper.GraphHopperTest.testPrepareOnly":120,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":24,"com.graphhopper.GraphHopperTest.testVia":47,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":52,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":55,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":35,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":123,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":50,"com.graphhopper.GraphHopperTest.testFootOnly":53,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":64,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":34,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":78,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":126,"com.graphhopper.reader.OSMReaderTest.testBarriers":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":4,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":54,"com.graphhopper.util.GHUtilityTest.testCopy":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":56},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"942dd7cf-828d-11e5-b074-1515576d88de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"E_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:253","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireEdgeField())\n    int = com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[],"tindex":"942dfee0-828d-11e5-b074-25cd3d917ab0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"variableMap":{"y1":"from","y2":"skippedEdge1","x1":"skippedEdge2","x2":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:83","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\nelse\n    com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)));\n"},"status":-2},{"failures":[],"tindex":"942dfee1-828d-11e5-b074-0b40d382fa26","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:234","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalStateException(\"at least one entry has to be != null, which should have happened in initIndex\");\n} "},"variableMap":{"initializedCounter":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:164","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = (java.io.RandomAccessFile.read(byte[])) / 4;\n    int[] int[] = new int[int];\n    for (int int = 0 ; int < int ; int++) {\n        int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4));\n    }\n    int[][][int] = int[];\n}"},"status":0},{"failures":[19,20,21,22,23,24,25,26],"tindex":"942e25f2-828d-11e5-b074-5ba0c93470a9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIterator:45","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:103","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-1},{"failures":[27],"tindex":"942e25f3-828d-11e5-b074-7fbb501d3d29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:489","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:502","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMTurnRelation.getRestrictionAsEntries(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer, com.graphhopper.util.EdgeExplorer, this)"},"status":-1},{"failures":[],"tindex":"942e9b24-828d-11e5-b074-edf82edbafba","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:299","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(false, \"getFlags\")"},"variableMap":{"this":"adjEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:619","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"942e9b25-828d-11e5-b074-19452eeab46a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"variableMap":{"mmapDA":"shortcuts","da":"shortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:703","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-2},{"failures":[],"tindex":"942e9b26-828d-11e5-b074-2f04fcee7444","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"type":"com.graphhopper.storage.DAType.MMAP","defaultType":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:168","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[28,29,30,12,31,32,33,27,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,18,49,50,51,52,53,54],"tindex":"942e9b27-828d-11e5-b074-7954e71fb9e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.createCHPreparations()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1107","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.GraphHopper.ensureWriteAccess();\n    com.graphhopper.storage.GraphHopperStorage.freeze();\n    int int = 0;\n    for (java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory> java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory> : java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.entrySet()) {\n        org.slf4j.Logger.info(((((((((++int) + \"/\") + (java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.entrySet().size())) + \" calling prepare.doWork for \") + (java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getKey())) + \" ... (\") + (com.graphhopper.util.Helper.getMemInfo())) + \")\"));\n        if (!((java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue()) instanceof com.graphhopper.routing.ch.PrepareContractionHierarchies))\n            throw new java.lang.IllegalStateException((\"RoutingAlgorithmFactory is not suited for CH preparation \" + (java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue())));\n        \n        ((com.graphhopper.routing.ch.PrepareContractionHierarchies)(java.util.Map.Entry<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.getValue())).doWork();\n    }\n    com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"prepare.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()));\n} "},"status":-1},{"failures":[],"tindex":"942ec238-828d-11e5-b074-bb5d4278896d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:303","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"variableMap":{"dijkstraSW":"dijkstraSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:622","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[55,56,57,27],"tindex":"942ec239-828d-11e5-b074-132a5dfde678","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:248","type":"CtReturnImpl","sourcecode":"return int * ((4 + 4) + 4)"},"variableMap":{"factor":"NO_TURN_ENTRY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:225","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"942ec23a-828d-11e5-b074-cbd5f1c14b9d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"variableMap":{"i":"oldValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:95","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHLongIntBTree.ReturnValue.int"},"status":-2},{"failures":[],"tindex":"942ec23b-828d-11e5-b074-916e4b0f9722","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:593","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.CHGraphImpl.double))\n    long = com.graphhopper.storage.CHGraphImpl.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.CHGraphImpl.double)))) << 2;\n"},"variableMap":{"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT_LONG":"osmId","weight":"lat","weightLong":"osmId","com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT":"lat","com.graphhopper.storage.CHGraphImpl.WEIGHT_FACTOR":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:835","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.reader.PillarInfo.setNode(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double);\n    int = com.graphhopper.reader.OSMReader.addTowerNode(long, double, double, double);\n} else {\n    if (com.graphhopper.util.PointList.is3D())\n        com.graphhopper.util.PointList.add(double, double, double);\n    else\n        com.graphhopper.util.PointList.add(double, double);\n    \n}"},"status":-2},{"failures":[12,18],"tindex":"942ec23c-828d-11e5-b074-f76597bf0fd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:257","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AllEdgesIterator.copyPropertiesTo(com.graphhopper.storage.Graph.edge(int, int))"},"status":-1},{"failures":[58,59],"tindex":"942ee94d-828d-11e5-b074-57331aa2606f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:276","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"942ee94e-828d-11e5-b074-1d7fe1a7d178","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"length","currentIndex":"length","bucketSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:205","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[][].int) ; int++) {\n    int[] int[] = int[][][int];\n    int int = int[].int;\n    byte[] byte[] = new byte[int * 4];\n    for (int int = 0 ; int < int ; int++) {\n        com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4));\n    }\n    java.io.RandomAccessFile.write(byte[]);\n}"},"status":-2},{"failures":[],"tindex":"942ee94f-828d-11e5-b074-c5ee9431ab1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:889","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-2},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,29,39,119,15],"tindex":"942ee950-828d-11e5-b074-015cba51ba0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[28,29,30,12,31,32,33,27,34,35,36,37,38,39,40,120,121,47,48,18,49,50,51,122,52,53,54],"tindex":"942ee951-828d-11e5-b074-95cf3b470381","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:672","type":"CtIfImpl","sourcecode":"if ((double != 0) || (java.lang.Double.isInfinite(double)))\n    throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n"},"variableMap":{"costs":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:651","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    com.graphhopper.storage.NodeAccess.setNode(int, double, double, double);\nelse\n    com.graphhopper.storage.NodeAccess.setNode(int, double, double);\n"},"status":-1},{"failures":[123,124,125,126],"tindex":"942ee952-828d-11e5-b074-fd9e046951e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:307","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.close()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"942ec238-828d-11e5-b074-bb5d4278896d","diffs":[{"branches":{"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_start().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.start"]},"type":"staticDiff"}]}]}