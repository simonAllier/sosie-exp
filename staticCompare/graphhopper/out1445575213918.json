{"failureDictionary":{"com.graphhopper.util.InstructionListTest.testWayList":0,"com.graphhopper.util.InstructionListTest.testCreateGPX":1,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":2},"transformations":[{"failures":[0,1,2],"tindex":"26bda9e6-7940-11e5-bf15-1993c9a84b52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:177","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.GPXEntry>.add(new com.graphhopper.util.GPXEntry(double , double , double , long))"},"status":-1},{"failures":[],"tindex":"26bdd0f7-7940-11e5-bf15-ffad21e7b4a2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"variableMap":{"directionBitMask":"directionBitMask","flags":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"26bdf808-7940-11e5-bf15-dba0d646e52e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:102","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(\"interval\", java.util.Arrays.asList(int, int))"},"status":-2},{"failures":[],"tindex":"26bdf809-7940-11e5-bf15-e9d96bd743e6","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:296","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - int"},"variableMap":{"index":"indexDivisor","entrySize":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:312","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"26bdf80a-7940-11e5-bf15-63395bffa03c","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:752","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getDimension()) != (com.graphhopper.storage.NodeAccess.getDimension()))\n    throw new java.lang.AssertionError((((\"Dimension does not match for pointList vs. nodeAccess \" + (com.graphhopper.util.PointList.getDimension())) + \" <-> \") + (com.graphhopper.storage.NodeAccess.getDimension())));\n"},"variableMap":{"pointList":"pillarNodes","nodeAccess":"nodeAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:899","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D()) {\n    com.graphhopper.util.PointList.add(double, double, com.graphhopper.util.Helper.intToEle(com.graphhopper.util.BitUtil.toInt(byte[], int)));\n    int += 4;\n} else {\n    com.graphhopper.util.PointList.add(double, double);\n}"},"status":-2},{"failures":[],"tindex":"26bee26b-7940-11e5-bf15-895a8a07646c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:301","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-2},{"failures":[],"tindex":"26bee26c-7940-11e5-bf15-a5d075ec25bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:923","type":"CtIfImpl","sourcecode":"if (\"from\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} else if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-2},{"failures":[],"tindex":"26bee26d-7940-11e5-bf15-99ada51697b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"26bee26e-7940-11e5-bf15-7f465b8cea71","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"lat","shrinkFactor":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:83","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - (int)))"},"status":-2},{"failures":[],"tindex":"26bee26f-7940-11e5-bf15-efedf608bdde","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:288","type":"CtIfImpl","sourcecode":"if ((long & long) != 0)\n    long |= 1;\n"},"variableMap":{"res":"value","maxBit":"value","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:165","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromLong(byte[], long, 0)"},"status":-2},{"failures":[],"tindex":"26bee270-7940-11e5-bf15-7310b4fd962b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":-2},{"failures":[],"tindex":"26bf0981-7940-11e5-bf15-59dcf4672f61","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:396","type":"CtLocalVariableImpl","sourcecode":"int int = int - 1"},"status":-2},{"failures":[],"tindex":"26bf0982-7940-11e5-bf15-092697391bd2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:122","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"26bf0983-7940-11e5-bf15-8d5e64e31064","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:298","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if ((java.lang.StringBuilder.length()) > 0)\n        java.lang.StringBuilder.append(\",\");\n    \n    java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString()).append(\"|\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getPropertiesString()).append(\"|version=\").append(com.graphhopper.routing.util.AbstractFlagEncoder.getVersion());\n}"},"status":-2},{"failures":[],"tindex":"26bf0984-7940-11e5-bf15-795666fd3411","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"status":-2},{"failures":[],"tindex":"26bf0985-7940-11e5-bf15-435b3efc8595","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"_default"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:90","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"26bf0986-7940-11e5-bf15-5f8da79517e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:290","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[],"tindex":"26bf0987-7940-11e5-bf15-475828666a40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"flags","pointer":"flags","maxCapacity":"flags","baseCapacity":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:655","type":"CtForEachImpl","sourcecode":"NEXT_SC : for (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut : java.util.Map<com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut>.keySet()) {\n    boolean boolean = false;\n    com.graphhopper.util.CHEdgeIterator com.graphhopper.util.CHEdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    while (com.graphhopper.util.CHEdgeIterator.next()) {\n        if (((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getAdjNode()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) && (com.graphhopper.util.CHEdgeIterator.canBeOverwritten(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long))) {\n            if ((com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double) >= (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.CHEdgeIterator, false, com.graphhopper.util.EdgeIterator.int)))\n                continue NEXT_SC;\n            \n            if (((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) || ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) {\n                throw new java.lang.IllegalStateException((((((((((((((((((\"Shortcut cannot update itself! \" + (com.graphhopper.util.CHEdgeIterator.getEdge())) + \", skipEdge1:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", skipEdge2:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", edge \") + com.graphhopper.util.CHEdgeIterator) + \":\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.CHEdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", sc:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut) + \", skippedEdge1: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", skippedEdge2: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", neighbors:\") + (com.graphhopper.util.GHUtility.getNeighbors(com.graphhopper.util.CHEdgeIterator))));\n            } \n            com.graphhopper.util.CHEdgeIterator.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n            com.graphhopper.util.CHEdgeIterator.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n            com.graphhopper.util.CHEdgeIterator.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n            com.graphhopper.util.CHEdgeIterator.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n            com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIterator.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n            boolean = true;\n            break;\n        } \n    }\n    if (!boolean) {\n        com.graphhopper.util.CHEdgeIteratorState com.graphhopper.util.CHEdgeIteratorState = com.graphhopper.storage.CHGraphImpl.shortcut(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        com.graphhopper.util.CHEdgeIteratorState.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n        com.graphhopper.util.CHEdgeIteratorState.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIteratorState.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n        com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIteratorState.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n        int++;\n    } \n}"},"status":-2},{"failures":[],"tindex":"26bf3098-7940-11e5-bf15-31c45932b108","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:52","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.getTime()"},"status":-2},{"failures":[],"tindex":"26bf3099-7940-11e5-bf15-15facb45a94a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:74","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>(int)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSetFrom","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:80","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}