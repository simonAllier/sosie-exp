{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"45696043-7926-11e5-b7a3-a9c08d0f2c30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:238","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"variableMap":{"this":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-2},{"failures":[],"tindex":"45696044-7926-11e5-b7a3-b13d1688ed0d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:262","type":"CtIfImpl","sourcecode":"if (int > (int))\n    throw new java.lang.IllegalArgumentException(\"new size needs be smaller than old size\");\n"},"variableMap":{"size":"i","newSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:767","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.is3D()) {\n    double = com.graphhopper.util.PointList.getElevation(int);\n    double += com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double);\n    double = double;\n} else\n    double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n"},"status":-2},{"failures":[],"tindex":"45696045-7926-11e5-b7a3-2d3ad23a803b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:135","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.GHBitSet.getCardinality()"},"status":-2},{"failures":[],"tindex":"45696046-7926-11e5-b7a3-0981896ca007","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false))"},"status":-2},{"failures":[],"tindex":"45698757-7926-11e5-b7a3-8dd1508fa3d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:463","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"45698758-7926-11e5-b7a3-6b612a3de50e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:283","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"variableMap":{"eIter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:774","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"45698759-7926-11e5-b7a3-91e4c81a0b02","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:543","type":"CtReturnImpl","sourcecode":"return (int % 2) == 0 ? int + 1 : int - 1"},"variableMap":{"edgeKey":"java.lang.Integer.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:366","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.int"},"status":-2},{"failures":[],"tindex":"4569875a-7926-11e5-b7a3-2f16a61404da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:107","type":"CtReturnImpl","sourcecode":"return new java.util.zip.GZIPInputStream(java.io.InputStream , 50000)"},"variableMap":{"ips":"ips"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:104","type":"CtIfImpl","sourcecode":"if (((byte[][0]) == 31) && ((byte[][1]) == (-117))) {\n    java.io.InputStream.reset();\n    return new java.util.zip.GZIPInputStream(java.io.InputStream , 50000);\n} else if (((((((byte[][0]) == 0) && ((byte[][1]) == 0)) && ((byte[][2]) == 0)) && ((byte[][4]) == 10)) && ((byte[][5]) == 9)) && (((byte[][3]) == 13) || ((byte[][3]) == 14))) {\n    java.io.InputStream.reset();\n    boolean = true;\n    return java.io.InputStream;\n} else if (((byte[][0]) == 'P') && ((byte[][1]) == 'K')) {\n    java.io.InputStream.reset();\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    return java.util.zip.ZipInputStream;\n} else if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    java.io.InputStream.reset();\n    return java.io.InputStream;\n} else if ((java.lang.String.endsWith(\".bz2\")) || (java.lang.String.endsWith(\".bzip2\"))) {\n    java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\";\n    try {\n        java.lang.Class java.lang.Class = java.lang.Class.forName(java.lang.String);\n        java.io.InputStream.reset();\n        java.lang.reflect.Constructor<java.io.InputStream> java.lang.reflect.Constructor<java.io.InputStream> = java.lang.Class.getConstructor(java.io.InputStream.java.io.InputStream, boolean.boolean);\n        return java.lang.reflect.Constructor<java.io.InputStream>.newInstance(java.io.InputStream, true);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.IllegalArgumentException((\"Cannot instantiate \" + java.lang.String) , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalArgumentException((\"Input file is not of valid type \" + (java.io.File.getPath())));\n}"},"status":-2},{"failures":[],"tindex":"4569875b-7926-11e5-b7a3-57b1c3c243ba","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:67","type":"CtReturnImpl","sourcecode":"return java.lang.Math.atan2((double - double), (double * (double - double)))"},"variableMap":{"lat1":"latDelta","lat2":"latDelta","lon1":"latDelta","lon2":"latDelta","shrinkFactor":"latDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:111","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"4569875c-7926-11e5-b7a3-c3e8af9136e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1195","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"No configuration changes are possible after loading the graph\");\n"},"variableMap":{"fullyLoaded":"enableInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:385","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"name\"));\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"ref\"));\n    if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n            java.lang.String = java.lang.String;\n        else\n            java.lang.String += \", \" + java.lang.String;\n        \n    } \n    com.graphhopper.util.EdgeIteratorState.setName(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"4569ae6d-7926-11e5-b7a3-a1d64ea8ec1d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:106","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    break;\n"},"variableMap":{"dist":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:103","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long))\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double);\n"},"status":-2},{"failures":[],"tindex":"4569ae6e-7926-11e5-b7a3-cfd799797ea7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"edgeId","edgeFrom":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:511","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.getEdgeIdToOsmWayIdMap().get(int)"},"status":-2},{"failures":[],"tindex":"4569ae6f-7926-11e5-b7a3-db352a617bff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:271","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.routing.TIntList.get(int), int);\n    if (com.graphhopper.util.EdgeIteratorState == null)\n        throw new java.lang.IllegalStateException((((((((\"Edge \" + (com.graphhopper.routing.TIntList.get(int))) + \" was empty when requested with node \") + int) + \", array index:\") + int) + \", edges:\") + (com.graphhopper.routing.TIntList.size())));\n    \n    int = com.graphhopper.util.EdgeIteratorState.getBaseNode();\n    com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(com.graphhopper.util.EdgeIteratorState.getEdge(), int);\n    com.graphhopper.routing.Path.EdgeVisitor.next(com.graphhopper.util.EdgeIteratorState, int);\n}"},"status":-2},{"failures":[],"tindex":"4569ae70-7926-11e5-b7a3-85480c80e3e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"instructionIndex","nodeCount":"instructionIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:303","type":"CtIfImpl","sourcecode":"if (!((int == 0) && (int == 0))) {\n    double double;\n    int int = int;\n    if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    } else {\n        double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n        if (int > 0)\n            int++;\n        \n    }\n    if (double < double) {\n        double = double;\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"4569ae71-7926-11e5-b7a3-cffa3aae5746","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:609","type":"CtReturnImpl","sourcecode":"return int + 1"},"variableMap":{"shift":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:57","type":"CtReturnImpl","sourcecode":"return int[].int"},"status":-2},{"failures":[],"tindex":"4569ae72-7926-11e5-b7a3-056696ec5b57","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:315","type":"CtAssignmentImpl","sourcecode":"int = ((int) / 4) - 1"},"variableMap":{"segmentSizeInBytes":"minOnewayNetworkSize","indexDivisor":"minOneWayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:65","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"4569d583-7926-11e5-b7a3-435a6d6a02d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:105","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.double = double"},"status":-2},{"failures":[],"tindex":"4569d584-7926-11e5-b7a3-718bf04d2e46","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:95","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.DataAccess.getHeader(0)) != (com.graphhopper.storage.index.Location2IDQuadtree.int))\n    throw new java.lang.IllegalStateException(\"incorrect loc2id index version\");\n"},"variableMap":{"com.graphhopper.storage.index.Location2IDQuadtree.MAGIC_INT":"nodeThis","index":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-2},{"failures":[],"tindex":"4569d585-7926-11e5-b7a3-530418fae10a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"nEdge","fromHeap":"fromHeap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:107","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-2},{"failures":[],"tindex":"4569d586-7926-11e5-b7a3-4d5c4a7daf58","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:177","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}