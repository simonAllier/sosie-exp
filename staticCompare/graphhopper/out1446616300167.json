{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":66,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":88,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":126,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":136,"com.graphhopper.GraphHopperAPITest.testNoLoad":174,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":261,"com.graphhopper.reader.OSMReaderTest.testFerry":175,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":172,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":217,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":423,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":146,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":208,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":281,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":317,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":241,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":243,"com.graphhopper.GraphHopperTest.testPrepare":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":28,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":57,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":165,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":397,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":8,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":161,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":205,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":54,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":354,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":83,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":448,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":75,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":204,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":44,"com.graphhopper.GraphHopperTest.testLoadOSM":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":362,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":383,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":355,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":142,"com.graphhopper.reader.OSMReaderTest.testSort":178,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":148,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":238,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":407,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":336,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":299,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":294,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":93,"com.graphhopper.routing.DijkstraTest.initializationError":73,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":189,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":444,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":252,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":405,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":340,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":418,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":413,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":395,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":259,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":62,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":138,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":202,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":269,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":52,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":51,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":427,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":416,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":433,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":410,"com.graphhopper.coll.CompressedArrayTest.testCompress2":16,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":218,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":424,"com.graphhopper.GraphHopperAPITest.testLoad":18,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":318,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":308,"com.graphhopper.reader.OSMReaderTest.testBarriers":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":414,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":53,"com.graphhopper.util.GHUtilityTest.testCopy":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":265,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":348,"com.graphhopper.routing.PathTest.testFindInstruction":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":415,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":131,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":345,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":337,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":322,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":442,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":428,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":266,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":247,"com.graphhopper.util.InstructionListTest.testWayList2":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":289,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":363,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":223,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":447,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":236,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":300,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":458,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":425,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":398,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":307,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":20,"com.graphhopper.routing.AStarTest.initializationError":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":422,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":248,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":132,"com.graphhopper.routing.PathBidirRefTest.testExtract":152,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":196,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":191,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":288,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":450,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":392,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":287,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":192,"com.graphhopper.util.GHUtilityTest.testSort2":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":368,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":63,"com.graphhopper.reader.OSMReaderTest.testMain":177,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":255,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":432,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":249,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":409,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":143,"com.graphhopper.util.SimpleIntDequeTest.testEmpty":451,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":437,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":222,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":456,"com.graphhopper.storage.GraphHopperStorageTest.testClone":310,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":290,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":113,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":320,"com.graphhopper.util.BitUtilBigTest.testToFloat":454,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":267,"com.graphhopper.routing.PathTest.testTime":77,"com.graphhopper.util.InstructionListTest.testCreateGPX":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":229,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":121,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":402,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":280,"com.graphhopper.util.GHUtilityTest.testSortDirected":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":234,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":167,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":385,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":110,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":399,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":224,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":276,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":357,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":85,"com.graphhopper.routing.QueryGraphTest.testOneWay":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":366,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":242,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":378,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":353,"com.graphhopper.reader.OSMReaderTest.testWithBounds":183,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":446,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":380,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":436,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":111,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":375,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":429,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":306,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":48,"com.graphhopper.util.InstructionListTest.testWayList":166,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":339,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":13,"com.graphhopper.GraphHopperAPITest.testDisconnected179":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":232,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":268,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":438,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":351,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":147,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":263,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":219,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":296,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":199,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":312,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":400,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":439,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":445,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":441,"com.graphhopper.util.AngleCalcTest.testAzimuthCompassPoint":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":440,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":42,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":330,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":60,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":388,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":389,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":411,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":70,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":305,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":298,"com.graphhopper.routing.PathTest.testWayList":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":295,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":272,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":393,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":55,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":352,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":435,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":206,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":323,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":210,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":420,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":82,"com.graphhopper.util.BitUtilBigTest.testToBitString":453,"com.graphhopper.util.GHUtilityTest.testSort":157,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":459,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":256,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":412,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":449,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":347,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":403,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":371,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":209,"com.graphhopper.util.BitUtilBigTest.testToInt":455,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":253,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":369,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":408,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":139,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":201,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":430,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":214,"com.graphhopper.routing.PathTest.testFound":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":286,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":376,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":45,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":160,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":426,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":457,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":271,"com.graphhopper.util.InstructionListTest.testEmptyList":163,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":61,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":120,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":103,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":251,"com.graphhopper.reader.PrinctonReaderTest.testRead":187,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":421,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":434,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":260,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":431,"com.graphhopper.reader.OSMReaderTest.testFoot":176,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":360,"com.graphhopper.reader.OSMReaderTest.testOneWay":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":361,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":227,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":334,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":443,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":39,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":278,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":314,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":390,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":43,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":32,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":372,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":171,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":125,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":17,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":274,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":140,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":254,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":185,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":302,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":211,"com.graphhopper.routing.PathBidirRefTest.testExtract2":153,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":401,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":384,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":6,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":350,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":364,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":396,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":332,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":373,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":240,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":377,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":297,"com.graphhopper.util.SimpleIntDequeTest.testPush":452,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":67,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":374,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":356,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":258,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":335,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":158,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":117,"com.graphhopper.GraphHopperTest.testFootAndCar":200,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":216,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":5,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":264,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":118,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":381,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":417,"com.graphhopper.GraphHopperTest.testPrepareOnly":24,"com.graphhopper.GraphHopperTest.testVia":197,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":349,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":58,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":391,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":379,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":212,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":14,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":331,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":128,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":387,"com.graphhopper.routing.AStarBidirectionTest.initializationError":72,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":277,"com.graphhopper.util.InstructionListTest.testFind":162,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":404},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"1e800d85-82b8-11e5-b98d-470619867911","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:40","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionAnnotation.setEmpty()"},"status":-1},{"failures":[9,10,11,12],"tindex":"1e803496-82b8-11e5-b98d-9d5534658c6a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:81","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"variableMap":{"str":"str","name":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:213","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += int"},"status":-1},{"failures":[13,14,15],"tindex":"1e805ba7-82b8-11e5-b98d-85895045313c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:150","type":"CtIfImpl","sourcecode":"if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"variableMap":{"slice":"azimuth","azimuth":"slice","cp":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:129","type":"CtIfImpl","sourcecode":"if (double < double) {\n    java.lang.String = \"N\";\n} else if (double < (double * 3)) {\n    java.lang.String = \"NE\";\n} else if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-1},{"failures":[],"tindex":"1e805ba8-82b8-11e5-b98d-bbba9f9a57f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:91","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.isEmpty())\n    com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n"},"status":0},{"failures":[],"tindex":"1e805ba9-82b8-11e5-b98d-ad330ba1e855","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"javax.xml.stream.XMLStreamConstants.START_ELEMENT","nodeThis":"event","edgeId":"event","nodeOther":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:60","type":"CtIfImpl","sourcecode":"if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"k\");\n    java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"v\");\n    if ((java.lang.String != null) && ((java.lang.String.length()) > 0))\n        com.graphhopper.reader.OSMElement.setTag(java.lang.String, java.lang.String);\n    \n} "},"status":-2},{"failures":[],"tindex":"1e8082ba-82b8-11e5-b98d-cdce63e58a39","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"variableMap":{"directionBitMask":"value","flags":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:88","type":"CtReturnImpl","sourcecode":"return long | long"},"status":-2},{"failures":[16,17],"tindex":"1e8082bb-82b8-11e5-b98d-9f1bb4024e84","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:150","type":"CtLocalVariableImpl","sourcecode":"int int = int / (int)"},"variableMap":{"width":"pointer","i":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:69","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.max(10, ((int)((int) * 1.5F)))"},"status":-1},{"failures":[],"tindex":"1e8082bc-82b8-11e5-b98d-6f5afe3cefb9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"variableMap":{"speed":"subqueryLatB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:736","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double)"},"status":0},{"failures":[],"tindex":"1e8082bd-82b8-11e5-b98d-23e99b9f63c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:74","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    return double;\n"},"status":-1},{"failures":[18,19],"tindex":"1e80a9ce-82b8-11e5-b98d-55babfba18c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.createCHPreparations()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"status":-1},{"failures":[],"tindex":"1e80a9cf-82b8-11e5-b98d-679dffbc362f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:80","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DataAccess.getCapacity()) / 4"},"variableMap":{"index":"names"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:164","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.getCapacity()"},"status":-2},{"failures":[20,9],"tindex":"1e80a9d0-82b8-11e5-b98d-bd2aef3ad49d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:362","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[21],"tindex":"1e80a9d1-82b8-11e5-b98d-c5e6e201333d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:767","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason())"},"status":-1},{"failures":[22,23],"tindex":"1e80d0e2-82b8-11e5-b98d-e3694cf7d304","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:406","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long))"},"variableMap":{"createdEdges":"createdEdges","newNodeId":"wayOsmId","wayOsmId":"wayOsmId","wayFlags":"wayOsmId","this":"this","nodeFlags":"wayFlags","nodeId":"wayOsmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:428","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long))"},"status":-1},{"failures":[24,25,26,27],"tindex":"1e80d0e3-82b8-11e5-b98d-73c9e7369d22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:301","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), com.graphhopper.storage.index.LocationIndexTree.calcChecksum())"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,84,85,85,86,86,87,87,88,88,89,89,90,90,91,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,99,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,14,171,172,173,18,19,174,175,176,177,178,22,20,9,179,180,181,23,182,183,184,185,186,187,188,189,190,24,191,192,193,194,195,196,21,197,198,199,200,201,25,202,26,27,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450],"tindex":"1e80d0e4-82b8-11e5-b98d-4fbc11e47806","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:260","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (4 * int)"},"variableMap":{"length":"shift","factor":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:158","type":"CtReturnImpl","sourcecode":"return int + (com.graphhopper.routing.util.EncodedDoubleValue.getBits())"},"status":-1},{"failures":[451,452],"tindex":"1e811f05-82b8-11e5-b98d-676608ff4205","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:148","type":"CtForImpl","sourcecode":"for (int = 1 ; int <= (int) ; int++) {\n    if ((int[][int]) == int) {\n        break;\n    } \n}"},"variableMap":{"elem":"arr","size":"endIndexPlusOne","i":"smallerSize","element":"frontIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:77","type":"CtIfImpl","sourcecode":"if ((int) > int) {\n    int = com.graphhopper.util.SimpleIntDeque.getSize();\n    int[] int[] = new int[(int) + 10];\n    java.lang.System.arraycopy(int[], int, int[], 0, int);\n    int[] = int[];\n    int = 0;\n} "},"status":-1},{"failures":[453,454,455,456,457,458,459],"tindex":"1e811f06-82b8-11e5-b98d-3ddfc5e42003","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >>> 24))"},"variableMap":{"offset":"value","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"status":-1},{"failures":[179],"tindex":"1e811f07-82b8-11e5-b98d-919fbeace5d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:494","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeExplorer == null) || (com.graphhopper.util.EdgeExplorer == null)) {\n    com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer(new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , false , true));\n    java.util.Map<com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer>.put(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer);\n    com.graphhopper.util.EdgeExplorer = com.graphhopper.storage.Graph.createEdgeExplorer(new com.graphhopper.routing.util.DefaultEdgeFilter(com.graphhopper.routing.util.FlagEncoder , true , false));\n    java.util.Map<com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer>.put(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.util.EdgeExplorer);\n} "},"status":-1},{"failures":[],"tindex":"1e814618-82b8-11e5-b98d-ff79e0c48a75","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:40","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Class.forName(\"sun.misc.Cleaner\");\n    java.lang.Class.forName(\"java.nio.DirectByteBuffer\").getMethod(\"cleaner\");\n    boolean = true;\n} catch (java.lang.Exception e) {\n    boolean = false;\n}"},"variableMap":{"v":"elevation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:198","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.String += ((\",\" + (double)) + \",\") + (double);\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1e8082bc-82b8-11e5-b98d-6f5afe3cefb9","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion"]},"type":"staticDiff"}]}]}