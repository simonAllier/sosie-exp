{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":303,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":42,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":173,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":288,"com.graphhopper.reader.OSMReaderTest.testFerry":359,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":339,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":340,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":203,"com.graphhopper.routing.QueryGraphTest.testOneWay":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":226,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":349,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":169,"com.graphhopper.reader.OSMReaderTest.testWithBounds":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":104,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":300,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":195,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":284,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":308,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":260,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":136,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":341,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":225,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":60,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":319,"com.graphhopper.GraphHopperTest.testPrepare":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":320,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":48,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":267,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":24,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":282,"com.graphhopper.util.InstructionListTest.testWayList":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":33,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":329,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":153,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":216,"com.graphhopper.GraphHopperAPITest.testDisconnected179":377,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":295,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":119,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":167,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":30,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":259,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":170,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":75,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":375,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":82,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":129,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":323,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":352,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":255,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":121,"com.graphhopper.GraphHopperTest.testLoadOSM":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":139,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":171,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":205,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":273,"com.graphhopper.reader.OSMReaderTest.testSort":362,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":272,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":81,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":222,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":279,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":93,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":46,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":358,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":66,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":244,"com.graphhopper.routing.PathTest.testWayList":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":236,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":88,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":168,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":283,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":219,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":101,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":254,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":151,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":243,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":38,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":74,"com.graphhopper.util.GHUtilityTest.testSort":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":296,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":240,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":130,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":252,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":159,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":196,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":237,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":87,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":160,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":91,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":269,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":204,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":105,"com.graphhopper.GraphHopperAPITest.testLoad":376,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":111,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":261,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":201,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":251,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":95,"com.graphhopper.reader.OSMReaderTest.testBarriers":363,"com.graphhopper.routing.PathTest.testFound":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":313,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":357,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":292,"com.graphhopper.util.GHUtilityTest.testCopy":335,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":189,"com.graphhopper.routing.PathTest.testFindInstruction":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":96,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":107,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":298,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":258,"com.graphhopper.util.InstructionListTest.testEmptyList":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":32,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":186,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":280,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":123,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":268,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":109,"com.graphhopper.reader.PrinctonReaderTest.testRead":374,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":287,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":200,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":209,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":231,"com.graphhopper.util.InstructionListTest.testWayList2":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":142,"com.graphhopper.reader.OSMReaderTest.testFoot":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":316,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":179,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":176,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":285,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":241,"com.graphhopper.reader.OSMReaderTest.testOneWay":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":128,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":220,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":245,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":211,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":277,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":106,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":271,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":154,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":250,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":305,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":364,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":71,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":51,"com.graphhopper.routing.PathBidirRefTest.testExtract":64,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":163,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":338,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":348,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":174,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":131,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":347,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":148,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":346,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":314,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":345,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":184,"com.graphhopper.util.GHUtilityTest.testSort2":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":301,"com.graphhopper.reader.OSMReaderTest.testMain":361,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":239,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":198,"com.graphhopper.routing.PathBidirRefTest.testExtract2":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":233,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":318,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":140,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":180,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":191,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":152,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":275,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":224,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":133,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":118,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":43,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":206,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":172,"com.graphhopper.storage.GraphHopperStorageTest.testClone":253,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":242,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":229,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":263,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":270,"com.graphhopper.GraphHopperTest.testFootAndCar":353,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":294,"com.graphhopper.routing.PathTest.testTime":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":213,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":228,"com.graphhopper.util.GHUtilityTest.testSortDirected":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":218,"com.graphhopper.GraphHopperTest.testPrepareOnly":342,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":190,"com.graphhopper.GraphHopperTest.testVia":350,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":289,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":34,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":369,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":368,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":135,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":199,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":274,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":332,"com.graphhopper.GraphHopperTest.testFootOnly":356,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":141,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":367,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":143,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":70,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":304,"com.graphhopper.util.InstructionListTest.testFind":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":26,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":208},"transformations":[{"failures":[0,1,2,3,4],"tindex":"cbf10e4c-7952-11e5-b21a-092678159f69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:81","type":"CtAssignmentImpl","sourcecode":"int = (83 * int) + (this.int)"},"variableMap":{"importance":"nodeEntryBytes","hash":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:175","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((1 * 4))"},"status":-1},{"failures":[5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,0,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,1,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,2,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,3,355,4,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"cbf1355d-7952-11e5-b21a-fd82a27b40ee","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:180","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.byteOrder\", com.graphhopper.storage.Directory.getByteOrder())"},"status":-1},{"failures":[],"tindex":"cbf1355e-7952-11e5-b21a-b36576c6a4bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:224","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int);\n"},"status":-2},{"failures":[],"tindex":"cbf1355f-7952-11e5-b21a-43fa85d1eca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:132","type":"CtIfImpl","sourcecode":"if (double < (double * 3)) {\n    java.lang.String = \"NE\";\n} else if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[],"tindex":"cbf13560-7952-11e5-b21a-cbcea41fe969","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:254","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"status":-2},{"failures":[],"tindex":"cbf15c71-7952-11e5-b21a-e99792031871","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"maxGeoRef","maxGeoRef":"maxGeoRef"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:228","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader(0)"},"status":-2},{"failures":[],"tindex":"cbf15c72-7952-11e5-b21a-dd891d8da013","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:382","type":"CtAssignmentImpl","sourcecode":"int = (61 * int) + ((int)(this.long))"},"variableMap":{"directionBitMask":"osmId","hash":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:657","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(long, int)"},"status":-2},{"failures":[],"tindex":"cbf15c73-7952-11e5-b21a-5d0f2d429d27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:40","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"variableMap":{"toLat":"com.graphhopper.util.DistanceCalcEarth.R","fromLat":"com.graphhopper.util.DistanceCalcEarth.R","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:71","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin(((double / 2) / (com.graphhopper.util.DistanceCalcEarth.double)))"},"status":-2},{"failures":[],"tindex":"cbf15c74-7952-11e5-b21a-a5243ceca7ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"com.graphhopper.reader.OSMElement.RELATION","edge2":"workerThreads"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:280","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.reader.OSMInputFile = new com.graphhopper.reader.OSMInputFile(java.io.File).setWorkerThreads(int).open();\n    com.graphhopper.coll.LongIntMap com.graphhopper.coll.LongIntMap = com.graphhopper.reader.OSMReader.getNodeMap();\n    com.graphhopper.reader.OSMElement com.graphhopper.reader.OSMElement;\n    while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n        switch (com.graphhopper.reader.OSMElement.getType()) {\n            case com.graphhopper.reader.OSMElement.int :\n                if ((com.graphhopper.coll.LongIntMap.get(com.graphhopper.reader.OSMElement.getId())) != (-1)) {\n                    com.graphhopper.reader.OSMReader.processNode(((com.graphhopper.reader.OSMNode)(com.graphhopper.reader.OSMElement)));\n                } \n                break;\n            case com.graphhopper.reader.OSMElement.int :\n                if (long < 0) {\n                    com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n                    long = long;\n                } \n                com.graphhopper.reader.OSMReader.processWay(((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement)));\n                break;\n            case com.graphhopper.reader.OSMElement.int :\n                if (long < 0) {\n                    com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n                    long = long;\n                } \n                com.graphhopper.reader.OSMReader.processRelation(((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement)));\n                break;\n        }\n        if (((++long) % 100000000) == 0) {\n            com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", locs:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long))) + \" (\") + (long)) + \") \") + (com.graphhopper.util.Helper.getMemInfo())));\n        } \n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((((\"Couldn\\'t process file \" + java.io.File) + \", error: \") + (java.lang.Exception.getMessage())) , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile);\n}"},"status":-2},{"failures":[],"tindex":"cbf15c75-7952-11e5-b21a-377ece16efe2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","from":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","end":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:203","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int)"},"status":-2},{"failures":[],"tindex":"cbf18386-7952-11e5-b21a-55429d216cf4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:47","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.XFirstSearch.(checkAdjacent(com.graphhopper.util.EdgeIterator)) && (!(com.graphhopper.coll.GHBitSet.contains(int)))) {\n    com.graphhopper.coll.GHBitSet.add(int);\n    com.graphhopper.util.SimpleIntDeque.push(int);\n} "},"status":-2},{"failures":[],"tindex":"cbf18387-7952-11e5-b21a-69d58c1a8643","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:138","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int)"},"status":-2},{"failures":[],"tindex":"cbf18388-7952-11e5-b21a-dbfaebd63ee0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"nodeEntryBytes","to":"nodeEntryIndex","lonSize":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:310","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"cbf18389-7952-11e5-b21a-335df1a9feb1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:320","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n    int = int;\n} "},"variableMap":{"distance":"key","foundMinDistance":"key","index":"size","foundInstruction":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:211","type":"CtForImpl","sourcecode":"for (int = int ; (float[][(int / 2)]) > double ; int /= 2) {\n    int[][int] = int[][(int / 2)];\n    float[][int] = float[][(int / 2)];\n}"},"status":-2},{"failures":[],"tindex":"cbf1838a-7952-11e5-b21a-ad50973f3245","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:525","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"variableMap":{"nodeB":"id","edgeId":"id","nodeA":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:659","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"cbf1838b-7952-11e5-b21a-03bece307f41","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"maxLeafEntries","speed":"initLeafSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:69","type":"CtAssignmentImpl","sourcecode":"int = int / 10"},"status":-2},{"failures":[],"tindex":"cbf1838c-7952-11e5-b21a-55837b15a537","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:234","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-2},{"failures":[],"tindex":"cbf1aa9d-7952-11e5-b21a-f168d6c93b34","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"cbf1aa9e-7952-11e5-b21a-576d64737848","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:131","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.DijkstraBidirectionRef.finished())\n    return com.graphhopper.routing.PathBidirRef.extract();\n"},"status":-2},{"failures":[],"tindex":"cbf1aa9f-7952-11e5-b21a-438373f3ab21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:301","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge = ((com.graphhopper.routing.AStar.AStarEdge)(com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}