{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":124,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":198,"com.graphhopper.reader.OSMReaderTest.testFerry":356,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":379,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":380,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":319,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":62,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":399,"com.graphhopper.coll.CompressedArrayTest.testCompress":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":21,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":257,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":211,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":240,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":386,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":336,"com.graphhopper.GraphHopperTest.testPrepare":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":221,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":129,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":244,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":118,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":373,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":273,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":378,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":310,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":112,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":84,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":116,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":262,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":161,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":194,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":153,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":144,"com.graphhopper.GraphHopperTest.testLoadOSM":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":293,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":263,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":321,"com.graphhopper.reader.OSMReaderTest.testSort":359,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":63,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":367,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":333,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":252,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":55,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":222,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":106,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":353,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":343,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":162,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":172,"com.graphhopper.reader.OSMNodeTest.testSetTags":392,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":301,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":350,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":16,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":114,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":170,"com.graphhopper.coll.CompressedArrayTest.testCompress2":35,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":320,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":177,"com.graphhopper.GraphHopperAPITest.testLoad":351,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":85,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":83,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.reader.OSMReaderTest.testBarriers":360,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":201,"com.graphhopper.util.GHUtilityTest.testCopy":383,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":284,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":396,"com.graphhopper.routing.PathTest.testFindInstruction":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":281,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":253,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":188,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":381,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":69,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":316,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":202,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":340,"com.graphhopper.util.InstructionListTest.testWayList2":375,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":267,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":258,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":193,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":146,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":332,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":67,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":274,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":232,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":341,"com.graphhopper.routing.PathBidirRefTest.testExtract":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":388,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":318,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":196,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":298,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":272,"com.graphhopper.util.GHUtilityTest.testSort2":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":122,"com.graphhopper.reader.OSMReaderTest.testMain":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":70,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":219,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":185,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":369,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":322,"com.graphhopper.storage.GraphHopperStorageTest.testClone":234,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":338,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":241,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":393,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":203,"com.graphhopper.routing.PathTest.testTime":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":80,"com.graphhopper.util.GHUtilityTest.testSortDirected":385,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":94,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":6,"com.graphhopper.GraphHopperTest.testFootOnly":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":295,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":275,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":113,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":271,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":208,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":265,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":103,"com.graphhopper.routing.QueryGraphTest.testOneWay":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":98,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":289,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":261,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":46,"com.graphhopper.reader.OSMReaderTest.testWithBounds":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":77,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":105,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":290,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":184,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":309,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":179,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":231,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":111,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":255,"com.graphhopper.util.InstructionListTest.testWayList":374,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":93,"com.graphhopper.GraphHopperAPITest.testDisconnected179":352,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":204,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":199,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":355,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":325,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":224,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":29,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":236,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":142,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":248,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":138,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":128,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":226,"com.graphhopper.routing.PathTest.testWayList":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":330,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":18,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":260,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":311,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":174,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":235,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":160,"com.graphhopper.util.GHUtilityTest.testSort":384,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":215,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":195,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":233,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":283,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":279,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":312,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":344,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":147,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":303,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":165,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":180,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":317,"com.graphhopper.routing.PathTest.testFound":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":216,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":391,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":108,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":377,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":68,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":206,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":239,"com.graphhopper.util.InstructionListTest.testEmptyList":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":15,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":327,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":342,"com.graphhopper.reader.PrinctonReaderTest.testRead":354,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":175,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":197,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":181,"com.graphhopper.reader.OSMReaderTest.testFoot":357,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":39,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":50,"com.graphhopper.reader.OSMReaderTest.testOneWay":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":348,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":86,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":326,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":139,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":210,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":238,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":134,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":132,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":306,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":370,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":207,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":345,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":314,"com.graphhopper.routing.PathBidirRefTest.testExtract2":102,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":294,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":268,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":286,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":302,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":250,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":288,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":125,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":264,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":349,"com.graphhopper.GraphHopperTest.testFootAndCar":30,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":200,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":337,"com.graphhopper.GraphHopperTest.testPrepareOnly":387,"com.graphhopper.GraphHopperTest.testVia":27,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":285,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":119,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":366,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":365,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":297,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":315,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":249,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":376,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":364,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":209,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":331,"com.graphhopper.util.InstructionListTest.testFind":371,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":54},"transformations":[{"failures":[],"tindex":"457b1aa2-82c2-11e5-a42d-05046c8b9f0e","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:500","type":"CtInvocationImpl","sourcecode":"java.lang.Integer.parseInt(java.lang.String)"},"status":0},{"failures":[0,1],"tindex":"457b41b3-82c2-11e5-a42d-e7596119f551","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:594","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.CHGraphImpl.long"},"variableMap":{"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT_LONG":"backwardBit","weightLong":"backwardBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:275","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"457b41b4-82c2-11e5-a42d-49b0b3a5e098","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:180","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.util.DistanceCalc.calcCrossingPointToEdge(double, double, double, double, double, double);\n    double double = com.graphhopper.util.PointList.getElevation(((int) + 1));\n    com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(com.graphhopper.util.shapes.GHPoint.double , com.graphhopper.util.shapes.GHPoint.double , ((double + double) / 2));\n} else\n    com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(double , double , double);\n"},"status":-1},{"failures":[],"tindex":"457b41b5-82c2-11e5-a42d-e719eff589a5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"edge","length":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:199","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry.int)))\n    continue;\n"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"457b68c6-82c2-11e5-a42d-1125aa362922","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"maxLonTmp","orientation":"midLon","java.lang.Math.PI":"maxLonTmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[54,55,56,57,32,33],"tindex":"457b68c7-82c2-11e5-a42d-4f8939bbdb24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((5 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-1},{"failures":[35,36,46,47,58,48,59,49,50,53],"tindex":"457b68c8-82c2-11e5-a42d-3d9ff9908da7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:233","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"value":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"457b68c9-82c2-11e5-a42d-bd5bcd7e597f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"removeNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:661","type":"CtIfImpl","sourcecode":"if (int >= int)\n    com.graphhopper.coll.SparseIntIntArray.put(int, int);\n"},"status":-1},{"failures":[],"tindex":"457b68ca-82c2-11e5-a42d-4396929d3f4d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"tmpNewShortcuts","noOfStates":"tmpNewShortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:701","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[35,46,47,58,48,59,49,50,53],"tindex":"457b8fdb-82c2-11e5-a42d-b3a70c503378","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"midLat","incDist2DSum":"lat","fwdSlower":"midLat","fullDist2D":"lat","restDist2D":"lat","speed":"lat","decDist2DSum":"midLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:245","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[101,102,2,2,103,103,3,3,104,104,4,4,5,5,6,6,105,105,7,7,106,106,8,8,9,9,10,10,11,11,107,107,12,12,108,109,110,111,112,113,114,115,13,116,117,14,118,119,120,121,15,16,122,123,17,124,125,126,127,128,18,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,60,61,148,62,149,63,64,150,151,152,153,154,155,156,157,158,159,160,161,54,162,163,164,165,166,167,168,169,65,170,171,172,173,174,175,176,66,177,67,68,178,69,179,180,181,70,71,182,183,184,185,186,187,72,73,188,189,190,191,192,193,194,195,196,197,198,74,199,200,201,202,203,204,205,75,206,76,77,207,78,208,209,210,79,80,211,212,213,214,215,216,81,82,217,218,219,220,221,222,223,224,225,226,55,227,228,229,230,231,232,83,233,234,235,236,237,238,239,84,240,85,86,241,87,242,243,244,88,89,245,246,247,248,249,250,90,91,251,252,253,254,255,256,257,258,259,37,260,261,262,263,264,265,38,19,39,40,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,42,290,291,292,293,294,295,43,20,44,45,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,56,21,312,313,314,315,316,317,318,57,319,320,321,322,323,92,324,325,326,327,328,329,330,93,331,94,95,332,96,333,334,335,97,98,336,337,338,339,340,341,99,100,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,1,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,22,23,24,25,26,388,389,27,28,29,30,31,32,390,33,34,391],"tindex":"457b8fdc-82c2-11e5-a42d-257890bbe2e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:175","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.create(100)"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:191","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.chWeightings\", com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString())"},"status":-1},{"failures":[361,392],"tindex":"457bb6ed-82c2-11e5-a42d-a9b27b1f917b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:94","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<java.lang.String,java.lang.Object>emptyMap()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:92","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.String, java.lang.Object>"},"status":-1},{"failures":[],"tindex":"457bb6ee-82c2-11e5-a42d-1dbb777e275d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:351","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"457bb6ef-82c2-11e5-a42d-270d708bebf1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:106","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-2},{"failures":[],"tindex":"457bb6f0-82c2-11e5-a42d-c7fbb7887676","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:770","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double)"},"status":0},{"failures":[356,357,358,359,360,361,362,363,364,366,367,368,369,1,386,387,389,27,28,29,30,31,32,390,33,34,391],"tindex":"457bb6f1-82c2-11e5-a42d-5731c312115d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:329","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.finishedReading()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:181","type":"CtIfImpl","sourcecode":"if (boolean) {\n    gnu.trove.list.TLongList gnu.trove.list.TLongList = com.graphhopper.reader.OSMWay.getNodes();\n    int int = gnu.trove.list.TLongList.size();\n    for (int int = 0 ; int < int ; int++) {\n        com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int));\n    }\n    if (((++long) % 5000000) == 0) {\n        com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n    } \n} "},"status":-1},{"failures":[393,394,395,396],"tindex":"457bde02-82c2-11e5-a42d-75386c5fd742","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"457bde03-82c2-11e5-a42d-f179cb0b83bc","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:151","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap)"},"variableMap":{"configuration":"configuration","fe":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:157","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap)"},"status":-2},{"failures":[108,109,110,111,112,113,114,115,13,116,117,14,118,119,120,121,15,16,122,123,17,124,125,126,127,128,18,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,287,288,289,56,313,314,315,57,370,383,387],"tindex":"457bde04-82c2-11e5-a42d-91235de76a3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:677","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[362,397,397,398,398,399,399],"tindex":"457bde05-82c2-11e5-a42d-5f8e702861ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:200","type":"CtIfImpl","sourcecode":"if (int < 10)\n    java.lang.String += \"0\";\n"},"variableMap":{"str":"line","minLat":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:116","type":"CtIfImpl","sourcecode":"if ((java.lang.String.substring(3, 4).charAt(0)) == 'W')\n    int = -int;\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"457bb6f0-82c2-11e5-a42d-c7fbb7887676","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.DistanceCalc3D.calcDist"]},"type":"staticDiff"}]}]}