{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":62,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":197,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":57,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":423,"com.graphhopper.GraphHopperAPITest.testNoLoad":484,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":305,"com.graphhopper.reader.OSMReaderTest.testFerry":485,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":241,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":267,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":129,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":110,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":512,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":99,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":29,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":258,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":379,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":208,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":418,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":325,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":360,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":504,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":216,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":289,"com.graphhopper.GraphHopperTest.testPrepare":514,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":196,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":203,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":365,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":188,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":248,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":428,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":117,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":255,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":180,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":385,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":230,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":491,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":479,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":130,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":222,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":524,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":219,"com.graphhopper.GraphHopperTest.testLoadOSM":518,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":393,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":407,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":270,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":386,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":76,"com.graphhopper.reader.OSMReaderTest.testSort":488,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":1,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":497,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":445,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":374,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":338,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":169,"com.graphhopper.routing.DijkstraTest.initializationError":25,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":501,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":475,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":296,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":357,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":527,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":205,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":178,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":443,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":455,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":451,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":158,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":419,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":303,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":362,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":193,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":36,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":519,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":182,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":461,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":453,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":466,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":448,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":366,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":268,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":78,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":421,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":460,"com.graphhopper.GraphHopperAPITest.testLoad":482,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":58,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":10,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":352,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":452,"com.graphhopper.reader.OSMReaderTest.testBarriers":489,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":184,"com.graphhopper.util.GHUtilityTest.testCopy":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":309,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":153,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":118,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":425,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":113,"com.graphhopper.routing.PathTest.testFindInstruction":228,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":103,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":67,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":86,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":422,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":375,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":363,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":473,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":97,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":74,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":310,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":293,"com.graphhopper.util.InstructionListTest.testWayList2":253,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":333,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":394,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":456,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":273,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":35,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":478,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":283,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":344,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":39,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":18,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":429,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":351,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":490,"com.graphhopper.routing.AStarTest.initializationError":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":459,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":294,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":68,"com.graphhopper.routing.PathBidirRefTest.testExtract":233,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":133,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":511,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":389,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":506,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":481,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":510,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":416,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":509,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":331,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":508,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":123,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":507,"com.graphhopper.util.GHUtilityTest.testSort2":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":399,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":194,"com.graphhopper.reader.OSMReaderTest.testMain":487,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":525,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":20,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":7,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":140,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":447,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":284,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":470,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":84,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":499,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":272,"com.graphhopper.storage.GraphHopperStorageTest.testClone":354,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":334,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":291,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":48,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":361,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":311,"com.graphhopper.routing.PathTest.testTime":224,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":152,"com.graphhopper.util.InstructionListTest.testCreateGPX":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":279,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":56,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":433,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":247,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":396,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":324,"com.graphhopper.reader.OSMReaderTest.testRelation":494,"com.graphhopper.util.GHUtilityTest.testSortDirected":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":4,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":250,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":166,"com.graphhopper.GraphHopperTest.testFootOnly":522,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":409,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":45,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":430,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":225,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":204,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":274,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":398,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":320,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":173,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":388,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":161,"com.graphhopper.routing.QueryGraphTest.testOneWay":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":397,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":288,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":384,"com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber":70,"com.graphhopper.reader.OSMReaderTest.testWithBounds":498,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":100,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":28,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":477,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":326,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":404,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":144,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":98,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":119,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":469,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":441,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":336,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":463,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":350,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":179,"com.graphhopper.util.InstructionListTest.testWayList":249,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":3,"com.graphhopper.GraphHopperAPITest.testDisconnected179":483,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":312,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":520,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":471,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":382,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":143,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":95,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":503,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":269,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":276,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":323,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":340,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":515,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":356,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":431,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":472,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":476,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":21,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":217,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":122,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":370,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":191,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":213,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":412,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":413,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":449,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":201,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":349,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":142,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":342,"com.graphhopper.routing.PathTest.testWayList":227,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":339,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":316,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":417,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":202,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":383,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":468,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":137,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":364,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":260,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":457,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":83,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":147,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":229,"com.graphhopper.util.GHUtilityTest.testSort":238,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":329,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":390,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":300,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":111,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":136,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":353,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":480,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":424,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":434,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":437,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":259,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":89,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":80,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":435,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":444,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":521,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":446,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":145,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":37,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":517,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":464,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":264,"com.graphhopper.routing.PathTest.testFound":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":330,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":77,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":523,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":400,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":120,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":176,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":19,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":315,"com.graphhopper.util.InstructionListTest.testEmptyList":246,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":187,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":192,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":40,"com.graphhopper.util.DistanceCalcEarthTest.testDistance":526,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":38,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":278,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":295,"com.graphhopper.reader.PrinctonReaderTest.testRead":502,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":458,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":467,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":304,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":275,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":93,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":465,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":159,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":151,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":85,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":128,"com.graphhopper.reader.OSMReaderTest.testFoot":486,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":328,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":391,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":104,"com.graphhopper.reader.OSMReaderTest.testOneWay":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":301,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":392,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":11,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":277,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":474,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":114,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":214,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":368,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":322,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":358,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":414,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":206,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":207,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":438,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":254,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":61,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":107,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":318,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":71,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":298,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":346,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":500,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":261,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":15,"com.graphhopper.routing.PathBidirRefTest.testExtract2":234,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":432,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":408,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":395,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":427,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":420,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":372,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":439,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":287,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":401,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":492,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":341,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":198,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":440,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":96,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":387,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":302,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":373,"com.graphhopper.util.GHUtilityTest.testEdgeStuff":239,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":52,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":367,"com.graphhopper.GraphHopperTest.testFootAndCar":516,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":266,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":148,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":308,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":53,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":290,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":454,"com.graphhopper.GraphHopperTest.testPrepareOnly":505,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":426,"com.graphhopper.GraphHopperTest.testVia":513,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":141,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":306,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":189,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":496,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":495,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":415,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":403,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":262,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":24,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":371,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":64,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":493,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":411,"com.graphhopper.routing.AStarBidirectionTest.initializationError":220,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":321,"com.graphhopper.util.InstructionListTest.testFind":245,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":442},"transformations":[{"failures":[],"tindex":"12aab044-793d-11e5-bc1c-474e201169f5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:136","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"variableMap":{"store":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:172","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"12aad755-793d-11e5-bc1c-c978c4842855","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"12aad756-793d-11e5-bc1c-bd78b1f12506","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:122","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.abs((int - int))"},"variableMap":{"y1":"segmentSizeInBytes","y2":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:326","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long / (int)))"},"status":-1},{"failures":[],"tindex":"12aafe67-793d-11e5-bc1c-23204feb1e7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.saveProperties(java.util.Map<java.lang.String, java.lang.String>, java.io.StringWriter)"},"status":-2},{"failures":[24],"tindex":"12aafe68-793d-11e5-bc1c-4d1c3aeaaa1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:253","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:sign>\").append(com.graphhopper.util.Instruction.getSign()).append(\"<\/gh:sign>\")"},"status":-1},{"failures":[25,26,0,27,28,29,30,1,2,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,24,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,3,282,4,5,283,284,285,286,287,6,288,289,290,291,292,293,294,7,8,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,9,360,10,11,361,362,363,364,365,12,366,367,368,369,370,371,372,13,14,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,16,453,454,455,456,457,458,459,17,460,18,19,461,462,463,464,465,20,466,467,468,469,470,471,472,21,22,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,23,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524],"tindex":"12aafe69-793d-11e5-bc1c-2d784583c5c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.registerEncoder(((com.graphhopper.routing.util.AbstractFlagEncoder)(com.graphhopper.routing.util.FlagEncoder)))"},"status":-1},{"failures":[184,187,192,193,196,525,526,527,383,404,431,435,436,437,438,440,441,509,510,513],"tindex":"12ab739a-793d-11e5-bc1c-4f029e8a8f4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:170","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"variableMap":{"java.lang.Double.NaN":"fromLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:40","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.toRadians((double - double))"},"status":-1},{"failures":[],"tindex":"12ab9aab-793d-11e5-bc1c-338c09f22e4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:572","type":"CtIfImpl","sourcecode":"if (long != 0)\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n"},"status":-2},{"failures":[],"tindex":"12ab9aac-793d-11e5-bc1c-8fe879e5da71","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"baseCapacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:272","type":"CtForImpl","sourcecode":"for (long long = int, long long = com.graphhopper.storage.BaseGraph.int ; long < long ; long += int , long += com.graphhopper.storage.BaseGraph.int) {\n    if (long >= long)\n        throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n    \n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":-2},{"failures":[],"tindex":"12ab9aad-793d-11e5-bc1c-53ad091898d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:110","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2},{"failures":[],"tindex":"12ab9aae-793d-11e5-bc1c-9f67c6777459","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"graph","newGraph":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:112","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(com.graphhopper.storage.Directory , com.graphhopper.routing.util.EncodingManager , boolean , new com.graphhopper.storage.TurnCostExtension())"},"status":-2},{"failures":[],"tindex":"12ab9aaf-793d-11e5-bc1c-c9084f6b4e51","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"high","degree":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:400","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[],"tindex":"12abc0c0-793d-11e5-bc1c-c313ba20fbaf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"mGarbage":"empty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":-2},{"failures":[],"tindex":"12abc0c1-793d-11e5-bc1c-eb616f33642b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:245","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)"},"variableMap":{"encoder":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:345","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.AbstractFlagEncoder.handleFerryTags(com.graphhopper.reader.OSMWay, java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"track\"), java.util.Map<java.lang.String, java.lang.Integer>.get(\"primary\"))"},"status":-2},{"failures":[],"tindex":"12abc0c2-793d-11e5-bc1c-0b60e3e611ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:114","type":"CtReturnImpl","sourcecode":"return double - ((int)(double))"},"variableMap":{"val":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:105","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"12abc0c3-793d-11e5-bc1c-25dbec848b9b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"variableMap":{"fromX":"lon","toX":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:654","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) - ((0.5 + int) * (double))"},"status":-2},{"failures":[],"tindex":"12abc0c4-793d-11e5-bc1c-9df3c6df2f20","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:42","type":"CtIfImpl","sourcecode":"if (double < 0.0) {\n    double = (double + double) / (double - double);\n    double = com.graphhopper.util.AngleCalc.double;\n} else {\n    double = (double - double) / (double + double);\n    double = com.graphhopper.util.AngleCalc.double;\n}"},"variableMap":{"r":"firstLon","com.graphhopper.util.AngleCalc.PI_4":"firstLat","x":"firstLat","angle":"firstLon","absY":"lastLat","com.graphhopper.util.AngleCalc.PI3_4":"lastLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:363","type":"CtIfImpl","sourcecode":"if ((((!(java.lang.Double.isNaN(double))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) && (!(java.lang.Double.isNaN(double)))) {\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_distance\", double);\n    com.graphhopper.reader.OSMWay.setTag(\"estimated_center\", new com.graphhopper.util.shapes.GHPoint(((double + double) / 2) , ((double + double) / 2)));\n} "},"status":-2},{"failures":[],"tindex":"12abe7d5-793d-11e5-bc1c-cfaecf8273d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:488","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting)))\n    return java.util.Collections.emptyList();\n"},"status":-2},{"failures":[],"tindex":"12abe7d6-793d-11e5-bc1c-6bf6356b411d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"byteCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:155","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-2},{"failures":[],"tindex":"12abe7d7-793d-11e5-bc1c-59acfe7678d3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"variableMap":{"exitNumber":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:854","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}