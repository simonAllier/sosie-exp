{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":450,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":374,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":183,"com.graphhopper.reader.OSMReaderTest.testFerry":124,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":146,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":284,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":326,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":137,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":370,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":380,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":202,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":351,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":277,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":273,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":423,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":226,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":431,"com.graphhopper.GraphHopperTest.testPrepare":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":26,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":419,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":0,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":384,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":275,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":355,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":379,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":439,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":443,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":102,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":86,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":179,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":327,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":80,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":434,"com.graphhopper.GraphHopperTest.testLoadOSM":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":258,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":67,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":285,"com.graphhopper.reader.OSMReaderTest.testSort":95,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":128,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":353,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":301,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":241,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":211,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":89,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":132,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":313,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":101,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":437,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":298,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":364,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":415,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":118,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":318,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":25,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":389,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":97,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":138,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":442,"com.graphhopper.coll.OSMIDMapTest.testGetLong":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":165,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":460,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":171,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":397,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":235,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":408,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":357,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":260,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":162,"com.graphhopper.GraphHopperAPITest.testLoad":122,"com.graphhopper.util.BitUtilBigTest.testToShort":119,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":391,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":227,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":218,"com.graphhopper.reader.OSMReaderTest.testBarriers":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":153,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":356,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":22,"com.graphhopper.util.GHUtilityTest.testCopy":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":187,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":412,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":385,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":98,"com.graphhopper.routing.PathTest.testFindInstruction":84,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":382,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":154,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":373,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":398,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":109,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":242,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":231,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":425,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":369,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":403,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":188,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":430,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":309,"com.graphhopper.util.InstructionListTest.testWayList2":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":105,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":244,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":158,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":324,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":388,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":299,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":358,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":1,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":217,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":87,"com.graphhopper.coll.OSMIDMapTest.testGet":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":310,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":399,"com.graphhopper.routing.PathBidirRefTest.testExtract":417,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":45,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":136,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":283,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":181,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":116,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":205,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":378,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":322,"com.graphhopper.util.GHUtilityTest.testSort2":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":448,"com.graphhopper.reader.OSMReaderTest.testMain":31,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":332,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":337,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":209,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":173,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":362,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":74,"com.graphhopper.storage.StorablePropertiesTest.testStore":53,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":70,"com.graphhopper.storage.GraphHopperStorageTest.testClone":220,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":245,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":208,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":307,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":99,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":229,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":342,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":189,"com.graphhopper.routing.PathTest.testTime":320,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":292,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":201,"com.graphhopper.util.GHUtilityTest.testSortDirected":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":297,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":121,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":455,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":268,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":2,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":339,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":81,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":440,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":420,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":197,"com.graphhopper.search.NameIndexTest.testCreate":51,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":254,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":454,"com.graphhopper.routing.QueryGraphTest.testOneWay":459,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":265,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":66,"com.graphhopper.reader.OSMReaderTest.testWithBounds":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":371,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":194,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":350,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":456,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":400,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":402,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":267,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":406,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":386,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":172,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":251,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":167,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":61,"com.graphhopper.search.NameIndexTest.testFlush":49,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":438,"com.graphhopper.util.InstructionListTest.testWayList":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":321,"com.graphhopper.GraphHopperAPITest.testDisconnected179":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":190,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":252,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":334,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":185,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":341,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":134,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":354,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":200,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":213,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":17,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":222,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":57,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":392,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":432,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":237,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":447,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":428,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":270,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":271,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":376,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":453,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":333,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":215,"com.graphhopper.routing.PathTest.testWayList":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":212,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":411,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":193,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":294,"com.graphhopper.coll.OSMIDMapTest.testGet2":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":27,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":444,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":276,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":330,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":279,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":159,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":221,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":361,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":85,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":409,"com.graphhopper.util.GHUtilityTest.testSort":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":104,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":458,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":381,"com.graphhopper.search.NameIndexTest.testPut":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":180,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":219,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":110,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":5,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":278,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":365,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":314,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":457,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":359,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":93,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":407,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":390,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":452,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":349,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":282,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":204,"com.graphhopper.routing.PathTest.testFound":319,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":139,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":405,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":263,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":435,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":164,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":50,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":192,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":24,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":335,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":291,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":449,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":312,"com.graphhopper.reader.PrinctonReaderTest.testRead":133,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":160,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":182,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":169,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":383,"com.graphhopper.util.EdgeWrapperTest.testClear":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":416,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":363,"com.graphhopper.reader.OSMReaderTest.testFoot":125,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":256,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":377,"com.graphhopper.reader.OSMReaderTest.testOneWay":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":316,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":228,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":290,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":429,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":199,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":224,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":424,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":272,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":328,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":343,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":421,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":433,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":422,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":145,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":195,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":77,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":72,"com.graphhopper.routing.PathBidirRefTest.testExtract2":418,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":436,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":106,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":413,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":274,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":303,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":214,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":395,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":451,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":427,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":103,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":345,"com.graphhopper.GraphHopperTest.testFootAndCar":18,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":367,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":73,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":410,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":186,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":401,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":426,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":446,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":306,"com.graphhopper.GraphHopperTest.testPrepareOnly":34,"com.graphhopper.GraphHopperTest.testVia":15,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":111,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":445,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":280,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":42,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":396,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":198,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":296,"com.graphhopper.util.InstructionListTest.testFind":38,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":375,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":54},"transformations":[{"failures":[],"tindex":"603f4597-82bc-11e5-b977-6587366c7a72","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"shiftSum","child":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:175","type":"CtOperatorAssignmentImpl","sourcecode":"int += byte[][int]"},"status":-2},{"failures":[0],"tindex":"6040f348-82bc-11e5-b977-e92988b8e7ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:192","type":"CtReturnImpl","sourcecode":"return long + (this.long)"},"variableMap":{"time":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDefaultValue(long)"},"status":-1},{"failures":[1,2,3,4,5],"tindex":"60411a59-82bc-11e5-b977-03e939fe6a53","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:805","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = null"},"variableMap":{"removedNodes":"indicesCopy"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:242","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.copyTo(com.graphhopper.coll.GHBitSet)"},"status":-1},{"failures":[6],"tindex":"60411a5a-82bc-11e5-b977-df8216399413","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"refCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:136","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[7,8,9],"tindex":"60411a5b-82bc-11e5-b977-2da913d4b487","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:337","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:271","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"))"},"status":-1},{"failures":[],"tindex":"6041416c-82bc-11e5-b977-0164f96c034f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"E_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:256","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":0},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"6041416d-82bc-11e5-b977-cb89eabf357f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:66","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[31,32,33,34,15,19,20,35,21,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,29,30,89,90,91,92],"tindex":"6041416e-82bc-11e5-b977-097702c0289c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:288","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n    byte[] = byte[][][(int + 1)];\n    java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n} else {\n    java.lang.System.arraycopy(byte[], int, byte[], 0, int);\n}"},"status":-1},{"failures":[],"tindex":"6041416f-82bc-11e5-b977-7b724c5eb01e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:46","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"variableMap":{"adj":"com.graphhopper.reader.OSMElement.RELATION","maxNodes":"com.graphhopper.reader.OSMElement.RELATION","base":"com.graphhopper.reader.OSMElement.RELATION"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMRelation:77","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member : java.util.ArrayList<com.graphhopper.reader.OSMRelation.Member>) {\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) == (com.graphhopper.reader.OSMElement.int)) {\n        return true;\n    } \n}"},"status":0},{"failures":[34,20,35,21,54,93,60,94,72,73],"tindex":"60416880-82bc-11e5-b977-85952fd44a23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:935","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.getNodes()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:466","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadNodesHeader()"},"status":-1},{"failures":[31,95,96,16,17,18,19,20,21,97,98,99,100,101,66,102,103,104,105,106,107,108,109,110,111,68,112,113,114,115,116,117,118,84],"tindex":"60416881-82bc-11e5-b977-711c168b5698","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"b_lat_deg","tmp":"b_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:136","type":"CtLocalVariableImpl","sourcecode":"double double = double"},"status":-1},{"failures":[],"tindex":"60416882-82bc-11e5-b977-038a5ab0a91b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:307","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"status":-2},{"failures":[119],"tindex":"60418f93-82bc-11e5-b977-b328d5aac10a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:47","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(short >> 8))"},"status":-1},{"failures":[],"tindex":"60418f94-82bc-11e5-b977-5f42353522b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:65","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-2},{"failures":[96,120],"tindex":"60418f95-82bc-11e5-b977-7910cf1c5954","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:1134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.setMinOneWayNetworkSize(int)"},"variableMap":{"minOneWayNetworkSize":"minNetworkSize","preparation":"preparation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1133","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.setMinNetworkSize(int)"},"status":-1},{"failures":[121],"tindex":"60418f96-82bc-11e5-b977-a962c291f145","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:220","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n"},"status":-1},{"failures":[122,123,124,125,31,95,96,32,33,126,127,120,128,129,130,131,7,132,133,134,135,34,10,11,12,13,14,136,137,15,16,17,18,19,20,138,35,21,36,139,140,141,142,37,143,144,145,146,147,38,39,40,41,42,148,149,54,150,151,152,55,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,57,175,176,177,178,58,59,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,60,216,61,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,63,239,240,241,242,64,65,243,244,245,246,247,248,249,250,251,1,2,3,4,5,252,253,66,102,67,103,254,255,104,256,257,258,105,106,107,108,259,260,109,261,110,111,262,263,264,265,266,267,68,112,69,113,268,269,114,270,271,272,115,116,117,273,118,274,275,276,71,277,278,279,72,280,281,282,283,73,284,285,74,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,75,306,307,308,309,310,76,311,312,313,314,77,315,78,316,317,318,79,80,319,320,81,82,83,84,85,86,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,8,338,339,340,341,342,343,344,345,9,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,22,443,444,23,0,445,446,447,24,25,448,449,26,450,451,87,452,453,27,88,454,28,29,30,455,456,457,89,90,458,459,91,460,92],"tindex":"6041b6a7-82bc-11e5-b977-e58def9d3fbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:191","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AbstractFlagEncoder.defineWayBits(int, int)"},"status":-1},{"failures":[],"tindex":"6041ddb8-82bc-11e5-b977-53a13badb2af","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"tmpPrevEdge","newBaseIndex":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:456","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge()))) {\n    long long = int == (com.graphhopper.util.EdgeIterator.int) ? -1 : com.graphhopper.storage.CHGraphImpl.isShortcut(int) ? com.graphhopper.storage.EdgeAccess.toPointer(int) : com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.toPointer(int);\n    com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n    break;\n} "},"status":-2},{"failures":[122,10,11,12,13,14,15,16,17,18,19,20,21,36,38,39,40,41,42,79,80,81,82,83,85,86,417,418,419,427,428,429,430,434,435,436,437,438,439,440,22,23,447,24,25,448,449,26,87,452,453,27],"tindex":"604204c9-82bc-11e5-b977-3b04a95d2a32","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:333","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"variableMap":{"edge":"tmpNode","adjNode":"tmpNode","g":"graph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:273","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = com.graphhopper.storage.Graph.getEdgeIteratorState(gnu.trove.list.TIntList.get(int), int)"},"status":-1},{"failures":[],"tindex":"604204ca-82bc-11e5-b977-77be80f4f3fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:825","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates(int).setLazyUpdates(int).setNeighborUpdates(int).setLogMessages(double)"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"604204ca-82bc-11e5-b977-77be80f4f3fe","diffs":[{"branches":{"com.graphhopper.GraphHopperTest.testPrepare":["com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setPeriodicUpdates(int).b","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setPeriodicUpdates(int).t1","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setLazyUpdates(int).t1","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setLazyUpdates(int).b","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setLogMessages(double).e1","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setNeighborUpdates(int).t1","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setNeighborUpdates(int).b","com.graphhopper.routing.ch.PrepareContractionHierarchies_com.graphhopper.routing.ch.PrepareContractionHierarchies_setLogMessages(double).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.routing.ch.PrepareContractionHierarchies.setPeriodicUpdates","com.graphhopper.routing.ch.PrepareContractionHierarchies.setLogMessages","com.graphhopper.routing.ch.PrepareContractionHierarchies.setLazyUpdates","com.graphhopper.routing.ch.PrepareContractionHierarchies.setNeighborUpdates"]},"type":"staticDiff"}]},{"transformation":"6041416f-82bc-11e5-b977-7b724c5eb01e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.reader.OSMRelation.Member.type"]},"branchesDiff":{"delete":["l1","t0"]},"type":"staticDiff"}]}]}