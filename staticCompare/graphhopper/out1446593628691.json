{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":132,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":78,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":104,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":87,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":128,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":92,"com.graphhopper.reader.OSMReaderTest.testWithBounds":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":79,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":98,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":39,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":40,"com.graphhopper.GraphHopperTest.testPrepare":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":63,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.reader.dem.CGIARProviderTest.testFileName":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":135,"com.graphhopper.reader.OSMReaderTest.testOneWay":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":55,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":105,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":95,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":23,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":129,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":121,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":74,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":32,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":142,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":82,"com.graphhopper.GraphHopperTest.testLoadOSM":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":41,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":130,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":123,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":108,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":58,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":10,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":61,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":88,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":124,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":118,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":85,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":53,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":116,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":125,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":131,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":60,"com.graphhopper.GraphHopperTest.testFootAndCar":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":81,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":137,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":75,"com.graphhopper.GraphHopperTest.testPrepareOnly":15,"com.graphhopper.GraphHopperTest.testVia":17,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":56,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":93,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":122,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":114,"com.graphhopper.GraphHopperTest.testFootOnly":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":119,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":141,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":90,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":120,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":48,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":138},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"553e4921-8283-11e5-8a71-65c05b3b01a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:572","type":"CtIfImpl","sourcecode":"if (long != 0)\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n"},"variableMap":{"node":"node","this":"this","nodeFlags":"skippedLocations"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:564","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMReader.isInBounds(com.graphhopper.reader.OSMNode)) {\n    com.graphhopper.reader.OSMReader.addNode(com.graphhopper.reader.OSMNode);\n    if (com.graphhopper.reader.OSMNode.hasTags()) {\n        long long = com.graphhopper.routing.util.EncodingManager.handleNodeTags(com.graphhopper.reader.OSMNode);\n        if (long != 0)\n            com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n        \n    } \n    (long)++;\n} else {\n    (long)++;\n}"},"status":-1},{"failures":[],"tindex":"553e9742-8283-11e5-8a71-313610f8d6c9","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"offset","speed":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":0},{"failures":[27],"tindex":"553e9743-8283-11e5-8a71-7710f7785dad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"variableMap":{"angle":"lat","com.graphhopper.util.AngleCalc.PI3_4":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:280","type":"CtAssignmentImpl","sourcecode":"double = 1 + ((60 - double) / (int))"},"status":-1},{"failures":[],"tindex":"553e9744-8283-11e5-8a71-b7990b3a96b5","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:943","type":"CtAssertImpl","sourcecode":"assert boolean = true : true"},"variableMap":{"enableIfAssert":"viaTurnPenalty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1029","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < (java.util.List<com.graphhopper.util.shapes.GHPoint>.size()) ; int++) {\n    if (int == 1) {\n        com.graphhopper.routing.QueryGraph.enforceHeading(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.GHRequest.getFavoredHeading(0), false);\n    } else if (boolean) {\n        com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.routing.Path>.get((int - 2)).getFinalEdge();\n        com.graphhopper.routing.QueryGraph.enforceHeadingByEdgeId(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), false);\n    } \n    com.graphhopper.storage.index.QueryResult com.graphhopper.storage.index.QueryResult = java.util.List<com.graphhopper.storage.index.QueryResult>.get(int);\n    com.graphhopper.routing.QueryGraph.enforceHeading(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.GHRequest.getFavoredHeading(int), true);\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start();\n    com.graphhopper.routing.RoutingAlgorithm com.graphhopper.routing.RoutingAlgorithm = com.graphhopper.routing.RoutingAlgorithmFactory.createAlgo(com.graphhopper.routing.QueryGraph, com.graphhopper.routing.AlgorithmOptions);\n    com.graphhopper.routing.RoutingAlgorithm.setWeightLimit(double);\n    java.lang.String += (\", algoInit:\" + (com.graphhopper.util.StopWatch.stop().getSeconds())) + \"s\";\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start();\n    com.graphhopper.routing.Path com.graphhopper.routing.Path = com.graphhopper.routing.RoutingAlgorithm.calcPath(com.graphhopper.storage.index.QueryResult.getClosestNode(), com.graphhopper.storage.index.QueryResult.getClosestNode());\n    if ((com.graphhopper.routing.Path.getTime()) < 0)\n        throw new java.lang.RuntimeException((\"Time was negative. Please report as bug and include:\" + com.graphhopper.GHRequest));\n    \n    java.util.List<com.graphhopper.routing.Path>.add(com.graphhopper.routing.Path);\n    java.lang.String += ((((\", \" + (com.graphhopper.routing.RoutingAlgorithm.getName())) + \"-routing:\") + (com.graphhopper.util.StopWatch.stop().getSeconds())) + \"s, \") + (com.graphhopper.routing.Path.getDebugInfo());\n    com.graphhopper.routing.QueryGraph.clearUnfavoredStatus();\n    long += com.graphhopper.routing.RoutingAlgorithm.getVisitedNodes();\n    com.graphhopper.storage.index.QueryResult = com.graphhopper.storage.index.QueryResult;\n}"},"status":0},{"failures":[28,29],"tindex":"553ebe55-8283-11e5-8a71-8902aeb1baf0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:240","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 2"},"variableMap":{"bytePos":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:340","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,16,17,18,21,22,23],"tindex":"553ebe56-8283-11e5-8a71-df8db632c9e4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1019","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 1"},"variableMap":{"foundIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:256","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"553ebe57-8283-11e5-8a71-e1691ba5be8a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"com.graphhopper.util.AngleCalc.PI_4","speed":"com.graphhopper.util.AngleCalc.PI_4"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:49","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"553ebe58-8283-11e5-8a71-a7bf304b8933","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:487","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 1000000.0))) / 1000000.0"},"variableMap":{"value":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:241","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"553ee569-8283-11e5-8a71-4f69eb6f37bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:543","type":"CtReturnImpl","sourcecode":"return (int % 2) == 0 ? int + 1 : int - 1"},"variableMap":{"edgeKey":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:416","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"553ee56a-8283-11e5-8a71-f520d65852d8","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:136","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"variableMap":{"store":"enforcementOccured"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:420","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[96,97,98],"tindex":"553ee56b-8283-11e5-8a71-b94bc7e06903","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:296","type":"CtReturnImpl","sourcecode":"return int - int"},"variableMap":{"tmp":"height","initializedCounter":"height"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:106","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"553ee56c-8283-11e5-8a71-476437e15511","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:634","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.getNodes()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:498","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.BaseGraph.nextEdgeId(), int, int)"},"status":-2},{"failures":[],"tindex":"553f0c7d-8283-11e5-8a71-fd9d54069924","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:240","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,99,13,14,15,17,18,19,20,21,22,23,24,25,26],"tindex":"553f0c7e-8283-11e5-8a71-a9db56efbc21","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:422","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    if (int < (int - 1)) {\n        long[] long[] = gnu.trove.list.TLongList.toArray(int, (int - int));\n        gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n    } \n} else {\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.OSMWay.getNodes(), long, long));\n}"},"status":-1},{"failures":[],"tindex":"553f0c7f-8283-11e5-8a71-25eb0fad9a27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:212","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((0 * 4))"},"status":0},{"failures":[],"tindex":"553f0c80-8283-11e5-8a71-2fe05c713d18","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:292","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[100,101,102,71,103,54,59,60,63,104,105,1,2,3,5,6,7,8,10,11,13,14,15,106,107,108,109,110,111,16,17,18,19,20,21,22,23,24,25,26,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"553f0c81-8283-11e5-8a71-ff404d53c52a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"connectedId","edgeId":"connectedId","com.graphhopper.storage.EdgeAccess.NO_NODE":"connectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.SimpleIntDeque.push(int)"},"status":-1},{"failures":[],"tindex":"553f3392-8283-11e5-8a71-1743c47ce4c9","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"edge","entityType":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:272","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"553f3393-8283-11e5-8a71-7d268777b075","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:242","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"553f3394-8283-11e5-8a71-f98fc7e42646","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:132","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:329","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>.size()"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"553f0c7f-8283-11e5-8a71-25eb0fad9a27","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.getHeader"]},"type":"staticDiff"}]}]}