{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":125,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":135,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":144,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":149,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":189,"com.graphhopper.reader.OSMReaderTest.testFerry":33,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":22,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":23,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":132,"com.graphhopper.routing.QueryGraphTest.testOneWay":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":282,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":185,"com.graphhopper.storage.VLongStorageTest.testWrite":343,"com.graphhopper.reader.OSMReaderTest.testWithBounds":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":215,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":69,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":237,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":70,"com.graphhopper.coll.CompressedArrayTest.testCompress":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":251,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":340,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":92,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":317,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":167,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":9,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":49,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":100,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":283,"com.graphhopper.GraphHopperTest.testPrepare":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":124,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":88,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":324,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":107,"com.graphhopper.util.InstructionListTest.testWayList":27,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":338,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":116,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":15,"com.graphhopper.GraphHopperAPITest.testDisconnected179":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":11,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":183,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":113,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":316,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":186,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":48,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":87,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":239,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":266,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":56,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":312,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":231,"com.graphhopper.GraphHopperTest.testLoadOSM":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":194,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":170,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":187,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":261,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":330,"com.graphhopper.reader.OSMReaderTest.testSort":36,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":329,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":119,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":278,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":335,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":97,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":302,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":129,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":140,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":78,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":301,"com.graphhopper.routing.PathTest.testWayList":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":271,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":291,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":114,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":184,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":339,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":275,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":212,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":311,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":181,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":298,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":321,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":121,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":86,"com.graphhopper.util.GHUtilityTest.testSort":20,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":295,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":240,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":309,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":150,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":225,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":160,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":252,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":292,"com.graphhopper.coll.CompressedArrayTest.testCompress2":345,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":65,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":158,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":202,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":326,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":260,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":216,"com.graphhopper.GraphHopperAPITest.testLoad":30,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":58,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":222,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":318,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":257,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":308,"com.graphhopper.reader.OSMReaderTest.testBarriers":37,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":206,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":247,"com.graphhopper.routing.PathTest.testFound":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":279,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":300,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":5,"com.graphhopper.util.GHUtilityTest.testCopy":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":112,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":8,"com.graphhopper.routing.PathTest.testFindInstruction":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":104,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":218,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":299,"com.graphhopper.util.InstructionListTest.testEmptyList":25,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":315,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":115,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":148,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":336,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":120,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":233,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":268,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":290,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":220,"com.graphhopper.reader.PrinctonReaderTest.testRead":47,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":99,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":265,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":286,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":248,"com.graphhopper.util.InstructionListTest.testWayList2":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":173,"com.graphhopper.reader.OSMReaderTest.testFoot":34,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":146,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":192,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":341,"com.graphhopper.reader.OSMReaderTest.testOneWay":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":238,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":276,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":267,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":333,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":332,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":217,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":328,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":153,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":307,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":314,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":38,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":127,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":177,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":214,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":287,"com.graphhopper.routing.PathBidirRefTest.testExtract":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":91,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":161,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":52,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":258,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":241,"com.graphhopper.storage.VLongStorageTest.testWriteWithTrim":344,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":179,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":13,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.util.GHUtilityTest.testSort2":18,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":122,"com.graphhopper.reader.OSMReaderTest.testMain":35,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":294,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":304,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":254,"com.graphhopper.routing.PathBidirRefTest.testExtract2":77,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":288,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":171,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":67,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":182,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":280,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":229,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":10,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":242,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":126,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":188,"com.graphhopper.storage.GraphHopperStorageTest.testClone":310,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":297,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":285,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":320,"com.graphhopper.GraphHopperTest.testFootAndCar":57,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":259,"com.graphhopper.routing.PathTest.testTime":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":269,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":118,"com.graphhopper.util.GHUtilityTest.testSortDirected":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":284,"com.graphhopper.GraphHopperTest.testPrepareOnly":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":274,"com.graphhopper.GraphHopperTest.testVia":54,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":151,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":117,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":42,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":166,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":255,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":29,"com.graphhopper.GraphHopperTest.testFootOnly":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":172,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":41,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":174,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":82,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":273,"com.graphhopper.util.InstructionListTest.testFind":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":264},"transformations":[{"failures":[0,1,2,3],"tindex":"43f5b756-8271-11e5-ac56-235dc3cbe274","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:307","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"variableMap":{"dx":"index","dy":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:201","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getLongitude(int)"},"status":-1},{"failures":[],"tindex":"43f5de67-8271-11e5-ac56-154b214e72fc","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:602","type":"CtForImpl","sourcecode":"for (long long = long + 4 ; long < long ; long += 4) {\n    gnu.trove.set.hash.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":-2},{"failures":[4,5,6,7],"tindex":"43f5de68-8271-11e5-ac56-7b3988209533","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:684","type":"CtAssignmentImpl","sourcecode":"double = int"},"status":-1},{"failures":[8],"tindex":"43f60579-8271-11e5-ac56-513314e48e6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:231","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:279","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"status":-1},{"failures":[9],"tindex":"43f6057a-8271-11e5-ac56-ed9739d55f5a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:277","type":"CtReturnImpl","sourcecode":"return (java.lang.String == null) || ((java.lang.String.trim().length()) == 0)"},"variableMap":{"str":"sacScale"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:192","type":"CtReturnImpl","sourcecode":"return (((\"hiking\".equals(java.lang.String)) || (\"mountain_hiking\".equals(java.lang.String))) || (\"demanding_mountain_hiking\".equals(java.lang.String))) || (\"alpine_hiking\".equals(java.lang.String))"},"status":-1},{"failures":[10,11,12,13],"tindex":"43f6057b-8271-11e5-ac56-ff8f7ed48476","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    int = java.lang.Integer;\n    if ((java.lang.Integer != null) && (java.lang.Integer > java.lang.Integer)) {\n        if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n            int = java.lang.Integer;\n        else\n            int = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"43f6057c-8271-11e5-ac56-6f6d899978ea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:101","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(0)"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,0,1,2,51,3,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"43f6057d-8271-11e5-ac56-79eaed122980","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:220","type":"CtLocalVariableImpl","sourcecode":"int int = (int) * (int)"},"variableMap":{"latSize":"indexDivisor","lonSize":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:242","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[343,344,345,346],"tindex":"43f62c8e-8271-11e5-ac56-a75417b023ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:138","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[56],"tindex":"43f62c8f-8271-11e5-ac56-2187bda6e361","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(1, ((com.graphhopper.util.PointList.getSize()) - 1))"},"variableMap":{"pointList":"copyPL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:384","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-1},{"failures":[],"tindex":"43f62c90-8271-11e5-ac56-856f42196513","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:140","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIteratorState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"43f62c91-8271-11e5-ac56-bba67e0b8280","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:96","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"variableMap":{"node":"towerNode","iter":"adjEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:636","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":0},{"failures":[],"tindex":"43f653a2-8271-11e5-ac56-6575d9fcc8ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:309","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += java.lang.String.trim()"},"variableMap":{"str":"debug","d":"debug"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1050","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (\", algoInit:\" + (com.graphhopper.util.StopWatch.stop().getSeconds())) + \"s\""},"status":0},{"failures":[30,31,0,1,2,51,3,52,54,55,56,57,62,88,90,97,98,99,103,104,106,107,108,109,110,111,112,113,114,116,118,119,120,121,122,123,124,127,128,129,130],"tindex":"43f653a3-8271-11e5-ac56-47cf39781f1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:156","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>"},"status":-1},{"failures":[28],"tindex":"43f653a4-8271-11e5-ac56-03a95db4801f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"variableMap":{"wayTypeName":"dir","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:281","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_right\")"},"status":-1},{"failures":[],"tindex":"43f653a5-8271-11e5-ac56-7d5ef53a2194","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:85","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.max((10 * 4), long)"},"variableMap":{"bytes":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.MotorcycleFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, long))"},"status":0},{"failures":[],"tindex":"43f653a6-8271-11e5-ac56-e1e82ba9634f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:115","type":"CtIfImpl","sourcecode":"if (((byte[][0]) == 'P') && ((byte[][1]) == 'K')) {\n    java.io.InputStream.reset();\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    return java.util.zip.ZipInputStream;\n} else if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    java.io.InputStream.reset();\n    return java.io.InputStream;\n} else if ((java.lang.String.endsWith(\".bz2\")) || (java.lang.String.endsWith(\".bzip2\"))) {\n    java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\";\n    try {\n        java.lang.Class java.lang.Class = java.lang.Class.forName(java.lang.String);\n        java.io.InputStream.reset();\n        java.lang.reflect.Constructor<java.io.InputStream> java.lang.reflect.Constructor<java.io.InputStream> = java.lang.Class.getConstructor(java.io.InputStream.java.io.InputStream, boolean.boolean);\n        return java.lang.reflect.Constructor<java.io.InputStream>.newInstance(java.io.InputStream, true);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.IllegalArgumentException((\"Cannot instantiate \" + java.lang.String) , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalArgumentException((\"Input file is not of valid type \" + (java.io.File.getPath())));\n}"},"status":-2},{"failures":[1,57,115,121,124,130,135,141],"tindex":"43f67ab7-8271-11e5-ac56-c3f7ab2a6e56","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:160","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1))"},"variableMap":{"res":"res","fullPL":"fullPL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:158","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n    com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1));\nelse\n    com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2));\n"},"status":-1},{"failures":[],"tindex":"43f67ab8-8271-11e5-ac56-3b5ea622b8c5","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:281","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.InstructionList.(getSize()) == 0) {\n    return null;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:339","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionList.get(int)"},"status":-2},{"failures":[347],"tindex":"43f67ab9-8271-11e5-ac56-c93fd3bfd091","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"43f62c91-8271-11e5-ac56-bba67e0b8280","diffs":[{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e7"],"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":["com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t7"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e7","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t7"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).e7","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t7"],"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":["com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t6","com.graphhopper.routing.QueryGraph$4_com.graphhopper.util.EdgeIterator_setBaseNode(int).t7"]},"type":"branch"}]},{"transformation":"43f653a2-8271-11e5-ac56-6575d9fcc8ef","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop","com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}