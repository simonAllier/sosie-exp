{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":261,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":270,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":372,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":90,"com.graphhopper.reader.OSMReaderTest.testFerry":240,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":229,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":185,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":325,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":147,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":283,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":411,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":264,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":204,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":395,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":306,"com.graphhopper.GraphHopperTest.testPrepare":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":211,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":51,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":399,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":41,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":235,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":369,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":232,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":65,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":129,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":257,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":394,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":376,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":31,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":342,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":64,"com.graphhopper.GraphHopperTest.testLoadOSM":166,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":383,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":348,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":361,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":291,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":377,"com.graphhopper.reader.OSMReaderTest.testSort":172,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":148,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":301,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":126,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":212,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":275,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":239,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":339,"com.graphhopper.coll.GHSortedCollectionTest.testInsert":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":75,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":188,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":410,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":105,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":142,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":45,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":254,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":320,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":332,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":401,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":290,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":326,"com.graphhopper.GraphHopperAPITest.testLoad":14,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":347,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":121,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":118,"com.graphhopper.reader.OSMReaderTest.testBarriers":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":302,"com.graphhopper.util.GHUtilityTest.testCopy":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":256,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":220,"com.graphhopper.routing.PathTest.testFindInstruction":245,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":371,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":408,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":397,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":338,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":287,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":195,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":387,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":309,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":353,"com.graphhopper.util.InstructionListTest.testWayList2":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":364,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":209,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":384,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":341,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":224,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":300,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":82,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":217,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":117,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":310,"com.graphhopper.routing.PathBidirRefTest.testExtract":246,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":161,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":143,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":103,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":97,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":131,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":158,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":157,"com.graphhopper.util.GHUtilityTest.testSort2":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":46,"com.graphhopper.reader.OSMReaderTest.testMain":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":317,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":84,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":132,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":346,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":292,"com.graphhopper.storage.StorablePropertiesTest.testStore":214,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":139,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":145,"com.graphhopper.storage.GraphHopperStorageTest.testClone":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":308,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":396,"com.graphhopper.util.BitUtilBigTest.testToFloat":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":92,"com.graphhopper.routing.PathTest.testTime":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":68,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":218,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":114,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":203,"com.graphhopper.util.GHUtilityTest.testSortDirected":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":70,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":272,"com.graphhopper.GraphHopperTest.testFootOnly":169,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":363,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":107,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":186,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":199,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":279,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":379,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":267,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":350,"com.graphhopper.routing.QueryGraphTest.testOneWay":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":356,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":375,"com.graphhopper.reader.OSMReaderTest.testWithBounds":178,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":95,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":340,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":205,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":358,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":335,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":328,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":388,"com.graphhopper.search.NameIndexTest.testFlush":181,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":38,"com.graphhopper.util.InstructionListTest.testWayList":236,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":409,"com.graphhopper.GraphHopperAPITest.testDisconnected179":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":196,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":336,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":373,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":192,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":202,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":344,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":101,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":164,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":392,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":265,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":123,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":404,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":366,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":263,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":349,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":385,"com.graphhopper.routing.PathTest.testWayList":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":40,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":374,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":334,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":282,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":398,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":80,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":391,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":30,"com.graphhopper.util.BitUtilBigTest.testToBitString":133,"com.graphhopper.util.GHUtilityTest.testSort":17,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":207,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":381,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":314,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":89,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":389,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":109,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":219,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":284,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":351,"com.graphhopper.util.BitUtilBigTest.testToInt":135,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":312,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":251,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":316,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":190,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":165,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":329,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":288,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":352,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":208,"com.graphhopper.routing.PathTest.testFound":243,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":36,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":83,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":138,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":343,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":120,"com.graphhopper.util.InstructionListTest.testEmptyList":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":44,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":400,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":311,"com.graphhopper.reader.PrinctonReaderTest.testRead":20,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":333,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":191,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":330,"com.graphhopper.reader.OSMReaderTest.testFoot":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":96,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":281,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":112,"com.graphhopper.reader.OSMReaderTest.testOneWay":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":315,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":382,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":122,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":295,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":60,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":403,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":201,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":393,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":179,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":367,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":63,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":54,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":226,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":76,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":271,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":386,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":183,"com.graphhopper.routing.PathBidirRefTest.testExtract2":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":362,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":106,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":406,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":303,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":144,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":262,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":182,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":77,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":407,"com.graphhopper.GraphHopperTest.testFootAndCar":19,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":402,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":321,"com.graphhopper.GraphHopperTest.testPrepareOnly":155,"com.graphhopper.GraphHopperTest.testVia":18,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":110,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":259,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":241,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":176,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":368,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":357,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":286,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":238,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":405,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":365,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":200,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":299,"com.graphhopper.util.InstructionListTest.testFind":233,"com.graphhopper.coll.GHSortedCollectionTest.testUpdate":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":187},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"37b30c37-827a-11e5-b0d2-87ce7aa65d73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:199","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"variableMap":{"factor":"queryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:89","type":"CtForImpl","sourcecode":"for (int int, int int = 0 ; int < 2 ; int++) {\n    if (int == 0) {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    } else {\n        int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    }\n    double double = com.graphhopper.storage.NodeAccess.getLatitude(int);\n    double double = com.graphhopper.storage.NodeAccess.getLongitude(int);\n    double double = com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n    if ((com.graphhopper.util.shapes.Circle == null) || (double < (com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.Circle.getLat(), com.graphhopper.util.shapes.Circle.getLon(), double, double)))) {\n        com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n        com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n        com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n        if (double <= 0)\n            break;\n        \n        com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc);\n    } \n}"},"status":-1},{"failures":[7,8,9],"tindex":"37b35a58-827a-11e5-b0d2-1d786fb004d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:140","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SE\""},"variableMap":{"cp":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:207","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"W\""},"status":-1},{"failures":[10,11,12,13],"tindex":"37b35a59-827a-11e5-b0d2-c3fca8d2aab0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:80","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"variableMap":{"time":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:91","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,0,108,109,110,111,112,113,114,115,116,2,4,6,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"37b35a5a-827a-11e5-b0d2-316add3b601d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:61","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"initLeafSize":"nodeOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"37b3816b-827a-11e5-b0d2-a5a4d854e504","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:589","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMNode.getLat()"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:590","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMNode.getLon()"},"status":-2},{"failures":[],"tindex":"37b3816c-827a-11e5-b0d2-ef393f55e6f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:102","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FastestWeighting.toString().equals(com.graphhopper.routing.util.FastestWeighting.toString())"},"status":0},{"failures":[129,130,131,132],"tindex":"37b3a87d-827a-11e5-b0d2-472c08f5cf6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:723","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Integer>.put(java.lang.String, int)"},"status":-1},{"failures":[133,134,135,136,137,138,139],"tindex":"37b3a87e-827a-11e5-b0d2-fd9a760c66a4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"status":-1},{"failures":[140,141],"tindex":"37b3a87f-827a-11e5-b0d2-8d0f5b930b05","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHSortedCollection.remove(int, int)"},"status":-1},{"failures":[],"tindex":"37b3a880-827a-11e5-b0d2-db4f9549425d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:942","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[71,73,74,142,79,83,86,88,143,91,95,98,100,144,122,124,125,145],"tindex":"37b3cf91-827a-11e5-b0d2-89563e62d8d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:806","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"variableMap":{"edgeId":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:326","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"status":-1},{"failures":[25,146,32,147,148,34,70,71,149,74,82,83,150,86,94,95,151,98,121,122,152,125],"tindex":"37b3cf92-827a-11e5-b0d2-6b247f708aec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:681","type":"CtIfImpl","sourcecode":"if ((int != (com.graphhopper.storage.EdgeAccess.int)) && (com.graphhopper.coll.GHBitSet.contains(int))) {\n    int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge();\n    long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n    com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(int, long, int, int);\n    com.graphhopper.storage.EdgeAccess.invalidateEdge(long);\n} else {\n    long = com.graphhopper.storage.BaseGraph.EdgeIterable.long;\n}"},"status":-1},{"failures":[14,153,154,155,156,157,158,159,160,161,162,18,163,164,19,165,166,167,168,169,170,22,171,172,173,174,24,175,176,177,178,25,26,28,179,31,147,180,148],"tindex":"37b3cf93-827a-11e5-b0d2-fbb1cc08e9c4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:140","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:416","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.routing.util.FlagEncoder>"},"status":-1},{"failures":[140,141],"tindex":"37b3f6a4-827a-11e5-b0d2-af3d56674c34","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"oldValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:72","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHSortedCollection.remove(int, int)"},"status":-1},{"failures":[],"tindex":"37b3f6a5-827a-11e5-b0d2-f97586188876","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:324","type":"CtReturnImpl","sourcecode":"return \"SRTM\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:358","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[181,182,183,184,185,186,187,188,189,190,191,90,91,192,193,194,195,92,196,93,197,94,95,198,151,199,200,201,202,203,204,205,206,96,207,208,97,98,209,99,210,100,211,212,213,101,144,214,215,216,217,107,0,108,218,219,220,221,222,223,224,225],"tindex":"37b3f6a6-827a-11e5-b0d2-19eabfd0eee6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:196","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHDirectory.isStoring())\n    new java.io.File(java.lang.String).mkdirs();\n"},"status":-1},{"failures":[14,153,226,227,15,16,17,228,229,230,231,232,233,234,235,236,237,238,154,155,156,157,158,159,160,161,162,18,163,164,19,165,166,167,168,169,170,20,21,239,240,22,171,172,23,173,174,24,175,176,241,177,178,242,25,26,27,243,244,28,179,29,245,30,31,246,247,146,32,33,147,180,148,34,35,248,249,250,251,36,252,37,38,39,253,254,255,256,257,40,258,41,259,42,43,44,45,46,260,47,261,262,48,49,263,50,51,52,53,54,264,55,56,57,58,59,60,61,62,265,63,64,266,266,267,267,268,268,269,269,270,270,271,271,272,272,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,65,282,182,283,284,285,183,286,287,288,289,184,185,290,291,292,66,67,293,294,295,296,68,297,69,298,299,70,71,300,149,301,302,303,304,305,306,307,308,72,309,310,73,74,311,75,312,76,313,314,315,77,142,187,316,189,190,317,318,319,78,79,320,321,322,323,80,324,81,325,326,82,83,327,150,328,329,330,331,332,333,334,335,84,336,337,85,86,338,87,339,88,340,341,342,89,143,343,208,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,102,366,367,368,103,104,105,106,369,217,107,0,108,219,370,371,372,109,110,111,373,374,375,376,377,378,379,380,381,112,382,383,384,113,114,115,116,1,2,3,4,5,6,385,223,224,225,386,387,388,117,118,389,390,391,392,119,393,120,394,395,121,122,396,152,397,398,399,400,401,402,403,404,123,405,406,124,125,407,126,408,127,409,410,411,128,145],"tindex":"37b41db7-827a-11e5-b0d2-dddd83b2ce51","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:337","type":"CtAssignmentImpl","sourcecode":"int[][][int] = null"},"variableMap":{"segNumber":"segmentSizeIntsPower","segments":"newSegs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-1},{"failures":[],"tindex":"37b41db8-827a-11e5-b0d2-4dd700f9d727","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:178","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:265","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"37b444c9-827a-11e5-b0d2-47e40a29e29a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1106","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"baseNode":"len","com.graphhopper.storage.EdgeAccess.NO_NODE":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:837","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], int, 0)"},"status":-2},{"failures":[],"tindex":"37b444ca-827a-11e5-b0d2-fd358f6a6a94","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:456","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:635","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"37b3816c-827a-11e5-b0d2-ef393f55e6f0","diffs":[{"methodsDiff":{"delete":["java.lang.String.equals","com.graphhopper.routing.util.FastestWeighting.toString"]},"type":"staticDiff"}]}]}