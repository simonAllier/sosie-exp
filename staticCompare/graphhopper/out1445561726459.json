{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":309,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":61,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":277,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":295,"com.graphhopper.reader.OSMReaderTest.testFerry":82,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":330,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":331,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":3,"com.graphhopper.routing.QueryGraphTest.testOneWay":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":224,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":273,"com.graphhopper.reader.OSMReaderTest.testWithBounds":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":316,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":69,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":306,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":315,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":314,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":249,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":98,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":225,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":270,"com.graphhopper.GraphHopperTest.testPrepare":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":325,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":121,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":138,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":43,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":152,"com.graphhopper.util.InstructionListTest.testWayList":334,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":52,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":333,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":338,"com.graphhopper.GraphHopperAPITest.testDisconnected179":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":302,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":271,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":274,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":27,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":80,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":73,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":195,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":328,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":109,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":127,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":187,"com.graphhopper.GraphHopperTest.testLoadOSM":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":252,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":144,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":275,"com.graphhopper.reader.OSMReaderTest.testSort":85,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":55,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":72,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":220,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":149,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":161,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":65,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":81,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":18,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":117,"com.graphhopper.routing.PathTest.testWayList":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":191,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":327,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":233,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":158,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":50,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":272,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":251,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":217,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":199,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":169,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":263,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":240,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":26,"com.graphhopper.util.GHUtilityTest.testSort":342,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":303,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":237,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":16,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":291,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":181,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":245,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":198,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":234,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":77,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":265,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":160,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":140,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":172,"com.graphhopper.GraphHopperAPITest.testLoad":96,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":178,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":132,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":68,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":75,"com.graphhopper.reader.OSMReaderTest.testBarriers":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":163,"com.graphhopper.routing.PathTest.testFound":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":318,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":246,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":299,"com.graphhopper.util.GHUtilityTest.testCopy":341,"com.graphhopper.routing.PathTest.testFindInstruction":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":164,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":174,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":304,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":51,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":289,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":150,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":56,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":189,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":176,"com.graphhopper.reader.PrinctonReaderTest.testRead":79,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":294,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":37,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":228,"com.graphhopper.util.InstructionListTest.testWayList2":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":255,"com.graphhopper.reader.OSMReaderTest.testFoot":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":321,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":280,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":155,"com.graphhopper.reader.OSMReaderTest.testOneWay":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":281,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":194,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":76,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":218,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":210,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":36,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":173,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":241,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":122,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":311,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":229,"com.graphhopper.routing.PathBidirRefTest.testExtract":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":30,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":268,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":105,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":78,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":202,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":320,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":197,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":103,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":261,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":319,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":287,"com.graphhopper.util.GHUtilityTest.testSort2":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":307,"com.graphhopper.reader.OSMReaderTest.testMain":84,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":200,"com.graphhopper.routing.PathBidirRefTest.testExtract2":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":230,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":344,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":323,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":253,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":284,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":264,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":222,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":185,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":205,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":35,"com.graphhopper.storage.GraphHopperStorageTest.testClone":125,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":276,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":227,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":134,"com.graphhopper.GraphHopperTest.testFootAndCar":110,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":301,"com.graphhopper.routing.PathTest.testTime":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":285,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":226,"com.graphhopper.util.GHUtilityTest.testSortDirected":343,"com.graphhopper.GraphHopperTest.testPrepareOnly":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":216,"com.graphhopper.GraphHopperTest.testVia":107,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":292,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":53,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":260,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":248,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":201,"com.graphhopper.GraphHopperTest.testFootOnly":115,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":336,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":254,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":90,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":242,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":256,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":22,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":310,"com.graphhopper.util.InstructionListTest.testFind":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":286},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"bf95ae24-7920-11e5-99f3-950ed79ca41a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"variableMap":{"splitIndex":"nodeB","entrySize":"nodeB"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:498","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.BaseGraph.nextEdgeId(), int, int)"},"status":-1},{"failures":[344],"tindex":"bf95d535-7920-11e5-99f3-790e99b4a6f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:168","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"track\")) {\n    java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\");\n    if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n        if (java.lang.Integer != null)\n            java.lang.Integer = java.lang.Integer;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"bf95fc46-7920-11e5-99f3-57494f20176b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:509","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if ((com.graphhopper.util.EdgeIterator.getAdjNode()) == int)\n        return com.graphhopper.util.EdgeIterator;\n    \n}"},"variableMap":{"adj":"adjNode","iter":"eis2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:576","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIteratorState.getAdjNode()) == int)\n    return com.graphhopper.util.EdgeIteratorState;\n"},"status":-2},{"failures":[],"tindex":"bf95fc47-7920-11e5-99f3-ebfc2f2a9a6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:228","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"variableMap":{"fwdFaster":"prevLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:326","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"bf95fc48-7920-11e5-99f3-117b50310c71","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:144","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"blockByDefault":"empty"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":-2},{"failures":[],"tindex":"bf95fc49-7920-11e5-99f3-bb9060cee094","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:311","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call prepareIndex only once\");\n"},"variableMap":{"initialized":"binary"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:229","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    javax.xml.stream.XMLStreamReader.close();\n"},"status":-2},{"failures":[],"tindex":"bf95fc4a-7920-11e5-99f3-6d64bebb0f6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:55","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"bf95fc4b-7920-11e5-99f3-87eb9d38ef01","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:349","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"variableMap":{"mSize":"fromNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:176","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.getOtherNode(int, long)"},"status":-2},{"failures":[],"tindex":"bf96235c-7920-11e5-99f3-076443e0b49d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.doWork()"},"status":-2},{"failures":[],"tindex":"bf96235d-7920-11e5-99f3-ef73891cd5d7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:81","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (java.lang.String) + \" \""},"variableMap":{"str":"str","name":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:198","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"S\""},"status":-2},{"failures":[],"tindex":"bf96235e-7920-11e5-99f3-bdb120fb3a93","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"ghStorage","newGraph":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:751","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = new com.graphhopper.storage.GraphHopperStorage(new java.util.ArrayList<com.graphhopper.routing.util.Weighting>(java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.keySet()) , com.graphhopper.storage.GHDirectory , com.graphhopper.routing.util.EncodingManager , com.graphhopper.GraphHopper.hasElevation() , com.graphhopper.storage.GraphExtension)"},"status":-2},{"failures":[],"tindex":"bf96235f-7920-11e5-99f3-8f49eb50475a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:136","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"geometry.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_GEOMETRY":"com.graphhopper.util.Constants.VERSION_NAME_IDX","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[],"tindex":"bf962360-7920-11e5-99f3-1d7a503a1319","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:140","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.PointList.getLatitude(int)"},"status":-2},{"failures":[],"tindex":"bf962361-7920-11e5-99f3-4f0cec84e16e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:482","type":"CtReturnImpl","sourcecode":"return java.util.TreeMap<java.lang.Double, java.lang.Integer>.lastEntry().getValue()"},"status":-2},{"failures":[],"tindex":"bf964a72-7920-11e5-99f3-a91aa570f9e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:226","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"bf964a73-7920-11e5-99f3-8feef2916b2d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:190","type":"CtAssignmentImpl","sourcecode":"double = -double"},"variableMap":{"eleDelta":"com.graphhopper.util.AngleCalc.PI3_4","decEleSum":"angle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"status":-2},{"failures":[],"tindex":"bf964a74-7920-11e5-99f3-c5aa36e9230d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:77","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long)"},"status":-2},{"failures":[],"tindex":"bf964a75-7920-11e5-99f3-dfcbe15ee1a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:108","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":-2},{"failures":[],"tindex":"bf964a76-7920-11e5-99f3-3dcb645dc5dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:141","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"bf964a77-7920-11e5-99f3-c1dae41700f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:770","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"variableMap":{"min":"maxSpeed","dist":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:372","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}