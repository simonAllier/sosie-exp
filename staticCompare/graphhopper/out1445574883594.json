{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":32,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":39,"com.graphhopper.reader.OSMReaderTest.testMain":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":9,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":23,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":30,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":8,"com.graphhopper.routing.PathTest.testWayList":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":14,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":27,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":34,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":12,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":0,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":29,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":3,"com.graphhopper.GraphHopperTest.testPrepare":54,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":25,"com.graphhopper.util.InstructionListTest.testWayList2":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":5,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":24,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":37,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":38,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":41,"com.graphhopper.util.InstructionListTest.testWayList":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":10,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":40,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":11,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":26,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":58,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":35,"com.graphhopper.GraphHopperTest.testPrepareOnly":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":45,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":59,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":15,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":51,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":22,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":42,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":33,"com.graphhopper.GraphHopperTest.testFootOnly":60,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":55,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":21,"com.graphhopper.reader.OSMReaderTest.testBarriers":48,"com.graphhopper.util.InstructionListTest.testFind":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":20,"com.graphhopper.GraphHopperTest.testLoadOSM":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":16,"com.graphhopper.util.GHUtilityTest.testCopy":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":2,"com.graphhopper.reader.OSMReaderTest.testSort":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":17},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"61da1276-793f-11e5-8522-b77acaea72c1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1068","type":"CtAssertImpl","sourcecode":"assert boolean"},"variableMap":{"ret":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:838","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.PointList.reverse();\n"},"status":-1},{"failures":[],"tindex":"61da6097-793f-11e5-8522-6baaf6b7be49","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:585","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMReader.getNodeMap().get(com.graphhopper.reader.OSMNode.getId())"},"status":-2},{"failures":[],"tindex":"61da6098-793f-11e5-8522-252b91cfeeb0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"61da6099-793f-11e5-8522-db80e10a7818","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:150","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return ;\n} "},"variableMap":{"size":"minNetworkSize","i":"minOneWayNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:71","type":"CtIfImpl","sourcecode":"if (((int) <= 0) && ((int) <= 0))\n    return ;\n"},"status":-2},{"failures":[],"tindex":"61da609a-793f-11e5-8522-07e6481753f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:171","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMElement != null)\n    return com.graphhopper.reader.OSMElement;\n"},"status":-2},{"failures":[],"tindex":"61da87ab-793f-11e5-8522-433936a7ccfb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRelBitMask((int - (int)), int)"},"status":-2},{"failures":[],"tindex":"61da87ac-793f-11e5-8522-8bf9c67f99db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)))"},"status":-2},{"failures":[],"tindex":"61da87ad-793f-11e5-8522-8dea01efb6e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:295","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < com.graphhopper.util.InstructionList.(getSize()) ; int++) {\n    com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(int).getPoints();\n    for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n        double double = com.graphhopper.util.PointList.getLatitude(int);\n        double double = com.graphhopper.util.PointList.getLongitude(int);\n        if (!((int == 0) && (int == 0))) {\n            double double;\n            int int = int;\n            if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n                double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n                if (int > 0)\n                    int++;\n                \n            } else {\n                double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n                if (int > 0)\n                    int++;\n                \n            }\n            if (double < double) {\n                double = double;\n                int = int;\n            } \n        } \n        double = double;\n        double = double;\n    }\n}"},"status":-2},{"failures":[],"tindex":"61da87ae-793f-11e5-8522-7394628c53c4","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:251","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:azimuth>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:direction>\")"},"status":-2},{"failures":[],"tindex":"61daaebf-793f-11e5-8522-dff28e5993c8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:770","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"variableMap":{"min":"meanDegree","dist":"meanDegree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:638","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler instanceof com.graphhopper.routing.ch.PrepareContractionHierarchies.AddShortcutHandler) {\n    double = (((double) * 2) + long) / 3;\n} "},"status":-2},{"failures":[],"tindex":"61daaec0-793f-11e5-8522-cbeee77ffc60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"status":-2},{"failures":[],"tindex":"61daaec1-793f-11e5-8522-47cf75af0a00","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"ferryBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:690","type":"CtReturnImpl","sourcecode":"return (long & (long)) != 0"},"status":-2},{"failures":[],"tindex":"61daaec2-793f-11e5-8522-29752498cc3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/gpx>\")"},"status":-2},{"failures":[],"tindex":"61dad5d3-793f-11e5-8522-c5ec2ecf7ec1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:723","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"))"},"variableMap":{"graphHopperFolder":"fileName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:68","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String)"},"status":-2},{"failures":[],"tindex":"61dad5d4-793f-11e5-8522-a9bc23837654","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:310","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:218","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Instruction.com.graphhopper.util.AngleCalc.azimuth2compassPoint(double)"},"status":-2},{"failures":[],"tindex":"61dad5d5-793f-11e5-8522-57ca9dac50d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:488","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting)))\n    return java.util.Collections.emptyList();\n"},"status":-2},{"failures":[],"tindex":"61dad5d6-793f-11e5-8522-9194502bf5fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:584","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"tracktype\")"},"status":-2},{"failures":[],"tindex":"61dafce7-793f-11e5-8522-43b4b374f2fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags())"},"status":-2},{"failures":[],"tindex":"61dafce8-793f-11e5-8522-cb262cd9c779","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:225","type":"CtIfImpl","sourcecode":"if (long <= 0) {\n    throw new java.lang.IllegalStateException((\"invalid bitmask:\" + long));\n} "},"variableMap":{"bm":"wayStart"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:298","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    com.graphhopper.reader.OSMReader.com.graphhopper.routing.util.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"));\n    long = long;\n} "},"status":-2},{"failures":[],"tindex":"61dafce9-793f-11e5-8522-05c2293de386","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"variableMap":{"tmpNo":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:105","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}