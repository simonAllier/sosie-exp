{"failureDictionary":{"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":35,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":45,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":54,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":44,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":8,"com.graphhopper.storage.RAMDataAccessTest.testHeader":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":42,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":11,"com.graphhopper.storage.MMapDataAccessTest.testCopy":31,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":40,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":14,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":10,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":46,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":55,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":7,"com.graphhopper.storage.StorablePropertiesTest.testStore":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":41,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":19,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":4,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":39,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":51,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":49,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":12,"com.graphhopper.GraphHopperTest.testPrepare":25,"com.graphhopper.GraphHopperTest.testFootAndCar":27,"com.graphhopper.util.BitUtilBigTest.testToFloat":21,"com.graphhopper.util.BitUtilBigTest.testToBitString":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":43,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":16,"com.graphhopper.search.NameIndexTest.testFlush":33,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":2,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":38,"com.graphhopper.util.BitUtilBigTest.testToInt":22,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":9,"com.graphhopper.GraphHopperTest.testPrepareOnly":56,"com.graphhopper.GraphHopperTest.testVia":24,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":47,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":30,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":36,"com.graphhopper.GraphHopperAPITest.testLoad":23,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":28,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":48,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":6,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":13,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":26,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":58,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":0,"com.graphhopper.GraphHopperTest.testLoadOSM":29,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":57,"com.graphhopper.coll.GHSortedCollectionTest.testUpdate":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":34,"com.graphhopper.storage.RAMDataAccessTest.testSegments":53},"transformations":[{"failures":[0],"tindex":"b3b01385-827a-11e5-9308-2f91932d93d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:228","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"b3b03a96-827a-11e5-9308-3909343230f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:788","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"status":0},{"failures":[1],"tindex":"b3b03a97-827a-11e5-9308-857ed3f49db1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"status":-1},{"failures":[2,3,4,5],"tindex":"b3b03a98-827a-11e5-9308-a3d2842458b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:571","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"class:bicycle\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:283","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"sac_scale\")"},"status":-1},{"failures":[],"tindex":"b3b03a99-827a-11e5-9308-31b733e35760","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:286","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0)\n    java.lang.StringBuilder.append(\",\");\n"},"status":0},{"failures":[],"tindex":"b3b03a9a-827a-11e5-9308-6fccc246c0a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:271","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[6,7,8,1,9,10,11,12,13,14,15],"tindex":"b3b061ab-827a-11e5-9308-a97eb066a5b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:424","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    int int = java.lang.String.indexOf(\"mp\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.parseInt(java.lang.String);\n        return int * (com.graphhopper.util.DistanceCalcEarth.double);\n    } \n    int int = java.lang.String.indexOf(\"knots\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n        int = java.lang.Integer.parseInt(java.lang.String);\n        return int * 1.852;\n    } \n    int int = java.lang.String.indexOf(\"km\");\n    if (int > 0) {\n        java.lang.String = java.lang.String.substring(0, int).trim();\n    } else {\n        int = java.lang.String.indexOf(\"kph\");\n        if (int > 0) {\n            java.lang.String = java.lang.String.substring(0, int).trim();\n        } \n    }\n    return java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.Exception ex) {\n    return -1;\n}"},"status":-1},{"failures":[16,17,18,19,20,21,22],"tindex":"b3b061ac-827a-11e5-9308-c90df848ff6b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:57","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int))"},"status":-1},{"failures":[],"tindex":"b3b061ad-827a-11e5-9308-3b08f3c09fe8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:61","type":"CtReturnImpl","sourcecode":"return 1"},"status":0},{"failures":[23,24,25,26,27,28,29,30],"tindex":"b3b061ae-827a-11e5-9308-5120d2da4370","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:802","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n"},"variableMap":{"simplifyAlgo":"douglasPeucker","pillarNodes":"fullPoints","doSimplify":"simplifyResponse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:68","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : com.graphhopper.util.InstructionList) {\n    if (boolean) {\n        int += com.graphhopper.util.Instruction.getPoints().size();\n        com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.Instruction.getPoints());\n    } \n    com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction);\n    com.graphhopper.util.PointList.add(com.graphhopper.util.Instruction.getPoints());\n}"},"status":-1},{"failures":[],"tindex":"b3b061af-827a-11e5-9308-c1e70f4d0188","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:264","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.AStarEdge == null) {\n    com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n    gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n} else {\n    assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.routing.AStar.AStarEdge.double = double;\n    com.graphhopper.routing.AStar.AStarEdge.double = float;\n}"},"status":-1},{"failures":[],"tindex":"b3b088c0-827a-11e5-9308-2b554c0fcfe9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:205","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[][].int) ; int++) {\n    int[] int[] = int[][][int];\n    int int = int[].int;\n    byte[] byte[] = new byte[int * 4];\n    for (int int = 0 ; int < int ; int++) {\n        com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4));\n    }\n    java.io.RandomAccessFile.write(byte[]);\n}"},"status":-2},{"failures":[],"tindex":"b3b088c1-827a-11e5-9308-b7c55de346a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:132","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((int[].int) * 4) ; int += 4) {\n    com.graphhopper.storage.DataAccess.setHeader(int, com.graphhopper.storage.AbstractDataAccess.getHeader(int));\n}"},"status":-2},{"failures":[31],"tindex":"b3b088c2-827a-11e5-9308-37d4911a186c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.getCapacity())"},"status":-1},{"failures":[],"tindex":"b3b088c3-827a-11e5-9308-b1dc74fa616f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:276","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString()"},"status":-2},{"failures":[32],"tindex":"b3b088c4-827a-11e5-9308-112d92017a2e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:64","type":"CtIfImpl","sourcecode":"if (gnu.trove.set.hash.TIntHashSet.isEmpty()) {\n    java.util.TreeMap<java.lang.Integer, gnu.trove.set.hash.TIntHashSet>.remove(int);\n} "},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,28,29,30,57],"tindex":"b3b088c5-827a-11e5-9308-57a6bd8928cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:113","type":"CtForImpl","sourcecode":"for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n    byte[][][int] = new byte[1 << (int)];\n}"},"variableMap":{"newSegs":"segments","length":"segmentSizeInBytes","segmentSizePower":"com.graphhopper.storage.AbstractDataAccess.HEADER_OFFSET","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"rw\");\n    try {\n        long long = com.graphhopper.storage.RAMDataAccess.getCapacity();\n        com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        for (int int = 0 ; int < (byte[][].int) ; int++) {\n            byte[] byte[] = byte[][][int];\n            java.io.RandomAccessFile.write(byte[]);\n        }\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"Couldn\\'t store bytes to \" + com.graphhopper.storage.AbstractDataAccess.(toString())) , java.lang.Exception);\n}"},"status":-1},{"failures":[58],"tindex":"b3b0afd6-827a-11e5-9308-2f67c545838b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:228","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"railway\")) && (!(com.graphhopper.reader.OSMWay.hasTag(\"railway\", java.util.Set<java.lang.String>))))\n    return 0;\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b3b03a99-827a-11e5-9308-31b733e35760","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}