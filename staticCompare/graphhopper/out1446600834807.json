{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":74,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":202,"com.graphhopper.util.BitUtilBigTest.testToDouble":206,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":166,"com.graphhopper.GraphHopperAPITest.testNoLoad":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":61,"com.graphhopper.reader.OSMReaderTest.testFerry":210,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":8,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":162,"com.graphhopper.reader.OSMReaderTest.testWithBounds":217,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":71,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":79,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":89,"com.graphhopper.GraphHopperTest.testPrepare":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":118,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":127,"com.graphhopper.util.InstructionListTest.testWayList":12,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":135,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":7,"com.graphhopper.GraphHopperAPITest.testDisconnected179":5,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":161,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":163,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":2,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":103,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":93,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":123,"com.graphhopper.GraphHopperTest.testLoadOSM":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":169,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":164,"com.graphhopper.reader.OSMReaderTest.testSort":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":102,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":143,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":3,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":108,"com.graphhopper.routing.PathTest.testWayList":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":144,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug2":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":126,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":30,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":137,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":116,"com.graphhopper.util.GHUtilityTest.testSort":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":130,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":43,"com.graphhopper.util.BitUtilBigTest.testToLong":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":22,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":23,"com.graphhopper.GraphHopperAPITest.testLoad":4,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":142,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":26,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":105,"com.graphhopper.reader.OSMReaderTest.testBarriers":160,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":83,"com.graphhopper.routing.PathTest.testFound":110,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":175,"com.graphhopper.util.GHUtilityTest.testCopy":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":132,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":197,"com.graphhopper.routing.PathTest.testFindInstruction":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":124,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":136,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":38,"com.graphhopper.reader.PrinctonReaderTest.testRead":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":66,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":41,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":193,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":196,"com.graphhopper.util.InstructionListTest.testWayList2":13,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":223,"com.graphhopper.reader.OSMReaderTest.testFoot":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":82,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":170,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":168,"com.graphhopper.reader.OSMReaderTest.testOneWay":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":212,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":141,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":119,"com.graphhopper.routing.PathBidirRefTest.testExtract":106,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":209,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":150,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":96,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":59,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":149,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":84,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":146,"com.graphhopper.util.GHUtilityTest.testSort2":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":72,"com.graphhopper.reader.OSMReaderTest.testMain":158,"com.graphhopper.util.DistanceCalcEarthTest.testPrecisionBug":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":42,"com.graphhopper.routing.PathBidirRefTest.testExtract2":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":181,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":190,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":176,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":94,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":47,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":165,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":87,"com.graphhopper.GraphHopperTest.testFootAndCar":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":67,"com.graphhopper.routing.PathTest.testTime":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":78,"com.graphhopper.util.GHUtilityTest.testSortDirected":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":29,"com.graphhopper.GraphHopperTest.testVia":151,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":62,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":192,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":177,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":203,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":14,"com.graphhopper.GraphHopperTest.testFootOnly":191,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":182,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":214,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":75,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":112,"com.graphhopper.util.InstructionListTest.testFind":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":173},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"1c6d8c43-8294-11e5-a014-e30e490ffd90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:219","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[4,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,107,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"1c6dda64-8294-11e5-a014-c7dd370d9214","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:92","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.processEdge(int, com.graphhopper.storage.EdgeEntry.int)"},"status":-1},{"failures":[158,159,160,4,5,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,134,136,137,140,145,146,147,148,149,150,151,152,153,154,155,156,157,191],"tindex":"1c6dda65-8294-11e5-a014-ed9392f3de4b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:132","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalStateException((\"This is a 2D list we cannot store elevation: \" + double));\n"},"variableMap":{"ele":"subqueryLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:736","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double)"},"status":-1},{"failures":[192],"tindex":"1c6e0176-8294-11e5-a014-cffeb82c922b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:210","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rte>\")"},"variableMap":{"track":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:221","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\")"},"status":-1},{"failures":[193],"tindex":"1c6e0177-8294-11e5-a014-572e16498409","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:416","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-1},{"failures":[194],"tindex":"1c6e0178-8294-11e5-a014-e5b2114ed5de","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:139","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"variableMap":{"precision":"maxY","lat":"deltaY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:77","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"1c6e0179-8294-11e5-a014-d15ebc10f6d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:353","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    java.lang.String += \", \" + (com.graphhopper.storage.CHGraphImpl.toDetailsString());\n}"},"status":0},{"failures":[],"tindex":"1c6e288a-8294-11e5-a014-ed175604beaa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:984","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.EdgeIterable.selectEdgeAccess()"},"variableMap":{"this":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:405","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.applyWayTags(com.graphhopper.reader.OSMWay, com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"1c6e288b-8294-11e5-a014-d9c8b660322b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:142","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"1c6e288c-8294-11e5-a014-4524af26583a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:584","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[195,196,197,198],"tindex":"1c6e288d-8294-11e5-a014-95d656c8d224","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:288","type":"CtReturnImpl","sourcecode":"return long ^ (long)"},"variableMap":{"directionBitMask":"acceptBit","flags":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:252","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[199,200,201,202,203,204,205,137,140,151,154],"tindex":"1c6e288e-8294-11e5-a014-f55e1ae836c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"variableMap":{"dist":"b_lat_deg","com.graphhopper.util.DistanceCalcEarth.R":"b_lat_deg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:175","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.cos(java.lang.Math.java.lang.Math.toRadians(((double + double) / 2)))"},"status":-1},{"failures":[206,207],"tindex":"1c6e4f9f-8294-11e5-a014-eb5a89caf954","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:80","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 16))"},"status":-1},{"failures":[208,209],"tindex":"1c6e4fa0-8294-11e5-a014-33822d3448f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"acceptBit","len":"acceptBit","start":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:232","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[],"tindex":"1c6e4fa1-8294-11e5-a014-8bb1c7e1c814","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:434","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"1c6e4fa2-8294-11e5-a014-d1b11c1a40db","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"1c6e76b3-8294-11e5-a014-3bbedf7b358e","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"initializedCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:291","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[210,211,158,159,160,212,213,0,214,215,216,217,218,219,4,5,220,221,145,146,147,148,149,150,153,154,155,157],"tindex":"1c6e76b4-8294-11e5-a014-c145c7d97edf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:650","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.flush()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:328","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-1},{"failures":[222,223],"tindex":"1c6e76b5-8294-11e5-a014-6b638db60870","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:572","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue());\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1c6e0179-8294-11e5-a014-d15ebc10f6d2","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.CHGraphImpl.toDetailsString"]},"branchesDiff":{"delete":["l0"]},"type":"staticDiff"}]}]}