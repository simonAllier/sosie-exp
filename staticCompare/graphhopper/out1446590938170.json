{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":29,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":35,"com.graphhopper.reader.OSMReaderTest.testMain":1,"com.graphhopper.reader.OSMReaderTest.testFerry":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":48,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":32,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":19,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":7,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":60,"com.graphhopper.reader.OSMReaderTest.testWithBounds":30,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":45,"com.graphhopper.coll.CompressedArrayTest.testCompress":65,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":47,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":68,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":49,"com.graphhopper.GraphHopperTest.testPrepare":9,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":34,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":36,"com.graphhopper.GraphHopperTest.testFootAndCar":11,"com.graphhopper.util.EdgeWrapperTest.testPut":4,"com.graphhopper.reader.OSMReaderTest.testFoot":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":39,"com.graphhopper.util.InstructionListTest.testWayList":66,"com.graphhopper.reader.OSMReaderTest.testOneWay":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":46,"com.graphhopper.GraphHopperAPITest.testDisconnected179":18,"com.graphhopper.reader.OSMReaderTest.testRelation":26,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":14,"com.graphhopper.GraphHopperTest.testPrepareOnly":6,"com.graphhopper.coll.CompressedArrayTest.testCompress2":64,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":67,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":28,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":2,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":27,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":3,"com.graphhopper.GraphHopperAPITest.testLoad":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":44,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":59,"com.graphhopper.GraphHopperTest.testFootOnly":0,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":42,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":25,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":58,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":62,"com.graphhopper.reader.OSMReaderTest.testBarriers":23,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":52,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":40,"com.graphhopper.util.GHUtilityTest.testCopy":61,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":37,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":56,"com.graphhopper.reader.OSMReaderTest.testSort":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":54},"transformations":[{"failures":[0,1,2,3],"tindex":"1190995b-827d-11e5-861f-69f7521090dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"variableMap":{"y1":"lon","x1":"lon","y2":"lon","x2":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:779","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double, double)"},"status":-1},{"failures":[],"tindex":"1190c06c-827d-11e5-861f-071c4b17465c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:699","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseIntIntArray.keyAt(int)"},"status":-2},{"failures":[],"tindex":"1190c06d-827d-11e5-861f-0de23d7d3946","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:747","type":"CtIfImpl","sourcecode":"if (double < double)\n    return true;\n"},"variableMap":{"minDistance":"lon","rMin":"radiusInKm"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.Circle:155","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.shapes.Circle.(normDist(com.graphhopper.util.shapes.Circle.double, com.graphhopper.util.shapes.Circle.double)) <= (com.graphhopper.util.DistanceCalc.calcNormalizedDist(((double) + (com.graphhopper.util.shapes.Circle.double))))"},"status":-2},{"failures":[],"tindex":"1190c06e-827d-11e5-861f-b3d091fd1a20","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Unzipper:37","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.lang.String)"},"variableMap":{"fromStr":"graphHopperFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:723","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"))"},"status":-2},{"failures":[4],"tindex":"1190e77f-827d-11e5-861f-89a29f63c6b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:172","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"variableMap":{"elem":"parents","i":"ref","child":"ref"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:68","type":"CtAssignmentImpl","sourcecode":"int[][int] = -1"},"status":-1},{"failures":[],"tindex":"1190e780-827d-11e5-861f-051a058b478f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"variableMap":{"loadedCHWeightings":"com.graphhopper.util.Constants.VERSION","configuredCHWeightings":"com.graphhopper.util.Constants.BUILD_DATE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:600","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info(((((((\"version \" + (com.graphhopper.util.Constants.java.lang.String)) + \"|\") + (com.graphhopper.util.Constants.java.lang.String)) + \" (\") + (com.graphhopper.util.Constants.getVersions())) + \")\"))"},"status":-2},{"failures":[],"tindex":"1190e781-827d-11e5-861f-19537d701524","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:92","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-2},{"failures":[],"tindex":"1190e782-827d-11e5-861f-1d4454a2d87e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:140","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSet","ase":"ase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:133","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"status":0},{"failures":[],"tindex":"1190e783-827d-11e5-861f-dfec0e2b5721","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:205","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"E\""},"variableMap":{"str":"message"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:45","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,0,16,17,18,19,20,21,1,22,23,2,3,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"1190e784-827d-11e5-861f-731177d04c1a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AbstractRoutingAlgorithm:87","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Create a new instance per call\");\n"},"variableMap":{"alreadyRun":"approx"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:44","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.DistanceCalc = com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection;\nelse\n    com.graphhopper.util.DistanceCalc = com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc;\n"},"status":-1},{"failures":[37,38],"tindex":"11910e95-827d-11e5-861f-9f927730b4b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:520","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:261","type":"CtReturnImpl","sourcecode":"return ((int)((long) / (int)))"},"status":-1},{"failures":[],"tindex":"11910e96-827d-11e5-861f-7be403cbe6a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:323","type":"CtIfImpl","sourcecode":"if (int < (int))\n    return ;\n"},"variableMap":{"nodeIndex":"length","nodeCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:119","type":"CtIfImpl","sourcecode":"if (int < (int[].int))\n    return ;\n"},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,7,8,10,11,12,13,14,15,0,17,18,59,60,61,62],"tindex":"11910e97-827d-11e5-861f-df73b59850fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:46","type":"CtIfImpl","sourcecode":"if ((int >= (int)) || (int >= (int)))\n    return true;\n"},"variableMap":{"adj":"maxTurnCosts","maxNodes":"maxTurnCosts","base":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:835","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting.isAssignableFrom(java.lang.Class<?>))\n    return (int) > 0;\n"},"status":-1},{"failures":[63,53,54,55,57],"tindex":"11910e98-827d-11e5-861f-69303e4b318b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:320","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.AssertionError(\"The graph has not yet been initialized.\");\n"},"variableMap":{"initialized":"incoming"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:388","type":"CtForEachImpl","sourcecode":"for (int int : java.util.List<java.lang.Integer>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + int));\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.VirtualEdgeIteratorState.fetchWayGeometry(3);\n    double double;\n    if (boolean) {\n        int int = com.graphhopper.util.PointList.getSize();\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n    } else {\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n    }\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double);\n    double double = double - double;\n    if ((java.lang.Math.abs(double)) > 1.74) {\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + com.graphhopper.routing.QueryGraph.(getPosOfReverseEdge(int))));\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[64,65],"tindex":"119135a9-827d-11e5-861f-371e5bb65a70","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:102","type":"CtTryImpl","sourcecode":"try {\n    if (int >= (java.util.List<byte[]>.size())) {\n        return null;\n    } \n    byte[] byte[] = java.util.List<byte[]>.get(int);\n    com.graphhopper.storage.VLongStorage com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(com.graphhopper.coll.CompressedArray.com.graphhopper.coll.CompressedArray.decompress(byte[]));\n    long long = com.graphhopper.storage.VLongStorage.getLength();\n    for (int int = 0 ; (com.graphhopper.storage.VLongStorage.getPosition()) < long ; int++) {\n        long long = com.graphhopper.storage.VLongStorage.readVLong();\n        if (int == int) {\n            com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n            com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n            return com.graphhopper.util.shapes.GHPoint;\n        } \n    }\n    return null;\n} catch (java.lang.ArrayIndexOutOfBoundsException ex) {\n    throw new java.lang.RuntimeException((((((((\"index \" + long) + \"=> segNo:\") + int) + \", entry=\") + int) + \", segments:\") + (java.util.List<byte[]>.size())) , java.lang.ArrayIndexOutOfBoundsException);\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-1},{"failures":[],"tindex":"119135aa-827d-11e5-861f-799e4a68356c","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.StorableProperties:139","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"shortcuts.version\", com.graphhopper.util.Constants.int)"},"variableMap":{"com.graphhopper.util.Constants.VERSION_SHORTCUT":"com.graphhopper.util.Constants.VERSION_NAME_IDX","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"nameIndex.version\", com.graphhopper.util.Constants.int)"},"status":-2},{"failures":[8],"tindex":"119135ab-827d-11e5-861f-5bd8bdca7ef7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:112","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setInstructions(com.graphhopper.util.InstructionList)"},"status":-1},{"failures":[66],"tindex":"119135ac-827d-11e5-861f-857b8eec0bea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:264","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n    java.util.List<java.util.List<java.lang.Double>>.add(java.util.Arrays.asList(com.graphhopper.util.Instruction.getFirstLat(), com.graphhopper.util.Instruction.getFirstLon()));\n}"},"status":-1},{"failures":[67,68,51],"tindex":"119135ad-827d-11e5-861f-07f22cf30d80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:335","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    int int = com.graphhopper.util.CHEdgeIterator.getAdjNode();\n    if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n        continue;\n    \n    if (boolean && ((java.util.Random.nextInt(100)) < (int))) {\n        com.graphhopper.util.StopWatch.start();\n        int int = int[][int];\n        int int = int[][int] = com.graphhopper.routing.ch.PrepareContractionHierarchies.calculatePriority(int);\n        if (int != int)\n            com.graphhopper.coll.GHTreeMapComposed.update(int, int, int);\n        \n        com.graphhopper.util.StopWatch.stop();\n    } \n    com.graphhopper.storage.CHGraphImpl.disconnect(com.graphhopper.util.CHEdgeExplorer, com.graphhopper.util.CHEdgeIterator);\n}"},"status":-1},{"failures":[],"tindex":"11915cbe-827d-11e5-861f-a5c3957383a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:111","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n    } else {\n        break;\n    }\n}"},"variableMap":{"elem":"arr","size":"frontIndex","keys":"arr","i":"frontIndex","child":"endIndexPlusOne","lastPrio":"frontIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:77","type":"CtIfImpl","sourcecode":"if ((int) > int) {\n    int = com.graphhopper.util.SimpleIntDeque.getSize();\n    int[] int[] = new int[(int) + 10];\n    java.lang.System.arraycopy(int[], int, int[], 0, int);\n    int[] = int[];\n    int = 0;\n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1190e782-827d-11e5-861f-1d4454a2d87e","diffs":[{"methodsDiff":{"delete":["java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove"]},"type":"staticDiff"}]}]}