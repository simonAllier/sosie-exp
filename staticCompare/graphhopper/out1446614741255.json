{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":47,"com.graphhopper.routing.PathTest.testFindInstruction":86,"com.graphhopper.reader.OSMReaderTest.testFerry":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":26,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":112,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":42,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":45,"com.graphhopper.reader.OSMReaderTest.testWithBounds":105,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":59,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":9,"com.graphhopper.coll.CompressedArrayTest.testCompress":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":57,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":64,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":65,"com.graphhopper.GraphHopperTest.testPrepare":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":46,"com.graphhopper.util.InstructionListTest.testWayList2":72,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":53,"com.graphhopper.reader.OSMReaderTest.testFoot":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":29,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":115,"com.graphhopper.util.InstructionListTest.testWayList":71,"com.graphhopper.reader.OSMReaderTest.testOneWay":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":38,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":10,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":113,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":25,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":35,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":94,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":88,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":102,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":58,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":49,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":81,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":56,"com.graphhopper.routing.PathBidirRefTest.testExtract":89,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":23,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":68,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":74,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":78,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":77,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":76,"com.graphhopper.reader.OSMReaderTest.testSort":101,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":44,"com.graphhopper.reader.OSMReaderTest.testMain":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":62,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":14,"com.graphhopper.routing.PathBidirRefTest.testExtract2":90,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":80,"com.graphhopper.routing.PathTest.testWayList":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":52,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":36,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":13,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":43,"com.graphhopper.GraphHopperTest.testFootAndCar":3,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":117,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":33,"com.graphhopper.routing.PathTest.testTime":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":32,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":116,"com.graphhopper.coll.IntIntBinHeapTest.testSize":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":40,"com.graphhopper.GraphHopperTest.testPrepareOnly":24,"com.graphhopper.coll.CompressedArrayTest.testCompress2":108,"com.graphhopper.GraphHopperTest.testVia":0,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":39,"com.graphhopper.GraphHopperAPITest.testLoad":8,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":15,"com.graphhopper.GraphHopperTest.testFootOnly":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":50,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":17,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":104,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":83,"com.graphhopper.util.InstructionListTest.testFind":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":31,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":18,"com.graphhopper.util.GHUtilityTest.testCopy":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":54},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"7d4f20fb-82b4-11e5-a1c7-f56b9f16e37a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize())"},"variableMap":{"pointList":"list"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:104","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-1},{"failures":[],"tindex":"7d4f20fc-82b4-11e5-a1c7-05f03ef2ecde","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"midLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"status":-2},{"failures":[],"tindex":"7d4f20fd-82b4-11e5-a1c7-59dadae6ad29","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"variableMap":{"this":"edges","da":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((3 * 4), com.graphhopper.storage.GraphExtension.hashCode())"},"status":-2},{"failures":[],"tindex":"7d4f480e-82b4-11e5-a1c7-8f21b851f527","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:198","type":"CtLocalVariableImpl","sourcecode":"int int = int[][0]"},"status":-2},{"failures":[],"tindex":"7d4f480f-82b4-11e5-a1c7-cb54635f1ad7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"variableMap":{"mmapDA":"dataAccess","da":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:300","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-2},{"failures":[],"tindex":"7d4f4810-82b4-11e5-a1c7-99f8289a870f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:307","type":"CtReturnImpl","sourcecode":"return (int * int) + (int * int)"},"variableMap":{"dx":"intVal","dy":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"status":-2},{"failures":[],"tindex":"7d4f4811-82b4-11e5-a1c7-15d8ed89e6fa","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:133","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge)"},"variableMap":{"prioQueueOpenSet":"prioQueueOpenSet","ase":"ase"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:140","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge)"},"status":-1},{"failures":[9],"tindex":"7d4f4812-82b4-11e5-a1c7-e52bde6d1069","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:168","type":"CtReturnImpl","sourcecode":"return ((int) + \"->\") + (int)"},"status":-1},{"failures":[],"tindex":"7d4f6f23-82b4-11e5-a1c7-fdbab29090ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:234","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:140","type":"CtLocalVariableImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = com.graphhopper.util.TranslationMap.get(\"en\").asMap()"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,0,1,4,5,25,7,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"7d4f6f24-82b4-11e5-a1c7-5753e91e7a4f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"a":"frozen","approx":"frozen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:375","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"7d4f6f25-82b4-11e5-a1c7-5195449f45c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:289","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":0},{"failures":[69,70,71,72,73,74,75,76,77,78,79,0,1,2,3,4,5,6,7,80,81,82,83,84,85,86,87,88,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,42,43,44,45,46,49,50,51,52,53,55,58,59,61,62,63,64,68,89,90,8],"tindex":"7d4f6f26-82b4-11e5-a1c7-4bdb66ae65e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:132","type":"CtIfImpl","sourcecode":"if (!(java.lang.Double.isNaN(double)))\n    throw new java.lang.IllegalStateException((\"This is a 2D list we cannot store elevation: \" + double));\n"},"variableMap":{"ele":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:246","type":"CtIfImpl","sourcecode":"if (double == 0)\n    throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\");\n"},"status":-1},{"failures":[],"tindex":"7d4f6f27-82b4-11e5-a1c7-a72a84043503","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:93","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"variableMap":{"orientation":"minLon","resultOrientation":"minLon","baseOrientation":"minLon","java.lang.Math.PI":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:196","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((3 * 4), com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"7d4f9638-82b4-11e5-a1c7-b99a2aa3131b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:98","type":"CtLocalVariableImpl","sourcecode":"byte byte = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:116","type":"CtLocalVariableImpl","sourcecode":"byte byte = ((byte)(1 << 7))"},"status":-2},{"failures":[91,92,93,94],"tindex":"7d4f9639-82b4-11e5-a1c7-4b2ec6d3a179","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:110","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[95,96,0,1,2,3,4,5,25,6,97,98,99,100,101,102,103,104,105,106,107],"tindex":"7d4f963a-82b4-11e5-a1c7-bf22e03953dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:733","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[108,109,110,111,112,113,114,115,116],"tindex":"7d4f963b-82b4-11e5-a1c7-a52f5c0f88f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:255","type":"CtAssignmentImpl","sourcecode":"double = 30"},"variableMap":{"speed":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:246","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"status":-1},{"failures":[],"tindex":"7d4f963c-82b4-11e5-a1c7-67cab90b49da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:237","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.Bike2WeightFlagEncoder.getReverseSpeed(long)"},"status":-2},{"failures":[],"tindex":"7d4f963d-82b4-11e5-a1c7-4742d0b19f4c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:220","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    long >>>= 1;\n    if ((long & long) != 0) {\n        double += double;\n    } \n    double /= 2;\n    if (long > 1) {\n        long >>>= 1;\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[5,117],"tindex":"7d4fbd4e-82b4-11e5-a1c7-951afd94d0f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:739","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.EncodingManager) == null)\n    com.graphhopper.GraphHopper.setEncodingManager(com.graphhopper.routing.util.EncodingManager.create(java.lang.String));\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"7d4f6f25-82b4-11e5-a1c7-5195449f45c2","diffs":[{"methodsDiff":{"delete":["java.lang.StringBuilder.append","java.lang.Object.toString"]},"type":"staticDiff"},{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.routing.util.EncodingManager_java.lang.String_toString().t1"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.routing.util.EncodingManager_java.lang.String_toString().t1"]},"type":"branch"}]}]}