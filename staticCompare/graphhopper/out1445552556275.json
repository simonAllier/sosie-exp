{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"65bc799a-790b-11e5-a0d3-e5fa742f3fd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:58","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.util.ArrayList<java.lang.Integer>.add(com.graphhopper.util.TIntList.get(int));\n}"},"status":-2},{"failures":[],"tindex":"65bca0ab-790b-11e5-a0d3-213c7ae1a785","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:187","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl(int)"},"variableMap":{"size":"removeNodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:694","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.coll.GHBitSet com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl((int * 3))"},"status":-2},{"failures":[],"tindex":"65bca0ac-790b-11e5-a0d3-a966c0cd221f","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"variableMap":{"dLat":"i","dLon":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:718","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseIntIntArray.keyAt(int)"},"status":-2},{"failures":[],"tindex":"65bca0ad-790b-11e5-a0d3-517fadd54a16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:128","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"65bca0ae-790b-11e5-a0d3-d3baabd05272","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean).setDouglasPeucker(com.graphhopper.util.DouglasPeucker).setEnableInstructions(boolean).setSimplifyResponse(((boolean) && (double > 0)))"},"status":-2},{"failures":[],"tindex":"65bca0af-790b-11e5-a0d3-353e70f5cac3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:47","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone()"},"variableMap":{"this":"edgeEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:74","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"status":-2},{"failures":[],"tindex":"65bd3cf0-790b-11e5-a0d3-7b5793fa8aab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:67","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.lang.IllegalStateException((((((\"Cannot insert keys lower than \" + \"the last key \") + long) + \" < \") + (long)) + \". Only updating supported\"));\n} "},"variableMap":{"oldValueIndex":"max","lastKey":"pointer","key":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:602","type":"CtForImpl","sourcecode":"for (long long = long + 4 ; long < long ; long += 4) {\n    com.graphhopper.storage.index.TIntHashSet.add(com.graphhopper.storage.DataAccess.getInt(long));\n}"},"status":-2},{"failures":[],"tindex":"65bd3cf1-790b-11e5-a0d3-b3f72df23d35","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:327","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"65bd3cf2-790b-11e5-a0d3-d3145e6ee0b2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:177","type":"CtInvocationImpl","sourcecode":"java.util.zip.Deflater.finish()"},"status":-2},{"failures":[],"tindex":"65bd3cf3-790b-11e5-a0d3-2d2d41b35ff9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:945","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.storage.GraphHopperStorage) == null) || (!(boolean)))\n    throw new java.lang.IllegalStateException(\"Call load or importOrLoad before routing\");\n"},"variableMap":{"ghStorage":"ghStorage","fullyLoaded":"sortGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:841","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((com.graphhopper.storage.GraphHopperStorage.isCHPossible()) && com.graphhopper.GraphHopper.(isPrepared()))\n        throw new java.lang.IllegalArgumentException(\"Sorting a prepared CHGraph is not possible yet. See #12\");\n    \n    com.graphhopper.storage.GraphHopperStorage com.graphhopper.storage.GraphHopperStorage = com.graphhopper.util.GHUtility.newStorage(com.graphhopper.storage.GraphHopperStorage);\n    com.graphhopper.util.GHUtility.sortDFS(com.graphhopper.storage.GraphHopperStorage, com.graphhopper.storage.GraphHopperStorage);\n    com.graphhopper.Logger.info(((\"graph sorted (\" + (com.graphhopper.util.Helper.getMemInfo())) + \")\"));\n    com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage;\n} "},"status":-2},{"failures":[],"tindex":"65bd8b14-790b-11e5-a0d3-7d62b5bf269d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:132","type":"CtLocalVariableImpl","sourcecode":"int int = 2 * int"},"variableMap":{"err":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:217","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2},{"failures":[],"tindex":"65bd8b15-790b-11e5-a0d3-2f508e2dd5b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:117","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.isRequireNodeField()) && ((com.graphhopper.storage.BaseGraph.int) >= 0)) {\n    com.graphhopper.storage.BaseGraph.ensureNodeIndex(int);\n    long long = ((long)(int)) * (com.graphhopper.storage.BaseGraph.int);\n    com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), int);\n} else {\n    throw new java.lang.AssertionError(\"This graph does not provide an additional node field\");\n}"},"status":-2},{"failures":[],"tindex":"65bd8b16-790b-11e5-a0d3-b5216c7c2c32","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:276","type":"CtIfImpl","sourcecode":"if (long >= long)\n    throw new java.lang.IllegalStateException(((((((((\"Cannot copy edge refs into ch graph. \" + \"pointer:\") + long) + \", cap:\") + long) + \", basePtr:\") + long) + \", baseCap:\") + long));\n"},"variableMap":{"basePointer":"edgePointer","pointer":"edgePointer","maxCapacity":"edgePointer","baseCapacity":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:824","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList != null) && (!(com.graphhopper.util.PointList.isEmpty()))) {\n    if ((com.graphhopper.util.PointList.getDimension()) != (com.graphhopper.storage.NodeAccess.getDimension()))\n        throw new java.lang.IllegalArgumentException(((((\"Cannot use pointlist which is \" + (com.graphhopper.util.PointList.getDimension())) + \"D for graph which is \") + (com.graphhopper.storage.NodeAccess.getDimension())) + \"D\"));\n    \n    int int = com.graphhopper.util.PointList.getSize();\n    int int = com.graphhopper.storage.NodeAccess.getDimension();\n    int int = com.graphhopper.storage.BaseGraph.nextGeoRef((int * int));\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), int);\n    long long = ((long)(int)) * 4;\n    byte[] byte[] = new byte[((int * int) * 4) + 4];\n    com.graphhopper.storage.BaseGraph.ensureGeometry(long, byte[].int);\n    com.graphhopper.util.BitUtil.fromInt(byte[], int, 0);\n    if (boolean)\n        com.graphhopper.util.PointList.reverse();\n    \n    int int = 4;\n    boolean boolean = com.graphhopper.storage.NodeAccess.is3D();\n    for (int int = 0 ; int < int ; int++) {\n        double double = com.graphhopper.util.PointList.getLatitude(int);\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(double), int);\n        int += 4;\n        com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.degreeToInt(com.graphhopper.util.PointList.getLongitude(int)), int);\n        int += 4;\n        if (boolean) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n            int += 4;\n        } \n    }\n    com.graphhopper.storage.DataAccess.setBytes(long, byte[], byte[].int);\n} else {\n    com.graphhopper.storage.DataAccess.setInt((long + (int)), 0);\n}"},"status":-2},{"failures":[],"tindex":"65bd8b17-790b-11e5-a0d3-8d526253cbd9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:232","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"variableMap":{"ar_y":"shrinkFactor","ab_y":"shrinkFactor","ar_x":"b_lon_deg","ab_x":"shrinkFactor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:180","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2},{"failures":[],"tindex":"65bd8b18-790b-11e5-a0d3-a386b98381e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:231","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"65bd8b19-790b-11e5-a0d3-75cb6124cbdf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:95","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator))) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"65bd8b1a-790b-11e5-a0d3-d3c749366ecf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:330","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.BikeCommonFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"variableMap":{"this":"this","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:817","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"65bd8b1b-790b-11e5-a0d3-e9b184cf2812","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:571","type":"CtReturnImpl","sourcecode":"return ((10 * int) + int) + int"},"variableMap":{"originalEdgesCount":"intVal","edgeDifference":"intVal","contractedNeighbors":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:90","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"65be004c-790b-11e5-a0d3-757be41a32bf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRegistered(true)"},"status":-2},{"failures":[],"tindex":"65be004d-790b-11e5-a0d3-577a591d7311","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:304","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}