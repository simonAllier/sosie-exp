{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":103,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":50,"com.graphhopper.GraphHopperAPITest.testNoLoad":71,"com.graphhopper.routing.PathTest.testFindInstruction":98,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":46,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":38,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":54,"com.graphhopper.util.InstructionListTest.testEmptyList":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":82,"com.graphhopper.reader.OSMReaderTest.testWithBounds":22,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":10,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":9,"com.graphhopper.GraphHopperTest.testPrepare":29,"com.graphhopper.util.InstructionListTest.testWayList2":69,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.util.InstructionListTest.testWayList":65,"com.graphhopper.reader.OSMReaderTest.testOneWay":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":3,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":83,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":90,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":47,"com.graphhopper.GraphHopperAPITest.testDisconnected179":53,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":89,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":58,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":0,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":60,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":100,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":96,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":1,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":84,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":79,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":101,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":77,"com.graphhopper.GraphHopperTest.testLoadOSM":33,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":102,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":75,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":74,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":73,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":42,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":5,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":85,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":45,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":91,"com.graphhopper.routing.PathTest.testWayList":97,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":4,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":18,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":56,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":80,"com.graphhopper.storage.StorablePropertiesTest.testStore":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":44,"com.graphhopper.storage.GraphHopperStorageTest.testClone":110,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":48,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":49,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":51,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":12,"com.graphhopper.GraphHopperTest.testFootAndCar":31,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":86,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":99,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":87,"com.graphhopper.routing.PathTest.testTime":94,"com.graphhopper.util.InstructionListTest.testCreateGPX":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":109,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":105,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":63,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":107,"com.graphhopper.GraphHopperTest.testPrepareOnly":27,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":2,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":43,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":66,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":20,"com.graphhopper.GraphHopperAPITest.testLoad":52,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":32,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":55,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.util.TranslationMapTest.testToString":59,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":70,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":19,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":95,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.util.InstructionListTest.testFind":61,"com.graphhopper.routing.PathTest.testFound":93,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":37,"com.graphhopper.util.GHUtilityTest.testCopy":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":6},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"432c2242-826d-11e5-9898-9be3dc14dd80","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"N_ELE","hash":"N_ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:262","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"432c4953-826d-11e5-9898-f1b9ca0d3def","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1063","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.RoutingAlgorithm.getVisitedNodes()"},"status":0},{"failures":[],"tindex":"432c4954-826d-11e5-9898-ad3ddd82df10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 4) * (int)))"},"variableMap":{"turnCosts":"shortcuts","nodeIndex":"shortcutEntryBytes","turnCostsEntryBytes":"shortcutEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:197","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 1) * (int)))"},"status":0},{"failures":[],"tindex":"432c4955-826d-11e5-9898-15c0f101591f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:282","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[13,14,15,16,17,0,1,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,6,42,43,44,45,8,46,11,47,48],"tindex":"432c7066-826d-11e5-9898-c59deb771eab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:236","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"variableMap":{"size":"bytes","i":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:183","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"432c7067-826d-11e5-9898-b3a39d4cc778","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1125","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"variableMap":{"edgePointer":"sumBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:62","type":"CtWhileImpl","sourcecode":"while (java.util.zip.ZipEntry != null) {\n    if (java.util.zip.ZipEntry.isDirectory()) {\n        new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir();\n    } else {\n        double double = 1;\n        if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n            double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n        \n        java.io.File java.io.File = new java.io.File(java.io.File , java.util.zip.ZipEntry.getName());\n        java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n        try {\n            int int;\n            while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n                java.io.FileOutputStream.write(byte[], 0, int);\n                long += int * double;\n                if (com.graphhopper.util.ProgressListener != null)\n                    com.graphhopper.util.ProgressListener.update(long);\n                \n            }\n        } finally {\n            java.io.FileOutputStream.close();\n        }\n    }\n    java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n}"},"status":0},{"failures":[],"tindex":"432c7068-826d-11e5-9898-31f451336aeb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.VLongStorage:29","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.this(10)"},"variableMap":{"this":"currentWriter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.VLongStorage = null"},"status":-2},{"failures":[],"tindex":"432c7069-826d-11e5-9898-5b413afe99d2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[49,50,51],"tindex":"432c706a-826d-11e5-9898-6badc0244c96","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"removed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:73","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)));\n    int += int;\n}"},"status":-1},{"failures":[1],"tindex":"432c977b-826d-11e5-9898-7141d3a31472","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:145","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:147","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setElevation(true)"},"status":-1},{"failures":[13,15,16,17,0,18,19,20,21,22,23,24,29,30,32,33,35],"tindex":"432c977c-826d-11e5-9898-4f58abb82a2b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"variableMap":{"length":"tmpNode","factor":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:848","type":"CtReturnImpl","sourcecode":"return ((int)(int))"},"status":-1},{"failures":[52,53,28,29,30,31,32,33,35],"tindex":"432c977d-826d-11e5-9898-47af6ba5f409","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:934","type":"CtInvocationImpl","sourcecode":"new com.graphhopper.util.PathMerger().setCalcPoints(boolean).setDouglasPeucker(com.graphhopper.util.DouglasPeucker).setEnableInstructions(boolean).setSimplifyResponse(((boolean) && (double > 0))).doWork(com.graphhopper.GHResponse, java.util.List<com.graphhopper.routing.Path>, com.graphhopper.util.TranslationMap.getWithFallBack(java.util.Locale))"},"status":-1},{"failures":[28],"tindex":"432c977e-826d-11e5-9898-290e45941a49","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.add(com.graphhopper.util.Instruction)"},"status":-1},{"failures":[13,14,15,16,17,0,1,18,19,20,21,22,23,24,26,27,54,28,29,30,31,32,33,34,35,36,37],"tindex":"432c977f-826d-11e5-9898-8f08597bd020","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:92","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.mark(10)"},"variableMap":{"ips":"ips"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:124","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.reset()"},"status":-1},{"failures":[52,15,16,28,29,30,31,32,33,35,36,55,56,57,58],"tindex":"432cbe90-826d-11e5-9898-71a068104f05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:597","type":"CtInvocationImpl","sourcecode":"gnu.trove.set.hash.TIntHashSet.add(-(int + 1))"},"status":-1},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,52,53,71,13,14,15,16,17,0,1,18,19,20,21,22,23,24,26,27,72,73,74,75,76,77,54,28,29,30,31,32,33,78,34,35,36,37,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"432cbe91-826d-11e5-9898-8f89884233bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:151","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"432cbe92-826d-11e5-9898-c1aa5c2c0cb7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:231","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    return ;\n"},"variableMap":{"delNodes":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:119","type":"CtIfImpl","sourcecode":"if (int < (int[].int))\n    return ;\n"},"status":0},{"failures":[13,14,1,18,23,24,27,31,36,37,101,102,103,104,105],"tindex":"432cbe93-826d-11e5-9898-25dc5a97b376","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:672","type":"CtIfImpl","sourcecode":"if ((double != 0) || (java.lang.Double.isInfinite(double)))\n    throw new java.lang.IllegalArgumentException(\"Restricted turn can only have infinite costs (or use 0)\");\n"},"variableMap":{"costs":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:367","type":"CtIfImpl","sourcecode":"if ((double > 50) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[106,61,64,65,69,70,13,14,15,16,17,0,1,18,20,22,24,26,27,54,28,29,30,31,32,33,34,35,36,37,91,92,95,96,98,99,100,6,107,8,108,109,11,110],"tindex":"432cbe94-826d-11e5-9898-5910b729dee7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"E_NAME","hash":"E_NAME"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:252","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"432ce5a5-826d-11e5-9898-c1c5641ff3dd","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:67","type":"CtReturnImpl","sourcecode":"return java.lang.Math.atan2((double - double), (double * (double - double)))"},"variableMap":{"lat1":"val","lat2":"val","lon1":"val","lon2":"val","shrinkFactor":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:109","type":"CtReturnImpl","sourcecode":"return double"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"432cbe92-826d-11e5-9898-c1aa5c2c0cb7","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"432c4954-826d-11e5-9898-ad3ddd82df10","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.ensureCapacity"]},"type":"staticDiff"}]}]}