{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":173,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":261,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":165,"com.graphhopper.reader.OSMReaderTest.testFerry":70,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":245,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":9,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":44,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":31,"com.graphhopper.reader.OSMReaderTest.testWithBounds":81,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":96,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":171,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":50,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":125,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":210,"com.graphhopper.GraphHopperTest.testPrepare":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":25,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":186,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":196,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":101,"com.graphhopper.util.InstructionListTest.testWayList":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":108,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":240,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":244,"com.graphhopper.GraphHopperAPITest.testDisconnected179":69,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":211,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":169,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":166,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":141,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":238,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":135,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":20,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":218,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":183,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":91,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":157,"com.graphhopper.GraphHopperTest.testLoadOSM":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":40,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":33,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":198,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":214,"com.graphhopper.reader.OSMReaderTest.testSort":73,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":80,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":224,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":59,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":258,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":114,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":236,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":170,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":222,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":143,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":65,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":235,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":24,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":251,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":16,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":140,"com.graphhopper.util.GHUtilityTest.testSort":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":162,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":212,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":232,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":260,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":259,"com.graphhopper.GraphHopperAPITest.testLoad":68,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":113,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":192,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":130,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":256,"com.graphhopper.reader.OSMReaderTest.testBarriers":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":177,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":168,"com.graphhopper.util.GHUtilityTest.testCopy":248,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":252,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":99,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":22,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":203,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":159,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":197,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":151,"com.graphhopper.reader.PrinctonReaderTest.testRead":237,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":124,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":67,"com.graphhopper.util.InstructionListTest.testWayList2":242,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":56,"com.graphhopper.reader.OSMReaderTest.testFoot":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":41,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":38,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":39,"com.graphhopper.reader.OSMReaderTest.testOneWay":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":216,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":4,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":193,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":219,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":174,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":187,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":191,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":228,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":118,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":89,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":239,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":36,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":179,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":88,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":163,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":62,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":87,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":178,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":46,"com.graphhopper.util.GHUtilityTest.testSort2":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":109,"com.graphhopper.reader.OSMReaderTest.testMain":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":181,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":129,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":66,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":199,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":225,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":48,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":155,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":34,"com.graphhopper.storage.GraphHopperStorageTest.testClone":189,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":206,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":234,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":253,"com.graphhopper.GraphHopperTest.testFootAndCar":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":8,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":250,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":167,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":146,"com.graphhopper.GraphHopperTest.testPrepareOnly":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":221,"com.graphhopper.GraphHopperTest.testVia":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":255,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":61,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":49,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":95,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":28,"com.graphhopper.GraphHopperTest.testFootOnly":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":55,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":78,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":207,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":257},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"cf7c54c5-82a3-11e5-99c1-d37b0fef8e8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"variableMap":{"indexCopy":"da","index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:113","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder)"},"status":-1},{"failures":[21],"tindex":"cf7c7bd6-82a3-11e5-99c1-f11c4e058c68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:96","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    byte byte = 0;\n    for (int int = 0 ; int < 8 ; int++) {\n        byte <<= 1;\n        if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n            byte |= 1;\n        \n        int++;\n    }\n    byte[][int] = byte;\n}"},"status":-1},{"failures":[22,23,24,25,0,26,27,3,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,8,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,10,11,84,85,86,87,88,89,12,13,90,91,92,14,15,17,18,93,19],"tindex":"cf7c7bd7-82a3-11e5-99c1-7d1c67026941","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:155","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n    double = double;\n} "},"variableMap":{"y1":"maxLon","x1":"maxLon","y2":"maxLon","x2":"maxLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:102","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"cf7c7bd8-82a3-11e5-99c1-215698d1450d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"current","bytes":"current","segmentSizeInBytes":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:43","type":"CtWhileImpl","sourcecode":"while ((gnu.trove.stack.array.TIntArrayStack.size()) > 0) {\n    int = gnu.trove.stack.array.TIntArrayStack.pop();\n    if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && com.graphhopper.util.XFirstSearch.(goFurther(int))) {\n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n            if (com.graphhopper.util.XFirstSearch.checkAdjacent(com.graphhopper.util.EdgeIterator)) {\n                gnu.trove.stack.array.TIntArrayStack.push(int);\n            } \n        }\n        com.graphhopper.coll.GHBitSet.add(int);\n    } \n}"},"status":-2},{"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,22,108,23,24,109,110,25,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,0,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,3,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,29,31,32,35,42,45,207,208,209,49,51,52,55,62,65,210,211,212,213,8,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,71,72,73,74,75,76,77,78,81,83,239,240,241,242,243,244,245,246,247,248,249,10,85,86,87,88,89,12,13,90,91,92,14,15,17,18,19],"tindex":"cf7d1819-82a3-11e5-99c1-a376a9b2bb27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"edge","bLen":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, int)"},"status":-1},{"failures":[250],"tindex":"cf7d181a-82a3-11e5-99c1-4b0d0fdaa27f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"variableMap":{"i":"noNumberValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:133","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"cf7d181b-82a3-11e5-99c1-9f8ace788e8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:259","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:153","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AlgorithmOptions.java.lang.String"},"status":0},{"failures":[],"tindex":"cf7d3f2c-82a3-11e5-99c1-3fc5eba3a1f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"y2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:129","type":"CtIfImpl","sourcecode":"if ((int == int) && (int == int))\n    break;\n"},"status":-2},{"failures":[],"tindex":"cf7d3f2d-82a3-11e5-99c1-ff90bd22d5c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:180","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"variableMap":{"type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:174","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[0,3,8,15,18],"tindex":"cf7d3f2e-82a3-11e5-99c1-7fbf21398074","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:219","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(0, int)"},"status":-1},{"failures":[251,252,253],"tindex":"cf7d3f2f-82a3-11e5-99c1-7fcbda29a222","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:73","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)));\n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"cf7d3f30-82a3-11e5-99c1-b92ec69689a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"time","flags":"time","dir":"time"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GPXEntry:57","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"cf7d3f31-82a3-11e5-99c1-bff93ea79a22","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:361","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.reader.OSMReader.getTmpLatitude(int)"},"status":-2},{"failures":[129,130,132,134,135,254,149,150,154,157,158,255,170,171,175,178,179,256,192,193,197,200,201,257,221,222,226,229,230],"tindex":"cf7d3f32-82a3-11e5-99c1-8dd2a924a922","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"i","nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:196","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1},{"failures":[],"tindex":"cf7d6643-82a3-11e5-99c1-916de8445dc8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1148","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.flush()"},"status":-2},{"failures":[],"tindex":"cf7d6644-82a3-11e5-99c1-15b396b53e38","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:214","type":"CtReturnImpl","sourcecode":"return 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[],"tindex":"cf7d6645-82a3-11e5-99c1-9f7b5ca12cb3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:76","type":"CtLocalVariableImpl","sourcecode":"long long = java.util.TreeMap<java.lang.Long, java.lang.Integer>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"cf7d6646-82a3-11e5-99c1-9310dcf6f339","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:292","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[],"tindex":"cf7d6647-82a3-11e5-99c1-8962f1f69160","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:109","type":"CtLocalVariableImpl","sourcecode":"long long = long << 3"},"variableMap":{"guess":"oldRelationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:626","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.routing.util.EncodingManager.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-2},{"failures":[258,259,260,261,262],"tindex":"cf7d6648-82a3-11e5-99c1-8d42654de1a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"variableMap":{"flags":"mask","mask":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"cf7d6646-82a3-11e5-99c1-9310dcf6f339","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}