{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":268,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":285,"com.graphhopper.search.NameIndexTest.testCreate":341,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":87,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":161,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":233,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":234,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":331,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":208,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":83,"com.graphhopper.reader.OSMReaderTest.testWithBounds":22,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":356,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":171,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":245,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":287,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":187,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":319,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":274,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":313,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":126,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":322,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":207,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":332,"com.graphhopper.GraphHopperTest.testPrepare":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":5,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":9,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":147,"com.graphhopper.search.NameIndexTest.testFlush":339,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":2,"com.graphhopper.util.InstructionListTest.testWayList":230,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":260,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":241,"com.graphhopper.GraphHopperAPITest.testDisconnected179":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":359,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":168,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":82,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":247,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":257,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":84,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":221,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":300,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":249,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":309,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":196,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":294,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":185,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":42,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":139,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":74,"com.graphhopper.GraphHopperTest.testLoadOSM":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":280,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":102,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":85,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":150,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":191,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":263,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":205,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":302,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":306,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":11,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":106,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":270,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":289,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":219,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":293,"com.graphhopper.routing.PathTest.testWayList":297,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":77,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":201,"com.graphhopper.coll.OSMIDMapTest.testGet2":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":8,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":1,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":334,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":258,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":310,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":203,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":62,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":138,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":112,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":317,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":218,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":265,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":321,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":299,"com.graphhopper.util.GHUtilityTest.testSort":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":88,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":255,"com.graphhopper.coll.OSMIDMapTest.testGetLong":354,"com.graphhopper.search.NameIndexTest.testPut":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":80,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":136,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":348,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":71,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":118,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":127,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":214,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":288,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":344,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":307,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":149,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":119,"com.graphhopper.GraphHopperAPITest.testLoad":242,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":335,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":7,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":143,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":330,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":135,"com.graphhopper.reader.OSMReaderTest.testBarriers":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":251,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":178,"com.graphhopper.routing.PathTest.testFound":349,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":28,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":165,"com.graphhopper.util.GHUtilityTest.testCopy":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":256,"com.graphhopper.routing.PathTest.testFindInstruction":298,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":57,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":66,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":340,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":33,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":259,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":120,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":155,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":76,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":148,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":267,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":276,"com.graphhopper.reader.PrinctonReaderTest.testRead":220,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":63,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":355,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":308,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":189,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":132,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":195,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":278,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":209,"com.graphhopper.util.InstructionListTest.testWayList2":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":314,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":177,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":291,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":336,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":89,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":158,"com.graphhopper.reader.OSMReaderTest.testOneWay":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":79,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":144,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":316,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":343,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":197,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":172,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":304,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":114,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":134,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":174,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":301,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":275,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":108,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":47,"com.graphhopper.coll.OSMIDMapTest.testGet":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":210,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":272,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":281,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":273,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":353,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":227,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":235,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":252,"com.graphhopper.storage.RAMDataAccessTest.testCopy":320,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":303,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":226,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":179,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":224,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":223,"com.graphhopper.storage.RAMDataAccessTest.testSegments":323,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":96,"com.graphhopper.util.GHUtilityTest.testSort2":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":266,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":215,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":328,"com.graphhopper.routing.PathBidirRefTest.testExtract2":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":211,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":93,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":243,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":113,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":337,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":204,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":206,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":98,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":72,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":23,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":192,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":269,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":10,"com.graphhopper.storage.StorablePropertiesTest.testStore":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":326,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":86,"com.graphhopper.storage.GraphHopperStorageTest.testClone":137,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":159,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":217,"com.graphhopper.GraphHopperTest.testFootAndCar":26,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":190,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":167,"com.graphhopper.routing.PathTest.testTime":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":199,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":94,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":59,"com.graphhopper.util.GHUtilityTest.testSortDirected":239,"com.graphhopper.GraphHopperTest.testPrepareOnly":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":202,"com.graphhopper.GraphHopperTest.testVia":40,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":123,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":283,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":162,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":261,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":99,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":329,"com.graphhopper.GraphHopperTest.testFootOnly":27,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":232,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":104,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":105,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":295,"com.graphhopper.util.InstructionListTest.testFind":228,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":194},"transformations":[{"failures":[],"tindex":"e6428383-8288-11e5-9334-ddf5e0d8980f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:92","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(\"time\", com.graphhopper.util.Instruction.getTime())"},"variableMap":{"instruction":"instruction","instrJson":"instrJson"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:94","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(\"sign\", com.graphhopper.util.Instruction.getSign())"},"status":0},{"failures":[],"tindex":"e643e314-8288-11e5-9334-7d5795dad05b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:116","type":"CtReturnImpl","sourcecode":"return ((int)(java.lang.Math.log10(int)))"},"variableMap":{"p":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:91","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"e643e315-8288-11e5-9334-7b3ad0ea68e6","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:394","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\nelse\n    java.lang.String += \", \" + java.lang.String;\n"},"variableMap":{"name":"str","refName":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:158","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isSynched())\n    java.lang.String += \"_SYNC\";\n"},"status":0},{"failures":[],"tindex":"e643e316-8288-11e5-9334-9361b896251f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:85","type":"CtReturnImpl","sourcecode":"return double + (double)"},"variableMap":{"defaultUTurnCost":"java.lang.Double.NaN","weight":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:219","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"e643e317-8288-11e5-9334-c3b0cee8613d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:135","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0)\n            return false;\n        \n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false);\n        byte[] byte[] = new byte[int];\n        for (int int = 0 ; int < int ; int++) {\n            int int = java.io.RandomAccessFile.read(byte[]);\n            if (int <= 0)\n                throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n            \n            com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"e6440a28-8288-11e5-9334-07e3b2cb0acb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"from","index":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:66","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = int;\n    int = int;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"e6440a29-8288-11e5-9334-3d1264d6ebac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:452","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false)"},"variableMap":{"edge":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:687","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"e644313a-8288-11e5-9334-634cc93fc94a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"variableMap":{"wayTypeEncoder":"priorityWayEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:150","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-1},{"failures":[14,15,16,17,34,18,19,20,21,35,36,22,23,37,24,38,25,39,40,41,42,26,43,44,45,46,27,28,47,48,49,50,51],"tindex":"e644313b-8288-11e5-9334-3ff2ab666fcb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    long long = long[][int];\n    if (long < long) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"e644313c-8288-11e5-9334-fbffbdc92102","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getAdjNode()"},"status":-2},{"failures":[52],"tindex":"e644313d-8288-11e5-9334-0fed54c5800e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:209","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int * 4]"},"variableMap":{"intLen":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:185","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-1},{"failures":[],"tindex":"e644584e-8288-11e5-9334-fb45b562a203","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStar:154","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.extractPath()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AStar.runAlgo()"},"status":-2},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,14,15,16,17,34,18,19,20,21,35,22,24,38,25,222,223,224,225,226,227,40,41,42,26,43,44,45,46,27,28,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,0,1,2,3,254,255,4,256,257,258,259,260,261,262,263,264,265,266,267,5,268,269,6,7,270,8,9,271,272,273,274,275,276,277,10,11,12,278,279,280,281,13,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"tindex":"e644584f-8288-11e5-9334-e3de9bd0238a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:271","type":"CtAssignmentImpl","sourcecode":"int = int - (int)"},"variableMap":{"intVal":"edgeEntryBytes","degree":"edgeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:311","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"e6447f60-8288-11e5-9334-51aabe9c9043","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:380","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"e6447f61-8288-11e5-9334-512c58ba882e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:96","type":"CtAssignmentImpl","sourcecode":"double = double + (2 * (java.lang.Math.double))"},"status":-2},{"failures":[301,302,303,304,305,53,306,307,55,308,74,78,309,82,310,83,84,85,86,87,311,88,89,90,91,92,93,94,95,96,97,98,312,99,313,100,101,102,103,104,314,105,106,107,108,109,110,111,112,113,315,131,316,317,133,318,152,156,319,320,321,322,323,324,325,326,187,188,327,328,329,189,330,190,331,192,332,211,215,333,334,335,336,14,15,16,17,34,18,19,20,21,35,36,22,23,24,337,338,339,340,341,38,25,222,223,224,225,226,227,39,40,41,42,26,43,44,45,46,27,28,228,229,230,231,232,235,237,242,342,343,344,253,0,1,2,3,254,255,4,256,257,258,259,260,261,262,263,264,265,266,267,5,268,269,6,7,270,8,9,271,272,273,274,275,276,277,10,11,279,280,281,13,345,282,283,284,285,286,287,288,289,290,346,347,348,291,293,294,349,350,295,296,297,298,299,300,351,352,353,354,355],"tindex":"e644a672-8288-11e5-9334-f76ae54b7aff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:252","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"Negative precision is not allowed!\");\n"},"variableMap":{"minResolutionInMeter":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"status":-1},{"failures":[],"tindex":"e644a673-8288-11e5-9334-b52dd25ff253","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromFloat(byte[], float, 0)"},"status":-2},{"failures":[],"tindex":"e644cd84-8288-11e5-9334-91fa4c4a2c89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:152","type":"CtAssignmentImpl","sourcecode":"this.double = double"},"status":0},{"failures":[57,356,65,66,67,70,71,74,75,135,357,143,144,145,148,149,152,153,162,358,170,171,172,175,176,179,180,194,359,202,203,204,207,208,211,212,243,244,246,248,249],"tindex":"e644cd85-8288-11e5-9334-cfc61b110213","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:644","type":"CtForImpl","sourcecode":"for (int int = com.graphhopper.coll.GHBitSet.next(0) ; int >= 0 ; int = com.graphhopper.coll.GHBitSet.next((int + 1))) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        com.graphhopper.coll.GHBitSet.add(com.graphhopper.util.EdgeIterator.getAdjNode());\n    }\n    int--;\n    for ( ; int >= 0 ; int--) {\n        if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n            break;\n        \n    }\n    if (int >= int)\n        com.graphhopper.coll.SparseIntIntArray.put(int, int);\n    \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"e644f496-8288-11e5-9334-1f18fb8e4e57","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:376","type":"CtReturnImpl","sourcecode":"return double < (double)"},"variableMap":{"maxRasterWidth2InMeterNormed":"weightLimit","currNormedDist":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:147","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.EdgeEntry.double) > (double)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}