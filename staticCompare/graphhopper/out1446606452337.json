{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":89,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":318,"com.graphhopper.reader.OSMReaderTest.testFerry":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":366,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":147,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":134,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":167,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":289,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":7,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":67,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":338,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":390,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":392,"com.graphhopper.GraphHopperTest.testPrepare":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":350,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":248,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":83,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":355,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":166,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":81,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":57,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":314,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":148,"com.graphhopper.GraphHopperTest.testLoadOSM":35,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":61,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":369,"com.graphhopper.reader.OSMReaderTest.testSort":39,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":387,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":260,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":351,"com.graphhopper.routing.DijkstraTest.initializationError":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":401,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":237,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":271,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":384,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":122,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":279,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":53,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":408,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":22,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":293,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":299,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":276,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":250,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":290,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":370,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":199,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":242,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":232,"com.graphhopper.reader.OSMReaderTest.testBarriers":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":280,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":388,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":103,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":176,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":171,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":138,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":281,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":208,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":121,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":261,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":132,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":362,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":395,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":346,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":62,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":266,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":285,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":145,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":372,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":313,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":114,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":385,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":332,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":291,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":231,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":214,"com.graphhopper.routing.AStarTest.initializationError":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":288,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":397,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":209,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":151,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":364,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":316,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":344,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":141,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":87,"com.graphhopper.reader.OSMReaderTest.testMain":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":404,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":399,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":398,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":275,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":386,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":303,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":119,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":371,"com.graphhopper.storage.GraphHopperStorageTest.testClone":234,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":267,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":347,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":394,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":190,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":244,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":324,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":378,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":198,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":383,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":12,"com.graphhopper.GraphHopperTest.testFootOnly":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":47,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":164,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":373,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":333,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":59,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":73,"com.graphhopper.routing.QueryGraphTest.testOneWay":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":391,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":170,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":56,"com.graphhopper.reader.OSMReaderTest.testWithBounds":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":312,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":330,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":339,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":94,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":133,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":177,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":302,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":188,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":295,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":230,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":76,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":263,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":139,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":304,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":55,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":368,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":375,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":183,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":336,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":353,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":32,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":307,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":306,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":200,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":140,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":254,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":86,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":193,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":3,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":99,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":93,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":229,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":160,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":222,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":352,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":52,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":301,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":356,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":155,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":247,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":359,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":286,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":118,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":97,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":405,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":154,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":169,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":233,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":124,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":402,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":115,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":272,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":274,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":95,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":34,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":363,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":343,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":112,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":178,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":292,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":328,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":239,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":20,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":21,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":197,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":182,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":180,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":249,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":377,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":400,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":287,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":300,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":317,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":374,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":128,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":297,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":109,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":101,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":120,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":146,"com.graphhopper.reader.OSMReaderTest.testFoot":213,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":341,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":162,"com.graphhopper.reader.OSMReaderTest.testOneWay":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":406,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":243,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":376,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":309,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":172,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":252,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":116,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":335,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":149,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":191,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":202,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":165,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":331,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":110,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":403,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":226,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":360,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":63,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":105,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":269,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":54,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":256,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":389,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":42,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":215,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":354,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":90,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":357,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":58,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":407,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":194,"com.graphhopper.GraphHopperTest.testFootAndCar":33,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":251,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":365,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":98,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":321,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":195,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":283,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":393,"com.graphhopper.GraphHopperTest.testVia":30,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":9,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":319,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":84,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":217,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":361,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":255,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":205,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":216,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":48,"com.graphhopper.routing.AStarBidirectionTest.initializationError":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":334,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":382,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":270},"transformations":[{"failures":[],"tindex":"30baebce-82a1-11e5-a2dc-fd38a8b428e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:305","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":0},{"failures":[],"tindex":"30bb12df-82a1-11e5-a2dc-872c3a9f0bbd","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:102","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeUTF(\"GH\")"},"variableMap":{"file":"raFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:272","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.getFD().sync()"},"status":0},{"failures":[],"tindex":"30bb12e0-82a1-11e5-a2dc-fb42600b3721","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:801","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"status":0},{"failures":[],"tindex":"30bb12e1-82a1-11e5-a2dc-277607dca8f4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:137","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch().start()"},"variableMap":{"sw":"neighborSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:349","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"status":0},{"failures":[],"tindex":"30bb12e2-82a1-11e5-a2dc-e16bddf1a5fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:801","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:490","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.substring(0, int);\n    java.lang.String = java.lang.String.substring((int + 1));\n    int = ((java.lang.Integer.parseInt(java.lang.String)) * 60) * 24;\n} "},"status":-2},{"failures":[0,1],"tindex":"30bb12e3-82a1-11e5-a2dc-2333e394742e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:849","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"g","newGraph":"ghStorage"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:106","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"status":-1},{"failures":[2],"tindex":"30bb12e4-82a1-11e5-a2dc-9b711f7f959a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:146","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.Bike2WeightFlagEncoder.setReverseSpeed(long, com.graphhopper.routing.util.EncodedDoubleValue.getDoubleValue(long))"},"status":-1},{"failures":[],"tindex":"30bb39f5-82a1-11e5-a2dc-99ecf0022493","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"eleDelta":"factor","decEleSum":"factor","fullDist2D":"factor","decDist2DSum":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:70","type":"CtIfImpl","sourcecode":"if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n    double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n"},"status":0},{"failures":[],"tindex":"30bb39f6-82a1-11e5-a2dc-630aaa48152f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"current","noOfStates":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:84","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getAdjNode()"},"status":-2},{"failures":[],"tindex":"30bb39f7-82a1-11e5-a2dc-93144bfa104a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:441","type":"CtReturnImpl","sourcecode":"return int * 1.852"},"variableMap":{"val":"storedInt"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:383","type":"CtReturnImpl","sourcecode":"return ((double)(int)) / (com.graphhopper.util.Helper.float)"},"status":-2},{"failures":[3],"tindex":"30bb39f8-82a1-11e5-a2dc-1172913d6fb3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"flags","len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:280","type":"CtIfImpl","sourcecode":"if (boolean)\n    return com.graphhopper.routing.util.MotorcycleFlagEncoder.setReverseSpeed(long, double);\n"},"status":-1},{"failures":[],"tindex":"30bb39f9-82a1-11e5-a2dc-9fdfb37daf7b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:275","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.chWeightings\")"},"status":-2},{"failures":[4,5,6,7],"tindex":"30bb39fa-82a1-11e5-a2dc-07595db24e9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:196","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"N\""},"status":-1},{"failures":[],"tindex":"30bb610b-82a1-11e5-a2dc-f710ef3f564e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"toLat","speed":"toLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:30","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.NodeAccess.getLatitude(int)"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"30bb610c-82a1-11e5-a2dc-9d5ae76650b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:115","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalArgumentException((\"Region of location index must be at least 1 but was \" + int));\n"},"variableMap":{"numTiles":"wayIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:180","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = com.graphhopper.util.DistanceCalc.calcCrossingPointToEdge(double, double, double, double, double, double);\n    double double = com.graphhopper.util.PointList.getElevation(((int) + 1));\n    com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(com.graphhopper.util.shapes.GHPoint.double , com.graphhopper.util.shapes.GHPoint.double , ((double + double) / 2));\n} else\n    com.graphhopper.util.shapes.GHPoint3D = new com.graphhopper.util.shapes.GHPoint3D(double , double , double);\n"},"status":-1},{"failures":[],"tindex":"30bb610d-82a1-11e5-a2dc-e375c88fdc93","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:224","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":0},{"failures":[68,69,70,71,72,73,74,2,75,76,77,78,79,80,19,81,82,20,83,84,85,86,21,22,87,88,23,89,90,91,92,93,24,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,3,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,33,211,212,213,38,39,40,214,4,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,54,268,66,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,67,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408],"tindex":"30bb881e-82a1-11e5-a2dc-93808a3d27cc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PrinctonReader:62","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\" \")"},"variableMap":{"line":"encoderList"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:123","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\",\")"},"status":-1},{"failures":[],"tindex":"30bb881f-82a1-11e5-a2dc-fdc0c41e7f44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:199","type":"CtIfImpl","sourcecode":"if (false) {\n    if (double > 1)\n        double = 1;\n    else if (double < 0)\n        double = 0;\n    \n} "},"variableMap":{"factor":"baseOrientation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:93","type":"CtIfImpl","sourcecode":"if (double >= 0) {\n    if (double < ((-(java.lang.Math.double)) + double))\n        double = double + (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n} else {\n    if (double > ((+(java.lang.Math.double)) + double))\n        double = double - (2 * (java.lang.Math.double));\n    else\n        double = double;\n    \n}"},"status":-2},{"failures":[35,360],"tindex":"30bb8820-82a1-11e5-a2dc-dd35139e8fa8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:310","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    com.graphhopper.storage.CHGraphImpl.close();\n}"},"variableMap":{"chGraphs":"chGraphs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:280","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n        throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n    \n}"},"status":-1},{"failures":[],"tindex":"30bbaf31-82a1-11e5-a2dc-dd6d772bc627","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:159","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"30baebce-82a1-11e5-a2dc-fd38a8b428e4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.Storable<com.graphhopper.storage.DataAccess>.flush"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b","com.graphhopper.storage.RAMDataAccess_void_flush().t2"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b","com.graphhopper.storage.RAMDataAccess_void_flush().t2"],"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":["com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b","com.graphhopper.storage.RAMDataAccess_void_flush().t2"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b","com.graphhopper.storage.RAMDataAccess_void_flush().t2"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.RAMDataAccess_void_flush().e1","com.graphhopper.storage.RAMDataAccess_void_flush().b","com.graphhopper.storage.RAMDataAccess_void_flush().t2"]},"type":"branch"}]},{"transformation":"30bb39f5-82a1-11e5-a2dc-99ecf0022493","diffs":[{"branches":{"com.graphhopper.util.HelperTest.testUnzip":["com.graphhopper.util.Unzipper_void_unzip(java.io.InputStream,java.io.File,com.graphhopper.util.ProgressListener).t3"]},"type":"branch"},{"methodsDiff":{"delete":["java.util.zip.ZipEntry.getCompressedSize","java.util.zip.ZipEntry.getSize"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"30bb12e0-82a1-11e5-a2dc-fb42600b3721","diffs":[{"branches":{"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":["com.graphhopper.storage.index.Location2IDFullWithEdgesIndex_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t6"],"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":["com.graphhopper.storage.index.Location2IDFullWithEdgesIndex_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t6"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":["com.graphhopper.storage.index.Location2IDFullWithEdgesIndex_com.graphhopper.storage.index.QueryResult_findClosest(double,double,com.graphhopper.routing.util.EdgeFilter).t6"]},"type":"branch"},{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}