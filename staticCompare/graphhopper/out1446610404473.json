{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":126,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":168,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":18,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":174,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":114,"com.graphhopper.reader.OSMReaderTest.testFerry":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":152,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":7,"com.graphhopper.routing.QueryGraphTest.testOneWay":17,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":75,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":62,"com.graphhopper.reader.OSMReaderTest.testWithBounds":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":132,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":33,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":43,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":150,"com.graphhopper.util.BitUtilBigTest.testReverse":100,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":105,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":34,"com.graphhopper.GraphHopperTest.testPrepare":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":139,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":49,"com.graphhopper.reader.OSMReaderTest.testFoot":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":145,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":137,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":69,"com.graphhopper.util.BitUtilLittleTest.testToBitString":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":70,"com.graphhopper.reader.OSMReaderTest.testOneWay":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":162,"com.graphhopper.GraphHopperAPITest.testDisconnected179":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":120,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":149,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":156,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":128,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":83,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":140,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":146,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":108,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":151,"com.graphhopper.GraphHopperTest.testLoadOSM":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":20,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":22,"com.graphhopper.reader.OSMReaderTest.testSort":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":135,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":77,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":166,"com.graphhopper.reader.OSMReaderTest.testMain":80,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":52,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":102,"com.graphhopper.storage.MMapDataAccessTest.testCopy":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":153,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":47,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":41,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":85,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":143,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":154,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":161,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":45,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":169,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":65,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":3,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":173,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":176,"com.graphhopper.GraphHopperTest.testFootAndCar":28,"com.graphhopper.util.BitUtilBigTest.testToBitString":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":103,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":121,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":159,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":117,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":74,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":44,"com.graphhopper.util.BitUtilLittleTest.testReverse":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":164,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":13,"com.graphhopper.GraphHopperTest.testPrepareOnly":35,"com.graphhopper.GraphHopperTest.testVia":25,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":8,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":163,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":87,"com.graphhopper.util.DouglasPeuckerTest.testParse":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":54,"com.graphhopper.GraphHopperAPITest.testLoad":92,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":42,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":11,"com.graphhopper.GraphHopperTest.testFootOnly":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":171,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":48,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":86,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":107,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":127,"com.graphhopper.reader.OSMReaderTest.testBarriers":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":157,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":118,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":142},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"64646456-82aa-11e5-9c1d-81624ec55692","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:273","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = 1;\n"},"variableMap":{"allSegments":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:172","type":"CtIfImpl","sourcecode":"if (java.util.List<com.graphhopper.storage.index.QueryResult> == null) {\n    java.util.List<com.graphhopper.storage.index.QueryResult> = new java.util.ArrayList<com.graphhopper.storage.index.QueryResult>(5);\n    gnu.trove.map.TIntObjectMap<java.util.List<com.graphhopper.storage.index.QueryResult>>.put(int, java.util.List<com.graphhopper.storage.index.QueryResult>);\n} "},"status":-1},{"failures":[],"tindex":"64648b67-82aa-11e5-9c1d-6b818c444951","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader(int, com.graphhopper.storage.AbstractDataAccess.getHeader(int))"},"variableMap":{"h":"to","this":"turnCosts","da":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-2},{"failures":[1,2,3,4,34,35,20,21,22,23,24,36,37,25,26,27,28,29,30,38,31,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"64648b68-82aa-11e5-9c1d-a5894d3f1326","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:177","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[]"},"variableMap":{"bytes":"shifts","tmp":"shifts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:196","type":"CtAssignmentImpl","sourcecode":"byte[] = new byte[int]"},"status":-1},{"failures":[],"tindex":"6464b279-82aa-11e5-9c1d-7b939fb60045","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:989","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:525","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"6464b27a-82aa-11e5-9c1d-634922b80cb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:131","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"N\""},"variableMap":{"cp":"streetName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:141","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"roundaboutExit\", com.graphhopper.util.RoundaboutInstruction.getExitNumber()) : com.graphhopper.util.Translation.tr(\"roundaboutExitOnto\", com.graphhopper.util.RoundaboutInstruction.getExitNumber(), java.lang.String)"},"status":-2},{"failures":[],"tindex":"6464b27b-82aa-11e5-9c1d-01276ad6bd69","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"currTo","entryCurrent":"currTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:167","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.poll()"},"status":0},{"failures":[94,49,67,95,96,97,98,99,100],"tindex":"6464d98c-82aa-11e5-9c1d-81d5824279fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:231","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-1},{"failures":[101],"tindex":"6464d98d-82aa-11e5-9c1d-5775bb3eae77","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:656","type":"CtLocalVariableImpl","sourcecode":"int int = -((int) + 3)"},"variableMap":{"nextTowerId":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:363","type":"CtLocalVariableImpl","sourcecode":"int int = (int + int) - (int)"},"status":-1},{"failures":[],"tindex":"6464d98e-82aa-11e5-9c1d-b7c181b70e2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1075","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.getHints()"},"status":0},{"failures":[26,27,28,32,40,41,43,44,45,46,47,48,49,50,53,54,55,56,58,59,61,62,63,64,65,66,67,68,71,72,73,74,76,77],"tindex":"6464d98f-82aa-11e5-9c1d-ff96c069c9e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:185","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return ;\n"},"status":-1},{"failures":[],"tindex":"6464ffa0-82aa-11e5-9c1d-9b1002515b1e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:215","type":"CtInvocationImpl","sourcecode":"javax.xml.stream.XMLStreamReader.close()"},"status":-2},{"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144],"tindex":"6464ffa1-82aa-11e5-9c1d-c1d666c98496","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:383","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.capacity()"},"status":-1},{"failures":[],"tindex":"6464ffa2-82aa-11e5-9c1d-719d810f5e42","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:315","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.Directory) != null)\n    return com.graphhopper.storage.Directory;\n"},"variableMap":{"dir":"dir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:333","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Directory = new com.graphhopper.storage.GHDirectory(java.io.File.getAbsolutePath() , com.graphhopper.storage.DAType)"},"status":-2},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,0,160,161,1,162,163,164,165,2,3,166,167,4,168,169,170,171,172,5,20,21,22,23,24,36,25,26,27,28,29,30,31,32,92,93],"tindex":"646526b3-82aa-11e5-9c1d-7d81a8654e78","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"from","edge2":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[],"tindex":"646526b4-82aa-11e5-9c1d-2fd966f60e7b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return false;\n} "},"variableMap":{"size":"size","i":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:180","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[1,2,3,4,34,35,20,21,22,23,24,36,37,25,26,27,28,29,30,38,31,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"646526b5-82aa-11e5-9c1d-f9997858824e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"depth","currentIndex":"lastEntry","bucketSize":"lastEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:199","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (int < (int[][int])) {\n        throw new java.lang.IllegalStateException((\"entries should decrease or stay but was:\" + (java.util.Arrays.toString(int[]))));\n    } \n    int = int[][int];\n    byte[][int] = com.graphhopper.storage.index.LocationIndexTree.getShift(int[][int]);\n    long[][int] = com.graphhopper.storage.index.LocationIndexTree.getBitmask(byte[][int]);\n}"},"status":-1},{"failures":[],"tindex":"64654dc6-82aa-11e5-9c1d-4f7bc21b5b0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1166","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LockFactory.forceRemove(java.lang.String, true)"},"status":0},{"failures":[],"tindex":"64654dc7-82aa-11e5-9c1d-5fd6b24d0262","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:66","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[173,174,175,176],"tindex":"64654dc8-82aa-11e5-9c1d-a304e5ad60b9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:277","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(java.lang.String)))\n    throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n"},"variableMap":{"loadedCHWeightings":"latlon","configuredCHWeightings":"latlon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:432","type":"CtIfImpl","sourcecode":"if ((java.lang.String.trim().length()) == 0)\n    continue;\n"},"status":-1},{"failures":[],"tindex":"64654dc9-82aa-11e5-9c1d-fbea33192b09","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:253","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"64654dc6-82aa-11e5-9c1d-4f7bc21b5b0e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.LockFactory.forceRemove"]},"type":"staticDiff"},{"branches":{"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.GraphHopper_void_close().c3","com.graphhopper.storage.NativeFSLockFactory_void_forceRemove(java.lang.String,boolean).b"],"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":["com.graphhopper.storage.NativeFSLockFactory_void_forceRemove(java.lang.String,boolean).t1","com.graphhopper.storage.NativeFSLockFactory_void_forceRemove(java.lang.String,boolean).e2","com.graphhopper.storage.NativeFSLockFactory$NativeLock_void_release().e1","com.graphhopper.storage.NativeFSLockFactory_void_forceRemove(java.lang.String,boolean).b"]},"type":"branch"}]},{"transformation":"6464d98e-82aa-11e5-9c1d-b7c181b70e2d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHResponse.getHints"]},"type":"staticDiff"}]}]}