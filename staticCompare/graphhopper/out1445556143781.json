{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":13,"com.graphhopper.util.BitUtilLittleTest.testToLong":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":1,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":32,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":66,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":39,"com.graphhopper.storage.MMapDataAccessTest.testCopy":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":33,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":29,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":68,"com.graphhopper.coll.OSMIDMapTest.testGet2":57,"com.graphhopper.storage.MMapDataAccessTest.testSegments":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":35,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":53,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":10,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":59,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":28,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":60,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":23,"com.graphhopper.coll.OSMIDMapTest.testGetLong":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":4,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":40,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":19,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":63,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":14,"com.graphhopper.util.BitUtilBigTest.testToLong":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":2,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":36,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":18,"com.graphhopper.coll.OSMIDMapTest.testGet":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":34,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":49,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":37,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":43},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"c00b65d3-7913-11e5-9920-bd4579050f7f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:116","type":"CtLocalVariableImpl","sourcecode":"int int = (int) == int ? (int) + 1 : int"},"variableMap":{"currentBucket":"indexDivisor","retBucket":"indexDivisor","currentIndex":"indexDivisor","bucketSize":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:312","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"c00b8ce4-7913-11e5-9920-252c154ca311","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:199","type":"CtReturnImpl","sourcecode":"return \"mtb\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:102","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-2},{"failures":[],"tindex":"c00b8ce5-7913-11e5-9920-c3afebf7f7aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:371","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"setWeight\")"},"variableMap":{"this":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:96","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, true)"},"status":-2},{"failures":[],"tindex":"c00b8ce6-7913-11e5-9920-d173b2e57496","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:356","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHTBitSet(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"status":0},{"failures":[],"tindex":"c00b8ce7-7913-11e5-9920-319b18d454cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:497","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 100))) / 100.0"},"variableMap":{"value":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:119","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[54,55,56,57,58,59],"tindex":"c00b8ce8-7913-11e5-9920-31062b58d1a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:112","type":"CtIfImpl","sourcecode":"if (long < long)\n    long = long;\nelse\n    long = long;\n"},"variableMap":{"high":"value","low":"value","guess":"value","guessedKey":"value","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromLong(byte[], long, 0)"},"status":-1},{"failures":[60,61,62,63,64,65,66,67,68],"tindex":"c00b8ce9-7913-11e5-9920-1d6529ce6f5d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphExtension:146","type":"CtReturnImpl","sourcecode":"return \"NoExt\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:454","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[],"tindex":"c00bb3fa-7913-11e5-9920-870d28f841ab","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:232","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"variableMap":{"ar_y":"weight","ab_y":"weight","ar_x":"weight","ab_x":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:239","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)"},"status":-2},{"failures":[],"tindex":"c00bb3fb-7913-11e5-9920-43a9d599ed45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:70","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.LinearKeyAlgo.setBounds(-180, 180, -90, 90)"},"status":-2},{"failures":[],"tindex":"c00bb3fc-7913-11e5-9920-6d0072741bef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:206","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity(((((long)(int)) + 4) * (int)))"},"status":-2},{"failures":[],"tindex":"c00bb3fd-7913-11e5-9920-2bd7e3d21f18","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:61","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"clockwise":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:156","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"c00bb3fe-7913-11e5-9920-9fdd3433694a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:628","type":"CtIfImpl","sourcecode":"if ((int == int) && ((com.graphhopper.routing.DijkstraOneToMany.getWeight(int)) <= double))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"c00bb3ff-7913-11e5-9920-872d74f184f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:878","type":"CtIfImpl","sourcecode":"if (int == 0)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"variableMap":{"mode":"mode","com.graphhopper.util.PointList.EMPTY":"com.graphhopper.util.PointList.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:870","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    long *= 4;\n    int = com.graphhopper.storage.DataAccess.getInt(long);\n    long += 4;\n    byte[] = new byte[(int * (com.graphhopper.storage.NodeAccess.getDimension())) * 4];\n    com.graphhopper.storage.DataAccess.getBytes(long, byte[], byte[].int);\n} else if (int == 0)\n    return com.graphhopper.util.PointList.com.graphhopper.util.PointList;\n"},"status":-2},{"failures":[],"tindex":"c00bb400-7913-11e5-9920-479da18b9d7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:132","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.storage.EdgeEntry) == null) || com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded())) || (!com.graphhopper.routing.Dijkstra.(finished())))\n    return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n"},"status":-2},{"failures":[],"tindex":"c00bb401-7913-11e5-9920-c9e3d43d22e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:229","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], -1)"},"status":-2},{"failures":[],"tindex":"c00bb402-7913-11e5-9920-6b95eead4302","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"searchIndex","hash":"searchIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:117","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"c00bdb13-7913-11e5-9920-37427a4ca918","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"variableMap":{"dMinLon":"maxLon","dMinLat":"maxLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[],"tindex":"c00bdb14-7913-11e5-9920-9b30b01f0514","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"segmentsToMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:122","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"c00bdb15-7913-11e5-9920-9d6b0b9f2c5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:182","type":"CtWhileImpl","sourcecode":"while (int != (javax.xml.stream.XMLStreamConstants.int)) {\n    if (int == (javax.xml.stream.XMLStreamConstants.int)) {\n        java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"id\");\n        if (java.lang.String != null) {\n            java.lang.String java.lang.String = javax.xml.stream.XMLStreamReader.getLocalName();\n            long long = 0;\n            switch (java.lang.String.charAt(0)) {\n                case 'n' :\n                    if (\"node\".equals(java.lang.String)) {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader);\n                    } \n                    break;\n                case 'w' :\n                    {\n                        long = java.lang.Long.parseLong(java.lang.String);\n                        return com.graphhopper.reader.OSMWay.create(long, javax.xml.stream.XMLStreamReader);\n                    }\n                case 'r' :\n                    long = java.lang.Long.parseLong(java.lang.String);\n                    return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader);\n            }\n        } \n    } \n    int = javax.xml.stream.XMLStreamReader.next();\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}