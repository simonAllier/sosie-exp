{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":2,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":40,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":57,"com.graphhopper.reader.OSMReaderTest.testMain":19,"com.graphhopper.reader.OSMReaderTest.testFerry":37,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":59,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":62,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":14,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":27,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":7,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":41,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":4,"com.graphhopper.storage.StorablePropertiesTest.testStore":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":61,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":15,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":60,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":1,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":42,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":56,"com.graphhopper.GraphHopperTest.testPrepare":46,"com.graphhopper.GraphHopperTest.testFootAndCar":48,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":54,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":6,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":55,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":63,"com.graphhopper.reader.OSMReaderTest.testFoot":18,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":36,"com.graphhopper.reader.OSMReaderTest.testOneWay":26,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":9,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":29,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":5,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":50,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":33,"com.graphhopper.GraphHopperTest.testPrepareOnly":43,"com.graphhopper.GraphHopperTest.testVia":45,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":51,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":0,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":39,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":21,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":35,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":22,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":31,"com.graphhopper.GraphHopperTest.testFootOnly":52,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":28,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":47,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":30,"com.graphhopper.reader.OSMReaderTest.testBarriers":38,"com.graphhopper.GraphHopperTest.testLoadOSM":49,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":53,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":16,"com.graphhopper.reader.OSMReaderTest.testSort":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":64},"transformations":[{"failures":[0],"tindex":"b1cd666b-829e-11e5-8e1a-fd934e9326cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:247","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Speed cannot be 0 for unblocked edge, use access properties to mark edge blocked! Should only occur for shortest path calculation. See #242.\")"},"status":-1},{"failures":[],"tindex":"b1cdb48c-829e-11e5-8e1a-d55d337373fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:707","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.VirtualEdgeIterator.add(com.graphhopper.util.EdgeIterator.detach(false))"},"variableMap":{"iter":"edge","vIter":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:405","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.applyWayTags(com.graphhopper.reader.OSMWay, com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"b1cdb48d-829e-11e5-8e1a-d7f812dc0845","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:292","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[27,28,29,30],"tindex":"b1cdb48e-829e-11e5-8e1a-cfcbd0a0bebc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:127","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"status":-1},{"failures":[],"tindex":"b1cddb9f-829e-11e5-8e1a-29d58f8488c5","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"variableMap":{"width":"allBits","lonSimilar":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:160","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n    if (double < double) {\n        double double = (double + double) / 2;\n        if (double < double) {\n            double = double;\n        } else {\n            long |= 1;\n            double = double;\n        }\n    } \n    int++;\n    if (int < (int))\n        long <<= 1;\n    else\n        break;\n    \n}"},"status":0},{"failures":[],"tindex":"b1cddba0-829e-11e5-8e1a-8d8239c1b396","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:206","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(((java.lang.String) + (java.lang.String)))"},"variableMap":{"name":"graphHopperFolder","location":"graphHopperFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:723","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"))"},"status":0},{"failures":[],"tindex":"b1cddba1-829e-11e5-8e1a-7367b81a1f08","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:185","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"nodeThis":"com.graphhopper.reader.OSMElement.NODE","nextEdgeOther":"com.graphhopper.reader.OSMElement.NODE","nodeOther":"com.graphhopper.reader.OSMElement.NODE","nextEdge":"com.graphhopper.reader.OSMElement.NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:930","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.reader.OSMElement.int) == (com.graphhopper.reader.OSMRelation.Member.type())) && (\"via\".equals(com.graphhopper.reader.OSMRelation.Member.role()))) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-2},{"failures":[31],"tindex":"b1ce02b2-829e-11e5-8e1a-219f2273bc5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:137","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n    java.util.List<com.graphhopper.routing.util.Weighting>.add(com.graphhopper.storage.CHGraphImpl.getWeighting());\n}"},"status":-1},{"failures":[],"tindex":"b1ce02b3-829e-11e5-8e1a-a3d3f7b463f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"width","hash":"width"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:116","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger)"},"status":-2},{"failures":[32,33,34,23,35],"tindex":"b1ce02b4-829e-11e5-8e1a-e39bb3367be3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1033","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.util.EdgeIterator.int))\n    return false;\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"maxTurnCosts","nextEdgeId":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:631","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    return false;\nelse if ((int) == 1)\n    return (long & (long)) != 0;\n"},"status":-1},{"failures":[36],"tindex":"b1ce02b5-829e-11e5-8e1a-41ca5f38b4ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"ee","fromHeap":"prioQueue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:220","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-1},{"failures":[37,18,19,20,38,21,22,24,39,40,25,41,26,42,43,44,45,46,47,48,31,49,50,51,52,53],"tindex":"b1ce29c6-829e-11e5-8e1a-e3db3f1dcfc1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:57","type":"CtIfImpl","sourcecode":"if (long <= (long)) {\n    throw new java.lang.IllegalStateException((((\"Not supported: key \" + long) + \" is lower than last one \") + (long)));\n} "},"variableMap":{"lastKey":"nodeFlags","key":"nodeFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:572","type":"CtIfImpl","sourcecode":"if (long != 0)\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(com.graphhopper.reader.OSMNode.getId(), long);\n"},"status":-1},{"failures":[49,54],"tindex":"b1ce29c7-829e-11e5-8e1a-e17fcfa9e3aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:572","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setCHWeighting(java.lang.String)"},"variableMap":{"tmpCHWeighting":"ghLocation","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:740","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setEncodingManager(com.graphhopper.routing.util.EncodingManager.create(java.lang.String))"},"status":-1},{"failures":[38,39],"tindex":"b1ce29c8-829e-11e5-8e1a-2b1c87e550cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:424","type":"CtIfImpl","sourcecode":"if (int < (int - 1)) {\n    long[] long[] = gnu.trove.list.TLongList.toArray(int, (int - int));\n    gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n} "},"status":-1},{"failures":[55,56],"tindex":"b1ce50d9-829e-11e5-8e1a-7555900cbdb8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:594","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.CHGraphImpl.long"},"variableMap":{"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT_LONG":"key","weightLong":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:78","type":"CtAssignmentImpl","sourcecode":"long[][int] = long"},"status":-1},{"failures":[57,58],"tindex":"b1ce50da-829e-11e5-8e1a-09987541d732","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:160","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1))"},"status":-1},{"failures":[],"tindex":"b1ce50db-829e-11e5-8e1a-bf1d3550cb2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"edgeTo","tmpNode":"nodeVia"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:454","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n    com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n}"},"status":-2},{"failures":[],"tindex":"b1ce50dc-829e-11e5-8e1a-8d3f913c7a64","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"prepareLogMessages"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:578","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.CmdArgs.getDouble(\"prepare.logmessages\", double)"},"status":0},{"failures":[59,60,61,62,63,64,65,66,43,31,49,50,51],"tindex":"b1ce77ed-829e-11e5-8e1a-0bb20e317657","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:102","type":"CtTryImpl","sourcecode":"try {\n    while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n        if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n            continue;\n        } \n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n            continue;\n        } \n        int int = java.lang.String.indexOf(\"=\");\n        if (int < 0) {\n            com.graphhopper.util.Helper.org.slf4j.Logger.warn((\"Skipping configuration at line:\" + java.lang.String));\n            continue;\n        } \n        java.lang.String java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n    }\n} finally {\n    java.io.BufferedReader.close();\n}"},"status":-1},{"failures":[],"tindex":"b1ce77ee-829e-11e5-8e1a-87fa3a8e5adc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:601","type":"CtReturnImpl","sourcecode":"return true"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"b1ce50dc-829e-11e5-8e1a-8d3f913c7a64","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PMap.getDouble"]},"type":"staticDiff"}]}]}