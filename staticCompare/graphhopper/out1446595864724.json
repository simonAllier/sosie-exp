{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":136,"com.graphhopper.reader.OSMReaderTest.testFerry":250,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":88,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":89,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":249,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":106,"com.graphhopper.reader.OSMReaderTest.testWithBounds":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":49,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":205,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":211,"com.graphhopper.coll.CompressedArrayTest.testCompress":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":246,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":257,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":244,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":34,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":150,"com.graphhopper.GraphHopperTest.testPrepare":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":183,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":22,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":117,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":26,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":12,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":264,"com.graphhopper.util.InstructionListTest.testWayList":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":16,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":84,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":53,"com.graphhopper.GraphHopperAPITest.testDisconnected179":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":1,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":213,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":141,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":105,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":13,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":107,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":221,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":223,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":158,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":151,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":114,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":62,"com.graphhopper.GraphHopperTest.testLoadOSM":78,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":128,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":154,"com.graphhopper.reader.OSMReaderTest.testSort":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":65,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":163,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":31,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":199,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":233,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":48,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":25,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":15,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":247,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":4,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":172,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":20,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":220,"com.graphhopper.util.GHUtilityTest.testSort":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":194,"com.graphhopper.coll.IntIntBinHeapTest.testSize":67,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":177,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":169,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":206,"com.graphhopper.coll.CompressedArrayTest.testCompress2":240,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":79,"com.graphhopper.GraphHopperAPITest.testLoad":242,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":24,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":68,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":8,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":176,"com.graphhopper.reader.OSMReaderTest.testBarriers":227,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":147,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":0,"com.graphhopper.util.GHUtilityTest.testCopy":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":195,"com.graphhopper.routing.PathTest.testFindInstruction":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":58,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":196,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":131,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":19,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":202,"com.graphhopper.reader.PrinctonReaderTest.testRead":222,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":181,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":33,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":166,"com.graphhopper.util.InstructionListTest.testWayList2":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":245,"com.graphhopper.reader.OSMReaderTest.testFoot":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":148,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":146,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":207,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":109,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":110,"com.graphhopper.reader.OSMReaderTest.testOneWay":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":156,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":43,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":159,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":142,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":60,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":118,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":144,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":228,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":201,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":23,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":263,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":200,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":90,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":235,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":260,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":208,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":51,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":192,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":72,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":71,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":70,"com.graphhopper.util.GHUtilityTest.testSort2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":21,"com.graphhopper.reader.OSMReaderTest.testMain":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":5,"com.graphhopper.routing.PathBidirRefTest.testExtract2":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":149,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":64,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":94,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":111,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":129,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":164,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":37,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":152,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":186,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":253,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":30,"com.graphhopper.storage.GraphHopperStorageTest.testClone":120,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":134,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":171,"com.graphhopper.GraphHopperTest.testFootAndCar":76,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":256,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":54,"com.graphhopper.GraphHopperTest.testPrepareOnly":254,"com.graphhopper.GraphHopperTest.testVia":74,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":46,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":251,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":6,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":204,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":87,"com.graphhopper.GraphHopperTest.testFootOnly":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":100,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":230,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":113,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":217,"com.graphhopper.util.InstructionListTest.testFind":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":173},"transformations":[{"failures":[],"tindex":"8a06c23c-8288-11e5-a8a2-ad9626a71dce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:564","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":0},{"failures":[],"tindex":"8a06e94d-8288-11e5-a8a2-a9b62601e0b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:291","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":0},{"failures":[],"tindex":"8a06e94e-8288-11e5-a8a2-5515ae33948f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"lastBarrier","bLen":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:386","type":"CtIfImpl","sourcecode":"if ((long & long) > 0) {\n    com.graphhopper.reader.OSMReader.getNodeFlagsMap().put(long, 0);\n    long long = com.graphhopper.reader.OSMReader.addBarrierNode(long);\n    if (int > 0) {\n        if (int < 0)\n            int = 0;\n        \n        long[] long[] = gnu.trove.list.TLongList.toArray(int, ((int - int) + 1));\n        long[][((long[].int) - 1)] = long;\n        gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n    } else {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long));\n        gnu.trove.list.TLongList.set(0, long);\n    }\n    int = int;\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"8a07105f-8288-11e5-a8a2-2b4ddf5a617e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:233","type":"CtLocalVariableImpl","sourcecode":"int int = (int) / 2"},"variableMap":{"size":"a"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:182","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.EdgeAccess.internalEdgeAdd(com.graphhopper.storage.CHGraphImpl.nextShortcutId(), int, int)"},"status":-1},{"failures":[],"tindex":"8a071060-8288-11e5-a8a2-05863b487b04","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:99","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getHeader((2 * 4))"},"variableMap":{"index":"values"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:73","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(long)"},"status":0},{"failures":[37,38],"tindex":"8a071061-8288-11e5-a8a2-cb1da043d938","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:478","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry)"},"status":-1},{"failures":[39],"tindex":"8a073772-8288-11e5-a8a2-0557c9df7728","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:306","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min((double / 1000), 50000)"},"variableMap":{"dist":"y1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:44","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.fix(double)"},"status":-1},{"failures":[],"tindex":"8a073773-8288-11e5-a8a2-19284ffe3fe3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:190","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"8a073774-8288-11e5-a8a2-1f7af440d68c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:143","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"r\");\n    try {\n        long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n        if (long < 0)\n            return false;\n        \n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        int int = ((int)(long / (int)));\n        if ((long % (int)) != 0)\n            int++;\n        \n        byte[][] = new byte[int][];\n        for (int int = 0 ; int < int ; int++) {\n            byte[] byte[] = new byte[int];\n            int int = java.io.RandomAccessFile.read(byte[]);\n            if (int <= 0)\n                throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n            \n            byte[][][int] = byte[];\n        }\n        return true;\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Problem while loading \" + com.graphhopper.storage.AbstractDataAccess.(getFullName())) , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"8a073775-8288-11e5-a8a2-6f3b8dd487bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:191","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\");\n"},"status":0},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"8a075e86-8288-11e5-a8a2-dd73040522b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:201","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[67],"tindex":"8a075e87-8288-11e5-a8a2-3f5244b20c47","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"variableMap":{"oldPriorities":"keys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:228","type":"CtAssignmentImpl","sourcecode":"int[] = java.util.Arrays.copyOf(int[], (int + 1))"},"status":-1},{"failures":[68],"tindex":"8a075e88-8288-11e5-a8a2-ebe1468b29be","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:153","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"mGarbage":"locked"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:243","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[19,69,70,71,72,73,74,75,76,77,78,79],"tindex":"8a075e89-8288-11e5-a8a2-bd9fcc0a56bc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:278","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | (int & 4294967295L)"},"variableMap":{"intLow":"current","intHigh":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:114","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getFlags()"},"status":-1},{"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,42,43,124,125,126,127,128,129,44,45,130,131,132,133,134,135,136,137,138,139,140,141,48,49,142,143,144,145,146,147,50,51,148,149,150,151,152,1,3,7,153,154,155,156,157,158,159,160,161,54,55,162,163,164,165,166,167,56,57,168,169,170,171,172,173,174,175,176,177,178,179,180,181,60,61,182,183,184,185,186,187,62,63,188,189,190,191,192,9,10,11,12,13,193,194,14,195,15,196,16,19,20,21,197,22,198,23,24,199,25,26,27,28,200,29,201,202,30,31,32,33,34,35,36,203,204,205,206,207,208,64,209,210,211,212,65,66,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,37,230,231,232,233,234,70,71,72,73,235,236,74,237,75,76,77,78,238,79,239],"tindex":"8a07859a-8288-11e5-a8a2-a9bb30b5b983","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:102","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"variableMap":{"cap":"edgePointer","bytes":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:177","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess._getLinkPosInEdgeArea(int, int, long)"},"status":-1},{"failures":[240,241],"tindex":"8a07acab-8288-11e5-a8a2-af0858a9c9d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:102","type":"CtTryImpl","sourcecode":"try {\n    if (int >= (java.util.List<byte[]>.size())) {\n        return null;\n    } \n    byte[] byte[] = java.util.List<byte[]>.get(int);\n    com.graphhopper.storage.VLongStorage com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(com.graphhopper.coll.CompressedArray.com.graphhopper.coll.CompressedArray.decompress(byte[]));\n    long long = com.graphhopper.storage.VLongStorage.getLength();\n    for (int int = 0 ; (com.graphhopper.storage.VLongStorage.getPosition()) < long ; int++) {\n        long long = com.graphhopper.storage.VLongStorage.readVLong();\n        if (int == int) {\n            com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n            com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n            return com.graphhopper.util.shapes.GHPoint;\n        } \n    }\n    return null;\n} catch (java.lang.ArrayIndexOutOfBoundsException ex) {\n    throw new java.lang.RuntimeException((((((((\"index \" + long) + \"=> segNo:\") + int) + \", entry=\") + int) + \", segments:\") + (java.util.List<byte[]>.size())) , java.lang.ArrayIndexOutOfBoundsException);\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-1},{"failures":[242,243,97,244,98,100,245,101,102,246,105,247,106,108,248,109,110,249,22,250,224,225,226,227,228,37,230,251,252,231,253,232,234,254,74,237,75,76,77,78,238,79,255,239],"tindex":"8a07acac-8288-11e5-a8a2-9143be56e65b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:167","type":"CtOperatorAssignmentImpl","sourcecode":"double /= int"},"status":-1},{"failures":[],"tindex":"8a07acad-8288-11e5-a8a2-bfd6a9bf72d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:517","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int))\n    return (-int) - 3;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.TOWER_NODE":"minElem","id":"minElem"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[115,256,257,153,258,173,259,228,229],"tindex":"8a07d3be-8288-11e5-a8a2-d910aff26800","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:349","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.PointList.add(double[][(3 * int)], double[][((3 * int) + 1)], double[][((3 * int) + 2)]);\n}"},"status":-1},{"failures":[260,261,262,263,264],"tindex":"8a07d3bf-8288-11e5-a8a2-679bcb6a04e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"variableMap":{"edgeId":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:180","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.UnsafeDataAccess.getCapacity();\n    com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    byte[] byte[] = new byte[int];\n    int int = com.graphhopper.storage.UnsafeDataAccess.getSegments();\n    for (int int = 0 ; int < int ; int++) {\n        com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int);\n        java.io.RandomAccessFile.write(byte[]);\n    }\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"8a073775-8288-11e5-a8a2-6f3b8dd487bc","diffs":[{"methodsDiff":{"delete":["com.graphhopper.reader.OSMElement.getTag"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"8a06e94d-8288-11e5-a8a2-a9b62601e0b1","diffs":[{"methodsDiff":{"delete":["java.lang.System.arraycopy"]},"type":"staticDiff"}]},{"transformation":"8a071060-8288-11e5-a8a2-05863b487b04","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.getInt"]},"type":"staticDiff"}]}]}