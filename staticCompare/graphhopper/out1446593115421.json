{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":102,"com.graphhopper.search.NameIndexTest.testCreate":137,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":45,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":210,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":178,"com.graphhopper.reader.OSMReaderTest.testFerry":217,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":196,"com.graphhopper.routing.QueryGraphTest.testOneWay":62,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":19,"com.graphhopper.reader.OSMReaderTest.testWithBounds":224,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":213,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":203,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":42,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":67,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":159,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":140,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":232,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":114,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":12,"com.graphhopper.GraphHopperTest.testPrepare":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":66,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":105,"com.graphhopper.search.NameIndexTest.testFlush":135,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":48,"com.graphhopper.util.InstructionListTest.testWayList":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":49,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":228,"com.graphhopper.GraphHopperAPITest.testDisconnected179":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":189,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":176,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":125,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":201,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":118,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":74,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":116,"com.graphhopper.GraphHopperTest.testLoadOSM":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":47,"com.graphhopper.reader.OSMReaderTest.testSort":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":99,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":223,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":199,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":113,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":166,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":77,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":104,"com.graphhopper.storage.RAMDataAccessTest.testHeader":209,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":117,"com.graphhopper.routing.PathTest.testWayList":8,"com.graphhopper.storage.MMapDataAccessTest.testCopy":79,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":170,"com.graphhopper.coll.OSMIDMapTest.testGet2":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":52,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":90,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":214,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":96,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":193,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":171,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":65,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":206,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":150,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":124,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":78,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":180,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":93,"com.graphhopper.coll.OSMIDMapTest.testGetLong":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":197,"com.graphhopper.search.NameIndexTest.testPut":134,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":87,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":192,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":61,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":127,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":86,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":215,"com.graphhopper.GraphHopperAPITest.testLoad":230,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":195,"com.graphhopper.reader.OSMReaderTest.testBarriers":220,"com.graphhopper.routing.PathTest.testFound":119,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":155,"com.graphhopper.util.GHUtilityTest.testCopy":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":63,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":212,"com.graphhopper.routing.PathTest.testFindInstruction":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":88,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":136,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":202,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":111,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":17,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":57,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":55,"com.graphhopper.util.InstructionListTest.testWayList2":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":163,"com.graphhopper.reader.OSMReaderTest.testFoot":218,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":184,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":216,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":181,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":198,"com.graphhopper.reader.OSMReaderTest.testOneWay":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":126,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":152,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":141,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":16,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":144,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":54,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":173,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":31,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":142,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":167,"com.graphhopper.coll.OSMIDMapTest.testGet":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":56,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":108,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":147,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":130,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":227,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":234,"com.graphhopper.storage.RAMDataAccessTest.testCopy":205,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":145,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":179,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":11,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":70,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":69,"com.graphhopper.storage.RAMDataAccessTest.testSegments":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":188,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":100,"com.graphhopper.reader.OSMReaderTest.testMain":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":23,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":185,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":172,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":133,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":156,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":40,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":53,"com.graphhopper.storage.StorablePropertiesTest.testStore":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":191,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":204,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":177,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":41,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":15,"com.graphhopper.GraphHopperTest.testFootAndCar":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":20,"com.graphhopper.routing.PathTest.testTime":120,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":207,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":98,"com.graphhopper.GraphHopperTest.testPrepareOnly":233,"com.graphhopper.GraphHopperTest.testVia":1,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":97,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":168,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":158,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":194,"com.graphhopper.GraphHopperTest.testFootOnly":37,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":162,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":221,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":81,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":164,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":121,"com.graphhopper.util.InstructionListTest.testFind":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":106,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":187},"transformations":[{"failures":[],"tindex":"234f0aa6-8282-11e5-99c7-b1b9cdc1660f","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:87","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"currentEntry":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:216","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedDoubleValue.getBits()"},"status":0},{"failures":[0,1],"tindex":"234f31b7-8282-11e5-99c7-c1f2b93bd244","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:255","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMinResolutionInMeter(int)"},"variableMap":{"this":"tmpIndex","minResolutionInMeter":"maxRegionSearch"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1083","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMaxRegionSearch(int)"},"status":-1},{"failures":[],"tindex":"234f31b8-8282-11e5-99c7-49689d4b93e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BreadthFirstSearch:44","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (com.graphhopper.util.XFirstSearch.(checkAdjacent(com.graphhopper.util.EdgeIterator)) && (!(com.graphhopper.coll.GHBitSet.contains(int)))) {\n        com.graphhopper.coll.GHBitSet.add(int);\n        com.graphhopper.util.SimpleIntDeque.push(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"234f58c9-8282-11e5-99c7-130e996a26c1","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:174","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess"},"variableMap":{"da":"inner"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.SynchedDAWrapper:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DataAccess.setSegmentSize(int)"},"status":-2},{"failures":[],"tindex":"234f58ca-8282-11e5-99c7-cff73bcbce38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:49","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"234f58cb-8282-11e5-99c7-c13a11009cb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-1},{"failures":[38,39],"tindex":"234f58cc-8282-11e5-99c7-1101e857b234","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.createCHPreparations()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:773","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.postProcessing()"},"status":-1},{"failures":[],"tindex":"234f58cd-8282-11e5-99c7-1d6b56d0bfc3","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHResponse:172","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.check(\"calcRouteBBox\")"},"variableMap":{"this":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:111","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.GHResponse.setInstructions(com.graphhopper.util.InstructionList);\n"},"status":-2},{"failures":[],"tindex":"234f7fde-8282-11e5-99c7-1324dc803019","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:149","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"point cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:447","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((\"Configured dimension (\" + (com.graphhopper.storage.NodeAccess.getDimension())) + \") is not equal \") + \"to dimension of loaded graph (\") + java.lang.String) + \")\"))"},"status":0},{"failures":[40],"tindex":"234f7fdf-8282-11e5-99c7-092c01ce4ee8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:171","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException(\"via node cannot be negative\");\n"},"variableMap":{"nodeVia":"y"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-1},{"failures":[],"tindex":"234f7fe0-8282-11e5-99c7-43945239aaff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:250","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"variableMap":{"line":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:762","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) && com.graphhopper.GraphHopper.(isAllowWrites())) {\n    com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n    com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, false);\n    if (!(com.graphhopper.storage.Lock.tryLock()))\n        throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n    \n} "},"status":-2},{"failures":[41],"tindex":"234f7fe1-8282-11e5-99c7-0b975ebdb1e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:203","type":"CtIfImpl","sourcecode":"if ((((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\")))) && (!(java.lang.String.equals(\"grade2\")))) && (!(java.lang.String.equals(\"grade3\"))))\n    return 0;\n"},"status":-1},{"failures":[2,3,4,42,43,5,44,45,6,7,8,9,10,11,12,13,14,15,16,17,18,46,19,47,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,37],"tindex":"234f7fe2-8282-11e5-99c7-7dd3f3f1673e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"len","from":"len","end":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:837","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromInt(byte[], int, 0)"},"status":-1},{"failures":[],"tindex":"234f7fe3-8282-11e5-99c7-6905db234409","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:55","type":"CtLocalVariableImpl","sourcecode":"double double = double / (java.lang.Math.abs((double - double)))"},"status":-2},{"failures":[],"tindex":"234fce04-8282-11e5-99c7-cd4351ed7c73","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:95","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.EdgeFilter.accept(com.graphhopper.routing.util.AllEdgesIterator))) {\n    continue;\n} "},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,1],"tindex":"234fce05-8282-11e5-99c7-b96eac5a7cca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:683","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge()"},"variableMap":{"adjNodesToDelIter":"edgeIterState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:44","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[],"tindex":"234fce06-8282-11e5-99c7-672501633b4e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:315","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[58,59,3,4,60,42,61,43,5,44,62,6,63,64,50,65,66,52,67,68,69,70,71,72,1,73,74,75,76,38,39],"tindex":"234fce07-8282-11e5-99c7-99cd2e3a8f3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:57","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[9,10,11,12,77,78,79,13,80,81,82,83,84,85,20,25,86],"tindex":"234ff518-8282-11e5-99c7-8db5a3017c05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:373","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":-1},{"failures":[2,58,59,3,4,60,42,61,43,5,44,45,87,6,88,89,90,48,91,92,93,94,63,95,96,64,49,97,98,99,50,65,100,101,66,102,103,7,51,104,52,105,106,107,108,109,110,111,112,53,113,114,115,56,116,117,118,119,120,121,122,8,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,13,152,80,14,15,16,17,153,154,155,156,157,158,159,18,160,46,161,162,163,164,165,166,167,168,169,170,171,172,173,81,82,83,84,174,175,19,176,47,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,67,192,193,85,194,57,195,20,196,21,22,23,24,197,198,25,199,86,26,27,28,29,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,30,219,220,31,32,0,221,222,223,224,225,226,227,33,228,34,35,229,36,230,231,232,233,68,69,70,71,72,234,235,1,73,74,75,76,38,236,39,37,237],"tindex":"234ff519-8282-11e5-99c7-1fd4f74b80eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:107","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0)\n    int++;\n"},"variableMap":{"segmentSizeInBytes":"segmentSizePower","newBytes":"cap","segmentsToCreate":"segmentsToCreate"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:110","type":"CtTryImpl","sourcecode":"try {\n    byte[][] byte[][] = java.util.Arrays.copyOf(byte[][], ((byte[][].int) + int));\n    for (int int = byte[][].int ; int < (byte[][].int) ; int++) {\n        byte[][][int] = new byte[1 << (int)];\n    }\n    byte[][] = byte[][];\n} catch (java.lang.OutOfMemoryError err) {\n    throw new java.lang.OutOfMemoryError((((((((((((java.lang.OutOfMemoryError.getMessage()) + \" - problem when allocating new memory. Old capacity: \") + long) + \", new bytes:\") + long) + \", segmentSizeIntsPower:\") + (int)) + \", new segments:\") + int) + \", existing:\") + (byte[][].int)));\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"234f7fde-8282-11e5-99c7-1324dc803019","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.PointAccess.getDimension"]},"type":"staticDiff"}]}]}