{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":0,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":252,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":53,"com.graphhopper.reader.OSMReaderTest.testFerry":170,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":249,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":121,"com.graphhopper.routing.QueryGraphTest.testOneWay":259,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":63,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":266,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":65,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":223,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":94,"com.graphhopper.reader.OSMReaderTest.testWithBounds":183,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":5,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":254,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":134,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":106,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":241,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":109,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":155,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":91,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":264,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":70,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":144,"com.graphhopper.GraphHopperTest.testPrepare":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":27,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":235,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":32,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":257,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":14,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":277,"com.graphhopper.util.InstructionListTest.testWayList":198,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":22,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":113,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":195,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":69,"com.graphhopper.GraphHopperAPITest.testDisconnected179":194,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":61,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":116,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":267,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":222,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":133,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":135,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":224,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":176,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":122,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":139,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":129,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":189,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":247,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":246,"com.graphhopper.GraphHopperTest.testLoadOSM":50,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":229,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":225,"com.graphhopper.reader.OSMReaderTest.testSort":173,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":182,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":35,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":149,"com.graphhopper.util.PointListTest.testReverse":203,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":215,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":160,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":30,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":256,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":132,"com.graphhopper.routing.PathTest.testWayList":262,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":161,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":219,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamVertical":204,"com.graphhopper.util.BitUtilBigTest.testFromBitString":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":13,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":211,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":245,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":54,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":77,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":84,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":158,"com.graphhopper.util.BitUtilBigTest.testToBitString":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":227,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":64,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":191,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":102,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":83,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":255,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":74,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":51,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":157,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":72,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":156,"com.graphhopper.GraphHopperAPITest.testLoad":10,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":49,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":29,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":96,"com.graphhopper.reader.OSMReaderTest.testBarriers":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":82,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":275,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":112,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":268,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":207,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":19,"com.graphhopper.util.GHUtilityTest.testCopy":196,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":8,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":71,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":3,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamBug":205,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":127,"com.graphhopper.routing.PathTest.testFindInstruction":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":95,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":21,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":164,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":23,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":153,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":138,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":26,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":237,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":4,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":238,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":56,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":248,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":87,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":168,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":162,"com.graphhopper.util.InstructionListTest.testWayList2":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":79,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":93,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":120,"com.graphhopper.reader.OSMReaderTest.testFoot":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":230,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":261,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":57,"com.graphhopper.coll.IntIntBinHeapTest.test0":193,"com.graphhopper.reader.OSMReaderTest.testOneWay":185,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":228,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":119,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":73,"com.graphhopper.util.PointListTest.testAddPL":202,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":236,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":124,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":137,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":36,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":187,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":216,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":123,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":147,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":271,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":105,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":125,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":44,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":272,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":99,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":39,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":43,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":274,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":42,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":218,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":239,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":40,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":25,"com.graphhopper.reader.OSMReaderTest.testMain":172,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":244,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":141,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":126,"com.graphhopper.routing.PathBidirRefTest.testExtract2":38,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":243,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":140,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":12,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":213,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":165,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":221,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":192,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":166,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":208,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":100,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":88,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":78,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":34,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":226,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":148,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":150,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":146,"com.graphhopper.GraphHopperTest.testFootAndCar":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":85,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":9,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":159,"com.graphhopper.routing.PathTest.testTime":169,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":163,"com.graphhopper.util.InstructionListTest.testCreateGPX":199,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":151,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":154,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":232,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":210,"com.graphhopper.reader.OSMReaderTest.testRelation":179,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":273,"com.graphhopper.GraphHopperTest.testPrepareOnly":265,"com.graphhopper.GraphHopperTest.testVia":45,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":131,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":250,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":181,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":180,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":217,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":209,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":55,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":253,"com.graphhopper.GraphHopperTest.testFootOnly":1,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":201,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":52,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":59,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":178,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":143,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":188,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":214,"com.graphhopper.util.InstructionListTest.testFind":197,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":16,"com.graphhopper.storage.index.BresenhamLineTest.testBresenhamToLeft":206,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":233},"transformations":[{"failures":[],"tindex":"71235498-8285-11e5-8c0f-45db584d3c0c","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:164","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"initializedCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:238","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"71237ba9-8285-11e5-8c0f-eb90a76a63c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:132","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.Instruction.getName()"},"status":-2},{"failures":[0,1],"tindex":"7123a2ba-8285-11e5-8c0f-3bf1c1ae446a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:372","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[2,3,4,5,6,7,8,9],"tindex":"7123a2bb-8285-11e5-8c0f-4563f826b89f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:232","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", java.util.HashSet<java.lang.String>))\n    return long;\n"},"variableMap":{"acceptBit":"acceptBit","way":"way","sidewalks":"intendedValues"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:261","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.Set<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"7123a2bc-8285-11e5-8c0f-5d18825ccf0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:89","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.Edge.isValid(int)) {\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.Path.processEdge(int, com.graphhopper.storage.EdgeEntry.int);\n    int = com.graphhopper.storage.EdgeEntry.int;\n}"},"status":-1},{"failures":[52,53,54,55,12,22,36,56,57,58,59,60,61,62,63,64,65,66,67,2,68,69,3,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,4,91,92,5,93,94,95,96,97,98,99,0,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,6,129,130,7,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8,164,165,9,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"tindex":"7123c9cd-8285-11e5-8c0f-d356a2d22c79","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:220","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"WayType\" , int , 2 , 1 , 0 , 3 , true)"},"status":-1},{"failures":[],"tindex":"7123c9ce-8285-11e5-8c0f-1f2e7dac14ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:62","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.checkAlreadyRun()"},"status":-2},{"failures":[11,14,15,19,21,22,23,24,26,27,186,28,30,31,45],"tindex":"7123f0df-8285-11e5-8c0f-07ff790fbde7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"i","tmpNode":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:408","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    if (boolean)\n        double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\n    else\n        double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n    \n} "},"status":-1},{"failures":[187,188,189,190,191],"tindex":"7123f0e0-8285-11e5-8c0f-073e8ac1cba1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize()).create(com.graphhopper.storage.DataAccess.getCapacity())"},"status":-1},{"failures":[172,173,174,175,176,177,178,182,183,45,46,47,49,50,51,1],"tindex":"7123f0e1-8285-11e5-8c0f-5b0e55fb469c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:361","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"rowSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:105","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (int)) + (int)))"},"status":-1},{"failures":[],"tindex":"7123f0e2-8285-11e5-8c0f-6ba75000a1e6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:62","type":"CtAssignmentImpl","sourcecode":"this.float = float"},"variableMap":{"growFactor":"factor","factor":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:64","type":"CtAssignmentImpl","sourcecode":"float = 2"},"status":0},{"failures":[192,193],"tindex":"712417f3-8285-11e5-8c0f-390836b61a4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:147","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"712417f4-8285-11e5-8c0f-49bb15d52939","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:154","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException(((((\"maximum not found in [\" + int) + \",\") + int) + \"]\"));\n} "},"variableMap":{"indexWithMaxDist":"turnCostsCount","lastIndex":"turnCostsCount","fromIndex":"turnCostsCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:91","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":0},{"failures":[],"tindex":"712417f5-8285-11e5-8c0f-71417605cb5a","series":0,"name":"add","transplant":{"position":"com.graphhopper.GHRequest:194","type":"CtIfImpl","sourcecode":"if ((!(java.lang.Double.isNaN(double))) && (((java.lang.Double.compare(double, 360)) > 0) || ((java.lang.Double.compare(double, 0)) < 0)))\n    throw new java.lang.IllegalArgumentException(((\"Heading \" + double) + \" must be in range (0,360) or NaN\"));\n"},"variableMap":{"heading":"java.lang.Math.PI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:95","type":"CtIfImpl","sourcecode":"if (double < ((-(java.lang.Math.double)) + double))\n    double = double + (2 * (java.lang.Math.double));\nelse\n    double = double;\n"},"status":-2},{"failures":[10,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,52,214,215,216,217,218,219,220,221,222,223,224,225,226,53,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,11,14,15,19,21,23,24,26,27,186,28,30,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,170,171,172,173,174,177,178,181,182,183,184,185,264,265,39,40,41,42,43,44,266,45,46,47,48,49,50,267,51,1,268],"tindex":"71243f06-8285-11e5-8c0f-8f2fab79d62f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:589","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative but was \" + double));\n"},"variableMap":{"weight":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:121","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double, java.lang.Double.double)"},"status":-1},{"failures":[269,270],"tindex":"71243f07-8285-11e5-8c0f-8328dcd15ac0","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:119","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    if ((byte & byte) == 0)\n        java.lang.StringBuilder.append('0');\n    else\n        java.lang.StringBuilder.append('1');\n    \n    byte <<= 1;\n}"},"variableMap":{"b":"lastBit","lastBit":"lastBit","sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:117","type":"CtForEachImpl","sourcecode":"for (byte byte : byte[]) {\n    for (int int = 0 ; int < 8 ; int++) {\n        if ((byte & byte) == 0)\n            java.lang.StringBuilder.append('0');\n        else\n            java.lang.StringBuilder.append('1');\n        \n        byte <<= 1;\n    }\n}"},"status":-1},{"failures":[271,272,273,274,275,276,277],"tindex":"71243f08-8285-11e5-8c0f-edd38879adf7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:69","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:218","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.getInt(((long) + long))"},"status":-1},{"failures":[],"tindex":"71246619-8285-11e5-8c0f-a129af4188c3","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:319","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.isClosed()"},"status":-2},{"failures":[],"tindex":"7124661a-8285-11e5-8c0f-f5a9a51d06ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.RAMDataAccess) {\n    com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess);\n    com.graphhopper.storage.RAMDataAccess com.graphhopper.storage.RAMDataAccess = ((com.graphhopper.storage.RAMDataAccess)(com.graphhopper.storage.DataAccess));\n    com.graphhopper.storage.RAMDataAccess.byte[][] = new byte[byte[][].int][];\n    for (int int = 0 ; int < (byte[][].int) ; int++) {\n        byte[] byte[] = byte[][][int];\n        com.graphhopper.storage.RAMDataAccess.byte[][][int] = java.util.Arrays.copyOf(byte[], byte[].int);\n    }\n    com.graphhopper.storage.RAMDataAccess.setSegmentSize(int);\n    return com.graphhopper.storage.DataAccess;\n} else {\n    return super.copyTo(com.graphhopper.storage.DataAccess);\n}"},"status":-2},{"failures":[],"tindex":"7124661b-8285-11e5-8c0f-735e9256958c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"neighborTime","java.lang.Math.PI":"neighborTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:363","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"7124661b-8285-11e5-8c0f-735e9256958c","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]},{"transformation":"712417f4-8285-11e5-8c0f-49bb15d52939","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setHeader"]},"type":"staticDiff"}]}]}