{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":30,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":159,"com.graphhopper.util.BitUtilBigTest.testToDouble":166,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":169,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":39,"com.graphhopper.routing.PathTest.testFindInstruction":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":24,"com.graphhopper.reader.OSMReaderTest.testFerry":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":101,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":44,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":157,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":151,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":15,"com.graphhopper.reader.OSMReaderTest.testWithBounds":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":123,"com.graphhopper.reader.PrinctonReaderTest.testRead":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":89,"com.graphhopper.coll.CompressedArrayTest.testCompress":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":50,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":20,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":128,"com.graphhopper.GraphHopperTest.testPrepare":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":49,"com.graphhopper.util.InstructionListTest.testWayList2":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":113,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":117,"com.graphhopper.reader.OSMReaderTest.testFoot":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":34,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":161,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":104,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":162,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":67,"com.graphhopper.util.InstructionListTest.testWayList":70,"com.graphhopper.reader.OSMReaderTest.testOneWay":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":46,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":0,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":12,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":105,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":31,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":56,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":60,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":100,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":145,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":97,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":114,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":48,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":21,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":80,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":129,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":59,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":120,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":3,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":52,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":73,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":130,"com.graphhopper.GraphHopperTest.testLoadOSM":83,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":74,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":64,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":77,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":76,"com.graphhopper.reader.OSMReaderTest.testSort":135,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":40,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":18,"com.graphhopper.reader.OSMReaderTest.testMain":134,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":160,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":125,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":150,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":94,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":4,"com.graphhopper.storage.MMapDataAccessTest.testCopy":6,"com.graphhopper.routing.PathTest.testWayList":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":17,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":38,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":116,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":19,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":107,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":142,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":9,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":58,"com.graphhopper.util.DistanceCalcEarthTest.testValidEdgeDistance":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":23,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":158,"com.graphhopper.GraphHopperTest.testFootAndCar":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":11,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":99,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":54,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":5,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":165,"com.graphhopper.coll.CompressedArrayTest.testCompress2":146,"com.graphhopper.GraphHopperTest.testVia":78,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":93,"com.graphhopper.util.BitUtilBigTest.testToLong":167,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":84,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":109,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":139,"com.graphhopper.GraphHopperAPITest.testLoad":131,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":10,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":37,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":138,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":2,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":148,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":92,"com.graphhopper.reader.OSMReaderTest.testBarriers":136,"com.graphhopper.util.InstructionListTest.testFind":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":106,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":26,"com.graphhopper.util.GHUtilityTest.testCopy":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":42},"transformations":[{"failures":[0,1],"tindex":"d63bf7ca-82af-11e5-95b6-31b6700b74c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:182","type":"CtAssignmentImpl","sourcecode":"long = 2L << int"},"variableMap":{"shift":"com.graphhopper.routing.util.FlagEncoder.K_ROUNDABOUT","backwardBit":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:340","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.BikeCommonFlagEncoder.setBool(long, com.graphhopper.routing.util.FlagEncoder.int, true)"},"status":-1},{"failures":[],"tindex":"d63c1edb-82af-11e5-95b6-237c7a400906","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:680","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.min(double, double)"},"variableMap":{"dMinLon":"weight","dMinLat":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:239","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)"},"status":-2},{"failures":[2,3,4,5,6,7],"tindex":"d63c1edc-82af-11e5-95b6-bf0ebb63effd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:148","type":"CtForImpl","sourcecode":"for (long long = 0 ; long < long ; long += int) {\n    if (com.graphhopper.storage.AbstractDataAccess.isIntBased()) {\n        for (int int = 0 ; int < int ; int += 4) {\n            com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.storage.DataAccess.getInt((long + int)), int);\n        }\n    } else {\n        com.graphhopper.storage.DataAccess.getBytes(long, byte[], int);\n    }\n    if (boolean) {\n        for (int int = 0 ; int < int ; int += 4) {\n            com.graphhopper.storage.DataAccess.setInt((long + int), com.graphhopper.util.BitUtil.toInt(byte[], int));\n        }\n    } else {\n        com.graphhopper.storage.DataAccess.setBytes(long, byte[], int);\n    }\n}"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"d63c1edd-82af-11e5-95b6-ed53a367086b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:720","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"variableMap":{"nodeEntryBytes":"low","newI":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:113","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"status":-1},{"failures":[],"tindex":"d63c45ee-82af-11e5-95b6-7d7bbd9ad00f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:70","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.lang.String, 4)"},"status":-2},{"failures":[146,147],"tindex":"d63c45ef-82af-11e5-95b6-112fd3d90095","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:114","type":"CtIfImpl","sourcecode":"if (int == int) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n    com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n    return com.graphhopper.util.shapes.GHPoint;\n} "},"variableMap":{"entry":"entry","latlon":"len","i":"entry","algo":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; (com.graphhopper.storage.VLongStorage.getPosition()) < long ; int++) {\n    long long = com.graphhopper.storage.VLongStorage.readVLong();\n    if (int == int) {\n        com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n        com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n        return com.graphhopper.util.shapes.GHPoint;\n    } \n}"},"status":-1},{"failures":[13,25,44,57],"tindex":"d63c45f0-82af-11e5-95b6-055eb79e570c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:755","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.setFlags_(long, (int > int), long)"},"status":-1},{"failures":[148],"tindex":"d63c45f1-82af-11e5-95b6-450bad58ed9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:130","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return 0;\n"},"variableMap":{"phrase":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:504","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[],"tindex":"d63c45f2-82af-11e5-95b6-8d5b89ca6cd7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PMap:177","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PMap.merge(com.graphhopper.util.PMap.getMap())"},"variableMap":{"read":"hintsMap","this":"hintsMap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:223","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PMap"},"status":-2},{"failures":[149,150,151,152],"tindex":"d63c6d03-82af-11e5-95b6-993da3b297a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:562","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-1},{"failures":[153,154,155,78,156,157,158,116,159,160,161,162],"tindex":"d63c6d04-82af-11e5-95b6-dbc6f660c926","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:79","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.AngleCalc.double) - ((double / 180.0) * (java.lang.Math.double))"},"variableMap":{"com.graphhopper.util.AngleCalc.PI_2":"b_lon","azimuth":"b_lon","java.lang.Math.PI":"a_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:230","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"status":-1},{"failures":[163,164,2,3,4,165,5],"tindex":"d63c6d05-82af-11e5-95b6-5194bae2a232","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"resolution","nodeCount":"resolution"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.Location2IDQuadtree.initLatLonSize(int)"},"status":-1},{"failures":[166,167],"tindex":"d63c6d06-82af-11e5-95b6-35b17d921918","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:158","type":"CtReturnImpl","sourcecode":"return (((long)(int)) << 32) | ((long)(int))"},"variableMap":{"edgeTo":"offset","edgeFrom":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:69","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.util.BitUtilBig.((long)(toInt(byte[], int))) << 32) | (com.graphhopper.util.BitUtilBig.(toInt(byte[], (int + 4))) & 4294967295L)"},"status":-1},{"failures":[168],"tindex":"d63c6d07-82af-11e5-95b6-9105c9f23c75","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:75","type":"CtReturnImpl","sourcecode":"return float[][1]"},"status":-1},{"failures":[],"tindex":"d63c6d08-82af-11e5-95b6-b32e260e99e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.saveProperties(java.util.Map<java.lang.String, java.lang.String>, java.io.StringWriter)"},"status":-2},{"failures":[88,92],"tindex":"d63c6d09-82af-11e5-95b6-d1e90f11ec88","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"variableMap":{"id":"removedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:245","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.array.TIntArrayList, int)"},"status":-1},{"failures":[],"tindex":"d63c941a-82af-11e5-95b6-757da6d613cb","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.CompressedArray:143","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.VLongStorage = null"},"variableMap":{"currentWriter":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:29","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.this(10)"},"status":-2},{"failures":[76,169],"tindex":"d63c941b-82af-11e5-95b6-95d7b22e338f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:258","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.size()) - 2)))"},"variableMap":{"virtualEdges":"modifiedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:441","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState)"},"status":-1},{"failures":[],"tindex":"d63c941c-82af-11e5-95b6-0bd09adc00fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:127","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"variableMap":{"offset":"oldCap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:90","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"status":-1},{"failures":[],"tindex":"d63c941d-82af-11e5-95b6-fde670b78512","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:130","type":"CtIfImpl","sourcecode":"if ((byte[][].int) > 0)\n    throw new java.lang.IllegalStateException(\"already initialized\");\n"},"variableMap":{"length":"length","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:69","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[][].int) ; int++) {\n    byte[] byte[] = byte[][][int];\n    com.graphhopper.storage.RAMDataAccess.byte[][][int] = java.util.Arrays.copyOf(byte[], byte[].int);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}