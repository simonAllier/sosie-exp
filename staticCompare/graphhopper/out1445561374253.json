{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":34,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":31,"com.graphhopper.reader.OSMReaderTest.testMain":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":49,"com.graphhopper.reader.OSMReaderTest.testFerry":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":7,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":32,"com.graphhopper.reader.OSMReaderTest.testWithBounds":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":3,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":46,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":44,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":68,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":51,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":52,"com.graphhopper.GraphHopperTest.testPrepare":74,"com.graphhopper.GraphHopperTest.testFootAndCar":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":40,"com.graphhopper.reader.OSMReaderTest.testFoot":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":19,"com.graphhopper.reader.OSMReaderTest.testOneWay":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":27,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":12,"com.graphhopper.GraphHopperTest.testPrepareOnly":10,"com.graphhopper.GraphHopperTest.testVia":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":50,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":26,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":65,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":45,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":62,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":37,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":70,"com.graphhopper.GraphHopperTest.testFootOnly":79,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":81,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":54,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":43,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":64,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":0,"com.graphhopper.reader.OSMReaderTest.testBarriers":60,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":55,"com.graphhopper.GraphHopperTest.testLoadOSM":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":53,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":80,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":84,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":2,"com.graphhopper.util.GHUtilityTest.testCopy":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":41,"com.graphhopper.reader.OSMReaderTest.testSort":59},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"eda5c82c-791f-11e5-a0c2-194e219baa19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:188","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.create(long)"},"status":-1},{"failures":[],"tindex":"eda5ef3d-791f-11e5-a0c2-09b51d487040","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:110","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"variableMap":{"byteCount":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"status":-2},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,10,72,73,74,75,76,77,11,12,78,79,80,81,82,83,84],"tindex":"eda5ef3e-791f-11e5-a0c2-6f747ab15877","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:110","type":"CtIfImpl","sourcecode":"if (long < 0)\n    throw new java.lang.IllegalArgumentException(\"new capacity has to be strictly positive\");\n"},"variableMap":{"byteCount":"includeWay"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:272","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())));\n}"},"status":-1},{"failures":[],"tindex":"eda5ef3f-791f-11e5-a0c2-f9f4be70db50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:139","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int += int;\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"eda5ef40-791f-11e5-a0c2-41069d030e94","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:216","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"eda61651-791f-11e5-a0c2-3fce08145777","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"allowed","flags":"allowed","dir":"allowed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:243","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"eda61652-791f-11e5-a0c2-f58a8cc5754d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getLatitude(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"eda61653-791f-11e5-a0c2-fd13d14bc6f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:133","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"eda61654-791f-11e5-a0c2-8da00efc93d5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"length","nodeCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:98","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 2 ; int++) {\n    byte[] = java.lang.String.getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset);\n    if ((byte[].int) > 255) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4));\n        com.graphhopper.search.NameIndex.com.graphhopper.search.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String));\n        java.lang.String = java.lang.String;\n        continue;\n    } \n    break;\n}"},"status":-2},{"failures":[],"tindex":"eda61655-791f-11e5-a0c2-ab7e66e18575","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.AStarBidirection:183","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"status":-2},{"failures":[],"tindex":"eda61656-791f-11e5-a0c2-49dcf2075f0e","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:311","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int++;\n"},"variableMap":{"pointIndex":"cap","index":"cap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"status":-2},{"failures":[],"tindex":"eda61657-791f-11e5-a0c2-e7acf43e1ea2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:356","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHTBitSet(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:937","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":-2},{"failures":[],"tindex":"eda63d68-791f-11e5-a0c2-39f132541ca4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:63","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.peek_key()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:97","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntIntBinHeap.poll_element()"},"status":-2},{"failures":[],"tindex":"eda63d69-791f-11e5-a0c2-b5e4e40e013b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:108","type":"CtIfImpl","sourcecode":"if (((((((byte[][0]) == 0) && ((byte[][1]) == 0)) && ((byte[][2]) == 0)) && ((byte[][4]) == 10)) && ((byte[][5]) == 9)) && (((byte[][3]) == 13) || ((byte[][3]) == 14))) {\n    java.io.InputStream.reset();\n    boolean = true;\n    return java.io.InputStream;\n} else if (((byte[][0]) == 'P') && ((byte[][1]) == 'K')) {\n    java.io.InputStream.reset();\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    return java.util.zip.ZipInputStream;\n} else if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    java.io.InputStream.reset();\n    return java.io.InputStream;\n} else if ((java.lang.String.endsWith(\".bz2\")) || (java.lang.String.endsWith(\".bzip2\"))) {\n    java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\";\n    try {\n        java.lang.Class java.lang.Class = java.lang.Class.forName(java.lang.String);\n        java.io.InputStream.reset();\n        java.lang.reflect.Constructor<java.io.InputStream> java.lang.reflect.Constructor<java.io.InputStream> = java.lang.Class.getConstructor(java.io.InputStream.java.io.InputStream, boolean.boolean);\n        return java.lang.reflect.Constructor<java.io.InputStream>.newInstance(java.io.InputStream, true);\n    } catch (java.lang.Exception e) {\n        throw new java.lang.IllegalArgumentException((\"Cannot instantiate \" + java.lang.String) , java.lang.Exception);\n    }\n} else {\n    throw new java.lang.IllegalArgumentException((\"Input file is not of valid type \" + (java.io.File.getPath())));\n}"},"status":-2},{"failures":[],"tindex":"eda63d6a-791f-11e5-a0c2-2de789e070e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:58","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.util.ArrayList<java.lang.Integer>.add(com.graphhopper.util.TIntList.get(int));\n}"},"status":-2},{"failures":[],"tindex":"eda63d6b-791f-11e5-a0c2-4b3e36333174","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"size","guess":"size","low":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:257","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"eda63d6c-791f-11e5-a0c2-e37ffe868abf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"status":-2},{"failures":[],"tindex":"eda63d6d-791f-11e5-a0c2-9fef4142f59c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:273","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.storage.GraphHopperStorage.getNodes()) ; int++) {\n    if (com.graphhopper.routing.util.PrepareRoutingSubnetworks.detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer, int))\n        com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int);\n    \n}"},"status":-2},{"failures":[],"tindex":"eda63d6e-791f-11e5-a0c2-db9a4060e9ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"resFlags","highKey":"resFlags","key":"resFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:122","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"eda6647f-791f-11e5-a0c2-a119f64f2e0e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:489","type":"CtIfImpl","sourcecode":"if (int == (int + int)) {\n    return ~(int + int);\n} "},"variableMap":{"high":"noOfStates","len":"noOfStates","start":"noOfStates"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}