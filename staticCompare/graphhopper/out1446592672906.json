{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":1,"com.graphhopper.reader.OSMReaderTest.testFerry":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":143,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":226,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":329,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":385,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":283,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":328,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":243,"com.graphhopper.coll.CompressedArrayTest.testCompress":427,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":335,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":134,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":21,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":104,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":383,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":167,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":169,"com.graphhopper.GraphHopperTest.testPrepare":386,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":365,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":111,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":399,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":223,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":357,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":131,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":327,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":349,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":354,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":381,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":82,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":227,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":374,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":397,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":393,"com.graphhopper.GraphHopperTest.testLoadOSM":389,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":146,"com.graphhopper.reader.OSMReaderTest.testSort":200,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":208,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":164,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":123,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":86,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":423,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":34,"com.graphhopper.routing.DijkstraTest.initializationError":372,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":178,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":347,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":161,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":47,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":321,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":185,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":362,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":274,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":67,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":44,"com.graphhopper.coll.CompressedArrayTest.testCompress2":426,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":144,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":309,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":147,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":245,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":105,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":48,"com.graphhopper.reader.OSMReaderTest.testBarriers":201,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":276,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":353,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":316,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":337,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":332,"com.graphhopper.routing.PathTest.testFindInstruction":379,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":49,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":287,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":394,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":270,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":124,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":62,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":281,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":6,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":344,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":173,"com.graphhopper.util.InstructionListTest.testWayList2":195,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":417,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":285,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":29,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":222,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":241,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":162,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":263,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":229,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":289,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":59,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":94,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":202,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":409,"com.graphhopper.routing.AStarTest.initializationError":382,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":174,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":255,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":230,"com.graphhopper.storage.RAMDataAccessTest.testCopy":410,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":27,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":324,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":187,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":363,"com.graphhopper.reader.OSMReaderTest.testMain":199,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":66,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":231,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":425,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":176,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":175,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":237,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":292,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":31,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":401,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":163,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":278,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":268,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":148,"com.graphhopper.storage.GraphHopperStorageTest.testClone":97,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":30,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":171,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":107,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":298,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":319,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":7,"com.graphhopper.routing.PathTest.testTime":375,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":155,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":306,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":160,"com.graphhopper.coll.IntDoubleBinHeapTest.test0":398,"com.graphhopper.GraphHopperTest.testFootOnly":392,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":325,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":295,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":376,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":350,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":186,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":168,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":422,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":331,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":420,"com.graphhopper.reader.OSMReaderTest.testWithBounds":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":22,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":256,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":259,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":307,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":282,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":338,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":70,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":189,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":63,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":348,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":126,"com.graphhopper.util.InstructionListTest.testWayList":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":8,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":390,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":411,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":240,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":3,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":297,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":145,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":404,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":19,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":291,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":400,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":36,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":235,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":387,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":74,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":246,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":117,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":219,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":360,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":342,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":301,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":418,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":217,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":419,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":312,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":45,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":370,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":239,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":85,"com.graphhopper.routing.PathTest.testWayList":378,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":35,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":12,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":355,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":132,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":234,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":136,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":247,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":54,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":98,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":267,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":396,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":310,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":380,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":182,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":233,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":46,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":83,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":135,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":179,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":40,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":391,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":308,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":242,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":388,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":253,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":369,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":402,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":26,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":214,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":261,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":339,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":232,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":345,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":60,"com.graphhopper.coll.IntDoubleBinHeapTest.testClear":395,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":11,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":356,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":317,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":361,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":290,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":288,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":364,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":177,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":10,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":421,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":65,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":277,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":334,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":269,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":225,"com.graphhopper.reader.OSMReaderTest.testFoot":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":413,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":424,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":183,"com.graphhopper.reader.OSMReaderTest.testOneWay":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":414,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":106,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":121,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":153,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":120,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":77,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":333,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":115,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":343,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":265,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":18,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":101,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":377,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":415,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":228,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":299,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":405,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":408,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":248,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":326,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":14,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":180,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":346,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":188,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":318,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":191,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":166,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":320,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":37,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":367,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":407,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":133,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":184,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":302,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":114,"com.graphhopper.GraphHopperTest.testFootAndCar":213,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":142,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":311,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":4,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":258,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":303,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":359,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":170,"com.graphhopper.GraphHopperTest.testPrepareOnly":384,"com.graphhopper.GraphHopperTest.testVia":212,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":358,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":207,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":416,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":138,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":118,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":196,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":251,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":17,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":159,"com.graphhopper.routing.AStarBidirectionTest.initializationError":340,"com.graphhopper.util.InstructionListTest.testFind":192,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":38},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382],"tindex":"1b8cea09-8281-11e5-9844-a30b8c3e9659","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:123","type":"CtAssignmentImpl","sourcecode":"int = (int * (int)) + int"},"variableMap":{"ret":"shift","retBucket":"shift","i":"shift","bucketSize":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"1b8d382a-8281-11e5-9844-8baee6bf4db2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:526","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.NaN":"weight","com.graphhopper.reader.OSMReader.EMPTY":"com.graphhopper.util.EdgeIterator.NO_EDGE","id":"prevOrNextEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:74","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    return double;\n"},"status":-2},{"failures":[197,198,199,200,201,202,203,204,205,207,208,209,210,211,383,384,385,212,386,387,213,388,389,390,391,392,214],"tindex":"1b8d382b-8281-11e5-9844-ffb44f71cc47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:168","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.reader.OSMInputFile = new com.graphhopper.reader.OSMInputFile(java.io.File).setWorkerThreads(int).open();\n    long long = 1;\n    long long = 1;\n    com.graphhopper.reader.OSMElement com.graphhopper.reader.OSMElement;\n    while ((com.graphhopper.reader.OSMElement = com.graphhopper.reader.OSMInputFile.getNext()) != null) {\n        if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n            final com.graphhopper.reader.OSMWay com.graphhopper.reader.OSMWay = ((com.graphhopper.reader.OSMWay)(com.graphhopper.reader.OSMElement));\n            boolean boolean = com.graphhopper.reader.OSMReader.filterWay(com.graphhopper.reader.OSMWay);\n            if (boolean) {\n                gnu.trove.list.TLongList gnu.trove.list.TLongList = com.graphhopper.reader.OSMWay.getNodes();\n                int int = gnu.trove.list.TLongList.size();\n                for (int int = 0 ; int < int ; int++) {\n                    com.graphhopper.reader.OSMReader.prepareHighwayNode(gnu.trove.list.TLongList.get(int));\n                }\n                if (((++long) % 5000000) == 0) {\n                    com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmIdMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getNodeMap().getSize()))) + \" (\") + (com.graphhopper.reader.OSMReader.getNodeMap().getMemoryUsage())) + \"MB) \") + (com.graphhopper.util.Helper.getMemInfo())));\n                } \n            } \n        } \n        if (com.graphhopper.reader.OSMElement.isType(com.graphhopper.reader.OSMElement.int)) {\n            final com.graphhopper.reader.OSMRelation com.graphhopper.reader.OSMRelation = ((com.graphhopper.reader.OSMRelation)(com.graphhopper.reader.OSMElement));\n            if ((!(com.graphhopper.reader.OSMRelation.isMetaRelation())) && (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"route\")))\n                com.graphhopper.reader.OSMReader.prepareWaysWithRelationInfo(com.graphhopper.reader.OSMRelation);\n            \n            if (com.graphhopper.reader.OSMRelation.hasTag(\"type\", \"restriction\"))\n                com.graphhopper.reader.OSMReader.prepareRestrictionRelation(com.graphhopper.reader.OSMRelation);\n            \n            if (((++long) % 50000) == 0) {\n                com.graphhopper.reader.OSMReader.org.slf4j.Logger.info(((((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \" (preprocess), osmWayMap:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(com.graphhopper.reader.OSMReader.getRelFlagsMap().size()))) + \" \") + (com.graphhopper.util.Helper.getMemInfo())));\n            } \n        } \n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(\"Problem while parsing file\" , java.lang.Exception);\n} finally {\n    com.graphhopper.util.Helper.close(com.graphhopper.reader.OSMInputFile);\n}"},"status":-1},{"failures":[343,344,393,348,368,369,371],"tindex":"1b8d382c-8281-11e5-9844-d9ca775cd15e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(com.graphhopper.util.CHEdgeIteratorState, false)"},"status":-1},{"failures":[],"tindex":"1b8d382d-8281-11e5-9844-47566344f3d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:1106","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    continue;\n"},"variableMap":{"baseNode":"contractedNeighbors","com.graphhopper.storage.EdgeAccess.NO_NODE":"contractedNeighbors"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:554","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    int++;\n    if (com.graphhopper.util.CHEdgeIterator.isShortcut())\n        int++;\n    \n}"},"status":-2},{"failures":[394,395,396,397,398,399],"tindex":"1b8d5f3e-8281-11e5-9844-03a97e134fe0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.insert_(java.lang.Number.doubleValue(), java.lang.Integer)"},"status":-1},{"failures":[],"tindex":"1b8d5f3f-8281-11e5-9844-e74b2f8657f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:653","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) + ((0.5 + int) * (double))"},"status":-2},{"failures":[],"tindex":"1b8d5f40-8281-11e5-9844-112917e19aa8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.XFirstSearch:32","type":"CtReturnImpl","sourcecode":"return new com.graphhopper.coll.GHBitSetImpl()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHBitSet"},"status":0},{"failures":[],"tindex":"1b8d5f41-8281-11e5-9844-019f11bc9e22","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:220","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"variableMap":{"a_lon_deg":"defaultWeightLimit","shrinkFactor":"defaultWeightLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1022","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.GHRequest.getHints().getDouble(\"defaultWeightLimit\", double)"},"status":0},{"failures":[400],"tindex":"1b8d5f42-8281-11e5-9844-5562d6e6392a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:275","type":"CtReturnImpl","sourcecode":"return ((short)((int[][][int][int]) >> 16))"},"variableMap":{"index":"index","bufferIndex":"index","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:273","type":"CtReturnImpl","sourcecode":"return ((short)(int[][][int][int]))"},"status":-1},{"failures":[2,10,12,13,19,27,28,49,57,59,60,66,74,75,95,103,105,106,112,120,121,150,158,160,161,167,175,176,211,401,402,243,403,404],"tindex":"1b8d8653-8281-11e5-9844-494c249d9e66","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:334","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"noNumberValue":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[],"tindex":"1b8d8654-8281-11e5-9844-e7f0eb9b3cc0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:489","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"1b8d8655-8281-11e5-9844-cf1f35a022a4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:106","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.reset()"},"variableMap":{"ips":"bis"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMInputFile.openXMLStream(java.io.InputStream)"},"status":-2},{"failures":[],"tindex":"1b8d8656-8281-11e5-9844-91bc41c3cc2d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.incCap((int + 1))"},"variableMap":{"this":"pointList","nodeId":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:767","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.is3D()) {\n    double = com.graphhopper.util.PointList.getElevation(int);\n    double += com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double, double, double);\n    double = double;\n} else\n    double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double, double);\n"},"status":-2},{"failures":[12,13,19,45,60,91,106,131,146,161,403,405,406,407,343,344,408,348,349,352,357,360,361,362,365,369,371],"tindex":"1b8d8657-8281-11e5-9844-83b7219d4487","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:224","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"variableMap":{"shift":"edgeToRemove"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:214","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.EdgeAccess.toPointer(int)"},"status":-1},{"failures":[409,410],"tindex":"1b8d8658-8281-11e5-9844-9368ce7e3dd4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:65","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.copyHeader(com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"1b8dad69-8281-11e5-9844-b969bc7084b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:276","type":"CtContinueImpl","sourcecode":"continue"},"status":-2},{"failures":[383,384,385,212,386,387,213,388,389,390,391,392,214],"tindex":"1b8dad6a-8281-11e5-9844-8dccf44a22ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:672","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.DataReader.readGraph()"},"status":-1},{"failures":[],"tindex":"1b8dad6b-8281-11e5-9844-b14672b8f59b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:113","type":"CtContinueImpl","sourcecode":"continue"},"status":0},{"failures":[411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427],"tindex":"1b8dad6c-8281-11e5-9844-e368bb80778f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:117","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Helper.round4((double + ((java.lang.Math.double) / 2)))"},"variableMap":{"orientation":"midLon","java.lang.Math.PI":"midLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:191","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"1b8d5f41-8281-11e5-9844-019f11bc9e22","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GHRequest.getHints","com.graphhopper.util.PMap.getDouble"]},"type":"staticDiff"}]}]}