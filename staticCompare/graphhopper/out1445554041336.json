{"failureDictionary":{"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":17,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":23,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":22,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":29,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":41,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":21,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":15,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":35,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":34,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":30,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":18,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":28,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":26,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":2,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":6,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":10,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":27,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":8,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":40,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":14},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"dae5bbd6-790e-11e5-9dad-79ba961d3c59","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:101","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long % (int)))"},"variableMap":{"index":"bytePos","entriesPerSegment":"indexDivisor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:232","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"status":-1},{"failures":[],"tindex":"dae5e2e7-790e-11e5-9dad-e5c094f6a95a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:52","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AlgorithmOptions.java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    com.graphhopper.routing.AStar com.graphhopper.routing.AStar = new com.graphhopper.routing.AStar(com.graphhopper.storage.Graph , com.graphhopper.routing.AlgorithmOptions.getFlagEncoder() , com.graphhopper.routing.AlgorithmOptions.getWeighting() , com.graphhopper.routing.AlgorithmOptions.getTraversalMode());\n    com.graphhopper.routing.AStar.setApproximation(com.graphhopper.routing.RoutingAlgorithmFactorySimple.getApproximation(com.graphhopper.routing.AlgorithmOptions.java.lang.String, com.graphhopper.routing.AlgorithmOptions, com.graphhopper.storage.Graph.getNodeAccess()));\n    return com.graphhopper.routing.AStar;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Algorithm \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[43,44],"tindex":"dae609f8-790e-11e5-9dad-2dcd6f0da221","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:98","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-1},{"failures":[],"tindex":"dae609f9-790e-11e5-9dad-55167fa7554f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:141","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"variableMap":{"names":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"status":0},{"failures":[],"tindex":"dae609fa-790e-11e5-9dad-190fab8a7bc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:693","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"dae609fb-790e-11e5-9dad-2f1757dc7c2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:787","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.putAlgorithmFactory(com.graphhopper.routing.util.Weighting, (com.graphhopper.routing.RoutingAlgorithmFactory = new com.graphhopper.routing.RoutingAlgorithmFactorySimple()))"},"status":-2},{"failures":[],"tindex":"dae609fc-790e-11e5-9dad-5196ec304cdd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:547","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.dem.ElevationProvider = new com.graphhopper.reader.dem.SRTMProvider()"},"variableMap":{"tmpProvider":"eleProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:148","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.reader.dem.ElevationProvider = com.graphhopper.reader.dem.ElevationProvider"},"status":-2},{"failures":[],"tindex":"dae6310d-790e-11e5-9dad-13f1946fccb6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:138","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"roundaboutEnter\")"},"variableMap":{"str":"dir","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:275","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_left\")"},"status":-2},{"failures":[],"tindex":"dae6310e-790e-11e5-9dad-4565f5a28e56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:233","type":"CtAssignmentImpl","sourcecode":"long = 0"},"status":-2},{"failures":[],"tindex":"dae6310f-790e-11e5-9dad-9fb5776c3cb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:38","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lat\"))"},"status":-2},{"failures":[],"tindex":"dae63110-790e-11e5-9dad-dd6c1dd08e11","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:182","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.round(java.lang.Math.sqrt(long))"},"variableMap":{"parts":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:233","type":"CtAssignmentImpl","sourcecode":"long = 0"},"status":-2},{"failures":[],"tindex":"dae65821-790e-11e5-9dad-0dbf2281fecb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"variableMap":{"maxSpeed":"orientation","fwdSpeed":"java.lang.Math.PI"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:118","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double += 2 * (java.lang.Math.double);\n"},"status":-2},{"failures":[],"tindex":"dae65822-790e-11e5-9dad-7b57090a88ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMTurnRelation:103","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    return java.util.Collections.emptyList();\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"edgeTo","edgeIdFrom":"nodeVia"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:83","type":"CtTryImpl","sourcecode":"try {\n    if (int == (com.graphhopper.reader.OSMReader.int))\n        return java.util.Collections.emptyList();\n    \n    int int = com.graphhopper.util.EdgeIterator.int;\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n            int = com.graphhopper.util.EdgeIterator.getEdge();\n            break;\n        } \n    }\n    if (int == (com.graphhopper.util.EdgeIterator.int))\n        return java.util.Collections.emptyList();\n    \n    final java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = new java.util.ArrayList<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>();\n    com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getEdge();\n        long long = com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(int);\n        if ((((int != int) && ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))) && (long != (this.long))) || ((((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type)) && (long == (this.long))) && (long >= 0))) {\n            final com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = new com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry();\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long = com.graphhopper.routing.util.TurnCostEncoder.getTurnFlags(true, 0);\n            java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.add(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n            if ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))\n                break;\n            \n        } \n    }\n    return java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>;\n} catch (java.lang.Exception e) {\n    throw new java.lang.IllegalStateException((\"Could not built turn table entry for relation of node with osmId:\" + (this.long)) , java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"dae67f33-790e-11e5-9dad-29d6cb8f42b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:152","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NW\""},"variableMap":{"cp":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:167","type":"CtInvocationImpl","sourcecode":"java.lang.String.format(java.lang.String, java.lang.Object[])"},"status":-2},{"failures":[],"tindex":"dae67f34-790e-11e5-9dad-3355d2da5716","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"lonDelta","angle":"lonDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:116","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"dae67f35-790e-11e5-9dad-e7ad426f9064","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:117","type":"CtAssignmentImpl","sourcecode":"int[][][int] = new int[1 << (int)]"},"status":-2},{"failures":[],"tindex":"dae67f36-790e-11e5-9dad-75b7af284deb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistancePlaneProjection:58","type":"CtReturnImpl","sourcecode":"return double * double"},"status":-2},{"failures":[],"tindex":"dae6a647-790e-11e5-9dad-554e50a9f84c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:424","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.BikeCommonFlagEncoder.getWayName(int, int, com.graphhopper.util.Translation)"},"status":-2},{"failures":[],"tindex":"dae6a648-790e-11e5-9dad-41d6079599dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:854","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.createCHPreparations()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:477","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-2},{"failures":[],"tindex":"dae6a649-790e-11e5-9dad-21c2e1b9b261","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:76","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}