{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":21,"com.graphhopper.reader.OSMReaderTest.testOneWay":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":18,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":19,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":11,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":5,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":29,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":16,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":30,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":27,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":14},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"e780564f-7920-11e5-b965-f1ea427c93e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"nodeId","edgeId":"nodeId","com.graphhopper.storage.EdgeAccess.NO_NODE":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:711","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-1},{"failures":[],"tindex":"e7805650-7920-11e5-b965-c3c5607714cb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:408","type":"CtAssignmentImpl","sourcecode":"int = (com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"size","speed":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:206","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"status":-2},{"failures":[],"tindex":"e7807d61-7920-11e5-b965-05bf8699f1c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.removeDA(com.graphhopper.storage.DataAccess, com.graphhopper.storage.DataAccess.getName(), false)"},"status":0},{"failures":[],"tindex":"e7807d62-7920-11e5-b965-5b59d74ff9dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:87","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return com.graphhopper.util.EdgeIteratorState.getEdge();\n"},"status":0},{"failures":[],"tindex":"e7807d63-7920-11e5-b965-2fd658ee5bfc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.PathBidirRef:75","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeTo":"edgeTo","edgeEntry":"edgeTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:315","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[],"tindex":"e7807d64-7920-11e5-b965-993f627e8018","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:74","type":"CtAssignmentImpl","sourcecode":"this.long = byte"},"variableMap":{"byteCapacity":"i","cap":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:139","type":"CtOperatorAssignmentImpl","sourcecode":"long |= (byte & 127L) << 28"},"status":-2},{"failures":[],"tindex":"e7807d65-7920-11e5-b965-2bb609d401b0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"initialized"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:293","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"e7807d66-7920-11e5-b965-f96b90445c86","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:237","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"file newName already exists!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:663","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\")"},"status":-2},{"failures":[],"tindex":"e7807d67-7920-11e5-b965-29cba27a69fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:150","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge) == null)\n    throw new java.lang.AssertionError(\"Empty edge cannot happen\");\n"},"variableMap":{"currEdge":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:80","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.Edge.isValid(com.graphhopper.storage.EdgeEntry.int)) {\n    com.graphhopper.routing.Path.processEdge(com.graphhopper.storage.EdgeEntry.int, com.graphhopper.storage.EdgeEntry.int);\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n}"},"status":-2},{"failures":[],"tindex":"e780a478-7920-11e5-b965-0b30f275258f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:172","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"e780a479-7920-11e5-b965-25d23e5f75cc","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"variableMap":{"defaultUTurnCost":"java.lang.Double.MAX_VALUE","turnCosts":"java.lang.Double.MAX_VALUE","edgeId":"integEle","prevOrNextEdgeId":"integEle","weight":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:402","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"e780a47a-7920-11e5-b965-d56011c8ce8e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:241","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"indexCopy":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((((int) * (int)) * 4))"},"status":-2},{"failures":[],"tindex":"e780a47b-7920-11e5-b965-67d3fa59c61c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStarBidirection:181","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef.extract()"},"variableMap":{"bestPath":"bestPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:183","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.PathBidirRef"},"status":-2},{"failures":[],"tindex":"e780a47c-7920-11e5-b965-7f3fb8a67e3f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:418","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\":urban\"))\n    return 50;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:408","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"status":-2},{"failures":[],"tindex":"e780a47d-7920-11e5-b965-9de9cdca1334","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"status":-2},{"failures":[],"tindex":"e780cb8e-7920-11e5-b965-97c6da43041d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:225","type":"CtAssertImpl","sourcecode":"assert (int) > 0 : \"call create or loadExisting before usage!\""},"variableMap":{"segmentSizePower":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:275","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n    continue;\n"},"status":-2},{"failures":[],"tindex":"e780cb8f-7920-11e5-b965-f7295bbd72be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:107","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.set(int, com.graphhopper.util.PointList.getLatitude(int), com.graphhopper.util.PointList.getLongitude(int), com.graphhopper.util.PointList.getElevation(int))"},"status":-2},{"failures":[],"tindex":"e780cb90-7920-11e5-b965-dbbae03ab3c1","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:606","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.dem.ElevationProvider.getEle(com.graphhopper.reader.OSMNode.getLat(), com.graphhopper.reader.OSMNode.getLon())"},"status":-2},{"failures":[],"tindex":"e780cb91-7920-11e5-b965-9795ae9016fa","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:100","type":"CtIfImpl","sourcecode":"if (double <= 0)\n    throw new java.lang.IllegalArgumentException((((((\"Distance must not be zero or negative! \" + double) + \" lat,lon:\") + double) + \",\") + double));\n"},"variableMap":{"radiusInMeter":"ele","lon":"ele","lat":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:597","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo.setNode(int, double, double, double)"},"status":-2},{"failures":[],"tindex":"e780cb92-7920-11e5-b965-057e8129c679","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:118","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"variableMap":{"baseUrl":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:141","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\nelse if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n    com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\nelse\n    throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}