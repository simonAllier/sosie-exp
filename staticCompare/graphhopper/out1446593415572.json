{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":30,"com.graphhopper.routing.PathTest.testFindInstruction":107,"com.graphhopper.reader.OSMReaderTest.testFerry":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":172,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":157,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":83,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":116,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":26,"com.graphhopper.util.DistanceCalcEarthTest.testDistance":138,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":165,"com.graphhopper.reader.OSMReaderTest.testWithBounds":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":173,"com.graphhopper.reader.PrinctonReaderTest.testRead":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":145,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":180,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":118,"com.graphhopper.coll.CompressedArrayTest.testCompress":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":143,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":7,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":97,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":156,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":98,"com.graphhopper.GraphHopperTest.testPrepare":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":85,"com.graphhopper.util.InstructionListTest.testWayList2":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":13,"com.graphhopper.reader.OSMReaderTest.testFoot":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":33,"com.graphhopper.util.InstructionListTest.testWayList":110,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":34,"com.graphhopper.reader.OSMReaderTest.testOneWay":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":102,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":126,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":120,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":163,"com.graphhopper.GraphHopperAPITest.testDisconnected179":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":152,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":119,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":168,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":64,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":146,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":171,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":27,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":73,"com.graphhopper.util.TranslationMapTest.testToRoundaboutString":115,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":135,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":137,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":132,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":95,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":182,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":127,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":147,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":60,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":99,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":176,"com.graphhopper.GraphHopperTest.testLoadOSM":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":31,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":35,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":54,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":53,"com.graphhopper.reader.OSMReaderTest.testSort":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":149,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":41,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":181,"com.graphhopper.reader.OSMReaderTest.testMain":70,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":16,"com.graphhopper.util.shapes.CircleTest.testIntersectCircleCircle":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":128,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonNaN":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":158,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":129,"com.graphhopper.routing.PathTest.testWayList":133,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":144,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":37,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":125,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":5,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":9,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":154,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":22,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":29,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":84,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":141,"com.graphhopper.GraphHopperTest.testFootAndCar":61,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":117,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":122,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":43,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":124,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":175,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":108,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":38,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":148,"com.graphhopper.GraphHopperTest.testPrepareOnly":50,"com.graphhopper.coll.CompressedArrayTest.testCompress2":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":153,"com.graphhopper.GraphHopperTest.testVia":58,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":142,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":166,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":77,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":18,"com.graphhopper.GraphHopperAPITest.testLoad":2,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":6,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":46,"com.graphhopper.GraphHopperTest.testFootOnly":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":104,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":113,"com.graphhopper.util.TranslationMapTest.testToString":114,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":162,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":12,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":14,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":160,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":131,"com.graphhopper.reader.OSMReaderTest.testBarriers":72,"com.graphhopper.util.InstructionListTest.testFind":106,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":91,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":151},"transformations":[{"failures":[0,1],"tindex":"d635fd60-8282-11e5-817a-d3d9acaa737a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:326","type":"CtLocalVariableImpl","sourcecode":"long long = int"},"variableMap":{"nodeCount":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:795","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"d6362471-8282-11e5-817a-43293a053a81","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:45","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.AngleCalc.double"},"variableMap":{"angle":"lon","com.graphhopper.util.AngleCalc.PI3_4":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:104","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[86,87],"tindex":"d6362472-8282-11e5-817a-4735f75cf269","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:199","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.Inflater.setInput(byte[]);\n    final byte[] byte[] = new byte[1024];\n    while (!(java.util.zip.Inflater.finished())) {\n        int int = java.util.zip.Inflater.inflate(byte[]);\n        java.io.ByteArrayOutputStream.write(byte[], 0, int);\n    }\n} finally {\n    java.util.zip.Inflater.end();\n}"},"status":-1},{"failures":[],"tindex":"d6364b83-8282-11e5-817a-d9f36ef293c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"edge","tmpSize":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:214","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-2},{"failures":[],"tindex":"d6364b84-8282-11e5-817a-41abdc2109ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:177","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"UTF-8\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:154","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String.toLowerCase())"},"status":-2},{"failures":[88,89,90,91,92,93,94,95,96,0,1,97,98,99,100,101,102,103,104,105],"tindex":"d6364b85-8282-11e5-817a-5f6679a01725","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"level"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[],"tindex":"d6364b86-8282-11e5-817a-49490fdfebef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:129","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"variableMap":{"entry":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":-2},{"failures":[106,107],"tindex":"d6364b87-8282-11e5-817a-0d42854e8e9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.InstructionList.(getSize()) > 1) {\n    for (int int = 0 ; int < com.graphhopper.util.InstructionList.(getSize()) ; int++) {\n        com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(int).getPoints();\n        for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n            double double = com.graphhopper.util.PointList.getLatitude(int);\n            double double = com.graphhopper.util.PointList.getLongitude(int);\n            if (!((int == 0) && (int == 0))) {\n                double double;\n                int int = int;\n                if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n                    double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n                    if (int > 0)\n                        int++;\n                    \n                } else {\n                    double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n                    if (int > 0)\n                        int++;\n                    \n                }\n                if (double < double) {\n                    double = double;\n                    int = int;\n                } \n            } \n            double = double;\n            double = double;\n        }\n    }\n} "},"status":-1},{"failures":[],"tindex":"d6367298-8282-11e5-817a-1fa7eeeedbbd","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:443","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.getLatitude(int)"},"variableMap":{"this":"points","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:161","type":"CtAssignmentImpl","sourcecode":"double[][int] = com.graphhopper.util.PointList.getLongitude(int)"},"status":0},{"failures":[],"tindex":"d6367299-8282-11e5-817a-9d1ad64999df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:177","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.StorableProperties.put(\"graph.bytesForFlags\", com.graphhopper.routing.util.EncodingManager.getBytesForFlags())"},"status":0},{"failures":[],"tindex":"d636729a-8282-11e5-817a-7bb8a3b8c143","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FastestWeighting:67","type":"CtIfImpl","sourcecode":"if (double == 0)\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"angle","speed":"angle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:55","type":"CtReturnImpl","sourcecode":"return -double"},"status":-2},{"failures":[108,109,110,111,112,113,114,115,74,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"d636729b-8282-11e5-817a-cb35b19a51eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:173","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)))"},"variableMap":{"name":"line","location":"line"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:165","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[136,137],"tindex":"d636729c-8282-11e5-817a-d5d4f93438b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"to","segmentSizePower":"j"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:79","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String[][int])"},"status":-1},{"failures":[138,139],"tindex":"d636729d-8282-11e5-817a-59ad00147693","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:538","type":"CtLocalVariableImpl","sourcecode":"double double = double - (double)"},"variableMap":{"orientation":"com.graphhopper.util.DistanceCalcEarth.R","prevOrientation":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:71","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.java.lang.Math.sin(((double / 2) / (com.graphhopper.util.DistanceCalcEarth.double)))"},"status":-1},{"failures":[],"tindex":"d63699ae-8282-11e5-817a-b3bc5d962ad3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:48","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"variableMap":{"x1":"x2"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:56","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.signum((double - double))))"},"status":-2},{"failures":[140,141],"tindex":"d63699af-8282-11e5-817a-9d652b028af9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"retBucket"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:100","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"status":-1},{"failures":[],"tindex":"d63699b0-8282-11e5-817a-2d8d4610cd2d","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:678","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    continue;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"mSize","tmpNode":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-2},{"failures":[],"tindex":"d63699b1-8282-11e5-817a-b34f82fbf75e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:163","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n"},"variableMap":{"read":"lonSize","s":"lonSize","this":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:394","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), int)"},"status":-2},{"failures":[142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"tindex":"d63699b2-8282-11e5-817a-bff976a5f82d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:661","type":"CtIfImpl","sourcecode":"if (int >= int)\n    com.graphhopper.coll.SparseIntIntArray.put(int, int);\n"},"status":-1},{"failures":[],"tindex":"d63699b3-8282-11e5-817a-b1b4e549f720","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:888","type":"CtReturnImpl","sourcecode":"return (long)++"},"variableMap":{"newUniqueOsmId":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:263","type":"CtReturnImpl","sourcecode":"return long"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"d6367299-8282-11e5-817a-9d1ad64999df","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.util.EncodingManager.getBytesForFlags","com.graphhopper.storage.StorableProperties.put"]},"type":"staticDiff"}]}]}