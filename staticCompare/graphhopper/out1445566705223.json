{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":9,"com.graphhopper.reader.OSMReaderTest.testOneWay":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":24,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":38,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":42,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":4,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":20,"com.graphhopper.coll.CompressedArrayTest.testCompress2":46,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":36,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":28,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":8,"com.graphhopper.coll.CompressedArrayTest.testCompress":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":41,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":37,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":27,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":16,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":18},"transformations":[{"failures":[0,1,2,3],"tindex":"5728eda5-792c-11e5-b9ac-2dc7c0f7446f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:454","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    if ((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge()))) {\n        long long = int == (com.graphhopper.util.EdgeIterator.int) ? -1 : com.graphhopper.storage.CHGraphImpl.isShortcut(int) ? com.graphhopper.storage.EdgeAccess.toPointer(int) : com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.toPointer(int);\n        com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n        break;\n    } \n    int = com.graphhopper.util.CHEdgeIterator.getEdge();\n}"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"572914b6-792c-11e5-b9ac-3fc1467be3d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:525","type":"CtReturnImpl","sourcecode":"return int > int ? int : int + 1"},"variableMap":{"nodeB":"len","edgeId":"len","nodeA":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:413","type":"CtReturnImpl","sourcecode":"return ~(int + int)"},"status":-1},{"failures":[46,47],"tindex":"572914b7-792c-11e5-b9ac-179aad53791e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:114","type":"CtIfImpl","sourcecode":"if (int == int) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n    com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n    return com.graphhopper.util.shapes.GHPoint;\n} "},"variableMap":{"entry":"entry","latlon":"len","i":"entry","algo":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:111","type":"CtForImpl","sourcecode":"for (int int = 0 ; (com.graphhopper.storage.VLongStorage.getPosition()) < long ; int++) {\n    long long = com.graphhopper.storage.VLongStorage.readVLong();\n    if (int == int) {\n        com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n        com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n        return com.graphhopper.util.shapes.GHPoint;\n    } \n}"},"status":-1},{"failures":[],"tindex":"57293bc8-792c-11e5-b9ac-7f556e14d906","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:100","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"57293bc9-792c-11e5-b9ac-2d2e35107052","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:538","type":"CtLocalVariableImpl","sourcecode":"double double = double - (double)"},"variableMap":{"orientation":"lon","prevOrientation":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:84","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.abs((double - (int)))"},"status":-2},{"failures":[],"tindex":"57293bca-792c-11e5-b9ac-9b58fc935879","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:58","type":"CtLocalVariableImpl","sourcecode":"int int = double > 0 ? 1 : -1"},"status":-2},{"failures":[],"tindex":"57293bcb-792c-11e5-b9ac-739a295d6f3f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Constants.boolean = true"},"variableMap":{"com.graphhopper.util.Constants.SNAPSHOT":"finishedTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:116","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"57293bcc-792c-11e5-b9ac-d36ce9ea503d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:361","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:208","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"status":-2},{"failures":[],"tindex":"57293bcd-792c-11e5-b9ac-ab6e7311c999","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:285","type":"CtIfImpl","sourcecode":"if ((long == (long)) || (long == 0))\n    return long;\n"},"variableMap":{"directionBitMask":"ferryBit","flags":"ferryBit","dir":"ferryBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"57293bce-792c-11e5-b9ac-5122c66a34a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:188","type":"CtAssignmentImpl","sourcecode":"boolean = (com.graphhopper.storage.DataAccess.getHeader((9 * 4))) == 1"},"status":-2},{"failures":[],"tindex":"572962df-792c-11e5-b9ac-037c40006c0b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:153","type":"CtIfImpl","sourcecode":"if (double >= 64) {\n    int = 64;\n} else if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"variableMap":{"tmp":"prevLat","tmpNo":"foundInstruction"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.InstructionList.(getSize()) > 1) {\n    for (int int = 0 ; int < com.graphhopper.util.InstructionList.(getSize()) ; int++) {\n        com.graphhopper.util.PointList = com.graphhopper.util.InstructionList.get(int).getPoints();\n        for (int int = 0 ; int < (com.graphhopper.util.PointList.size()) ; int++) {\n            double double = com.graphhopper.util.PointList.getLatitude(int);\n            double double = com.graphhopper.util.PointList.getLongitude(int);\n            if (!((int == 0) && (int == 0))) {\n                double double;\n                int int = int;\n                if (com.graphhopper.util.DistanceCalc.validEdgeDistance(double, double, double, double, double, double)) {\n                    double = com.graphhopper.util.DistanceCalc.calcNormalizedEdgeDistance(double, double, double, double, double, double);\n                    if (int > 0)\n                        int++;\n                    \n                } else {\n                    double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(double, double, double, double);\n                    if (int > 0)\n                        int++;\n                    \n                }\n                if (double < double) {\n                    double = double;\n                    int = int;\n                } \n            } \n            double = double;\n            double = double;\n        }\n    }\n} "},"status":-2},{"failures":[],"tindex":"572962e0-792c-11e5-b9ac-fb794eba4772","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:227","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, com.graphhopper.util.EdgeIteratorState.getFlags(), false)"},"status":-2},{"failures":[],"tindex":"572962e1-792c-11e5-b9ac-f113a8afe4db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:226","type":"CtIfImpl","sourcecode":"if ((((!(\"hiking\".equals(java.lang.String))) && (!(\"mountain_hiking\".equals(java.lang.String)))) && (!(\"demanding_mountain_hiking\".equals(java.lang.String)))) && (!(\"alpine_hiking\".equals(java.lang.String))))\n    return 0;\n"},"variableMap":{"sacScale":"tt"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:203","type":"CtIfImpl","sourcecode":"if ((((java.lang.String != null) && (!(java.lang.String.equals(\"grade1\")))) && (!(java.lang.String.equals(\"grade2\")))) && (!(java.lang.String.equals(\"grade3\"))))\n    return 0;\n"},"status":-2},{"failures":[],"tindex":"572962e2-792c-11e5-b9ac-8d8ec257a85b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"edgeTo","edge2":"nodeVia"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:447","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMTurnRelation != null) {\n    com.graphhopper.storage.GraphExtension com.graphhopper.storage.GraphExtension = com.graphhopper.storage.Graph.getExtension();\n    if (com.graphhopper.storage.GraphExtension instanceof com.graphhopper.storage.TurnCostExtension) {\n        com.graphhopper.storage.TurnCostExtension com.graphhopper.storage.TurnCostExtension = ((com.graphhopper.storage.TurnCostExtension)(com.graphhopper.storage.GraphExtension));\n        java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry> = com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.reader.OSMTurnRelation);\n        for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n            com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n        }\n    } \n} "},"status":-2},{"failures":[],"tindex":"572989f3-792c-11e5-b9ac-05fee2271316","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:56","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 8))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:55","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(int >>> 16))"},"status":-2},{"failures":[],"tindex":"572989f4-792c-11e5-b9ac-79545e54049d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:120","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int"},"status":-2},{"failures":[],"tindex":"572989f5-792c-11e5-b9ac-1d78731ef989","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"maxTurnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:676","type":"CtIfImpl","sourcecode":"if (double >= (int))\n    throw new java.lang.IllegalArgumentException(\"Cost is too high. Or specifiy restricted == true\");\n"},"status":-2},{"failures":[],"tindex":"572989f6-792c-11e5-b9ac-19eb0c3c87f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:822","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"variableMap":{"maxSpeed":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:146","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.EdgeEntry.double"},"status":-2},{"failures":[],"tindex":"572989f7-792c-11e5-b9ac-e595556fb8ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:155","type":"CtAssignmentImpl","sourcecode":"int = 64"},"status":-2},{"failures":[],"tindex":"572989f8-792c-11e5-b9ac-6392ed0ad259","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"variableMap":{"shift":"guess","flags":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:115","type":"CtAssignmentImpl","sourcecode":"long = long"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}