{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"0023d81a-7933-11e5-8953-23d07057deae","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:547","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"variableMap":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed","unknownSpeed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:352","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-2},{"failures":[],"tindex":"0023ff2b-7933-11e5-8953-cf81d20640aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:120","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\":\"))\n    throw new java.lang.IllegalArgumentException(\"EncodingManager does no longer use reflection instantiate encoders directly.\");\n"},"variableMap":{"encoderList":"version"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:77","type":"CtTryImpl","sourcecode":"try {\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = com.graphhopper.util.Helper.com.graphhopper.util.Helper.readFile(new java.io.InputStreamReader(com.graphhopper.GraphHopper.com.graphhopper.GraphHopper.getResourceAsStream(\"version\") , com.graphhopper.util.Helper.java.nio.charset.Charset));\n    java.lang.String = java.util.List<java.lang.String>.get(0);\n} catch (java.lang.Exception ex) {\n    java.lang.System.java.io.PrintStream.println((\"GraphHopper Initialization ERROR: cannot read version!? \" + (java.lang.Exception.getMessage())));\n}"},"status":-2},{"failures":[],"tindex":"0023ff2c-7933-11e5-8953-e9d93dcad6ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:321","type":"CtForEachImpl","sourcecode":"for (int int : int[]) {\n    com.graphhopper.util.TIntList.add(int);\n}"},"status":-2},{"failures":[],"tindex":"0023ff2d-7933-11e5-8953-39926fda82bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:57","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.lang.System.nanoTime()) - (long)"},"variableMap":{"lastTime":"relationFlags","nanoTime":"relationFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:274","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.handleWayTags(com.graphhopper.reader.OSMWay, long, (long & (com.graphhopper.routing.util.AbstractFlagEncoder.getRelBitMask())))"},"status":-2},{"failures":[],"tindex":"0023ff2e-7933-11e5-8953-47a06733f519","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"closed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:136","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"0023ff2f-7933-11e5-8953-85b5970c0764","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"variableMap":{"java.lang.Double.NaN":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:166","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Math.max(com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double), com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double))"},"status":-2},{"failures":[],"tindex":"00242640-7933-11e5-8953-854a93a1f864","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:688","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.loadEdgesHeader()"},"variableMap":{"this":"cg"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:296","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.setEdgesHeader()"},"status":-2},{"failures":[],"tindex":"00242641-7933-11e5-8953-c3af7cd4aa07","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:104","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"variableMap":{"val":"intKey","java.lang.Double.POSITIVE_INFINITY":"precision","java.lang.Integer.MAX_VALUE":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:224","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.dem.HeightTile == null) {\n    if (!(java.io.File.exists()))\n        java.io.File.mkdirs();\n    \n    java.lang.String java.lang.String = com.graphhopper.reader.dem.SRTMProvider.getFileString(double, double);\n    if (java.lang.String == null)\n        return 0;\n    \n    int int = com.graphhopper.reader.dem.SRTMProvider.down(double);\n    int int = com.graphhopper.reader.dem.SRTMProvider.down(double);\n    com.graphhopper.reader.dem.HeightTile = new com.graphhopper.reader.dem.HeightTile(int , int , int , double , 1);\n    com.graphhopper.reader.dem.HeightTile.setCalcMean(boolean);\n    com.graphhopper.reader.dem.TIntObjectHashMap<com.graphhopper.reader.dem.HeightTile>.put(int, com.graphhopper.reader.dem.HeightTile);\n    com.graphhopper.storage.DataAccess com.graphhopper.storage.DataAccess = com.graphhopper.reader.dem.SRTMProvider.getDirectory().find((\"dem\" + int));\n    com.graphhopper.reader.dem.HeightTile.setHeights(com.graphhopper.storage.DataAccess);\n    boolean boolean = false;\n    try {\n        boolean = com.graphhopper.storage.DataAccess.loadExisting();\n    } catch (java.lang.Exception ex) {\n        com.graphhopper.reader.dem.Logger.warn((((\"cannot load dem\" + int) + \", error:\") + (java.lang.Exception.getMessage())));\n    }\n    if (!boolean) {\n        byte[] byte[] = new byte[(2 * (int)) * (int)];\n        com.graphhopper.storage.DataAccess.create(byte[].int);\n        try {\n            java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n            java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n            java.io.InputStream java.io.InputStream;\n            if (!(java.io.File.exists())) {\n                for (int int = 0 ; int < 3 ; int++) {\n                    try {\n                        com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                        break;\n                    } catch (java.net.SocketTimeoutException ex) {\n                        java.lang.Thread.sleep(2000);\n                        continue;\n                    } catch (java.io.FileNotFoundException ex) {\n                        java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                        continue;\n                    }\n                }\n            } \n            java.io.InputStream = new java.io.FileInputStream(java.io.File);\n            java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n            java.util.zip.ZipInputStream.getNextEntry();\n            java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n            int int;\n            while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n                for (int int = 0 ; int < int ; int += 2) {\n                    short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n                    if ((short < (-1000)) || (short > 12000))\n                        short = java.lang.Short.short;\n                    \n                    com.graphhopper.storage.DataAccess.setShort(int, short);\n                }\n            }\n            com.graphhopper.storage.DataAccess.flush();\n        } catch (java.lang.Exception ex) {\n            throw new java.lang.RuntimeException(java.lang.Exception);\n        }\n    } \n} "},"status":-2},{"failures":[],"tindex":"00242642-7933-11e5-8953-63d561f0f7e1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:206","type":"CtReturnImpl","sourcecode":"return (1 << int) - 12"},"variableMap":{"i":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:66","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"00242643-7933-11e5-8953-7336ebfb2b60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:216","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return java.lang.String;\n"},"variableMap":{"val":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:294","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"00244d54-7933-11e5-8953-d1a5f2120915","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:165","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String.format(java.lang.String, java.lang.Object[]);\n} catch (java.lang.Exception ex) {\n    java.lang.StringBuilder.append(com.graphhopper.util.Translation.getLocale()).append(\" - error \").append(java.lang.Exception.getMessage()).append(\"in \").append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey()).append(\"->\").append(java.lang.String).append(\"\\n\");\n}"},"status":-2},{"failures":[],"tindex":"00244d55-7933-11e5-8953-2729b823d051","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"removedEdges","dLat":"removedEdges","tmpErr":"removedEdges","x1":"removedEdges","sLon":"removedEdges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:254","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.routing.util.TIntList.size()) ; int++) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(com.graphhopper.routing.util.TIntList.get(int));\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        com.graphhopper.util.EdgeIterator.setFlags(com.graphhopper.routing.util.FlagEncoder.setAccess(com.graphhopper.util.EdgeIterator.getFlags(), false, false));\n        int++;\n    }\n}"},"status":-2},{"failures":[],"tindex":"00244d56-7933-11e5-8953-213a0199287d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:889","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-2},{"failures":[],"tindex":"00244d57-7933-11e5-8953-139dbfbbe5b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:73","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:511","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.getEdgeIdToOsmWayIdMap().get(int)"},"status":-2},{"failures":[],"tindex":"00244d58-7933-11e5-8953-89a5ab256148","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:117","type":"CtAssignmentImpl","sourcecode":"byte[][] = byte[][]"},"variableMap":{"newSegs":"segments","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:304","type":"CtAssignmentImpl","sourcecode":"byte[][] = new byte[0][]"},"status":-2},{"failures":[],"tindex":"00244d59-7933-11e5-8953-d5923f7651f1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:259","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"variableMap":{"i":"newSize","to":"newSize","lonSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:165","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"00244d5a-7933-11e5-8953-13021096517b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:283","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"variableMap":{"nodeId":"time","nodeIdOffset":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:56","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.Path.calcMillis(double, long, boolean)"},"status":-2},{"failures":[],"tindex":"0024746b-7933-11e5-8953-c7daa6d6952e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:81","type":"CtUnaryOperatorImpl","sourcecode":"-(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"ele"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:769","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getElevation(int)"},"status":-2},{"failures":[],"tindex":"0024746c-7933-11e5-8953-c11f07ad13e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:58","type":"CtTryImpl","sourcecode":"try {\n    java.util.zip.ZipEntry java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    byte[] byte[] = new byte[8 * 1024];\n    while (java.util.zip.ZipEntry != null) {\n        if (java.util.zip.ZipEntry.isDirectory()) {\n            new java.io.File(java.io.File , java.util.zip.ZipEntry.getName()).mkdir();\n        } else {\n            double double = 1;\n            if (((java.util.zip.ZipEntry.getCompressedSize()) > 0) && ((java.util.zip.ZipEntry.getSize()) > 0))\n                double = ((double)(java.util.zip.ZipEntry.getCompressedSize())) / (java.util.zip.ZipEntry.getSize());\n            \n            java.io.File java.io.File = new java.io.File(java.io.File , java.util.zip.ZipEntry.getName());\n            java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File);\n            try {\n                int int;\n                while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n                    java.io.FileOutputStream.write(byte[], 0, int);\n                    long += int * double;\n                    if (com.graphhopper.util.ProgressListener != null)\n                        com.graphhopper.util.ProgressListener.update(long);\n                    \n                }\n            } finally {\n                java.io.FileOutputStream.close();\n            }\n        }\n        java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry();\n    }\n    java.util.zip.ZipInputStream.closeEntry();\n} finally {\n    java.util.zip.ZipInputStream.close();\n}"},"status":-2},{"failures":[],"tindex":"0024746d-7933-11e5-8953-abb08841af81","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"gridCellHeight","x":"tmp","absY":"gridCellHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:62","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.frac((double / double))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}