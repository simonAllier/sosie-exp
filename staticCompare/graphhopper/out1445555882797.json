{"failureDictionary":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":6,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":13,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":24,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":26,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":2,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":12,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":22,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":3,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":25,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":18,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":23,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":17,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":20,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":19,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":10,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":21,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":0,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":5},"transformations":[{"failures":[],"tindex":"247d5067-7913-11e5-8711-af7d72315b2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GHDirectory.put(\"nodes\", com.graphhopper.storage.DAType.com.graphhopper.storage.DAType)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"247d7778-7913-11e5-8711-9fd0943007f6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalc3D:45","type":"CtReturnImpl","sourcecode":"return \"EXACT3D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:252","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-1},{"failures":[],"tindex":"247d9e89-7913-11e5-8711-dba1500e6126","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:291","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"247d9e8a-7913-11e5-8711-f31eab95872c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:71","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.BeelineWeightApproximator"},"variableMap":{"approx":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.RoutingAlgorithmFactorySimple:67","type":"CtIfImpl","sourcecode":"if (\"BeelineSimplification\".equals(java.lang.String)) {\n    com.graphhopper.routing.util.BeelineWeightApproximator com.graphhopper.routing.util.BeelineWeightApproximator = new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.AlgorithmOptions.getWeighting());\n    com.graphhopper.routing.util.BeelineWeightApproximator.setDistanceCalc(com.graphhopper.util.Helper.com.graphhopper.util.DistancePlaneProjection);\n    return com.graphhopper.routing.util.BeelineWeightApproximator;\n} else if (\"BeelineAccurate\".equals(java.lang.String)) {\n    com.graphhopper.routing.util.BeelineWeightApproximator com.graphhopper.routing.util.BeelineWeightApproximator = new com.graphhopper.routing.util.BeelineWeightApproximator(com.graphhopper.storage.NodeAccess , com.graphhopper.routing.AlgorithmOptions.getWeighting());\n    com.graphhopper.routing.util.BeelineWeightApproximator.setDistanceCalc(com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc);\n    return com.graphhopper.routing.util.BeelineWeightApproximator;\n} else {\n    throw new java.lang.IllegalArgumentException((((\"Approximation \" + java.lang.String) + \" not found in \") + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[],"tindex":"247d9e8b-7913-11e5-8711-25af85244664","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:109","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.DAType.MemRef) == (com.graphhopper.storage.DAType.MemRef.com.graphhopper.storage.DAType.MemRef)"},"status":-2},{"failures":[],"tindex":"247d9e8c-7913-11e5-8711-2bb1d4d0e204","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:92","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.lang.IllegalStateException(\"allBits must be positive\");\n"},"variableMap":{"allBits":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:99","type":"CtIfImpl","sourcecode":"if ((int + 1) == (java.util.List<com.graphhopper.util.Instruction>.size()))\n    int--;\n"},"status":-2},{"failures":[],"tindex":"247dc59d-7913-11e5-8711-89435ea677a0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:246","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"The PBF DenseInfo keys/values list contains a key with no corresponding value.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already closed\")"},"status":-2},{"failures":[],"tindex":"247dc59e-7913-11e5-8711-b3e1b450e8b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:124","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue;\n"},"variableMap":{"i":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:89","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.Edge.isValid(int)) {\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.Path.processEdge(int, com.graphhopper.storage.EdgeEntry.int);\n    int = com.graphhopper.storage.EdgeEntry.int;\n}"},"status":-2},{"failures":[],"tindex":"247dc59f-7913-11e5-8711-b94db76ba33e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:116","type":"CtLocalVariableImpl","sourcecode":"byte byte = ((byte)(1 << 7))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:60","type":"CtLocalVariableImpl","sourcecode":"byte byte = byte[][int]"},"status":-2},{"failures":[],"tindex":"247dc5a0-7913-11e5-8711-591e43353656","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:149","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false)"},"variableMap":{"byteCount":"doubleSize","this":"keys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.ensureCapacity((long + 8))"},"status":-2},{"failures":[],"tindex":"247dc5a1-7913-11e5-8711-b90d1bdbfabb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:585","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"variableMap":{"usedBits":"high","nodeBitMask":"resFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:117","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.BitUtil.combineIntsToLong(int, int)"},"status":-2},{"failures":[],"tindex":"247dc5a2-7913-11e5-8711-b71ce39ae33b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:856","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(isPrepared()))\n    com.graphhopper.GraphHopper.prepare();\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:762","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) && com.graphhopper.GraphHopper.(isAllowWrites())) {\n    com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n    com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, false);\n    if (!(com.graphhopper.storage.Lock.tryLock()))\n        throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n    \n} "},"status":-2},{"failures":[],"tindex":"247decb3-7913-11e5-8711-5d411db0f587","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:134","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromShort(byte[], short, 0)"},"status":-2},{"failures":[],"tindex":"247decb4-7913-11e5-8711-77874bd844c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:119","type":"CtReturnImpl","sourcecode":"return ~(long + long)"},"variableMap":{"len":"high","start":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"status":-2},{"failures":[],"tindex":"247decb5-7913-11e5-8711-fbfaa3d2e825","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:838","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.PillarInfo.setNode(int, java.lang.Double.double, java.lang.Double.double, java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"247decb6-7913-11e5-8711-f7d2b2025b40","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:856","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.GraphHopper.(isPrepared()))\n    com.graphhopper.GraphHopper.prepare();\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:640","type":"CtTryImpl","sourcecode":"try {\n    com.graphhopper.GraphHopper.importData();\n    com.graphhopper.storage.GraphHopperStorage.getProperties().put(\"osmreader.import.date\", com.graphhopper.GraphHopper.formatDateTime(new java.util.Date()));\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException((\"Cannot parse OSM file \" + com.graphhopper.GraphHopper.(getOSMFile())) , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"247decb7-7913-11e5-8711-094f27cb9175","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:177","type":"CtInvocationImpl","sourcecode":"java.util.zip.Deflater.finish()"},"status":-2},{"failures":[],"tindex":"247decb8-7913-11e5-8711-fb115e1e75a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:321","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int)"},"variableMap":{"bufferIndex":"index","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:321","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int).putShort(int, short)"},"status":-2},{"failures":[],"tindex":"247decb9-7913-11e5-8711-e7e83f75fbf8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"baseNode","newBaseIndex":"baseNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:889","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-2},{"failures":[],"tindex":"247e13ca-7913-11e5-8711-ab4dc0a5b53d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"adjNode","index":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:103","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry) != null) {\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n    com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, com.graphhopper.storage.EdgeEntry.int, int), com.graphhopper.storage.EdgeEntry, int);\n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}