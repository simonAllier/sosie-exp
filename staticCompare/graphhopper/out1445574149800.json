{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":44,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":70,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":79,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":217,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":227,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":180,"com.graphhopper.reader.OSMReaderTest.testFerry":306,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":353,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":354,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":67,"com.graphhopper.routing.QueryGraphTest.testOneWay":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":162,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":223,"com.graphhopper.reader.OSMReaderTest.testWithBounds":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":201,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":73,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":191,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":134,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":199,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":280,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":252,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":323,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":163,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":243,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":209,"com.graphhopper.GraphHopperTest.testPrepare":331,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":210,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":270,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":50,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":287,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":26,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":301,"com.graphhopper.util.InstructionListTest.testWayList":342,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":35,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":341,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":352,"com.graphhopper.GraphHopperAPITest.testDisconnected179":339,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":133,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":187,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":335,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":221,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":224,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":20,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":321,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":88,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":130,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":213,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":332,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":276,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":122,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":232,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":255,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":225,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":293,"com.graphhopper.reader.OSMReaderTest.testSort":309,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":292,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":38,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":87,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":158,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":298,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":260,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":48,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":75,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":322,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":11,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":268,"com.graphhopper.routing.PathTest.testWayList":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":171,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":33,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":222,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":302,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":118,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":155,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":104,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":275,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":178,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":284,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":19,"com.graphhopper.util.GHUtilityTest.testSort":348,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":188,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":175,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":131,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":273,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":116,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":248,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":240,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":135,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":172,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":92,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":238,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":95,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":289,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":107,"com.graphhopper.GraphHopperAPITest.testLoad":338,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":334,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":113,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":281,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":140,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":272,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":98,"com.graphhopper.reader.OSMReaderTest.testBarriers":310,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":5,"com.graphhopper.routing.PathTest.testFound":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":203,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":337,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":184,"com.graphhopper.util.GHUtilityTest.testCopy":347,"com.graphhopper.routing.PathTest.testFindInstruction":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":99,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":351,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":109,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":189,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":279,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":34,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":216,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":299,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":285,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":124,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":288,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":170,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":56,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":111,"com.graphhopper.reader.PrinctonReaderTest.testRead":320,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":151,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":139,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":61,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":146,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":185,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":269,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":166,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":6,"com.graphhopper.util.InstructionListTest.testWayList2":343,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":258,"com.graphhopper.reader.OSMReaderTest.testFoot":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":206,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":202,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":233,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":230,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":0,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":304,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":176,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":231,"com.graphhopper.reader.OSMReaderTest.testOneWay":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":91,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":156,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":148,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":296,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":108,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":196,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":271,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":278,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":311,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":167,"com.graphhopper.routing.PathBidirRefTest.testExtract":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":53,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":241,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":329,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":350,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":228,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":324,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":132,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":264,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":327,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":204,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":326,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":325,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":237,"com.graphhopper.util.GHUtilityTest.testSort2":346,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":192,"com.graphhopper.reader.OSMReaderTest.testMain":308,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":137,"com.graphhopper.routing.PathBidirRefTest.testExtract2":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":168,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":208,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":256,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":82,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":220,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":234,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":267,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":294,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":250,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":120,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":318,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":242,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":226,"com.graphhopper.storage.GraphHopperStorageTest.testClone":274,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":207,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":165,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":283,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":290,"com.graphhopper.GraphHopperTest.testFootAndCar":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":186,"com.graphhopper.routing.PathTest.testTime":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":57,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":235,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":164,"com.graphhopper.util.GHUtilityTest.testSortDirected":349,"com.graphhopper.GraphHopperTest.testPrepareOnly":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":154,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":219,"com.graphhopper.GraphHopperTest.testVia":330,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":36,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":315,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":263,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":251,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":138,"com.graphhopper.GraphHopperTest.testFootOnly":336,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":344,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":257,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":314,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":245,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":259,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":15,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":195,"com.graphhopper.util.InstructionListTest.testFind":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":28,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":145,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":236},"transformations":[{"failures":[0],"tindex":"ac79afd6-793d-11e5-aa56-0f5d68b40c34","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:177","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10],"tindex":"ac79fdf7-793d-11e5-aa56-27a08ce499c5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:295","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.close(java.io.RandomAccessFile)"},"variableMap":{"raFile":"raFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:214","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.write(byte[])"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,1,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,2,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,7,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,8,324,325,326,327,328,329,330,331,332,333,334,9,335,10,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354],"tindex":"ac79fdf8-793d-11e5-aa56-59967ef4fef2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:143","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.writeEdge(int, int, int, com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-1},{"failures":[],"tindex":"ac7a2509-793d-11e5-aa56-07f1631e317c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"edge","maxGeoRef":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:217","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"ac7a4c1a-793d-11e5-aa56-a9df92294b67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1086","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureWriteAccess()"},"status":-2},{"failures":[],"tindex":"ac7a4c1b-793d-11e5-aa56-a3ce8a1acd8b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:103","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"ee","fromHeap":"prioQueue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:220","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"status":-2},{"failures":[],"tindex":"ac7a4c1c-793d-11e5-aa56-fbbdef1b6279","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:48","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"variableMap":{"x1":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:233","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.dem.SRTMProvider.down(double)"},"status":-2},{"failures":[],"tindex":"ac7a4c1d-793d-11e5-aa56-ad9c9ece320a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:99","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.CHEdgeIteratorState = ((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)))"},"status":-2},{"failures":[],"tindex":"ac7a732e-793d-11e5-aa56-398c9aa1edbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:46","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.MountainBikeFlagEncoder.this(((int)(com.graphhopper.util.PMap.getLong(\"speedBits\", 4))), com.graphhopper.util.PMap.getDouble(\"speedFactor\", 2), (com.graphhopper.util.PMap.getBool(\"turnCosts\", false) ? 1 : 0))"},"status":-2},{"failures":[],"tindex":"ac7a732f-793d-11e5-aa56-a50ada762667","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:337","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double[][(2 * int)], double[][((2 * int) + 1)], java.lang.Double.double)"},"status":-2},{"failures":[],"tindex":"ac7a7330-793d-11e5-aa56-9d787dab4bc6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"favoredHeading"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:383","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.convertAzimuth2xaxisAngle(double)"},"status":-2},{"failures":[],"tindex":"ac7a7331-793d-11e5-aa56-d77d2936d727","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PreparationWeighting:51","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.CHEdgeIteratorState.isShortcut())\n    return com.graphhopper.util.CHEdgeIteratorState.getWeight();\n"},"status":-2},{"failures":[],"tindex":"ac7a7332-793d-11e5-aa56-1d638d812b07","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:600","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"status":-2},{"failures":[],"tindex":"ac7a9a43-793d-11e5-aa56-99c9eab2a58c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:128","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"daType":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"ac7a9a44-793d-11e5-aa56-7f6835511b58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:274","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.StringBuilder.append(\", \");\n"},"status":-2},{"failures":[],"tindex":"ac7a9a45-793d-11e5-aa56-d5e166fb2de7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"edgeId","noOfStates":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:803","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return 1;\n"},"status":-2},{"failures":[],"tindex":"ac7a9a46-793d-11e5-aa56-97ff730c4ff4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:273","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (com.graphhopper.storage.GraphHopperStorage.getNodes()) ; int++) {\n    if (com.graphhopper.routing.util.PrepareRoutingSubnetworks.detectNodeRemovedForAllEncoders(com.graphhopper.util.EdgeExplorer, int))\n        com.graphhopper.storage.GraphHopperStorage.markNodeRemoved(int);\n    \n}"},"status":-2},{"failures":[],"tindex":"ac7a9a47-793d-11e5-aa56-25cebb50dc68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:141","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append('=')"},"variableMap":{"writer":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:142","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue())"},"status":-2},{"failures":[],"tindex":"ac7ac158-793d-11e5-aa56-d3dabac18886","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"eleDelta":"distEdge","decEleSum":"distEdge","fullDist2D":"distEdge","decDist2DSum":"distEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:138","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setQueryDistance(double)"},"status":-2},{"failures":[],"tindex":"ac7ac159-793d-11e5-aa56-ef59aa6cfc74","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"variableMap":{"prepared":"binary"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:60","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.reader.OSMInputFile.openPBFReader(java.io.InputStream);\n} else {\n    com.graphhopper.reader.OSMInputFile.openXMLStream(java.io.InputStream);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}