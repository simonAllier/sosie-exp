{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":137,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":151,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":326,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":35,"com.graphhopper.reader.OSMReaderTest.testFerry":177,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":27,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":109,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":346,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":170,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":193,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":277,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":372,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":88,"com.graphhopper.util.shapes.BBoxTest.testContains":110,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":255,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":399,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":401,"com.graphhopper.GraphHopperTest.testPrepare":210,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":4,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":129,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":225,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":330,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":230,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":174,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":126,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":284,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":20,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":369,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":17,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":11,"com.graphhopper.GraphHopperTest.testLoadOSM":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":292,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":311,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":285,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":381,"com.graphhopper.reader.OSMReaderTest.testSort":179,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":172,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":396,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":273,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":99,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":156,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":176,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":16,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":366,"com.graphhopper.util.BitUtilBigTest.testFromBitString":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":409,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":120,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":342,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":339,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":322,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":414,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":133,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":123,"com.graphhopper.coll.OSMIDMapTest.testGetLong":238,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":350,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":340,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":336,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":379,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":347,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":382,"com.graphhopper.GraphHopperAPITest.testLoad":240,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":256,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":175,"com.graphhopper.reader.OSMReaderTest.testBarriers":180,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":397,"com.graphhopper.util.GHUtilityTest.testCopy":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":125,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":62,"com.graphhopper.routing.PathTest.testFindInstruction":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":42,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":325,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":274,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":260,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":364,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":351,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":376,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":75,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":116,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":404,"com.graphhopper.util.InstructionListTest.testWayList2":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":293,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":48,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":368,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":56,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":348,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":63,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":29,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":139,"com.graphhopper.coll.OSMIDMapTest.testGet":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":405,"com.graphhopper.routing.PathBidirRefTest.testExtract":163,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":237,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":208,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":203,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":288,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":378,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":370,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":206,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":320,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":205,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":204,"com.graphhopper.util.GHUtilityTest.testSort2":232,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":297,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":134,"com.graphhopper.reader.OSMReaderTest.testMain":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":411,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":407,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":406,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":335,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":44,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":190,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":383,"com.graphhopper.storage.StorablePropertiesTest.testStore":58,"com.graphhopper.storage.GraphHopperStorageTest.testClone":249,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":403,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":332,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":258,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":76,"com.graphhopper.routing.PathTest.testTime":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":388,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":67,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":87,"com.graphhopper.reader.OSMReaderTest.testRelation":185,"com.graphhopper.util.GHUtilityTest.testSortDirected":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":392,"com.graphhopper.storage.MMapDirectoryTest.testNoDuplicates":331,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":153,"com.graphhopper.GraphHopperTest.testFootOnly":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":313,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":64,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":70,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":83,"com.graphhopper.search.NameIndexTest.testCreate":200,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":287,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":148,"com.graphhopper.routing.QueryGraphTest.testOneWay":159,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":400,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":306,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":192,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":283,"com.graphhopper.reader.OSMReaderTest.testWithBounds":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":80,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":154,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":367,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":89,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":308,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":299,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":359,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":303,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":352,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":247,"com.graphhopper.search.NameIndexTest.testFlush":54,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":13,"com.graphhopper.util.InstructionListTest.testWayList":226,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":275,"com.graphhopper.GraphHopperAPITest.testDisconnected179":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":390,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":77,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":360,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":281,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":72,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":380,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":385,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":40,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":211,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":251,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":361,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":363,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":362,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":117,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":32,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":132,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":316,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":317,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":337,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":141,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":246,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":242,"com.graphhopper.routing.PathTest.testWayList":145,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":321,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":50,"com.graphhopper.coll.OSMIDMapTest.testGet2":236,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":15,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":194,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":127,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":150,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":358,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":371,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":374,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":344,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":19,"com.graphhopper.util.GHUtilityTest.testSort":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":91,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":412,"com.graphhopper.search.NameIndexTest.testPut":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":46,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":338,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":327,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":68,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":300,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":373,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":167,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":298,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":105,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":195,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":353,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":377,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":92,"com.graphhopper.routing.PathTest.testFound":142,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":219,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":304,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":12,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":349,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":199,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":333,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":31,"com.graphhopper.util.InstructionListTest.testEmptyList":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":14,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":263,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":387,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":408,"com.graphhopper.reader.PrinctonReaderTest.testRead":22,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":389,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":345,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":78,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":357,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":71,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":354,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":2,"com.graphhopper.reader.OSMReaderTest.testFoot":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":38,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":162,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":196,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":290,"com.graphhopper.reader.OSMReaderTest.testOneWay":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":413,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":257,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":271,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":386,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":365,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":115,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":266,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":85,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":253,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":144,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":318,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":7,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":301,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":221,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":165,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":1,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":52,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":152,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":191,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":243,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":107,"com.graphhopper.routing.PathBidirRefTest.testExtract2":164,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":312,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":294,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":329,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":323,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":197,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":269,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":398,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":138,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":302,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":286,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":53,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":272,"com.graphhopper.GraphHopperTest.testFootAndCar":212,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":73,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":131,"com.graphhopper.storage.StorablePropertiesTest.testLoad":279,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":341,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":402,"com.graphhopper.GraphHopperTest.testPrepareOnly":202,"com.graphhopper.GraphHopperTest.testVia":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":328,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":149,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":130,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":187,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":307,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":375,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":228,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":268,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":184,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":84,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":391,"com.graphhopper.util.InstructionListTest.testFind":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":102},"transformations":[{"failures":[0,1,2],"tindex":"da71d445-7947-11e5-8c70-01fb2f19b4b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:568","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.BikeCommonFlagEncoder.convertCallValueToPriority(java.lang.String).getValue())"},"status":-1},{"failures":[3],"tindex":"da71fb56-7947-11e5-8c70-91e0659307ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"bLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:92","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"da71fb57-7947-11e5-8c70-f56d2f3d5581","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:128","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long)"},"status":-1},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,35,36,72,73,74,75,76,77,37,78,79,80,81,82,83,84,85,86,87,88,89,90,38,91,92,93,94,95,96,97,39,98,99,100,40,101,102,103,104,105,106,107,108,109],"tindex":"da722268-7947-11e5-8c70-c33fea605bf7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:173","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.removeDir(new java.io.File(((java.lang.String) + java.lang.String)))"},"variableMap":{"name":"location","location":"location"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:197","type":"CtInvocationImpl","sourcecode":"new java.io.File(java.lang.String).mkdirs()"},"status":-1},{"failures":[110],"tindex":"da722269-7947-11e5-8c70-096d89a84fb8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:191","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.shapes.BBox.contains(com.graphhopper.util.shapes.Circle.getBounds())"},"status":-1},{"failures":[],"tindex":"da72226a-7947-11e5-8c70-3fa328d97025","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:163","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:89","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.int"},"status":-2},{"failures":[4,5,6,7,111,112,113,114,8,9,115,116,10,117,118,11,12,119,120,13,121,122,123,124,125,126,127,128,129,130,131,132,14,133,134,135,136,137,138,139,140,141,15,16,17,142,143,18,144,145,146,19,20,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,157,158,158,159,159,160,160,161,161,162,162,163,164,165,166,167,21,168,169,170,171,172,173,174,175,22,23,176,177,24,178,179,180,181,182,183,184,185,186,187,188,189,190,191,25,192,193,194,195,196,197,198,54,199,200,201,202,203,204,205,206,207,208,209,26,210,211,212,213,214,215,216,217,218,219,220,221,27,222,223,224,225,226,227,228,229,230,231,232,28,233,234,235,236,237,238,239,240,241,242,55,56,57,243,244,245,246,247,29,30,248,249,250,251,252,253,31,254,255,256,257,258,259,260,261,262,263,264,265,266,267,32,268,269,270,271,272,273,274,33,275,276,277,34,278,58,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,59,296,297,298,299,300,301,60,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,61,322,323,324,325,326,327,62,328,329,330,63,64,65,66,67,68,331,69,332,70,71,35,36,72,73,74,75,76,77,37,78,333,79,80,81,82,83,84,85,86,87,88,89,90,38,91,92,93,94,95,96,97,39,98,99,100,40,101,102,103,334,104,105,335,336,337,338,339,41,42,340,341,342,343,344,345,43,346,347,348,349,350,351,352,353,354,355,356,357,358,359,44,360,361,362,363,364,365,366,45,367,368,369,46,370,47,371,106,372,373,374,107,375,376,377,378,108,109,379,380,381,382,383,48,49,384,385,386,387,388,389,50,390,391,392,393,394,395,396,397,398,399,400,401,402,403,51,404,405,406,407,408,409,410,52,411,412,413,53,414],"tindex":"da72226b-7947-11e5-8c70-09b495b91c2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-1},{"failures":[167],"tindex":"da72497c-7947-11e5-8c70-9dc53f630cc1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:103","type":"CtAssignmentImpl","sourcecode":"double = double - (2 * (java.lang.Math.double))"},"variableMap":{"resultOrientation":"incDist2DSum","orientation":"incDist2DSum","java.lang.Math.PI":"bwSlower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:242","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[173,257,271,80,94,349,363,393,407],"tindex":"da72497d-7947-11e5-8c70-c57ba2d61c76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:655","type":"CtForImpl","sourcecode":"for ( ; int >= 0 ; int--) {\n    if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"da72497e-7947-11e5-8c70-0d9900ff8401","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:44","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[55,102,108],"tindex":"da72708f-7947-11e5-8c70-0b58d082971b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"variableMap":{"da":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:182","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.shapes.BBox.hasElevation()) {\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((7 * 4)));\n    com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((8 * 4)));\n} "},"status":-1},{"failures":[202,214,216,106,107,108],"tindex":"da727090-7947-11e5-8c70-5f8e854a19b7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:689","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"da727091-7947-11e5-8c70-35751f67e6ec","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:149","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Instruction.checkOne()"},"status":-2},{"failures":[],"tindex":"da727092-7947-11e5-8c70-ed7872dd2f63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:95","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.this(java.util.List<? extends com.graphhopper.routing.util.FlagEncoder>, 4)"},"status":-2},{"failures":[202,213,214,216,217,55,57,102,105,106,107,108],"tindex":"da727093-7947-11e5-8c70-5710c806aa07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:419","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"status":-1},{"failures":[],"tindex":"da727094-7947-11e5-8c70-73f106331564","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:228","type":"CtAssertImpl","sourcecode":"assert (int + 4) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"bytePos","index":"bytePos"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:294","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setShort(int, short)"},"status":-2},{"failures":[],"tindex":"da727095-7947-11e5-8c70-3fcae18c5be0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:95","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.EdgeEntry == null) {\n    com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double);\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-2},{"failures":[],"tindex":"da7297a6-7947-11e5-8c70-e1bab04be6e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphBuilder:106","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Directory = new com.graphhopper.storage.MMapDirectory(java.lang.String)"},"variableMap":{"location":"location","dir":"outdir"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:311","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.Directory = new com.graphhopper.storage.RAMDirectory(java.lang.String , boolean)"},"status":-2},{"failures":[],"tindex":"da7297a7-7947-11e5-8c70-e7f6f2b6660c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"variableMap":{"minLatInit":"minLat","maxLonInit":"minLon","minLonInit":"minLon","bounds":"this","maxLatInit":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.BBox.this(double, double, double, double, java.lang.Double.double, java.lang.Double.double, false)"},"status":-2},{"failures":[],"tindex":"da7297a8-7947-11e5-8c70-b324ceead657","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:569","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph._copyTo(((com.graphhopper.storage.BaseGraph)(com.graphhopper.storage.Graph)))"},"variableMap":{"g":"toSortedGraph","this":"toSortedGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:246","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.util.AllEdgesIterator.next()) {\n    int int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode();\n    int int = com.graphhopper.util.TIntList.get(int);\n    int int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode();\n    int int = com.graphhopper.util.TIntList.get(int);\n    if ((int < 0) || (int < 0))\n        continue;\n    \n    com.graphhopper.routing.util.AllEdgesIterator.copyPropertiesTo(com.graphhopper.storage.Graph.edge(int, int));\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}