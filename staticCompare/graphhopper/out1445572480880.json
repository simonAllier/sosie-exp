{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":37,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":54,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":146,"com.graphhopper.reader.OSMReaderTest.testFerry":75,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":51,"com.graphhopper.routing.QueryGraphTest.testOneWay":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":210,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":141,"com.graphhopper.reader.OSMReaderTest.testWithBounds":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":173,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":56,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":151,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":192,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":4,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":222,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":209,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":12,"com.graphhopper.GraphHopperTest.testPrepare":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":163,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":178,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":0,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":19,"com.graphhopper.util.InstructionListTest.testWayList":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":28,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":204,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":190,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":223,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":25,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":123,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":50,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":74,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":70,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":81,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":225,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":203,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":155,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":98,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":143,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":183,"com.graphhopper.GraphHopperTest.testLoadOSM":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":13,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":130,"com.graphhopper.reader.OSMReaderTest.testSort":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":31,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":69,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":85,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":9,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":41,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":57,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":43,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":117,"com.graphhopper.routing.PathTest.testWayList":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":150,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":216,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":26,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":53,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":206,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":194,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":219,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":221,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":49,"com.graphhopper.util.GHUtilityTest.testSort":114,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":176,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":193,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":169,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":129,"com.graphhopper.GraphHopperAPITest.testLoad":116,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":40,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":198,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":121,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":72,"com.graphhopper.reader.OSMReaderTest.testBarriers":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":158,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":24,"com.graphhopper.util.GHUtilityTest.testCopy":113,"com.graphhopper.routing.PathTest.testFindInstruction":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":16,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":185,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":215,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":177,"com.graphhopper.reader.PrinctonReaderTest.testRead":73,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":197,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":211,"com.graphhopper.util.InstructionListTest.testWayList2":109,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":220,"com.graphhopper.reader.OSMReaderTest.testFoot":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":161,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":157,"com.graphhopper.reader.OSMReaderTest.testOneWay":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":188,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":224,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":207,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":133,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":153,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":174,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":120,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":80,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":46,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":212,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":3,"com.graphhopper.routing.PathBidirRefTest.testExtract":63,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":199,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":189,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":159,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":91,"com.graphhopper.util.GHUtilityTest.testSort2":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":152,"com.graphhopper.reader.OSMReaderTest.testMain":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":217,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":195,"com.graphhopper.routing.PathBidirRefTest.testExtract2":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":213,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":65,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":208,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":140,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":165,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":181,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":8,"com.graphhopper.storage.GraphHopperStorageTest.testClone":122,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":138,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":162,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":126,"com.graphhopper.GraphHopperTest.testFootAndCar":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":156,"com.graphhopper.reader.OSMReaderTest.testRelation":226,"com.graphhopper.util.GHUtilityTest.testSortDirected":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":172,"com.graphhopper.GraphHopperTest.testPrepareOnly":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":205,"com.graphhopper.GraphHopperTest.testVia":96,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":147,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":29,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":84,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":196,"com.graphhopper.GraphHopperTest.testFootOnly":104,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":110,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":83,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":142,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":45,"com.graphhopper.util.InstructionListTest.testFind":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":202},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219],"tindex":"c9b7f0ce-7939-11e5-9c10-3332832dc008","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:61","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"initLeafSize":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:327","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-1},{"failures":[220,221,222,223,224,225,226],"tindex":"c9b83eef-7939-11e5-9c10-abc89eda5df7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:94","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    int = (int) - 1;\n"},"variableMap":{"width":"code","lonSimilar":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-1},{"failures":[0,1,2,4,8,9,10,11,12,14,15,16,17,18,19,20,23,26,28,30,31,32,33,34,36,39,40,42,139,190,192,193,194,195,196,197,198],"tindex":"c9b83ef0-7939-11e5-9c10-f36e3feeae60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:144","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"currentEntry":"shortcutCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:193","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"c9b83ef1-7939-11e5-9c10-292cadb86c5c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"length","edgeId":"length","com.graphhopper.storage.EdgeAccess.NO_NODE":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:275","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"status":-2},{"failures":[],"tindex":"c9b86602-7939-11e5-9c10-c98378b2ce9b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:379","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"c9b86603-7939-11e5-9c10-51c779162457","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.BBox:230","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:306","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"c9b86604-7939-11e5-9c10-8727a1e8cb0c","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMElement:77","type":"CtReturnImpl","sourcecode":"return \"<empty>\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:230","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString().replaceAll(\"\\\\\\'\", \"\\\"\")"},"status":-2},{"failures":[],"tindex":"c9b86605-7939-11e5-9c10-c3f142c2e6e0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"subnetworks","frontIndex":"subnetworks"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:97","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"c9b86606-7939-11e5-9c10-51ab70d88d67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:469","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.reader.OSMTurnRelation)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = com.graphhopper.reader.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        com.graphhopper.reader.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-2},{"failures":[],"tindex":"c9b88d17-7939-11e5-9c10-0f5263f053eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:34","type":"CtReturnImpl","sourcecode":"return ((short)((((byte[][int]) & 255) << 8) | ((byte[][(int + 1)]) & 255)))"},"variableMap":{"b":"b","offset":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:34","type":"CtReturnImpl","sourcecode":"return ((short)((((byte[][(int + 1)]) & 255) << 8) | ((byte[][int]) & 255)))"},"status":-2},{"failures":[],"tindex":"c9b88d18-7939-11e5-9c10-971040ce061f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:454","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>) {\n    com.graphhopper.storage.TurnCostExtension.addTurnInfo(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int, com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long);\n}"},"status":-2},{"failures":[],"tindex":"c9b88d19-7939-11e5-9c10-591cd3103e24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"variableMap":{"mask":"oldValueIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"status":-2},{"failures":[],"tindex":"c9b8b42a-7939-11e5-9c10-2dafe51a2ecf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"variableMap":{"keys":"keys","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-2},{"failures":[],"tindex":"c9b8b42b-7939-11e5-9c10-939d6072bed0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:241","type":"CtTryImpl","sourcecode":"try {\n    boolean = com.graphhopper.storage.DataAccess.loadExisting();\n} catch (java.lang.Exception ex) {\n    com.graphhopper.reader.dem.Logger.warn((((\"cannot load dem\" + int) + \", error:\") + (java.lang.Exception.getMessage())));\n}"},"status":-2},{"failures":[],"tindex":"c9b8b42c-7939-11e5-9c10-d5ab0ee74f6e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:188","type":"CtIfImpl","sourcecode":"if (double < (-0.1)) {\n    double = -double;\n    double = double;\n} "},"variableMap":{"eleDelta":"weightOfVisitedPath","decEleSum":"weightOfVisitedPath","fullDist2D":"weight","decDist2DSum":"weightOfVisitedPath"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:264","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.AStarEdge == null) {\n    com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n} else {\n    assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.routing.AStar.AStarEdge.double = double;\n    com.graphhopper.routing.AStar.AStarEdge.double = float;\n}"},"status":-2},{"failures":[],"tindex":"c9b8b42d-7939-11e5-9c10-f33d944e2601","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"variableMap":{"priorityWayEncoder":"relationCodeEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:232","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"RelationCode\" , int , 3 , 1 , 0 , 7)"},"status":-2},{"failures":[],"tindex":"c9b8db3e-7939-11e5-9c10-e7f58f385ce3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:148","type":"CtLocalVariableImpl","sourcecode":"int int = int % (int)"},"variableMap":{"width":"dLat","i":"dLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:124","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":-2},{"failures":[],"tindex":"c9b8db3f-7939-11e5-9c10-d90d7bef69e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:105","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"c9b8db40-7939-11e5-9c10-91654c427c9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"variableMap":{"exitNumber":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:66","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-2},{"failures":[],"tindex":"c9b8db41-7939-11e5-9c10-9109787d3d43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}