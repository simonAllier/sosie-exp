{"failureDictionary":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":27,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":43,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":33,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":37,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":5,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":16,"com.graphhopper.reader.OSMReaderTest.testOneWay":6,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":8,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":34,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":18,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":40,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":22,"com.graphhopper.reader.OSMReaderTest.testRelation":3,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":32,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":23,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":15,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":30,"com.graphhopper.GraphHopperTest.testPrepareOnly":44,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":31,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":36,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":46,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":2,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":20,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":29,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":14,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":39,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":9,"com.graphhopper.GraphHopperTest.testFootOnly":7,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":26,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":24,"com.graphhopper.routing.util.EncodedValueTest.testSwap":19,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":10,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":41,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":35,"com.graphhopper.GraphHopperTest.testLoadOSM":45,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":11,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":38,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":42},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"b4f16a48-7921-11e5-9778-9144952fe794","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.StopWatch:58","type":"CtAssignmentImpl","sourcecode":"long = -1"},"variableMap":{"lastTime":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:81","type":"CtOperatorAssignmentImpl","sourcecode":"long /= double"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46],"tindex":"b4f19159-7921-11e5-9778-fbd5dbd9cdfd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:93","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    continue;\n} "},"variableMap":{"index":"intLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:210","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.util.BitUtil.fromInt(byte[], int[][int], (int * 4));\n}"},"status":-1},{"failures":[],"tindex":"b4f1915a-7921-11e5-9778-bf09a92b5847","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"com.graphhopper.util.EdgeIterator.NO_EDGE","green":"com.graphhopper.storage.EdgeAccess.NO_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:670","type":"CtForImpl","sourcecode":"for (int int = com.graphhopper.coll.GHBitSet.next(0) ; int >= 0 ; int = com.graphhopper.coll.GHBitSet.next((int + 1))) {\n    com.graphhopper.storage.BaseGraph.EdgeIterable.setBaseNode(int);\n    long long = com.graphhopper.util.EdgeIterator.int;\n    while (com.graphhopper.storage.BaseGraph.EdgeIterable.next()) {\n        int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getAdjNode();\n        if ((int != (com.graphhopper.storage.EdgeAccess.int)) && (com.graphhopper.coll.GHBitSet.contains(int))) {\n            int int = com.graphhopper.storage.BaseGraph.EdgeIterable.getEdge();\n            long long = com.graphhopper.storage.EdgeAccess.toPointer(int);\n            com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(int, long, int, int);\n            com.graphhopper.storage.EdgeAccess.invalidateEdge(long);\n        } else {\n            long = com.graphhopper.storage.BaseGraph.EdgeIterable.long;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"b4f1915b-7921-11e5-9778-9d73439917b6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:79","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded()) || com.graphhopper.routing.Dijkstra.(finished()))\n    break;\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:69","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Dijkstra.runAlgo()"},"status":-2},{"failures":[],"tindex":"b4f1915c-7921-11e5-9778-a37549afc534","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:67","type":"CtReturnImpl","sourcecode":"return java.lang.Math.atan2((double - double), (double * (double - double)))"},"variableMap":{"lat1":"latDelta","lat2":"latDelta","lon1":"latDelta","lon2":"latDelta","shrinkFactor":"latDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:111","type":"CtReturnImpl","sourcecode":"return double"},"status":-2},{"failures":[],"tindex":"b4f1915d-7921-11e5-9778-9f994a5a15ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:114","type":"CtIfImpl","sourcecode":"if (int == int) {\n    com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n    com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n    return com.graphhopper.util.shapes.GHPoint;\n} "},"variableMap":{"entry":"entry","latlon":"index","i":"segmentNo","algo":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:102","type":"CtTryImpl","sourcecode":"try {\n    if (int >= (java.util.List<byte[]>.size())) {\n        return null;\n    } \n    byte[] byte[] = java.util.List<byte[]>.get(int);\n    com.graphhopper.storage.VLongStorage com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(com.graphhopper.coll.CompressedArray.com.graphhopper.coll.CompressedArray.decompress(byte[]));\n    long long = com.graphhopper.storage.VLongStorage.getLength();\n    for (int int = 0 ; (com.graphhopper.storage.VLongStorage.getPosition()) < long ; int++) {\n        long long = com.graphhopper.storage.VLongStorage.readVLong();\n        if (int == int) {\n            com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n            com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n            return com.graphhopper.util.shapes.GHPoint;\n        } \n    }\n    return null;\n} catch (java.lang.ArrayIndexOutOfBoundsException ex) {\n    throw new java.lang.RuntimeException((((((((\"index \" + long) + \"=> segNo:\") + int) + \", entry=\") + int) + \", segments:\") + (java.util.List<byte[]>.size())) , java.lang.ArrayIndexOutOfBoundsException);\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"b4f1b86e-7921-11e5-9778-234d0e8f18c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:235","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.prepare()"},"status":-2},{"failures":[],"tindex":"b4f1b86f-7921-11e5-9778-fb71471e220c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:615","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((0 * 4))"},"status":-2},{"failures":[],"tindex":"b4f1b870-7921-11e5-9778-05ba58ce3ebf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:103","type":"CtForEachImpl","sourcecode":"for (int int : int[]) {\n    java.util.Set<java.lang.Integer>.add(int);\n}"},"status":-2},{"failures":[],"tindex":"b4f1b871-7921-11e5-9778-a9e85ede9689","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-2},{"failures":[],"tindex":"b4f1b872-7921-11e5-9778-75a056d55650","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:152","type":"CtIfImpl","sourcecode":"if (java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.isEmpty())\n    return false;\n"},"status":-2},{"failures":[],"tindex":"b4f1b873-7921-11e5-9778-bda88d577642","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:74","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b4f1b874-7921-11e5-9778-9593c840c05a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMNode:39","type":"CtInvocationImpl","sourcecode":"java.lang.Double.parseDouble(javax.xml.stream.XMLStreamReader.getAttributeValue(null, \"lon\"))"},"status":-2},{"failures":[],"tindex":"b4f1df85-7921-11e5-9778-5534767a0fd7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"sourceNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:24","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.WeightApproximator.setGoalNode(int)"},"status":-2},{"failures":[],"tindex":"b4f1df86-7921-11e5-9778-e57ae509de12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"sw1":"lazySW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:305","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"status":-2},{"failures":[],"tindex":"b4f1df87-7921-11e5-9778-a3fad40e76da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"variableMap":{"oldValueIndex":"mask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":-2},{"failures":[],"tindex":"b4f1df88-7921-11e5-9778-558b2e649721","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:321","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.NODE":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:236","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - int) - 1"},"status":-2},{"failures":[],"tindex":"b4f1df89-7921-11e5-9778-b564e593907b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:178","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setRegistered(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":-2},{"failures":[],"tindex":"b4f1df8a-7921-11e5-9778-07a0f6bada84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:444","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"cycleway\")"},"status":-2},{"failures":[],"tindex":"b4f1df8b-7921-11e5-9778-291e0adff0a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:403","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"adjNode","b":"edgeId","baseGraph":"baseGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:415","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getEdgeIteratorState(int, int)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}