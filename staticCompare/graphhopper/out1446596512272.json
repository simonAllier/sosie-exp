{"failureDictionary":{"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":71,"com.graphhopper.reader.OSMReaderTest.testFerry":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":80,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":47,"com.graphhopper.reader.OSMReaderTest.testWithBounds":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":100,"com.graphhopper.util.BitUtilLittleTest.testToDouble":121,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":86,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":4,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":27,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":55,"com.graphhopper.GraphHopperTest.testPrepare":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":105,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":22,"com.graphhopper.reader.OSMReaderTest.testFoot":108,"com.graphhopper.search.NameIndexTest.testFlush":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":74,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":75,"com.graphhopper.reader.OSMReaderTest.testOneWay":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":41,"com.graphhopper.GraphHopperAPITest.testDisconnected179":106,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":68,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":111,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":49,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":96,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":23,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":28,"com.graphhopper.GraphHopperTest.testLoadOSM":19,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":69,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":98,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":2,"com.graphhopper.reader.OSMReaderTest.testSort":109,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":82,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":46,"com.graphhopper.reader.OSMReaderTest.testMain":10,"com.graphhopper.util.BitUtilLittleTest.testToLong":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":25,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":51,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":103,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":90,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":84,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":88,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":45,"com.graphhopper.GraphHopperTest.testFootAndCar":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":73,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":35,"com.graphhopper.coll.OSMIDMapTest.testGetLong":124,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":7,"com.graphhopper.util.shapes.BBoxTest.testCreate":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":87,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":123,"com.graphhopper.GraphHopperTest.testPrepareOnly":56,"com.graphhopper.GraphHopperTest.testVia":9,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":42,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":54,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":115,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":97,"com.graphhopper.GraphHopperAPITest.testLoad":53,"com.graphhopper.util.shapes.CircleTest.testIntersectCircleBBox":11,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":85,"com.graphhopper.GraphHopperTest.testFootOnly":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":50,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":91,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":114,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":5,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":93,"com.graphhopper.reader.OSMReaderTest.testBarriers":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":34,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":59,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":81},"transformations":[{"failures":[0,1,2,3,4],"tindex":"0bfd111e-828a-11e5-8609-db10cf5ed47e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:362","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"variableMap":{"baseNode":"nodeId","id":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:379","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int)))\n    return false;\n"},"status":-1},{"failures":[],"tindex":"0bfd382f-828a-11e5-8609-89107168a3e3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:173","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][int]"},"variableMap":{"keys":"keys","i":"i","child":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"status":0},{"failures":[],"tindex":"0bfd3830-828a-11e5-8609-a370ea376427","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:160","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists()))\n    return false;\n"},"variableMap":{"lockFile":"file"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:142","type":"CtIfImpl","sourcecode":"if ((!(java.io.File.exists())) || ((java.io.File.length()) == 0)) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"0bfd3831-828a-11e5-8609-2bd4937044fe","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:56","type":"CtLocalVariableImpl","sourcecode":"double double = double - double"},"variableMap":{"fromX":"maxLon","toX":"maxLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:158","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.shapes.BBox.double"},"status":-2},{"failures":[5,6,7],"tindex":"0bfd3832-828a-11e5-8609-413318d87110","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:184","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"shift":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:253","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[8],"tindex":"0bfd5e43-828a-11e5-8609-6de7248cd38c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:136","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already closed\")"},"status":-1},{"failures":[],"tindex":"0bfd5e44-828a-11e5-8609-d5153e288774","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:55","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry> = new java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>(int)"},"variableMap":{"size":"nodes","fromHeap":"openSetTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:65","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry> = new java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>((int / 10))"},"status":0},{"failures":[9,10],"tindex":"0bfd5e45-828a-11e5-8609-118e8a0f89a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:436","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState : java.util.List<com.graphhopper.util.EdgeIteratorState>) {\n    com.graphhopper.routing.util.EncodingManager.applyWayTags(com.graphhopper.reader.OSMWay, com.graphhopper.util.EdgeIteratorState);\n}"},"status":-1},{"failures":[11,12],"tindex":"0bfd5e46-828a-11e5-8609-b5c3fe3b2ff1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:170","type":"CtLocalVariableImpl","sourcecode":"double double = java.lang.Double.double"},"variableMap":{"java.lang.Double.NaN":"radiusInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:107","type":"CtLocalVariableImpl","sourcecode":"double double = 360 / ((com.graphhopper.util.DistanceCalcEarth.double) / double)"},"status":-1},{"failures":[0,1,2,13,3,14,9,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"0bfd5e47-828a-11e5-8609-f355452d4fdf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:69","type":"CtWhileImpl","sourcecode":"while ((!com.graphhopper.routing.AbstractRoutingAlgorithm.(finished())) && (!com.graphhopper.routing.AbstractRoutingAlgorithm.(isWeightLimitExceeded()))) {\n    if ((!(boolean)) && (!(boolean))) {\n        if (com.graphhopper.routing.AbstractBidirAlgo.(getCurrentFromWeight()) < com.graphhopper.routing.AbstractBidirAlgo.(getCurrentToWeight()))\n            boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n        else\n            boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n        \n    } else if (!(boolean)) {\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom());\n    } else {\n        boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesTo());\n    }\n}"},"status":-1},{"failures":[],"tindex":"0bfd5e48-828a-11e5-8609-3be371f7390b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:151","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    java.util.List<java.nio.ByteBuffer>.add(com.graphhopper.storage.MMapDataAccess.newByteBuffer(long, long));\n    long += long;\n}"},"status":-2},{"failures":[],"tindex":"0bfd8559-828a-11e5-8609-2fe8bdb8eb26","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.PillarInfo:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"variableMap":{"intVal":"N_LAT"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:78","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (com.graphhopper.storage.BaseGraph.int)) + (com.graphhopper.storage.BaseGraph.int))))"},"status":-2},{"failures":[54],"tindex":"0bfd855a-828a-11e5-8609-d778285a5023","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:220","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\");\n"},"status":-1},{"failures":[55,56,0,1,2,13,3,14,57,9,15,16,17,18,19,58,20,21,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,6,103,7,104,105,40,44,45,48,53,106,107,108,10,109,110,111,112,113,114,115,116,117,118,119],"tindex":"0bfd855b-828a-11e5-8609-b55a8492754b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:97","type":"CtIfImpl","sourcecode":"if (double < (double)) {\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"0bfd855c-828a-11e5-8609-5d37436011b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseArray:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"mGarbage":"a"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":0},{"failures":[],"tindex":"0bfd855d-828a-11e5-8609-5bf545a4d762","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:239","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-2},{"failures":[],"tindex":"0bfd855e-828a-11e5-8609-8173c02cf877","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"java.lang.Double.POSITIVE_INFINITY","angle":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:104","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[120],"tindex":"0bfdac6f-828a-11e5-8609-fd4b6985106d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:57","type":"CtOperatorAssignmentImpl","sourcecode":"long += (java.lang.System.nanoTime()) - (long)"},"variableMap":{"lastTime":"bytePointer","nanoTime":"bytePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:59","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.combineIntsToLong(com.graphhopper.storage.DataAccess.getHeader(0), com.graphhopper.storage.DataAccess.getHeader(4))"},"status":-1},{"failures":[],"tindex":"0bfdac70-828a-11e5-8609-47b5fcbc6b99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:364","type":"CtInvocationImpl","sourcecode":"org.slf4j.Logger.info((((((((((((((((((((((((\"took:\" + ((int)(com.graphhopper.util.StopWatch.stop().getSeconds()))) + \", new shortcuts: \") + (com.graphhopper.util.Helper.nf(int))) + \", \") + (com.graphhopper.routing.ch.PreparationWeighting)) + \", \") + (com.graphhopper.routing.util.FlagEncoder)) + \", dijkstras:\") + (long)) + \", \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getTimesAsString())) + \", meanDegree:\") + ((long)(double))) + \", initSize:\") + int) + \", periodic:\") + (int)) + \", lazy:\") + (int)) + \", neighbor:\") + (int)) + \", \") + (com.graphhopper.util.Helper.getMemInfo())))"},"status":0},{"failures":[121,122,123,124],"tindex":"0bfdac71-828a-11e5-8609-793ce445afed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:79","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(long >> 24))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0bfd3830-828a-11e5-8609-a370ea376427","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"0bfdac70-828a-11e5-8609-47b5fcbc6b99","diffs":[{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.routing.ch.PreparationWeighting_java.lang.String_toString().b"],"com.graphhopper.GraphHopperTest.testFootOnly":["com.graphhopper.routing.ch.PreparationWeighting_java.lang.String_toString().b"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":["com.graphhopper.routing.ch.PreparationWeighting_java.lang.String_toString().b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.stop","com.graphhopper.routing.ch.PrepareContractionHierarchies.getTimesAsString","com.graphhopper.util.StopWatch.getSeconds","com.graphhopper.util.Helper.getMemInfo","com.graphhopper.util.Helper.nf","org.slf4j.Logger.info"]},"type":"staticDiff"}]},{"transformation":"0bfd855c-828a-11e5-8609-5d37436011b4","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testNegativeIds":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2"],"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double).b","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).e1","com.graphhopper.util.DistancePlaneProjection_double_calcNormalizedDist(double).b"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2"],"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).e1","com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double,double,double,double).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2","com.graphhopper.util.DistancePlaneProjection_double_calcNormalizedDist(double).b","com.graphhopper.util.DistancePlaneProjection_double_calcNormalizedDist(double,double,double,double).b"],"com.graphhopper.GraphHopperTest.testFootAndCar":["com.graphhopper.util.DistanceCalcEarth_double_calcNormalizedDist(double).b","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).t1","com.graphhopper.util.DouglasPeucker_void_setApproximation(boolean).e1","com.graphhopper.util.DouglasPeucker_int_simplify(com.graphhopper.util.PointList).l2"]},"type":"branch"}]}]}