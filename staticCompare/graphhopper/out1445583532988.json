{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":63,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":163,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":489,"com.graphhopper.GraphHopperAPITest.testNoLoad":195,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":260,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":312,"com.graphhopper.reader.OSMReaderTest.testFerry":16,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":31,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":208,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":103,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":140,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":90,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":139,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":414,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":480,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":199,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":392,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":308,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":465,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":332,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":368,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":442,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":234,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":473,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":344,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":375,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":461,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":54,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":457,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":283,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":147,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":196,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":484,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":138,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":46,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":51,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":367,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":268,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":510,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":439,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":104,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":502,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":476,"com.graphhopper.GraphHopperTest.testLoadOSM":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":276,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":297,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":211,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":269,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":154,"com.graphhopper.reader.OSMReaderTest.testSort":19,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":482,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":229,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":398,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":387,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":350,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":345,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":494,"com.graphhopper.routing.DijkstraTest.initializationError":41,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":449,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":501,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":435,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":243,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":364,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":396,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":391,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":226,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":409,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":404,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":132,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":309,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":250,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":372,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":59,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":157,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":8,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":418,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":499,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":407,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":424,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":401,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":377,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":209,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":69,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":415,"com.graphhopper.GraphHopperAPITest.testLoad":193,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":159,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":369,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":359,"com.graphhopper.reader.OSMReaderTest.testBarriers":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":405,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":485,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":230,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":316,"com.graphhopper.util.GHUtilityTest.testCopy":452,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":127,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":148,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":262,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":143,"com.graphhopper.routing.PathTest.testFindInstruction":508,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":406,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":77,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":259,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":388,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":373,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":433,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":450,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":419,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":467,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":88,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":317,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":355,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":472,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":238,"com.graphhopper.util.InstructionListTest.testWayList2":459,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":340,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":277,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":410,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":214,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":99,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":438,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":227,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":351,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":416,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":284,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":358,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":21,"com.graphhopper.routing.AStarTest.initializationError":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":413,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":239,"com.graphhopper.routing.PathBidirRefTest.testExtract":35,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":169,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":107,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":448,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":272,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":443,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":441,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":447,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":306,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":446,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":338,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":445,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":97,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":444,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":282,"com.graphhopper.util.GHUtilityTest.testSort2":451,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":60,"com.graphhopper.reader.OSMReaderTest.testMain":18,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":178,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":246,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":423,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":241,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":240,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":177,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":342,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":400,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":477,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":428,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":75,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":213,"com.graphhopper.storage.GraphHopperStorageTest.testClone":361,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":341,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":236,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":183,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":371,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":318,"com.graphhopper.routing.PathTest.testTime":504,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":220,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":191,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":288,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":279,"com.graphhopper.reader.OSMReaderTest.testRelation":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":331,"com.graphhopper.util.GHUtilityTest.testSortDirected":454,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":225,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":491,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":299,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":136,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":180,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":285,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":505,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":47,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":462,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":215,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":327,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":498,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":271,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":192,"com.graphhopper.routing.QueryGraphTest.testOneWay":497,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":280,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":233,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":292,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":267,"com.graphhopper.reader.OSMReaderTest.testWithBounds":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":324,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":437,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":479,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":492,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":170,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":333,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":294,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":89,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":149,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":427,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":181,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":420,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":357,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":495,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":45,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":390,"com.graphhopper.util.InstructionListTest.testWayList":458,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":95,"com.graphhopper.GraphHopperAPITest.testDisconnected179":194,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":223,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":319,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":429,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":265,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":481,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":86,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":483,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":217,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":330,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":347,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":4,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":363,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":430,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":436,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":432,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":431,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":160,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":474,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":96,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":381,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":380,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":57,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":40,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":470,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":302,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":172,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":303,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":402,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":67,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":356,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":116,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":349,"com.graphhopper.routing.PathTest.testWayList":507,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":323,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":266,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":488,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":426,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":197,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":111,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":374,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":201,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":411,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":74,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":121,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":509,"com.graphhopper.util.GHUtilityTest.testSort":453,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":273,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":336,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":496,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":247,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":110,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":141,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":360,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":403,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":440,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":261,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":289,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":253,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":244,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":493,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":71,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":251,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":397,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":399,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":119,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":158,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":6,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":421,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":478,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":205,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":337,"com.graphhopper.routing.PathTest.testFound":503,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":155,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":290,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":150,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":42,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":417,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":322,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":366,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":53,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":58,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":190,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":175,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":173,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":219,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":242,"com.graphhopper.reader.PrinctonReaderTest.testRead":14,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":389,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":221,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":412,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":425,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":216,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":486,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":84,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":145,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":422,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":133,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":125,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":76,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":102,"com.graphhopper.reader.OSMReaderTest.testFoot":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":335,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":500,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":274,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":134,"com.graphhopper.reader.OSMReaderTest.testOneWay":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":248,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":275,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":370,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":218,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":385,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":384,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":434,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":144,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":379,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":471,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":329,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":365,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":506,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":466,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":304,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":105,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":463,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":475,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":254,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":464,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":455,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":162,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":137,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":354,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":325,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":245,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":490,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":353,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":202,"com.graphhopper.routing.PathBidirRefTest.testExtract2":36,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":287,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":298,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":129,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":264,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":278,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":310,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":383,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":255,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":231,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":23,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":291,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":348,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":64,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":256,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":469,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":198,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":153,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":249,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":386,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":187,"com.graphhopper.GraphHopperTest.testFootAndCar":5,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":378,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":207,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":122,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":152,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":315,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":188,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":189,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":468,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":235,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":408,"com.graphhopper.GraphHopperTest.testPrepareOnly":0,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":263,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":115,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":487,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":55,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":26,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":305,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":203,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":382,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":460,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":165,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":301,"com.graphhopper.routing.AStarBidirectionTest.initializationError":37,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":328,"com.graphhopper.util.InstructionListTest.testFind":456,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":395},"transformations":[{"failures":[],"tindex":"8549f052-7953-11e5-b720-a511dec8197a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:84","type":"CtIfImpl","sourcecode":"if ((double == 0) && (int == int))\n    return double + (double);\n"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441],"tindex":"854a1763-7953-11e5-b720-33810d29f022","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:126","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.util.PMap com.graphhopper.util.PMap = new com.graphhopper.util.PMap(java.lang.String);\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    if (com.graphhopper.util.PMap.has(\"version\")) {\n        if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n            throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n        } \n    } \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-1},{"failures":[442,0,443,444,445,446,447,448,1,2,3,4,5,6,7,9,10,11,12,449,14,15,16,17,18,19,20,21,22,23,24,26,27,28,29,30,450,451,452,453,454,455,31,32,33,34,456,457,458,459,460,35,36,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,162,477,478,479,480,481,482,483,484,485,486,192,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,193,194,196,199,200,201,202,203,204,205,206,207,211,213,214,215,216,217,218,219,220,221,222,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,281,282,284,285,286,287,289,290,291,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,311,312,313,314,315,316,317,318,319,320,322,323,324,325,326,327,328,329,330,331,332,333,334,335,337,338,339,340,341,342,343,344,345,346,347,348,349,350,352,355,357,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,376,377,378,379,380,381,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,399,402,404,405,406,407,408,409,410,411,412,413,415,416,417,418,419,420,421,422,423,424,425,426,427,428,430,431,432,433,434,435,436,437,438,439,440,441],"tindex":"854a3e74-7953-11e5-b720-b748a4adb5ad","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:232","type":"CtReturnImpl","sourcecode":"return (java.lang.Runtime.getRuntime().totalMemory()) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:202","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"854a6585-7953-11e5-b720-d97533649954","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:249","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.MotorcycleFlagEncoder.setLowSpeed(long, double, true)"},"variableMap":{"flags":"flags","this":"this","speed":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:147","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, double)"},"status":-2},{"failures":[],"tindex":"854a6586-7953-11e5-b720-5f7094497e38","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:648","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.cleanUp()"},"status":-2},{"failures":[],"tindex":"854a6587-7953-11e5-b720-a52a65429238","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:95","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[6]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:835","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[((int * int) * 4) + 4]"},"status":-2},{"failures":[],"tindex":"854a6588-7953-11e5-b720-efe41117f8dd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:63","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-2},{"failures":[],"tindex":"854a6589-7953-11e5-b720-7d8d4c899ddd","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:531","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"variableMap":{"id":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:187","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"854a658a-7953-11e5-b720-5d6704cbc143","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"variableMap":{"oldPriorities":"arr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:99","type":"CtAssignmentImpl","sourcecode":"int[] = java.util.Arrays.copyOf(int[], ((int)((int[].int) * (float))))"},"status":-2},{"failures":[],"tindex":"854a8c9b-7953-11e5-b720-6bd8becfd22a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:317","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"854a8c9c-7953-11e5-b720-531834e8162d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1162","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndex.close()"},"status":-2},{"failures":[],"tindex":"854a8c9d-7953-11e5-b720-75d84786bfd0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"variableMap":{"parent":"edgeTo","ase":"currTo","currEdge":"currTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:163","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge"},"status":-2},{"failures":[],"tindex":"854a8c9e-7953-11e5-b720-9b0f5120510c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:415","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\":rural\")) || (java.lang.String.endsWith(\":trunk\")))\n    return 80;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:130","type":"CtReturnImpl","sourcecode":"return java.lang.Double.parseDouble(java.lang.String)"},"status":-2},{"failures":[],"tindex":"854a8c9f-7953-11e5-b720-fb68fe89f573","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AbstractBidirAlgo:64","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.extractPath()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:102","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath()"},"status":-2},{"failures":[],"tindex":"854a8ca0-7953-11e5-b720-cf4f02c589d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:236","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.putByte((((long) + long) + int), byte[][int]);\n}"},"status":-2},{"failures":[],"tindex":"854a8ca1-7953-11e5-b720-bf6bdc62ba65","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"variableMap":{"length":"minElem","factor":"minElem"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:134","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"854ab3b2-7953-11e5-b720-c9f86fd47f43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:308","type":"CtAssignmentImpl","sourcecode":"long = long | com.graphhopper.routing.util.AbstractFlagEncoder.(handleFerryTags(com.graphhopper.reader.OSMWay, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int, com.graphhopper.routing.util.FootFlagEncoder.int))"},"status":-2},{"failures":[],"tindex":"854ab3b3-7953-11e5-b720-818a458ca51d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"variableMap":{"latSize":"edgeCount","size":"edgeCount","lonSize":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:213","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((1 * 4))"},"status":-2},{"failures":[],"tindex":"854ab3b4-7953-11e5-b720-f51ac344a1a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-2},{"failures":[],"tindex":"854ab3b5-7953-11e5-b720-bbc278a57b46","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:450","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState : java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(false);\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}