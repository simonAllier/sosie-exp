{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":75,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":53,"com.graphhopper.reader.OSMReaderTest.testFerry":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":15,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":84,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":74,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":8,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":61,"com.graphhopper.coll.CompressedArrayTest.testCompress":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":7,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":83,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":47,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":85,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":100,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":90,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":1,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":24,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":23,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":40,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":66,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":78,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":73,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":21,"com.graphhopper.storage.index.BresenhamLineTest.testRealBresenham":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":93,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEdgeCases":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":43,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":9,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":70,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":33,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":101,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode":86,"com.graphhopper.util.BitUtilLittleTest.testToLastBitString":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":3,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":30,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":12,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":63,"com.graphhopper.util.SimpleIntDequeTest.testPush":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":56,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":42,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":5,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":59,"com.graphhopper.coll.CompressedArrayTest.testCompress2":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":6,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":28,"com.graphhopper.GraphHopperTest.testFootOnly":87,"com.graphhopper.util.BitUtilBigTest.testToLastBitString":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":57,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":20,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":32,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":0,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":50},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"e2763949-82b8-11e5-adab-792c7e9ddb44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:332","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeRefs((long * (int)), long)"},"status":-1},{"failures":[],"tindex":"e276394a-82b8-11e5-adab-37160a3efe80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:112","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.List<java.lang.String>.get(0)"},"status":0},{"failures":[],"tindex":"e276394b-82b8-11e5-adab-5784e043de9c","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"bufferIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:342","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.nio.ByteBuffer.put(byte[], 0, int);\n    java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1));\n    java.nio.ByteBuffer.position(0);\n    java.nio.ByteBuffer.put(byte[], int, int);\n} else {\n    java.nio.ByteBuffer.put(byte[], 0, int);\n}"},"status":0},{"failures":[],"tindex":"e276605c-82b8-11e5-adab-b3a5a760337d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:168","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(90.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.PREFER":"com.graphhopper.routing.util.PriorityCode.UNCHANGED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:475","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(0.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"e276605d-82b8-11e5-adab-9fcfd8af522b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:255","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.setMinResolutionInMeter(int)"},"status":-1},{"failures":[52],"tindex":"e276605e-82b8-11e5-adab-a1e912617a69","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"id","hash":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"status":-1},{"failures":[],"tindex":"e276605f-82b8-11e5-adab-81988c9c606d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:79","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    com.graphhopper.storage.VLongStorage[][((int) - 1)].trimToSize();\n} "},"status":0},{"failures":[53],"tindex":"e2766060-82b8-11e5-adab-0d3d8f4dfbbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:247","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<gh:direction>\")"},"variableMap":{"output":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:279","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"status":-1},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"e2768771-82b8-11e5-adab-1382b5311dbf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:114","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = com.graphhopper.storage.DataAccess.getInt(((long + (int)) + 4));\n    long = com.graphhopper.util.BitUtil.combineIntsToLong(int, int);\n} "},"status":-1},{"failures":[72],"tindex":"e2768772-82b8-11e5-adab-5f5b3ed240d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:198","type":"CtLocalVariableImpl","sourcecode":"int int = int[][0]"},"variableMap":{"entries":"arr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:76","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((int[].int) / (float)))"},"status":-1},{"failures":[],"tindex":"e2768773-82b8-11e5-adab-e18d4e9318a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:83","type":"CtAssignmentImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge> = new java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>((int / 10))"},"status":-1},{"failures":[73,74,75,76,77,78],"tindex":"e2768774-82b8-11e5-adab-af5d63805064","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:74","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry);\n    if ((com.graphhopper.storage.EdgeEntry) != null) {\n        gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>;\n        com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, int, com.graphhopper.storage.EdgeEntry.int), com.graphhopper.storage.EdgeEntry, int);\n    } \n} else {\n    if (((com.graphhopper.storage.EdgeEntry) != null) && ((com.graphhopper.storage.EdgeEntry.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e2768775-82b8-11e5-adab-cbb9999817a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:60","type":"CtAssignmentImpl","sourcecode":"float = 2"},"variableMap":{"factor":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:68","type":"CtAssignmentImpl","sourcecode":"float = 1.7F"},"status":0},{"failures":[79,80,81,82,83,84,85,86],"tindex":"e2768776-82b8-11e5-adab-ff15a196ee65","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:224","type":"CtLocalVariableImpl","sourcecode":"long long = (1L << int) - 1"},"variableMap":{"shift":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:204","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << (int - 1)"},"status":-1},{"failures":[],"tindex":"e276ae87-82b8-11e5-adab-cfd9e4f64825","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:191","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.DAType.isStoring()"},"status":-2},{"failures":[87,73,88,89,90,91,92,93,94,69,70,78,95],"tindex":"e276ae88-82b8-11e5-adab-67055c3dedee","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"tmpEdge","edgeId":"endNode","com.graphhopper.storage.EdgeAccess.NO_NODE":"endNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:46","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.Path4CH.expandEdge(((com.graphhopper.util.CHEdgeIteratorState)(com.graphhopper.storage.Graph.getEdgeIteratorState(int, int))), false)"},"status":-1},{"failures":[96,97,98,28,31,99,33,40,43,100,45,82,83,84,101,85,102,86],"tindex":"e276ae89-82b8-11e5-adab-dbdb9fa0a72b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"variableMap":{"flags":"hash","nodeFlags":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"status":-1},{"failures":[],"tindex":"e276ae8a-82b8-11e5-adab-9d849717be1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:323","type":"CtIfImpl","sourcecode":"if (int < (int))\n    return ;\n"},"variableMap":{"nodeIndex":"newSize","nodeCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:105","type":"CtIfImpl","sourcecode":"if (int <= (double[].int))\n    return ;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":18,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"e276605f-82b8-11e5-adab-81988c9c606d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.VLongStorage.trimToSize"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}