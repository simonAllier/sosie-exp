{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":37,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":349,"com.graphhopper.reader.OSMReaderTest.testFerry":323,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":301,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":194,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":311,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":396,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":397,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":370,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":99,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":185,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":368,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":252,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":216,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":218,"com.graphhopper.GraphHopperTest.testPrepare":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":379,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":43,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":259,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":28,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":147,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":386,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":288,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":182,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":384,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":281,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":25,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":162,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":70,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":329,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":124,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":400,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":62,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":58,"com.graphhopper.GraphHopperTest.testLoadOSM":317,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":134,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":284,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":163,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":196,"com.graphhopper.reader.OSMReaderTest.testSort":326,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":76,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":213,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":271,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":236,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":380,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":9,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":322,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":227,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":342,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":210,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":393,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":89,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":408,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":145,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":234,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":33,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":394,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":357,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":22,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":109,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":195,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":100,"com.graphhopper.GraphHopperAPITest.testLoad":340,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":253,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":243,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":90,"com.graphhopper.reader.OSMReaderTest.testBarriers":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":24,"com.graphhopper.util.GHUtilityTest.testCopy":297,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":353,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":347,"com.graphhopper.routing.PathTest.testFindInstruction":68,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":385,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":91,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":177,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":272,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":257,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":118,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":295,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":49,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":190,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":54,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":240,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":354,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":221,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":222,"com.graphhopper.util.InstructionListTest.testWayList2":293,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":137,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":375,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":171,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":95,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":399,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":198,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":123,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":398,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":211,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":237,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":362,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":101,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":148,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":242,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":328,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":223,"com.graphhopper.routing.PathBidirRefTest.testExtract":59,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":310,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":166,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":305,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":192,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":374,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":126,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":309,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":143,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":308,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":307,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":373,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":306,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":175,"com.graphhopper.util.GHUtilityTest.testSort2":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":34,"com.graphhopper.reader.OSMReaderTest.testMain":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":401,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":225,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":377,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":212,"com.graphhopper.routing.util.EncodedValueTest.testSetValue":389,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":395,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":113,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":283,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":197,"com.graphhopper.storage.GraphHopperStorageTest.testClone":245,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":278,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":376,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":220,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":255,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":355,"com.graphhopper.routing.PathTest.testTime":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":204,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":344,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":173,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":367,"com.graphhopper.reader.OSMReaderTest.testRelation":409,"com.graphhopper.util.GHUtilityTest.testSortDirected":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":209,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":6,"com.graphhopper.GraphHopperTest.testFootOnly":320,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":136,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":149,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":65,"com.graphhopper.routing.util.EncodingManagerTest.testCombineRelations":391,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":44,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":363,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":13,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":165,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":1,"com.graphhopper.routing.QueryGraphTest.testOneWay":12,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":346,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":217,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":161,"com.graphhopper.reader.OSMReaderTest.testWithBounds":335,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":360,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":369,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":390,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":131,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":387,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":112,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":158,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":378,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":105,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":241,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":19,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":274,"com.graphhopper.util.InstructionListTest.testWayList":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":207,"com.graphhopper.GraphHopperAPITest.testDisconnected179":341,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":356,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":159,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":351,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":339,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":201,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":366,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":382,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":314,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":247,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":150,"com.graphhopper.routing.util.EncodedValueTest.testSwap":388,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":117,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":56,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":265,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":264,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":31,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":140,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":402,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":41,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":282,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":403,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":235,"com.graphhopper.routing.PathTest.testWayList":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":381,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":406,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":144,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":359,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":42,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":133,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":183,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":258,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":187,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":96,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":246,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":69,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":404,"com.graphhopper.util.GHUtilityTest.testSort":298,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":372,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":125,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":244,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":179,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":152,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":186,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":286,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":228,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":82,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":84,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":86,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":316,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":106,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":191,"com.graphhopper.routing.PathTest.testFound":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":280,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":321,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":16,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":287,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":102,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":279,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":250,"com.graphhopper.util.InstructionListTest.testEmptyList":290,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":32,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":226,"com.graphhopper.reader.PrinctonReaderTest.testRead":338,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":348,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":107,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":392,"com.graphhopper.reader.OSMReaderTest.testFoot":324,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":371,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":168,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":232,"com.graphhopper.reader.OSMReaderTest.testOneWay":337,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":202,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":269,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":268,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":53,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":263,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":365,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":45,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":46,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":156,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":300,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":361,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":229,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":188,"com.graphhopper.routing.PathBidirRefTest.testExtract2":60,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":285,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":135,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":172,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":181,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":407,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":146,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":267,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":215,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":128,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":330,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":383,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":38,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":157,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":184,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":164,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":233,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":270,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":262,"com.graphhopper.GraphHopperTest.testFootAndCar":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":193,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":405,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":50,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":93,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":219,"com.graphhopper.GraphHopperTest.testPrepareOnly":304,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":180,"com.graphhopper.GraphHopperTest.testVia":312,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":29,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":333,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":332,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":189,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":266,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":294,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":138,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":364,"com.graphhopper.util.InstructionListTest.testFind":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":83},"transformations":[{"failures":[0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341],"tindex":"0e240e90-791b-11e5-8ff5-9b0d639f5881","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:46","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.Helper.idealIntArraySize(int)"},"variableMap":{"cap":"segmentSizeInBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,342,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,343,145,146,148,149,150,151,344,152,153,154,155,156,345,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,346,174,175,176,177,178,179,347,180,181,182,183,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,238,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,348,349,350,351,352,353,354,355,356,357,358,279,359,360,361,362,363,364,365,366,367,368,369,370,371,372,280,373,374,375,376,377,378,379,380,381,382,383,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,333,334,335,336,337,338,339,340,341],"tindex":"0e245cb1-791b-11e5-8ff5-0be2bf9ff54b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"initialized"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:273","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409],"tindex":"0e245cb2-791b-11e5-8ff5-1786011e7e45","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:177","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 1"},"variableMap":{"hash":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:94","type":"CtOperatorAssignmentImpl","sourcecode":"long &= long"},"status":-1},{"failures":[],"tindex":"0e245cb3-791b-11e5-8ff5-f10ec390b137","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:53","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int)"},"status":-2},{"failures":[],"tindex":"0e245cb4-791b-11e5-8ff5-ff9e04bc468c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:106","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.GraphHopperStorage = com.graphhopper.storage.GraphHopperStorage"},"variableMap":{"ghStorage":"this","g":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.this(java.util.Collections.<com.graphhopper.routing.util.Weighting>emptyList(), com.graphhopper.storage.Directory, com.graphhopper.routing.util.EncodingManager, boolean, com.graphhopper.storage.GraphExtension)"},"status":-2},{"failures":[],"tindex":"0e2483c5-791b-11e5-8ff5-0174653b413c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:463","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close()"},"variableMap":{"this":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:68","type":"CtTryImpl","sourcecode":"try {\n    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n    com.graphhopper.util.Helper.saveProperties(java.util.Map<java.lang.String, java.lang.String>, java.io.StringWriter);\n    byte[] byte[] = java.io.StringWriter.toString().getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset);\n    com.graphhopper.storage.DataAccess.setBytes(0, byte[], byte[].int);\n    com.graphhopper.storage.DataAccess.flush();\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"0e2483c6-791b-11e5-8ff5-91b0eca268bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:141","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"roundaboutExit\", com.graphhopper.util.RoundaboutInstruction.getExitNumber()) : com.graphhopper.util.Translation.tr(\"roundaboutExitOnto\", com.graphhopper.util.RoundaboutInstruction.getExitNumber(), java.lang.String)"},"status":-2},{"failures":[],"tindex":"0e2483c7-791b-11e5-8ff5-bb0bd57a4aaa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:181","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, com.graphhopper.routing.util.TIntList, int)"},"status":-2},{"failures":[],"tindex":"0e2483c8-791b-11e5-8ff5-7b9b6aa2e755","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:59","type":"CtIfImpl","sourcecode":"if ((int) != int) {\n    int = 2;\n} "},"variableMap":{"clockwise2":"entriesPerSegment","clockwise":"approxBytesPerEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:80","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.VLongStorage) == null)\n    com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(((int) * (int)));\n"},"status":-2},{"failures":[],"tindex":"0e2483c9-791b-11e5-8ff5-4f9b0d4bd327","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:319","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"lazySW":"periodSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:304","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch()"},"status":-2},{"failures":[],"tindex":"0e2483ca-791b-11e5-8ff5-4ba530f9a81c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:303","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphStorage.getDirectory()"},"status":-2},{"failures":[],"tindex":"0e2483cb-791b-11e5-8ff5-9dac61caa495","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.close()"},"status":-2},{"failures":[],"tindex":"0e2483cc-791b-11e5-8ff5-f5dbea8ee40e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:321","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int[][int] = -1;\n}"},"variableMap":{"values":"header","n":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:105","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    java.io.RandomAccessFile.writeInt(int[][int]);\n}"},"status":-2},{"failures":[],"tindex":"0e24aadd-791b-11e5-8ff5-d1b2d35745be","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:60","type":"CtReturnImpl","sourcecode":"return double / (double)"},"status":-2},{"failures":[],"tindex":"0e24aade-791b-11e5-8ff5-f1501c59cc5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:64","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= long"},"variableMap":{"shift":"flags","tmpValue":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"status":-2},{"failures":[],"tindex":"0e24aadf-791b-11e5-8ff5-3769c010601e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"numOfWorkers"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:987","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"0e24aae0-791b-11e5-8ff5-37cf93cc5fea","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedValue:95","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= long"},"variableMap":{"shift":"capacity","flags":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:416","type":"CtAssignmentImpl","sourcecode":"long = int"},"status":-2},{"failures":[],"tindex":"0e24aae1-791b-11e5-8ff5-7dd21aa2ebc7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:266","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.IntDoubleBinHeap.trimTo(0)"},"status":-2},{"failures":[],"tindex":"0e24aae2-791b-11e5-8ff5-9f2218e23d5e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"x"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:81","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.PointEmitter.set(int, int)"},"status":-2},{"failures":[],"tindex":"0e24aae3-791b-11e5-8ff5-1f3c55ab6ffe","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:396","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.flush()"},"variableMap":{"index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:148","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.MMapDataAccess)\n    com.graphhopper.storage.MMapDataAccess = ((com.graphhopper.storage.MMapDataAccess)(com.graphhopper.storage.DataAccess));\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}