{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":212,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":256,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":263,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":108,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":118,"com.graphhopper.reader.OSMReaderTest.testFerry":0,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":27,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":28,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":253,"com.graphhopper.routing.QueryGraphTest.testOneWay":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":104,"com.graphhopper.reader.OSMReaderTest.testWithBounds":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":126,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":244,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":245,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":143,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":222,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":133,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":165,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":139,"com.graphhopper.GraphHopperTest.testPrepare":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":211,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":31,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":218,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":260,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":194,"com.graphhopper.util.InstructionListTest.testWayList":18,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":203,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":23,"com.graphhopper.GraphHopperAPITest.testDisconnected179":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":142,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":248,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":124,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":195,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":200,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":105,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":238,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":153,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":131,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":140,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":183,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":37,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":80,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":78,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":77,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":233,"com.graphhopper.GraphHopperTest.testLoadOSM":186,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":111,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":231,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":92,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":48,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":106,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":148,"com.graphhopper.reader.OSMReaderTest.testSort":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":206,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":9,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":246,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":160,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":96,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":216,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":259,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":100,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":193,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":201,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":255,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":158,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":58,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":173,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":208,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":237,"com.graphhopper.util.GHUtilityTest.testSort":25,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":109,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":261,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":197,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":73,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":144,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":170,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":258,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":241,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":188,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":46,"com.graphhopper.GraphHopperAPITest.testLoad":14,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":215,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":39,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":243,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":33,"com.graphhopper.reader.OSMReaderTest.testBarriers":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":249,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":161,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":190,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":191,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":202,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":52,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":207,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":210,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":68,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":224,"com.graphhopper.reader.PrinctonReaderTest.testRead":12,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":156,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":146,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":229,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":166,"com.graphhopper.util.InstructionListTest.testWayList2":19,"com.graphhopper.reader.OSMReaderTest.testFoot":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":134,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":264,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":54,"com.graphhopper.reader.OSMReaderTest.testOneWay":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":150,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":40,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":240,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":154,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":127,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":66,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":228,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":83,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":32,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":130,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":5,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":223,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":167,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":220,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":232,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":221,"com.graphhopper.routing.PathBidirRefTest.testExtract":250,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":180,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":239,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":82,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":99,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":136,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":177,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":176,"com.graphhopper.util.GHUtilityTest.testSort2":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":209,"com.graphhopper.reader.OSMReaderTest.testMain":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":169,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":145,"com.graphhopper.routing.PathBidirRefTest.testExtract2":251,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":168,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":138,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":192,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":93,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":242,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":102,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":162,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":88,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":213,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":226,"com.graphhopper.storage.GraphHopperStorageTest.testClone":35,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":172,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":47,"com.graphhopper.GraphHopperTest.testFootAndCar":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":225,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":132,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":205,"com.graphhopper.util.GHUtilityTest.testSortDirected":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":157,"com.graphhopper.GraphHopperTest.testPrepareOnly":175,"com.graphhopper.GraphHopperTest.testVia":181,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":254,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":204,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":98,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":89,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":257,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":20,"com.graphhopper.GraphHopperTest.testFootOnly":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":94,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":129,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":235,"com.graphhopper.util.InstructionListTest.testFind":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":56,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":151},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264],"tindex":"4d9c7903-7946-11e5-a383-3178505411c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"E_LINKA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[],"tindex":"4d9ca014-7946-11e5-a383-73a2f8378284","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"originalTraversalKey"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:60","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"4d9ca015-7946-11e5-a383-1bf32ca98c6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:119","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String))"},"variableMap":{"versionHint":"method"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:65","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(((((\"You cannot call \" + java.lang.String) + \" if response contains errors. Check this with ghResponse.hasErrors(). \") + \"Errors are: \") + com.graphhopper.GHResponse.(getErrors())))"},"status":0},{"failures":[],"tindex":"4d9ca016-7946-11e5-a383-75d8fa4d39e9","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PathMerger:132","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.DouglasPeucker = com.graphhopper.util.DouglasPeucker"},"variableMap":{"douglasPeucker":"simplifyAlgo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:981","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.setMaxDistance(double)"},"status":-2},{"failures":[],"tindex":"4d9ca017-7946-11e5-a383-adb259729166","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:204","type":"CtLocalVariableImpl","sourcecode":"long long = 1L << (int - 1)"},"status":-2},{"failures":[],"tindex":"4d9ca018-7946-11e5-a383-a722def37a89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:48","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"4d9ca019-7946-11e5-a383-678b9a4b86e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:153","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.MMapDataAccess != null)\n    com.graphhopper.util.Helper.cleanHack();\n"},"variableMap":{"mmapDA":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:133","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"status":-2},{"failures":[],"tindex":"4d9ca01a-7946-11e5-a383-3be6cb3af960","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:154","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"4d9ca01b-7946-11e5-a383-61462ee667f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:789","type":"CtAssignmentImpl","sourcecode":"double = 1.0E-4"},"variableMap":{"towerNodeDistance":"maxDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:150","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"4d9cc72c-7946-11e5-a383-1348f04949a9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:227","type":"CtOperatorAssignmentImpl","sourcecode":"double /= 2"},"variableMap":{"midLat":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:247","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.GHPoint.double = double"},"status":-2},{"failures":[],"tindex":"4d9cc72d-7946-11e5-a383-3145e72e3425","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:108","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:156","type":"CtIfImpl","sourcecode":"if (double >= 16) {\n    int = 16;\n} else if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"4d9cc72e-7946-11e5-a383-e178b7a706f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:151","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-2},{"failures":[],"tindex":"4d9cc72f-7946-11e5-a383-b7d749bef926","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:159","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + int"},"status":-2},{"failures":[],"tindex":"4d9cc730-7946-11e5-a383-bda1b2f1c5af","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:118","type":"CtIfImpl","sourcecode":"if (!(\"GH\".equals(java.lang.String)))\n    throw new java.lang.IllegalArgumentException((\"Not a GraphHopper file! Expected \\'GH\\' as file marker but was \" + java.lang.String));\n"},"variableMap":{"versionHint":"entry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:165","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PMap.has(\"version\")) {\n    if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n        throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n    } \n} "},"status":-2},{"failures":[],"tindex":"4d9cc731-7946-11e5-a383-87182a1a1bf1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:606","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.dem.ElevationProvider.getEle(com.graphhopper.reader.OSMNode.getLat(), com.graphhopper.reader.OSMNode.getLon())"},"status":-2},{"failures":[],"tindex":"4d9cc732-7946-11e5-a383-b36a21873672","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:420","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureNotLoaded()"},"status":-2},{"failures":[],"tindex":"4d9cee43-7946-11e5-a383-b70167b65424","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:711","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[],"tindex":"4d9cee44-7946-11e5-a383-3bc798a62413","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"mainNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:697","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.routing.VirtualEdgeIterator.next()) {\n    com.graphhopper.util.EdgeIteratorState com.graphhopper.util.EdgeIteratorState = java.util.List<com.graphhopper.storage.index.QueryResult>.get(((com.graphhopper.routing.VirtualEdgeIterator.getAdjNode()) - (int))).getClosestEdge();\n    com.graphhopper.util.TIntArrayList.add(com.graphhopper.util.EdgeIteratorState.getEdge());\n}"},"status":-2},{"failures":[],"tindex":"4d9cee45-7946-11e5-a383-f9f1a8e1bc34","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.LevelEdgeFilter:43","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIteratorState.getBaseNode()"},"status":-2},{"failures":[],"tindex":"4d9cee46-7946-11e5-a383-6174fd106efb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"mSize","segmentSizePower":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}