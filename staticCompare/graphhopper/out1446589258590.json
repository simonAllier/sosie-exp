{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":94,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":85,"com.graphhopper.reader.OSMReaderTest.testFerry":205,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":222,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":223,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":20,"com.graphhopper.routing.QueryGraphTest.testOneWay":25,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":240,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":141,"com.graphhopper.reader.OSMReaderTest.testWithBounds":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":2,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":22,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":148,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":14,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":233,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":62,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":169,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":102,"com.graphhopper.GraphHopperTest.testPrepare":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":190,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":46,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":51,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":31,"com.graphhopper.util.InstructionListTest.testWayList":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":39,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":225,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":7,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":90,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":247,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":32,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":142,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":72,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":203,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":82,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":211,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":159,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":103,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":243,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":113,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":199,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":196,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":13,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":64,"com.graphhopper.GraphHopperTest.testLoadOSM":246,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":122,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":154,"com.graphhopper.reader.OSMReaderTest.testSort":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":81,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":166,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":59,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":179,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":49,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":204,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":92,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":163,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":50,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":8,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":184,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":119,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":180,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":112,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":177,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":117,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":43,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":253,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":71,"com.graphhopper.util.GHUtilityTest.testSort":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":91,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":34,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":27,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":200,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":149,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":174,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":75,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":248,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":18,"com.graphhopper.GraphHopperAPITest.testLoad":232,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":245,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":191,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":116,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":77,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":181,"com.graphhopper.reader.OSMReaderTest.testBarriers":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":167,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":88,"com.graphhopper.util.GHUtilityTest.testCopy":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":10,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":12,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":38,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":126,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":173,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":189,"com.graphhopper.reader.PrinctonReaderTest.testRead":202,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":152,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":89,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":158,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":170,"com.graphhopper.util.InstructionListTest.testWayList2":227,"com.graphhopper.reader.OSMReaderTest.testFoot":206,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":100,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":97,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":128,"com.graphhopper.reader.OSMReaderTest.testOneWay":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":156,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":74,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":160,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":188,"com.graphhopper.coll.SparseLongLongArrayTest.testBinarySearch":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":96,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":108,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":114,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":210,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":70,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":187,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":53,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":54,"com.graphhopper.routing.PathBidirRefTest.testExtract":65,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":221,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":201,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":16,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":3,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":237,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":146,"com.graphhopper.util.GHUtilityTest.testSort2":229,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":44,"com.graphhopper.reader.OSMReaderTest.testMain":207,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":150,"com.graphhopper.routing.PathBidirRefTest.testExtract2":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":101,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":76,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":138,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":132,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":194,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":155,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":58,"com.graphhopper.storage.GraphHopperStorageTest.testClone":111,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":129,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":176,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":121,"com.graphhopper.GraphHopperTest.testFootAndCar":244,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":252,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":87,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":133,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":164,"com.graphhopper.GraphHopperTest.testPrepareOnly":234,"com.graphhopper.GraphHopperTest.testVia":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":40,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":214,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":151,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":228,"com.graphhopper.GraphHopperTest.testFootOnly":249,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":135,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":213,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":136,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":95,"com.graphhopper.util.InstructionListTest.testFind":224,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":33,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":178},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"287555ca-8279-11e5-82cb-b3d16e9c6759","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:590","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) << 2"},"variableMap":{"intIndex":"nodeEntryBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:620","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (int)"},"status":-1},{"failures":[14],"tindex":"28757cdb-8279-11e5-82cb-076d01db7b5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:80","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[15,16,17],"tindex":"28757cdc-8279-11e5-82cb-0d908db6e9dd","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:93","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"variableMap":{"node":"node","iter":"iter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:106","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"status":-1},{"failures":[18],"tindex":"28757cdd-8279-11e5-82cb-03609f70d9c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:113","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.reader.dem.HeightTile.includePoint((int + 2), java.util.concurrent.atomic.AtomicInteger)"},"status":-1},{"failures":[],"tindex":"2875a3ee-8279-11e5-82cb-fb237f627b03","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:146","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"neighborUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"neighborUpdates":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:143","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n    com.graphhopper.routing.AStar.AStarEdge.double += com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(com.graphhopper.routing.AStar.AStarEdge.int, false);\n    com.graphhopper.routing.AStar.AStarEdge.double += com.graphhopper.routing.util.ConsistentWeightApproximator.approximate(com.graphhopper.routing.AStar.AStarEdge.int, true);\n} "},"status":-2},{"failures":[],"tindex":"2875a3ef-8279-11e5-82cb-f7cd3c0feb8a","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:423","type":"CtReturnImpl","sourcecode":"return java.lang.String.replaceAll(\";[ ]*\", \", \")"},"variableMap":{"str":"trackName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:176","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.InstructionList.createGPX(java.lang.String, long, boolean)"},"status":-2},{"failures":[],"tindex":"2875a3f0-8279-11e5-82cb-214b2206491e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:94","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphBuilder.setCHGraph(com.graphhopper.routing.util.Weighting).create()"},"status":0},{"failures":[],"tindex":"2875a3f1-8279-11e5-82cb-8d47be5e3ef0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:248","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"status":-1},{"failures":[],"tindex":"2875a3f2-8279-11e5-82cb-73fe01d58852","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1125","type":"CtIfImpl","sourcecode":"if ((long) < 0)\n    throw new java.lang.IllegalStateException(\"call next before detaching\");\n"},"variableMap":{"edgePointer":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:300","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing ways\"))"},"status":0},{"failures":[],"tindex":"2875a3f3-8279-11e5-82cb-cb815cd04390","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:188","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,0,86,87,88,89,90,91,92,2,93,94,95,96,14,97,98,3,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,5,117,118,119,120,121,122,123,6,124,125,126,127,128,129,130,131,132,133,134,135,136,16,137,138,139,140,141,142,143,144,17,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,8,165,166,167,168,169,170,171,9,172,173,174,175,176,177,178,179,180,181,10,182,183,184,185,186,187,188,12,189,190,191,192,193,194,195,13,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250],"tindex":"2875cb04-8279-11e5-82cb-4f2e6ae51824","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"newEdgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:144","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int)"},"status":-1},{"failures":[],"tindex":"2875cb05-8279-11e5-82cb-178ea008b3c9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"lonSize","nodeThis":"lonSize","edgeId":"len","nodeOther":"initializedCounter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = -1;\n    int int = -1;\n    if (com.graphhopper.coll.GHBitSet.contains(int)) {\n        if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n            int = int;\n            int = int + 1;\n        } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n            int = int;\n            int = int + (int);\n        } \n    } else {\n        if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n            int = int + 1;\n            int = int;\n        } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n            int = int + (int);\n            int = int;\n        } \n    }\n    if (int >= 0) {\n        if ((int[][int]) >= 0) {\n            if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n                continue;\n            } \n        } \n        com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)));\n        int[][int] = int[][int];\n        com.graphhopper.coll.GHBitSet.add(int);\n        int++;\n    } \n}"},"status":-2},{"failures":[],"tindex":"2875f216-8279-11e5-82cb-07e1939614f2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.BigLongIntMap:73","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:346","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMWay.getId()"},"status":-2},{"failures":[],"tindex":"2875f217-8279-11e5-82cb-cb3bef7fa6cf","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:294","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[0][]"},"variableMap":{"segments":"newSegs"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:119","type":"CtAssignmentImpl","sourcecode":"int[][] = int[][]"},"status":0},{"failures":[],"tindex":"2875f218-8279-11e5-82cb-e3c0f7fd2ac0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.AbstractDataAccess:103","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeLong(long)"},"status":-2},{"failures":[],"tindex":"2875f219-8279-11e5-82cb-f17765a346a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()).setWayGeometry(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.fetchWayGeometry(0))"},"variableMap":{"from":"edge","to":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:400","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setName(java.lang.String)"},"status":-2},{"failures":[76,78,79,81,82,206,207,208,210,211,212,213,215,216,218,233,234,240,242,243,244,245,246,247,248,249,250],"tindex":"2875f21a-8279-11e5-82cb-2977c057ba89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:113","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"2875f21b-8279-11e5-82cb-17ff3742bd7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:120","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.EncodingManager.needsTurnCostsSupport())\n    com.graphhopper.routing.util.TraversalMode = com.graphhopper.routing.util.TraversalMode.com.graphhopper.routing.util.TraversalMode;\n"},"status":0},{"failures":[],"tindex":"2876192c-8279-11e5-82cb-1bb73313a845","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:139","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.int , int , double , double)"},"status":-1},{"failures":[251,252,253,254],"tindex":"2876192d-8279-11e5-82cb-995bb50f1d64","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.IntIterator:38","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"counter":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:411","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"2875a3f0-8279-11e5-82cb-214b2206491e","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.GraphBuilder.create","com.graphhopper.storage.GraphBuilder.setCHGraph"]},"type":"staticDiff"}]},{"transformation":"2875f21b-8279-11e5-82cb-17ff3742bd7e","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}