{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":66,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":243,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":286,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":251,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":173,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":55,"com.graphhopper.reader.OSMReaderTest.testFerry":223,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":218,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":219,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":240,"com.graphhopper.routing.QueryGraphTest.testOneWay":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":157,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":169,"com.graphhopper.reader.OSMReaderTest.testWithBounds":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":64,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":229,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":245,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":230,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":136,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":257,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":45,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":116,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":329,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":28,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":325,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":158,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":188,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":265,"com.graphhopper.GraphHopperTest.testPrepare":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":304,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":108,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":253,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":272,"com.graphhopper.util.InstructionListTest.testWayList":212,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":280,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":208,"com.graphhopper.GraphHopperAPITest.testDisconnected179":205,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":234,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":60,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":34,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":168,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":231,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":56,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":273,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":277,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":170,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":221,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":298,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":225,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":144,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":77,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":31,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":113,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":184,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":268,"com.graphhopper.GraphHopperTest.testLoadOSM":33,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":194,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":39,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":127,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":171,"com.graphhopper.reader.OSMReaderTest.testSort":20,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":126,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":283,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":25,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":153,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":262,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":331,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":198,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":305,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":79,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":290,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":222,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":293,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":310,"com.graphhopper.routing.PathTest.testWayList":338,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":63,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":307,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":278,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":316,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":193,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":151,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":312,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":112,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":203,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":50,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":12,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":297,"com.graphhopper.util.GHUtilityTest.testSort":216,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":174,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":276,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":105,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":110,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":335,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":96,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":186,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":165,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":246,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":238,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":324,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":49,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":315,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":319,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":88,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":42,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":289,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":228,"com.graphhopper.reader.OSMReaderTest.testBarriers":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":235,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":154,"com.graphhopper.routing.PathTest.testFound":336,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":189,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":58,"com.graphhopper.util.GHUtilityTest.testCopy":215,"com.graphhopper.routing.PathTest.testFindInstruction":339,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":269,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":90,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":62,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":115,"com.graphhopper.util.InstructionListTest.testEmptyList":210,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":279,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":320,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":132,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":102,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":123,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":332,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":91,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":259,"com.graphhopper.reader.PrinctonReaderTest.testRead":220,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":138,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":59,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":143,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":239,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":160,"com.graphhopper.util.InstructionListTest.testWayList2":213,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":330,"com.graphhopper.reader.OSMReaderTest.testFoot":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":177,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":252,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":318,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":134,"com.graphhopper.reader.OSMReaderTest.testOneWay":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":142,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":118,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":237,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":145,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":65,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":263,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":182,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":68,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":109,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":114,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":224,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":296,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":258,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":199,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":288,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":255,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":256,"com.graphhopper.routing.PathBidirRefTest.testExtract":291,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":327,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":6,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":206,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":236,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":317,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":314,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":5,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":201,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":181,"com.graphhopper.util.GHUtilityTest.testSort2":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":301,"com.graphhopper.reader.OSMReaderTest.testMain":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":166,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":334,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":37,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":311,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":163,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":52,"com.graphhopper.routing.PathBidirRefTest.testExtract2":292,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":162,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":185,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":270,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":309,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":195,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":178,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":187,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":204,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":155,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":22,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":190,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":99,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":333,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":287,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":328,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":51,"com.graphhopper.storage.GraphHopperStorageTest.testClone":111,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":172,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":167,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":159,"com.graphhopper.GraphHopperTest.testFootAndCar":8,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":300,"com.graphhopper.routing.PathTest.testTime":337,"com.graphhopper.util.InstructionListTest.testCreateGPX":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":57,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":179,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":192,"com.graphhopper.reader.OSMReaderTest.testRelation":53,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":83,"com.graphhopper.util.GHUtilityTest.testSortDirected":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":150,"com.graphhopper.GraphHopperTest.testPrepareOnly":226,"com.graphhopper.GraphHopperTest.testVia":7,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":323,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":299,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":281,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":200,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":191,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":244,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":313,"com.graphhopper.GraphHopperTest.testFootOnly":9,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":196,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":23,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":197,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":67,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":149,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":295,"com.graphhopper.util.InstructionListTest.testFind":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":254,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":180},"transformations":[{"failures":[],"tindex":"755ee0b2-82bd-11e5-af92-db64b6216611","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:65","type":"CtLocalVariableImpl","sourcecode":"double double = -1"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"755f07c3-82bd-11e5-af92-1f1d8300f3e7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:403","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"origEdgeId","b":"origEdgeId","baseGraph":"mainGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:567","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"status":-1},{"failures":[15,16,17],"tindex":"755f07c4-82bd-11e5-af92-75c65214db59","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMNode:116","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" lat=\")"},"variableMap":{"txt":"track"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:225","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkseg>\")"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,7,30,31,8,32,33,34,35,36,37,38],"tindex":"755f2ed5-82bd-11e5-af92-bd5c6200a43e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:269","type":"CtIfImpl","sourcecode":"if (boolean || boolean) {\n    boolean boolean = ((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"motor_vehicle:forward\", \"no\"));\n    if (boolean)\n        long |= long;\n    else\n        long |= long;\n    \n} else\n    long |= long;\n"},"status":-1},{"failures":[39,40,41],"tindex":"755f2ed6-82bd-11e5-af92-a5763288de1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:416","type":"CtReturnImpl","sourcecode":"return 80"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:644","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[22],"tindex":"755f2ed7-82bd-11e5-af92-41329deb6259","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:789","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"variableMap":{"adj":"nodeVia","explorer":"edgeOutExplorer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:108","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int)"},"status":-1},{"failures":[42],"tindex":"755fa408-82bd-11e5-af92-27a8627144b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:523","type":"CtAssignmentImpl","sourcecode":"int = int << 1"},"variableMap":{"edgeId":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:116","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.reader.dem.HeightTile.includePoint((int - (2 * (int))), java.util.concurrent.atomic.AtomicInteger)"},"status":-1},{"failures":[],"tindex":"755fcb19-82bd-11e5-af92-b715394aeeac","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"length","size":"length","lonSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.search.NameIndex:98","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 2 ; int++) {\n    byte[] = java.lang.String.getBytes(com.graphhopper.util.Helper.java.nio.charset.Charset);\n    if ((byte[].int) > 255) {\n        java.lang.String java.lang.String = java.lang.String.substring(0, (256 / 4));\n        com.graphhopper.search.NameIndex.org.slf4j.Logger.info((((\"Way name is too long: \" + java.lang.String) + \" truncated to \") + java.lang.String));\n        java.lang.String = java.lang.String;\n        continue;\n    } \n    break;\n}"},"status":-2},{"failures":[],"tindex":"755fcb1a-82bd-11e5-af92-211e4a96b20d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:278","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_left\")"},"variableMap":{"dir":"wayTypeName","tr":"tr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:438","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"road\")"},"status":0},{"failures":[],"tindex":"755fcb1b-82bd-11e5-af92-d7bea19990ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:745","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseIntIntArray.get(int)"},"status":-2},{"failures":[43],"tindex":"755fcb1c-82bd-11e5-af92-1d35dc3913e8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:121","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"do not overwrite existing! key \" + int) + \" \") + java.lang.String) + \" vs. \") + java.lang.String));\n"},"variableMap":{"intKey":"strLen","str":"str","key":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:99","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 8 ; int++) {\n    byte <<= 1;\n    if ((int < int) && ((java.lang.String.charAt(int)) != '0'))\n        byte |= 1;\n    \n    int++;\n}"},"status":-1},{"failures":[44,45,46,47,48,49,50,51,52],"tindex":"755ff22d-82bd-11e5-af92-178dc0591f8d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:192","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(100)"},"variableMap":{"heights":"wayGeometry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:394","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1},{"failures":[],"tindex":"755ff22e-82bd-11e5-af92-35ce29fa428c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:368","type":"CtReturnImpl","sourcecode":"return -(java.lang.Integer.int)"},"variableMap":{"java.lang.Integer.MAX_VALUE":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:603","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"755ff22f-82bd-11e5-af92-89900ab3858a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:29","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.VLongStorage.this(10)"},"variableMap":{"this":"currentWriter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:81","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(((int) * (int)))"},"status":-2},{"failures":[21,24],"tindex":"755ff230-82bd-11e5-af92-1fcf4ca1d73a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GPXEntry:80","type":"CtAssignmentImpl","sourcecode":"this.long = long"},"variableMap":{"time":"nodeFlags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"status":-1},{"failures":[53,54],"tindex":"755ff231-82bd-11e5-af92-ef0b6cc96162","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:72","type":"CtOperatorAssignmentImpl","sourcecode":"long *= 4"},"variableMap":{"oldValueIndex":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-1},{"failures":[44,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,45,71,72,73,74,75,76,47,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,52,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,0,205,206,207,208,209,210,211,212,213,17,214,215,216,217,218,219,220,221,222,223,18,19,20,21,224,225,22,23,24,25,26,27,28,226,1,2,3,4,5,6,7,30,31,8,32,33,34,35,9,36,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,10,277,278,279,280,281,282,283,11,12,284,285,13,286,287,288,289,290,14,291,292,293,294,295,296,297,298],"tindex":"75601942-82bd-11e5-af92-913fefebd683","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:401","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeRefs(0, com.graphhopper.storage.DataAccess.getCapacity())"},"status":-1},{"failures":[],"tindex":"75601943-82bd-11e5-af92-136eee3ee743","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"status":-1},{"failures":[],"tindex":"75601944-82bd-11e5-af92-0372c74c9a44","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:482","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * double))) / double"},"variableMap":{"factor":"java.lang.Double.POSITIVE_INFINITY","value":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:105","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[44,55,299,56,57,58,59,300,60,61,62,63,64,301,65,66,67,68,69,70,45,302,71,72,73,46,74,75,303,76,47,304,305,48,77,306,78,307,308,49,309,88,310,106,50,311,116,51,312,52,313,314,139,315,149,168,316,169,170,171,172,173,317,174,318,175,176,177,178,179,180,181,182,183,184,185,186,319,320,321,322,323,187,324,325,326,327,328,188,189,190,191,329,192,193,194,195,196,330,197,331,198,199,200,201,202,203,204,0,205,206,207,208,209,211,212,213,17,332,214,215,216,217,218,219,220,221,222,223,18,19,20,21,224,225,22,23,24,25,26,333,27,1,2,3,4,5,6,31,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,334,244,245,246,247,248,249,250,251,335,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,10,277,278,279,280,281,282,283,11,12,284,285,13,286,287,288,289,290,14,291,292,293,294,336,337,295,296,338,339,297,298],"tindex":"75601945-82bd-11e5-af92-8dc906444586","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:393","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"755fcb1a-82bd-11e5-af92-211e4a96b20d","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Translation.tr"]},"type":"staticDiff"}]}]}