{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":8,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":95,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode6BytesPrecision":52,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":24,"com.graphhopper.geohash.SpatialKeyAlgoTest.testOddBits":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":27,"com.graphhopper.reader.OSMReaderTest.testWithBounds":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":90,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":91,"com.graphhopper.coll.CompressedArrayTest.testCompress":48,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":36,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode3BytesPrecision":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":39,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":40,"com.graphhopper.GraphHopperTest.testPrepare":3,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":28,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":68,"com.graphhopper.reader.OSMReaderTest.testFoot":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":103,"com.graphhopper.geohash.SpatialKeyAlgoTest.testEncode4BytesPrecision":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":67,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijectionBug2":51,"com.graphhopper.reader.OSMReaderTest.testOneWay":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":20,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":96,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":63,"com.graphhopper.geohash.SpatialKeyAlgoTest.testNoFurtherIterationIfBitsIs1":53,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":38,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":12,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":17,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":73,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":59,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":74,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":31,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":119,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":42,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":86,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":110,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":43,"com.graphhopper.GraphHopperTest.testLoadOSM":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":41,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":66,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":79,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":102,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":115,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":98,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":83,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":82,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":121,"com.graphhopper.reader.OSMReaderTest.testSort":72,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":81,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":92,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":26,"com.graphhopper.reader.OSMReaderTest.testMain":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":69,"com.graphhopper.geohash.SpatialKeyAlgoTest.testBijection":54,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":65,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":33,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":111,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":122,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":116,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":34,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":10,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":18,"com.graphhopper.util.SimpleIntDequeTest.testPush":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":30,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":25,"com.graphhopper.GraphHopperTest.testFootAndCar":87,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":60,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":14,"com.graphhopper.geohash.SpatialKeyAlgoTest.testDifferentInitialBounds":56,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":112,"com.graphhopper.util.InstructionListTest.testRoundaboutJsonIntegrity":61,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":105,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":22,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.coll.CompressedArrayTest.testCompress2":47,"com.graphhopper.GraphHopperTest.testVia":2,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":57,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":21,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":120,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":4,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":114,"com.graphhopper.GraphHopperTest.testFootOnly":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":32,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":62,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":117,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":75,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":109,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":118,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":58,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":13,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":16,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":106},"transformations":[{"failures":[],"tindex":"c5940aa0-82a0-11e5-9b5c-af8300639e00","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:173","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int = int;\n} "},"variableMap":{"max":"iteration","tmpSize":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:718","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int++) {\n    double double = double + (int * (double));\n    double double = double - (int * (double));\n    double double = double + (int * (double));\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    if (int > 0)\n        com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n    \n}"},"status":0},{"failures":[],"tindex":"c59458c1-82a0-11e5-9b5c-0909969ad27e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"weightApproximation","speed":"weightApproximation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.ConsistentWeightApproximator:38","type":"CtOperatorAssignmentImpl","sourcecode":"double *= -1"},"status":-1},{"failures":[0],"tindex":"c59458c2-82a0-11e5-9b5c-fba8c34d13ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:221","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<ele>\").append(com.graphhopper.util.Helper.round2(com.graphhopper.util.GPXEntry.getEle())).append(\"<\/ele>\")"},"status":-1},{"failures":[],"tindex":"c59458c3-82a0-11e5-9b5c-e56a10ef6a33","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"variableMap":{"y":"nextLat","angle":"java.lang.Double.NaN"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:231","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getSize()) >= 2) {\n    double = com.graphhopper.util.PointList.getLatitude(1);\n    double = com.graphhopper.util.PointList.getLongitude(1);\n} else if ((com.graphhopper.util.Instruction != null) && ((com.graphhopper.util.PointList.getSize()) == 1)) {\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLatitude(0);\n    double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLongitude(0);\n} else {\n    return java.lang.Double.double;\n}"},"status":-2},{"failures":[],"tindex":"c5947fd4-82a0-11e5-9b5c-4797af0db811","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"event"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:70","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"c5947fd5-82a0-11e5-9b5c-9f86c2838f7a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"level","index":"N_LEVEL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:158","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(((((long)(int)) * (int)) + (int)), int)"},"status":-1},{"failures":[],"tindex":"c5947fd6-82a0-11e5-9b5c-65ed99c32c8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:134","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-1},{"failures":[45,46],"tindex":"c594a6e7-82a0-11e5-9b5c-51ae2f681604","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:467","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n    for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.reader.OSMTurnRelation)) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n        if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n            com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n        } else {\n            gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        }\n    }\n}"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55,56],"tindex":"c594a6e8-82a0-11e5-9b5c-53ffe0520ea0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-1},{"failures":[5,57],"tindex":"c594a6e9-82a0-11e5-9b5c-ebf6b1b1428e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:292","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.prepareAlgo()"},"status":-1},{"failures":[58,59,60,61],"tindex":"c594a6ea-82a0-11e5-9b5c-ab49e3ef5930","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"variableMap":{"val":"radian"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:100","type":"CtReturnImpl","sourcecode":"return ((java.lang.Math.double) * (int)) - (double)"},"status":-1},{"failures":[],"tindex":"c594cdfb-82a0-11e5-9b5c-2148b4a3b674","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:152","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    return false;\n} "},"variableMap":{"byteCount":"newBytes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:103","type":"CtIfImpl","sourcecode":"if (long <= 0)\n    return false;\n"},"status":0},{"failures":[62,63,64],"tindex":"c594cdfc-82a0-11e5-9b5c-fbec9e87f9c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:129","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<gnu.trove.list.array.TIntArrayList>.add(gnu.trove.list.array.TIntArrayList)"},"status":-1},{"failures":[65],"tindex":"c594cdfd-82a0-11e5-9b5c-8d42bda80d5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"variableMap":{"offset":"b","bytes":"bytes","value":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:107","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1},{"failures":[],"tindex":"c594cdfe-82a0-11e5-9b5c-b9ae9728116e","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:189","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"i":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:81","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[45,46],"tindex":"c594cdff-82a0-11e5-9b5c-b5f52f2f0b23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:469","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry : com.graphhopper.reader.OSMReader.analyzeTurnRelation(com.graphhopper.routing.util.FlagEncoder, com.graphhopper.reader.OSMTurnRelation)) {\n    com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.get(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId());\n    if (com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry != null) {\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long |= com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long;\n    } else {\n        gnu.trove.map.TLongObjectMap<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.put(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.getItemId(), com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n    }\n}"},"status":-1},{"failures":[66,67,68,69],"tindex":"c594f510-82a0-11e5-9b5c-6b9de7c7d507","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:37","type":"CtAssignmentImpl","sourcecode":"int = 10"},"variableMap":{"capacity":"shiftSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:175","type":"CtOperatorAssignmentImpl","sourcecode":"int += byte[][int]"},"status":-1},{"failures":[70,71,72,73,74,45,75,76,77,78,79,80,81,82,83,84,85,2,3,86,87,4,5,6,57,88,19,24,25,28,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"c594f511-82a0-11e5-9b5c-25b94a7b2e2a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:369","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (int)))\n    throw new java.lang.IllegalArgumentException((((((\"Illegal interval: \" + int) + \", \") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"frontIndex","from":"endIndexPlusOne","end":"endIndexPlusOne"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:77","type":"CtIfImpl","sourcecode":"if ((int) > int) {\n    int = com.graphhopper.util.SimpleIntDeque.getSize();\n    int[] int[] = new int[(int) + 10];\n    java.lang.System.arraycopy(int[], int, int[], 0, int);\n    int[] = int[];\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"c5951c22-82a0-11e5-9b5c-f7b22b99dd5a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.shapes.Circle:37","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.shapes.Circle.this(double, double, double, com.graphhopper.util.Helper.com.graphhopper.util.DistanceCalc)"},"variableMap":{"radiusInMeter":"tmpLon","this":"circle","lon":"tmpLon","com.graphhopper.util.Helper.DIST_EARTH":"calc","lat":"tmpLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:109","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"c594cdfb-82a0-11e5-9b5c-2148b4a3b674","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}