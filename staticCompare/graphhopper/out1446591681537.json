{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":33,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":140,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":58,"com.graphhopper.routing.QueryGraphTest.testOneWay":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":79,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":121,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":150,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":98,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":44,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":156,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":87,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":130,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":68,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":1,"com.graphhopper.coll.CompressedArrayTest.testCompress":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":55,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":136,"com.graphhopper.GraphHopperTest.testPrepare":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":124,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":38,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":143,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":151,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":65,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":148,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":10,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":2,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":159,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":64,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":84,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":126,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":127,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":116,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":120,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":139,"com.graphhopper.GraphHopperTest.testLoadOSM":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":103,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":59,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":22,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":112,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":20,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":154,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":155,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":75,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":90,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":133,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":108,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":109,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":161,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":85,"com.graphhopper.routing.PathTest.testWayList":13,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":104,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":47,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":97,"com.graphhopper.storage.index.BresenhamLineTest.testLineRightDown2":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":142,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":102,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":45,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":7,"com.graphhopper.GraphHopperTest.testFootAndCar":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":8,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":147,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":146,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":131,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":153,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":80,"com.graphhopper.coll.CompressedArrayTest.testCompress2":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":71,"com.graphhopper.GraphHopperTest.testPrepareOnly":119,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":11,"com.graphhopper.GraphHopperTest.testVia":23,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":29,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":111,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":99,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":54,"com.graphhopper.GraphHopperTest.testFootOnly":123,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":107,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":43,"com.graphhopper.util.GHUtilityTest.testCopy":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":62},"transformations":[{"failures":[],"tindex":"cca5dc34-827e-11e5-900d-ad9bda57552a","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:586","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"com.graphhopper.util.Constants.VERSION_NODE","nodeType":"com.graphhopper.util.Constants.VERSION_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:153","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.storage.StorableProperties.(check(\"nodes\", com.graphhopper.util.Constants.int, boolean)))\n    return false;\n"},"status":-2},{"failures":[0,1,2],"tindex":"cca60345-827e-11e5-900d-451f531adf2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:253","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \".hgt.zip\";\n    java.io.File java.io.File = new java.io.File(java.io.File , new java.io.File(java.lang.String).getName());\n    java.io.InputStream java.io.InputStream;\n    if (!(java.io.File.exists())) {\n        for (int int = 0 ; int < 3 ; int++) {\n            try {\n                com.graphhopper.util.Downloader.downloadFile(java.lang.String, java.io.File.getAbsolutePath());\n                break;\n            } catch (java.net.SocketTimeoutException ex) {\n                java.lang.Thread.sleep(2000);\n                continue;\n            } catch (java.io.FileNotFoundException ex) {\n                java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\";\n                continue;\n            }\n        }\n    } \n    java.io.InputStream = new java.io.FileInputStream(java.io.File);\n    java.util.zip.ZipInputStream java.util.zip.ZipInputStream = new java.util.zip.ZipInputStream(java.io.InputStream);\n    java.util.zip.ZipInputStream.getNextEntry();\n    java.io.BufferedInputStream java.io.BufferedInputStream = new java.io.BufferedInputStream(java.util.zip.ZipInputStream);\n    int int;\n    while ((int = java.io.BufferedInputStream.read(byte[])) > 0) {\n        for (int int = 0 ; int < int ; int += 2) {\n            short short = com.graphhopper.reader.dem.SRTMProvider.com.graphhopper.util.BitUtil.toShort(byte[], int);\n            if ((short < (-1000)) || (short > 12000))\n                short = java.lang.Short.short;\n            \n            com.graphhopper.storage.DataAccess.setShort(int, short);\n        }\n    }\n    com.graphhopper.storage.DataAccess.flush();\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-1},{"failures":[],"tindex":"cca60346-827e-11e5-900d-d97c662f6bab","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:191","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.Helper.idealIntArraySize(((int) + 1))"},"variableMap":{"mSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:208","type":"CtLocalVariableImpl","sourcecode":"int int = int[].int"},"status":-2},{"failures":[],"tindex":"cca60347-827e-11e5-900d-69846b3a01d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:265","type":"CtIfImpl","sourcecode":"if ((\"motorway\".equals(java.lang.String)) || (\"motorway_link\".equals(java.lang.String)))\n    return 0;\n"},"variableMap":{"highwayValue":"highwayValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:239","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.String>.contains(java.lang.String)))\n    return 0;\n"},"status":0},{"failures":[],"tindex":"cca60348-827e-11e5-900d-9be222d45bfd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1159","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.close()"},"status":-2},{"failures":[],"tindex":"cca62a59-827e-11e5-900d-33dfceb2e206","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:87","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"currentEntry":"x"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:74","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":0},{"failures":[3,4,5,6,7,8,9,10,2,11,12],"tindex":"cca62a5a-827e-11e5-900d-33ea304cce5e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:93","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (com.graphhopper.storage.BaseGraph.int)) + (com.graphhopper.storage.BaseGraph.int))))"},"status":-1},{"failures":[],"tindex":"cca62a5b-827e-11e5-900d-5f05ea4015b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MountainBikeFlagEncoder:182","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(com.graphhopper.routing.util.EncodedValue.getValue(long)))"},"status":-2},{"failures":[13],"tindex":"cca62a5c-827e-11e5-900d-15d365dff59a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:260","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"tmpIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:100","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[14,15],"tindex":"cca62a5d-827e-11e5-900d-41c374c1fb71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:117","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint)"},"status":-1},{"failures":[16],"tindex":"cca62a5e-827e-11e5-900d-99f13750668d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:538","type":"CtLocalVariableImpl","sourcecode":"double double = double - (double)"},"variableMap":{"orientation":"deltaX","prevOrientation":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"status":-1},{"failures":[],"tindex":"cca62a5f-827e-11e5-900d-e948b41243fb","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:367","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.pbf.PbfBlobDecoder.org.slf4j.Logger.debug(\"Processing OSM primitive group.\")"},"variableMap":{"com.graphhopper.reader.pbf.PbfBlobDecoder.log":"com.graphhopper.reader.OSMReader.logger"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:306","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    com.graphhopper.reader.OSMReader.org.slf4j.Logger.info((com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(long)) + \", now parsing relations\"));\n    long = long;\n} "},"status":0},{"failures":[],"tindex":"cca65170-827e-11e5-900d-65ec9ddba308","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:688","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.loadEdgesHeader()"},"status":-2},{"failures":[],"tindex":"cca65171-827e-11e5-900d-5d410646216c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:251","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, boolean)"},"status":-2},{"failures":[],"tindex":"cca65172-827e-11e5-900d-05f6b517ea85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:243","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.init(com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4), com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4), com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4), com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4), com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4), com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(com.graphhopper.routing.util.EncodingManager.getBytesForFlags()), boolean)"},"status":-2},{"failures":[],"tindex":"cca65173-827e-11e5-900d-65dd9eafc246","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:63","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.Instruction>.size()"},"status":-2},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"cca65174-827e-11e5-900d-c566b4d9cb44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:45","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-1},{"failures":[],"tindex":"cca65175-827e-11e5-900d-390d89405361","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:382","type":"CtReturnImpl","sourcecode":"return -(java.lang.Double.double)"},"variableMap":{"java.lang.Double.MAX_VALUE":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:822","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[48,49,50,17,51,52,53,54,55,56,57,8,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,9,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,18,19,20,21,22,120,121,23,24,27,28,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,43,148,149,150,151,152,153,154,44,45,155,156,46,157,158,159,160,161,47],"tindex":"cca67886-827e-11e5-900d-cf977d9007e6","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:241","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"indexCopy":"shortcuts","index":"shortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:678","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create(long)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"cca60347-827e-11e5-900d-69846b3a01d6","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}