{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":304,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":159,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":50,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":180,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":240,"com.graphhopper.reader.OSMReaderTest.testFerry":8,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":164,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":165,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":105,"com.graphhopper.routing.QueryGraphTest.testOneWay":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":59,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":231,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":32,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":46,"com.graphhopper.reader.OSMReaderTest.testWithBounds":19,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":110,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":248,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":293,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":317,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":130,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":306,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":65,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":24,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":184,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":230,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":138,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":188,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":299,"com.graphhopper.GraphHopperTest.testPrepare":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":311,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":23,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":126,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":204,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":112,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":145,"com.graphhopper.util.InstructionListTest.testWayList":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":153,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":167,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":172,"com.graphhopper.GraphHopperAPITest.testDisconnected179":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":214,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":245,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":38,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":88,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":44,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":302,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":47,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":92,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":101,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":14,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":320,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":95,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":259,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":34,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":287,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":276,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":280,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":278,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":141,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":277,"com.graphhopper.GraphHopperTest.testLoadOSM":37,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":55,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":139,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":68,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":48,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":207,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":217,"com.graphhopper.reader.OSMReaderTest.testSort":11,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":156,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":297,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":82,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":135,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":73,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":260,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":163,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":93,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":94,"com.graphhopper.routing.PathTest.testWayList":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":314,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":319,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":225,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":4,"com.graphhopper.coll.GHSortedCollectionTest.testInsert":6,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":282,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":45,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":227,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":265,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":261,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":266,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":301,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":203,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":3,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":100,"com.graphhopper.util.GHUtilityTest.testSort":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":246,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":1,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":149,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":281,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":286,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":181,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":274,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":285,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":309,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":215,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":300,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":124,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":283,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":206,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":178,"com.graphhopper.GraphHopperAPITest.testLoad":42,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":162,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":312,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":201,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":89,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":195,"com.graphhopper.reader.OSMReaderTest.testBarriers":12,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":90,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":262,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":298,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":41,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":150,"com.graphhopper.util.GHUtilityTest.testCopy":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":243,"com.graphhopper.routing.PathTest.testFindInstruction":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":142,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":270,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":200,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":22,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":179,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":291,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":2,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":279,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":296,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":158,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":236,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":271,"com.graphhopper.reader.PrinctonReaderTest.testRead":91,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":224,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":313,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":239,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":216,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":104,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":137,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":192,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":85,"com.graphhopper.util.InstructionListTest.testWayList2":169,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":71,"com.graphhopper.reader.OSMReaderTest.testFoot":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":257,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":56,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":115,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":253,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":53,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":213,"com.graphhopper.reader.OSMReaderTest.testOneWay":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":318,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":310,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":219,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":123,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":202,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":210,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":222,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":209,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":284,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":194,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":250,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":13,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":131,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":161,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":128,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":233,"com.graphhopper.routing.PathBidirRefTest.testExtract":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":129,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":186,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":31,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":177,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":125,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":51,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":256,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":315,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":77,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":255,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":27,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":61,"com.graphhopper.util.GHUtilityTest.testSort2":173,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":157,"com.graphhopper.reader.OSMReaderTest.testMain":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":237,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":273,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":235,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":294,"com.graphhopper.routing.PathBidirRefTest.testExtract2":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":234,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":191,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":69,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":57,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":116,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":183,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":81,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":208,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":228,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":229,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":15,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":308,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":275,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":160,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":218,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":49,"com.graphhopper.storage.GraphHopperStorageTest.testClone":196,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":292,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":211,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":238,"com.graphhopper.GraphHopperTest.testFootAndCar":35,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":290,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":244,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":223,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":58,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":155,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":252,"com.graphhopper.util.GHUtilityTest.testSortDirected":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":264,"com.graphhopper.GraphHopperTest.testPrepareOnly":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":226,"com.graphhopper.GraphHopperTest.testVia":5,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":182,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":154,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":17,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":76,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":64,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":109,"com.graphhopper.GraphHopperTest.testFootOnly":40,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":83,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":170,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":70,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":189,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":72,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":305,"com.graphhopper.util.InstructionListTest.testFind":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":147,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":127,"com.graphhopper.coll.GHSortedCollectionTest.testUpdate":7,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":220},"transformations":[{"failures":[],"tindex":"9bfb96b1-82c6-11e5-83b8-452e6b78ba07","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:254","type":"CtReturnImpl","sourcecode":"return (int * (((4 + 4) + 4) + 4)) + (8 * int)"},"variableMap":{"length":"adjNode","factor":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:78","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"9bfca822-82c6-11e5-83b8-137c21bdc4cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:180","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FlagEncoder.isForward(com.graphhopper.routing.VirtualEdgeIteratorState.getFlags())"},"variableMap":{"this":"this","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:186","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.FlagEncoder.isBackward(com.graphhopper.routing.VirtualEdgeIteratorState.getFlags())"},"status":-1},{"failures":[6,7],"tindex":"9bfca823-82c6-11e5-83b8-95f3aeca36a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:63","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"9bfca824-82c6-11e5-83b8-c9deab179dc4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.NumHelper:39","type":"CtReturnImpl","sourcecode":"return (java.lang.Double.compare(double, double)) == 0"},"variableMap":{"d1":"weight","d2":"weightLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:190","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.storage.EdgeEntry.double) + (com.graphhopper.storage.EdgeEntry.double)) > (double)"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,2,3,23,24,25,26,27,28,29,30,31,32,5,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"9bfccf35-82c6-11e5-83b8-cf07f796c823","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:92","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-1},{"failures":[],"tindex":"9bfccf36-82c6-11e5-83b8-b590f95c71cf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:192","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"9bfccf37-82c6-11e5-83b8-37d2a0029aee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TurnWeighting:74","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.util.EdgeIterator.int))\n    return double;\n"},"status":-1},{"failures":[],"tindex":"9bfcf648-82c6-11e5-83b8-9b360a3cf484","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:163","type":"CtIfImpl","sourcecode":"if (int > 255)\n    int = 255;\n"},"variableMap":{"red":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:726","type":"CtIfImpl","sourcecode":"if (int > 0)\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n"},"status":0},{"failures":[],"tindex":"9bfcf649-82c6-11e5-83b8-417f108830eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:886","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n    return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\nelse\n    return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n"},"variableMap":{"com.graphhopper.routing.util.PriorityWeighting.class":"com.graphhopper.routing.util.PriorityWeighting.class","weightingMap":"weightingMap","encoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:881","type":"CtIfImpl","sourcecode":"if (\"shortest\".equalsIgnoreCase(java.lang.String)) {\n    return new com.graphhopper.routing.util.ShortestWeighting(com.graphhopper.routing.util.FlagEncoder);\n} else if ((\"fastest\".equalsIgnoreCase(java.lang.String)) || (java.lang.String.isEmpty())) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.PriorityWeighting.com.graphhopper.routing.util.PriorityWeighting))\n        return new com.graphhopper.routing.util.PriorityWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    else\n        return new com.graphhopper.routing.util.FastestWeighting(com.graphhopper.routing.util.FlagEncoder , com.graphhopper.routing.util.WeightingMap);\n    \n} "},"status":-2},{"failures":[89,90],"tindex":"9bfcf64a-82c6-11e5-83b8-e55ea46ddada","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:245","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeEdges(com.graphhopper.util.EdgeExplorer, com.graphhopper.routing.util.FlagEncoder, gnu.trove.list.array.TIntArrayList, int)"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,21,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,0,112,1,113,114,115,116,89,117,118,119,120,121,122,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,22,153,154,155,156,2,3,157,158,23,159,160,161,162,163,4,164,165,166,167,168,169,170,171,172,173,174,175,176,177,24,25,26,27,28,29,30,31,32,5,33,34,35,36,37,38,39,40,41,42,178,179,180,181,182,183,44,46,47,48,49,50,52,53,54,55,56,57,58,60,61,184,185,186,187,188,62,63,64,66,67,68,69,70,72,73,74,75,76,77,78,80,81,189,190,191,82,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,84,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,87,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281],"tindex":"9bfd1d5b-82c6-11e5-83b8-df68971ea8b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:50","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[282,283],"tindex":"9bfd1d5c-82c6-11e5-83b8-69731433c133","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:241","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.copyTo(com.graphhopper.storage.DataAccess)"},"variableMap":{"indexCopy":"turnCosts","index":"turnCosts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:83","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.create((((long)(long)) * (int)))"},"status":-1},{"failures":[],"tindex":"9bfd446d-82c6-11e5-83b8-fdd3a3a81de5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:162","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"9bfd446e-82c6-11e5-83b8-6951b486dd69","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:198","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setSimplifyResponse(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:524","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.setGraphHopperLocation(java.lang.String)"},"status":0},{"failures":[8,9,10,11,12,13,14,15,16,18,19,21,91,92,95,96,97,100,101,102,103,104,105,106,107,108,109,111,0,112,1,113,114,115,116,89,117,118,120,121,122,90,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,22,153,154,155,156,2,3,157,158,23,159,160,161,162,163,4,164,165,166,167,168,169,170,171,172,173,175,176,177,24,25,27,28,29,30,31,5,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,52,54,55,56,57,58,60,61,62,63,64,66,67,68,69,70,72,74,75,76,77,78,80,81,284,190,191,285,82,192,193,194,195,286,196,197,287,199,201,202,203,288,289,204,205,206,290,207,208,209,210,291,212,213,292,214,293,215,294,216,84,217,218,219,220,295,221,222,296,224,226,227,228,297,298,229,230,231,299,232,233,234,235,300,237,238,301,239,240,241,302,242,243,303,245,247,248,249,304,305,250,251,252,306,253,254,255,256,307,258,259,308,87,260,261,262,263,309,264,265,310,267,269,270,271,311,312,272,273,274,313,275,276,277,278,314,280,281,315],"tindex":"9bfd446f-82c6-11e5-83b8-4f611786bcc5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:83","type":"CtIfImpl","sourcecode":"if (int < 1)\n    throw new java.lang.IllegalStateException(\"You cannot save a reference with values smaller 1. 0 is reserved\");\n"},"variableMap":{"ref":"E_LINKA"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:200","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-1},{"failures":[],"tindex":"9bfd6a80-82c6-11e5-83b8-bfc7ad2fcb97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:155","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:159","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_SYNC\""},"status":0},{"failures":[284,189,190,191,285],"tindex":"9bfd6a81-82c6-11e5-83b8-e3fe66e60e34","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:92","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 2"},"variableMap":{"bytePos":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:272","type":"CtAssignmentImpl","sourcecode":"int = int + (int)"},"status":-1},{"failures":[11,316,173,174,175,176,34,196,208,317,221,233,318,242,254,319,264,276,320],"tindex":"9bfd9192-82c6-11e5-83b8-c53f3732b228","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:253","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireEdgeField())\n    int = com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-1},{"failures":[],"tindex":"9bfd9193-82c6-11e5-83b8-5bb1fb81ef9f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:759","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:128","type":"CtLocalVariableImpl","sourcecode":"double double = 360.0 / 16"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"9bfcf648-82c6-11e5-83b8-9b360a3cf484","diffs":[{"branches":{"com.graphhopper.reader.OSMReaderTest.testBarriers":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t1"],"com.graphhopper.GraphHopperAPITest.testLoad":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t1"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t1"],"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t1"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t1"],"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":["com.graphhopper.storage.index.LocationIndexTree_boolean_findNetworkEntries(double,double,gnu.trove.set.hash.TIntHashSet,int).t1"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"9bfd446e-82c6-11e5-83b8-6951b486dd69","diffs":[{"methodsDiff":{"delete":["com.graphhopper.GraphHopper.setGraphHopperLocation"]},"type":"staticDiff"}]}]}