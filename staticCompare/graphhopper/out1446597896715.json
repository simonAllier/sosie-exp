{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":64,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":181,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":166,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":90,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":57,"com.graphhopper.reader.OSMReaderTest.testFerry":127,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":139,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":185,"com.graphhopper.reader.OSMReaderTest.testWithBounds":135,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":169,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":78,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":183,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":34,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":171,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":69,"com.graphhopper.GraphHopperTest.testPrepare":154,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":23,"com.graphhopper.search.NameIndexTest.testFlush":56,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":80,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":182,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":3,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":180,"com.graphhopper.util.PMapTest.singleStringPropertyCanBeRetrieved":191,"com.graphhopper.util.InstructionListTest.testWayList":142,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":12,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":141,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":61,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":186,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":4,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":9,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":46,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":126,"com.graphhopper.util.PMapTest.keyCanHaveAnyCasing":189,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":53,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":174,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":70,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":155,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":123,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":36,"com.graphhopper.util.PMapTest.hasReturnsCorrectResult":190,"com.graphhopper.GraphHopperTest.testLoadOSM":158,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":81,"com.graphhopper.reader.OSMReaderTest.testSort":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":52,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":103,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":31,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":21,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":39,"com.graphhopper.routing.PathTest.testWayList":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":101,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":93,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":15,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":6,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsLong":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":124,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":48,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":117,"com.graphhopper.GraphHopperAPITest.testLoad":146,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":157,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":49,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":73,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":111,"com.graphhopper.reader.OSMReaderTest.testBarriers":130,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":67,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":168,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":59,"com.graphhopper.util.GHUtilityTest.testCopy":145,"com.graphhopper.routing.PathTest.testFindInstruction":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":112,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":63,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":11,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":29,"com.graphhopper.reader.PrinctonReaderTest.testRead":125,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":172,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":105,"com.graphhopper.util.InstructionListTest.testWayList2":143,"com.graphhopper.reader.OSMReaderTest.testFoot":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":66,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":85,"com.graphhopper.reader.OSMReaderTest.testOneWay":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":96,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":65,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":72,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":76,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":173,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":42,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":19,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":179,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":116,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":164,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":175,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":26,"com.graphhopper.routing.PathBidirRefTest.testExtract":37,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":138,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":152,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":176,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":47,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":147,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":151,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":150,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":149,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":148,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":16,"com.graphhopper.reader.OSMReaderTest.testMain":129,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":108,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":162,"com.graphhopper.routing.PathBidirRefTest.testExtract2":38,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":1,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":86,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":89,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":104,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":131,"com.graphhopper.util.PMapTest.propertyFromStringWithMultiplePropertiesCanBeRetrieved":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":120,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":136,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":30,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":188,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":109,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":163,"com.graphhopper.GraphHopperTest.testFootAndCar":156,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":170,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":95,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":165,"com.graphhopper.GraphHopperTest.testPrepareOnly":184,"com.graphhopper.GraphHopperTest.testVia":153,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":58,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":133,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":193,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":94,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":144,"com.graphhopper.GraphHopperTest.testFootOnly":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":88,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":132,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":41,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":102,"com.graphhopper.util.InstructionListTest.testFind":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":97,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":110},"transformations":[{"failures":[],"tindex":"452ee92e-828d-11e5-bccf-b1da73d33637","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:444","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemLeafEntry.addNode(int)"},"variableMap":{"leafEntry":"res","nodeId":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:323","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.TIntList.add(int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"452f103f-828d-11e5-bccf-9b9c6ef33959","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:268","type":"CtReturnImpl","sourcecode":"return ((int)(long & 4294967295L))"},"status":-1},{"failures":[],"tindex":"452f3750-828d-11e5-bccf-9325d34a5488","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:605","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags()"},"status":-2},{"failures":[161,162,163,164,165,166,127,128,129,167,130,131,132,133,134,135,136,137,144,153,154,155,156,157,158,159,168],"tindex":"452f3751-828d-11e5-bccf-01d41e91eba8","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.OSMIDMap:124","type":"CtIfImpl","sourcecode":"if (long == long)\n    return long;\nelse\n    return ~long;\n"},"variableMap":{"high":"allowed","highKey":"allowed","key":"allowed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:243","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.util.AbstractFlagEncoder.(isAccept(long)))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"452f3752-828d-11e5-bccf-c724a2f322be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:682","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.CHEdgeIterator.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)"},"status":0},{"failures":[],"tindex":"452f3753-828d-11e5-bccf-af8e3ed0fea7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:375","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(44.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.AVOID_IF_POSSIBLE":"com.graphhopper.routing.util.PriorityCode.WORST","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:369","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\nelse\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(45.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[169,71,170,95,171,110,172,173,174],"tindex":"452f5e64-828d-11e5-bccf-2b1da0e90def","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"tmpOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:851","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.BitUtil.fromInt(byte[], com.graphhopper.util.Helper.eleToInt(com.graphhopper.util.PointList.getElevation(int)), int);\n    int += 4;\n} "},"status":-1},{"failures":[],"tindex":"452f5e65-828d-11e5-bccf-61a6b16548c2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:168","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:192","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.storage.NodeAccess.getLongitude(int)"},"status":-2},{"failures":[175,176,177,178,179,180],"tindex":"452f5e66-828d-11e5-bccf-8bd5c2c7f15d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"s","index":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:189","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int)"},"status":-1},{"failures":[],"tindex":"452f5e67-828d-11e5-bccf-75f69b44677e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:653","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"452f5e68-828d-11e5-bccf-5f4ec0323e7d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTreeMapComposed:71","type":"CtReturnImpl","sourcecode":"return ((int)(long >> 32))"},"status":-2},{"failures":[],"tindex":"452f8579-828d-11e5-bccf-d33a03b20a94","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.UnsafeDataAccess:117","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DataAccess instanceof com.graphhopper.storage.UnsafeDataAccess) {\n} "},"variableMap":{"da":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((3 * 4), com.graphhopper.storage.GraphExtension.hashCode())"},"status":0},{"failures":[],"tindex":"452f857a-828d-11e5-bccf-df0d96a41b64","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:775","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = ((((((((((((((((((((((com.graphhopper.util.EdgeIterator.getEdge()) + \", r.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", r.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", tr.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", tr.contains(\") + int) + \"):\") + (com.graphhopper.coll.GHBitSet.contains(int))) + \", base:\") + int) + \", adj:\") + int) + \", nodeCount:\") + (int)"},"status":-2},{"failures":[],"tindex":"452f857b-828d-11e5-bccf-150c2c5a718d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:207","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[181,182,11,15,18,22,148,156],"tindex":"452f857c-828d-11e5-bccf-73c7ef72bc86","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:160","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1))"},"variableMap":{"res":"res","fullPL":"fullPL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:158","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n    com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1));\nelse\n    com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2));\n"},"status":-1},{"failures":[],"tindex":"452f857d-828d-11e5-bccf-0b979eb4be07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:148","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"MMAP\""},"status":-2},{"failures":[127,128,129,167,130,173,174,131,132,133,134,135,136,137,183,184,185,153,154,155,156,157,158,186,159,160,168],"tindex":"452fac8e-828d-11e5-bccf-21add64ae8b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:422","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    if (int < (int - 1)) {\n        long[] long[] = gnu.trove.list.TLongList.toArray(int, (int - int));\n        gnu.trove.list.TLongList gnu.trove.list.TLongList = new gnu.trove.list.array.TLongArrayList(long[]);\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(gnu.trove.list.TLongList, long, long));\n    } \n} else {\n    java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addOSMWay(com.graphhopper.reader.OSMWay.getNodes(), long, long));\n}"},"status":-1},{"failures":[],"tindex":"452fac8f-828d-11e5-bccf-77f6d72dfce5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:551","type":"CtIfImpl","sourcecode":"if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"status":-2},{"failures":[],"tindex":"452fac90-828d-11e5-bccf-a58bd3cd127b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.EdgeWrapper:141","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.hash.TIntIntHashMap.clear()"},"status":-2},{"failures":[187,188,189,190,191,192,193,194],"tindex":"452fac91-828d-11e5-bccf-398d75ee05fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:60","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(2)"},"variableMap":{"systemProperty":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:59","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String.substring(0, int).toLowerCase(), java.lang.String.substring((int + 1)))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"452f3752-828d-11e5-bccf-c724a2f322be","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.CHEdgeIteratorState.setSkippedEdges"]},"type":"staticDiff"}]},{"transformation":"452f8579-828d-11e5-bccf-d33a03b20a94","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.DataAccess.setHeader","java.lang.Object.hashCode"]},"type":"staticDiff"}]}]}