{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":8,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":41,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":11,"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":25,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":32,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":38,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":45,"com.graphhopper.routing.QueryGraphTest.testOneWay":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":30,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":51,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testAcceptsCar":37,"com.graphhopper.util.BitUtilBigTest.testFromBitString":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":15,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":1,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":5,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":52,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":18,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":20,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":29,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":21,"com.graphhopper.GraphHopperTest.testPrepare":59,"com.graphhopper.GraphHopperTest.testFootAndCar":61,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":31,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":46,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":4,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":6,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":28,"com.graphhopper.GraphHopperAPITest.testDisconnected179":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":7,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":35,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":44,"com.graphhopper.GraphHopperTest.testPrepareOnly":33,"com.graphhopper.GraphHopperTest.testVia":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":19,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":36,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":26,"com.graphhopper.GraphHopperAPITest.testLoad":63,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":13,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":14,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":22,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":60,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":23,"com.graphhopper.GraphHopperTest.testLoadOSM":34,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":53,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":50,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":56,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":24,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":54},"transformations":[{"failures":[],"tindex":"4e4083fd-829f-11e5-b4dd-892fe1df436b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags())"},"variableMap":{"from":"closestEdge","to":"closestEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:155","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true)"},"status":-2},{"failures":[],"tindex":"4e4083fe-829f-11e5-b4dd-756d63e2a8e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:117","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setQueryDistance(double)"},"status":0},{"failures":[],"tindex":"4e40ab0f-829f-11e5-b4dd-2bfdd8894667","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TestAlgoCollector:52","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = new java.util.ArrayList<com.graphhopper.routing.Path>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1019","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.routing.Path> java.util.List<com.graphhopper.routing.Path> = new java.util.ArrayList<com.graphhopper.routing.Path>(((java.util.List<com.graphhopper.util.shapes.GHPoint>.size()) - 1))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"4e40ab10-829f-11e5-b4dd-a7e43005233f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:358","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.close()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:662","type":"CtIfImpl","sourcecode":"if (((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getAdjNode()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) && (com.graphhopper.util.CHEdgeIterator.canBeOverwritten(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long))) {\n    if ((com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double) >= (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.CHEdgeIterator, false, com.graphhopper.util.EdgeIterator.int)))\n        continue NEXT_SC;\n    \n    if (((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) || ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int))) {\n        throw new java.lang.IllegalStateException((((((((((((((((((\"Shortcut cannot update itself! \" + (com.graphhopper.util.CHEdgeIterator.getEdge())) + \", skipEdge1:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", skipEdge2:\") + (com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int)) + \", edge \") + com.graphhopper.util.CHEdgeIterator) + \":\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.CHEdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", sc:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut) + \", skippedEdge1: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", skippedEdge2: \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.storage.CHGraphImpl.getEdgeIteratorState(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int), com.graphhopper.storage.CHGraphImpl))) + \", neighbors:\") + (com.graphhopper.util.GHUtility.getNeighbors(com.graphhopper.util.CHEdgeIterator))));\n    } \n    com.graphhopper.util.CHEdgeIterator.setFlags(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.long);\n    com.graphhopper.util.CHEdgeIterator.setWeight(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIterator.setDistance(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.double);\n    com.graphhopper.util.CHEdgeIterator.setSkippedEdges(com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int, com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    com.graphhopper.routing.ch.PrepareContractionHierarchies.setOrigEdgeCount(com.graphhopper.util.CHEdgeIterator.getEdge(), com.graphhopper.routing.ch.PrepareContractionHierarchies.Shortcut.int);\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"4e40ab11-829f-11e5-b4dd-cf0cc9acbb1d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:273","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadExisting(java.lang.String)"},"status":-1},{"failures":[],"tindex":"4e40d222-829f-11e5-b4dd-f16fd2b4e6fa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"type":"type","defaultType":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:75","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DAType.this(com.graphhopper.storage.DAType.getMemRef(), com.graphhopper.storage.DAType.isStoring(), com.graphhopper.storage.DAType.isInteg(), com.graphhopper.storage.DAType.isAllowWrites(), boolean)"},"status":-2},{"failures":[37],"tindex":"4e40d223-829f-11e5-b4dd-37b128365cd6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:408","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    return -1;\n"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:421","type":"CtIfImpl","sourcecode":"if ((java.lang.String.equals(\"walk\")) || (java.lang.String.endsWith(\":living_street\")))\n    return 6;\n"},"status":-1},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,9,10,12,15,52,53,54,55,56,57,58,59,60,61,62,34,36],"tindex":"4e40d224-829f-11e5-b4dd-65bc98e1e4fc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"towerNode","edgeId":"towerNode","com.graphhopper.storage.EdgeAccess.NO_NODE":"towerNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:632","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.addVirtualEdges(gnu.trove.map.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, true, int, int)"},"status":-1},{"failures":[],"tindex":"4e40d225-829f-11e5-b4dd-5570c37863c0","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:190","type":"CtAssignmentImpl","sourcecode":"double = -double"},"variableMap":{"eleDelta":"durationInHours","decEleSum":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:538","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.round(((double / double) / 1.4))"},"status":0},{"failures":[],"tindex":"4e40d226-829f-11e5-b4dd-2bfc21fd674a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:99","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    com.graphhopper.reader.OSMElement.setTag(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"4e40f937-829f-11e5-b4dd-53a0faaad36e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:736","type":"CtIfImpl","sourcecode":"if ((!(com.graphhopper.coll.GHBitSet.contains(int))) && (!(com.graphhopper.coll.GHBitSet.contains(int))))\n    continue;\n"},"status":0},{"failures":[],"tindex":"4e40f938-829f-11e5-b4dd-0de84371e2ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:78","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[63,64],"tindex":"4e40f939-829f-11e5-b4dd-33607da8f49a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:750","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initCHAlgoFactories()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:108","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.initLocationIndex()"},"status":-1},{"failures":[],"tindex":"4e40f93a-829f-11e5-b4dd-971cd3b735d2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:50","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.Helper7.boolean = boolean"},"variableMap":{"com.graphhopper.util.Helper7.UNMAP_SUPPORTED":"enforcementOccured","v":"enforcementOccured"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:416","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"4e40f93b-829f-11e5-b4dd-338f92abc3b1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:233","type":"CtIfImpl","sourcecode":"if (int <= (com.graphhopper.util.EdgeIterator.int))\n    throw new java.lang.IllegalStateException((((\"edgeId invalid \" + int) + \", \") + (this)));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"tmpNo","edgeId":"tmpNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:159","type":"CtIfImpl","sourcecode":"if (double >= 4) {\n    int = 4;\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"4e40f93c-829f-11e5-b4dd-ab4d6a4ac7f8","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:515","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.Helper.isEmpty(java.lang.String)) && (com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n        throw new java.lang.IllegalArgumentException(\"You need to specify an OSM file.\");\n    \n    java.lang.String = (com.graphhopper.util.Helper.pruneFileEnd(java.lang.String)) + \"-gh\";\n} "},"variableMap":{"graphHopperFolder":"graphHopperFolder","ghLocation":"graphHopperFolder","osmFile":"graphHopperFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:714","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    throw new java.lang.IllegalArgumentException(\"To import an osm file you need to use importOrLoad\");\n} else if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException ex) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"status":0},{"failures":[65,66],"tindex":"4e41204d-829f-11e5-b4dd-172e4c44071c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:333","type":"CtIfImpl","sourcecode":"if ((long % (int)) != 0) {\n    int++;\n} "},"status":-1},{"failures":[67,53,54,55,57],"tindex":"4e41204e-829f-11e5-b4dd-0f8a2187d81e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:362","type":"CtIfImpl","sourcecode":"if (int == int)\n    return true;\n"},"variableMap":{"baseNode":"nodeId","id":"nodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:379","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int)))\n    return false;\n"},"status":-1},{"failures":[68],"tindex":"4e41204f-829f-11e5-b4dd-6d72678b2028","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtilBig:54","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int >> 24))"},"variableMap":{"offset":"b","bytes":"bytes","value":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:107","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"4e40f937-829f-11e5-b4dd-53a0faaad36e","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"4e4083fe-829f-11e5-b4dd-756d63e2a8e4","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.index.QueryResult.setQueryDistance"]},"type":"staticDiff"}]}]}