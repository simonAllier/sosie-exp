{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":29,"com.graphhopper.reader.OSMReaderTest.testOneWay":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":27,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":39,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":17,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":35,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":37,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":7,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":18,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":2,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":36,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":8,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":16,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":32,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":22,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":33},"transformations":[{"failures":[],"tindex":"47c3e0e5-7942-11e5-b671-efdc25d24db3","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:262","type":"CtLocalVariableImpl","sourcecode":"int int = ((int) - (int)) - 1"},"variableMap":{"splitIndex":"nextNodeBit","entrySize":"encoderCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:185","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.routing.util.AbstractFlagEncoder.defineNodeBits(int, int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"47c407f6-7942-11e5-b671-059850eb34a3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"toMoveNodes","edgeTo":"toMoveNodes","edgeFrom":"toMoveNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:657","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n    break;\n"},"status":-1},{"failures":[],"tindex":"47c407f7-7942-11e5-b671-a390f7e78829","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:593","type":"CtIfImpl","sourcecode":"if (double > (com.graphhopper.storage.CHGraphImpl.double))\n    long = com.graphhopper.storage.CHGraphImpl.long;\nelse\n    long = ((long)((double * (com.graphhopper.storage.CHGraphImpl.double)))) << 2;\n"},"variableMap":{"com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT_LONG":"tmpDegreeCounter","weight":"meanDegree","weightLong":"dijkstraCount","com.graphhopper.storage.CHGraphImpl.MAX_WEIGHT":"meanDegree","com.graphhopper.storage.CHGraphImpl.WEIGHT_FACTOR":"meanDegree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:582","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if ((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int))\n        continue;\n    \n    double double = com.graphhopper.util.EdgeIterator.getDistance();\n    double double = com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, true, com.graphhopper.util.EdgeIterator.int);\n    int int = com.graphhopper.util.EdgeIterator.getEdge();\n    int int = com.graphhopper.routing.ch.PrepareContractionHierarchies.getOrigEdgeCount(int);\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode());\n    com.graphhopper.routing.DijkstraOneToMany.clear();\n    long++;\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        if (((com.graphhopper.storage.CHGraphImpl.getLevel(int)) != (int)) || (int == int))\n            continue;\n        \n        double double = double + (com.graphhopper.routing.ch.PreparationWeighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.util.EdgeIterator.getEdge()));\n        if (java.lang.Double.isNaN(double))\n            throw new java.lang.IllegalStateException(((((((\"Weighting should never return NaN values\" + \", in:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", out:\") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getCoords(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.CHGraphImpl))) + \", dist:\") + (com.graphhopper.util.EdgeIterator.getDistance())));\n        \n        if (java.lang.Double.isInfinite(double))\n            continue;\n        \n        double double = double + (com.graphhopper.util.EdgeIterator.getDistance());\n        com.graphhopper.routing.DijkstraOneToMany.setWeightLimit(double);\n        com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes((((int)(double)) * 100)).setEdgeFilter(com.graphhopper.routing.ch.PrepareContractionHierarchies.IgnoreNodeFilter.setAvoidNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode()));\n        com.graphhopper.util.StopWatch.start();\n        (long)++;\n        int int = com.graphhopper.routing.DijkstraOneToMany.findEndNode(int, int);\n        com.graphhopper.util.StopWatch.stop();\n        if ((int == int) && ((com.graphhopper.routing.DijkstraOneToMany.getWeight(int)) <= double))\n            continue;\n        \n        com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.foundShortcut(int, int, double, double, com.graphhopper.util.EdgeIterator, int, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"47c42f08-7942-11e5-b671-8f03a91b2c13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:644","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:143","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.getLongitude(0)"},"status":-2},{"failures":[],"tindex":"47c42f09-7942-11e5-b671-09b6c916baa2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:53","type":"CtLocalVariableImpl","sourcecode":"final double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:195","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.AbstractFlagEncoder.parseSpeed(com.graphhopper.reader.OSMWay.getTag(\"maxspeed:motorcycle\"))"},"status":-2},{"failures":[],"tindex":"47c42f0a-7942-11e5-b671-fbadf667b2eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:231","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"variableMap":{"sb":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:289","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(com.graphhopper.routing.util.AbstractFlagEncoder.toString())"},"status":-2},{"failures":[],"tindex":"47c42f0b-7942-11e5-b671-09de2c1df9ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long - 1"},"status":-2},{"failures":[],"tindex":"47c42f0c-7942-11e5-b671-13d8fc85dc8a","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:44","type":"CtAssignmentImpl","sourcecode":"double = (double + double) / (double - double)"},"variableMap":{"r":"nextLat","x":"lat","absY":"nextLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:188","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"47c42f0d-7942-11e5-b671-f38f27ba017c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:109","type":"CtIfImpl","sourcecode":"if (int < 15)\n    int = 15;\n"},"variableMap":{"cap":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:173","type":"CtIfImpl","sourcecode":"if ((byte[].int) > (int)) {\n    byte[] byte[] = new byte[int];\n    java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n    byte[] = byte[];\n} "},"status":-2},{"failures":[],"tindex":"47c4561e-7942-11e5-b671-5d01976cfc37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:428","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    if (com.graphhopper.routing.util.FlagEncoder.supports(com.graphhopper.routing.util.TurnWeighting.com.graphhopper.routing.util.TurnWeighting))\n        return true;\n    \n}"},"status":-2},{"failures":[],"tindex":"47c4561f-7942-11e5-b671-2f8f27e3e62d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:167","type":"CtLocalVariableImpl","sourcecode":"long long = long"},"status":-2},{"failures":[],"tindex":"47c45620-7942-11e5-b671-a7f5e5c8665b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:135","type":"CtAssignmentImpl","sourcecode":"double[][int] = 0"},"variableMap":{"currNode":"size","weights":"latitudes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:128","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-2},{"failures":[],"tindex":"47c45621-7942-11e5-b671-9fa5fd2916c3","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:249","type":"CtReturnImpl","sourcecode":"return ((long)((double * 3600) / double))"},"variableMap":{"distance":"lat","speed":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:621","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil.reverse(com.graphhopper.geohash.SpatialKeyAlgo.encode(double, double), com.graphhopper.geohash.SpatialKeyAlgo.getBits())"},"status":-2},{"failures":[],"tindex":"47c45622-7942-11e5-b671-77ce4b8bad50","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"foundDist","java.lang.Math.PI":"foundDist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:120","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"47c45623-7942-11e5-b671-a91f9a52709e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"com.graphhopper.reader.OSMReader.PILLAR_NODE","tmp":"com.graphhopper.reader.OSMReader.PILLAR_NODE","segmentSizeInBytes":"com.graphhopper.reader.OSMReader.PILLAR_NODE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:638","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.getNodeMap().put(long, com.graphhopper.reader.OSMReader.int)"},"status":-2},{"failures":[],"tindex":"47c47d34-7942-11e5-b671-8158d51372a7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:53","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:185","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[int]"},"status":-2},{"failures":[],"tindex":"47c47d35-7942-11e5-b671-29503018876d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"variableMap":{"systemProperty":"dataAccess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:167","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"MMAP\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse if (java.lang.String.contains(\"UNSAFE\"))\n    com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\nelse {\n    if (java.lang.String.contains(\"RAM_STORE\"))\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    else\n        com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType;\n    \n}"},"status":-2},{"failures":[],"tindex":"47c47d36-7942-11e5-b671-87d0f9f57567","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:55","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(int >> 16))"},"variableMap":{"offset":"pointer","bytes":"bytes","value":"pointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:72","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-2},{"failures":[],"tindex":"47c47d37-7942-11e5-b671-29e8e5f66b38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:528","type":"CtIfImpl","sourcecode":"if (double > 0)\n    try {\n        java.lang.Number java.lang.Number = com.graphhopper.reader.OSMWay.getTag(\"estimated_distance\", null);\n        if (java.lang.Number != null) {\n            double double = (java.lang.Number.doubleValue()) / 1000;\n            double = java.lang.Math.round(((double / double) / 1.4));\n            if (double > com.graphhopper.routing.util.AbstractFlagEncoder.(getMaxSpeed()))\n                double = com.graphhopper.routing.util.AbstractFlagEncoder.getMaxSpeed();\n            \n            double = double;\n        } \n    } catch (java.lang.Exception ex) {\n    }\n"},"status":-2},{"failures":[],"tindex":"47c47d38-7942-11e5-b671-13b70ea7f7a2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:396","type":"CtAssignmentImpl","sourcecode":"int = (73 * int) + (this.int)"},"variableMap":{"size":"cap","hash":"cap"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}