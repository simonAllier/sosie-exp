{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":80,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":117,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":66,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":21,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":10,"com.graphhopper.routing.QueryGraphTest.testOneWay":19,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":37,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":40,"com.graphhopper.storage.MMapDataAccessTest.testSegments":112,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":87,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":2,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":77,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":114,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":3,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":86,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":52,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":116,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":65,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":59,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":71,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":111,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":60,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":48,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":93,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":33,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":103,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":73,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":113,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":79,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":25,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":118,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":30,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":82,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":53,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":50,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":62,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":108,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":51,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":120,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":63,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":39,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":57,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":98,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":64,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":46,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":126,"com.graphhopper.storage.MMapDataAccessTest.testHeader":110,"com.graphhopper.storage.MMapDataAccessTest.testCopy":106,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":95,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":109,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":47,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":101,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":125,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":12,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":31,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":43,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":38,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":105,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":74,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":69,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":123,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":122,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":84,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":16,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":34,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":45,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":1,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":81,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":29,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":70},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"0eec32d7-7916-11e5-a4a1-bdf553c7e14d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:201","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-2},{"failures":[64],"tindex":"0eec59e8-7916-11e5-a4a1-239cf42453b8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:72","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"_\")"},"variableMap":{"param":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:90","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.String.length()) / 8"},"status":-1},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"0eec80f9-7916-11e5-a4a1-f5832cf46d47","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:84","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.initRandomAccessFile()"},"status":-1},{"failures":[],"tindex":"0eec80fa-7916-11e5-a4a1-afc3ed8d136b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:146","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"SW\""},"variableMap":{"cp":"debug"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1050","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += (\", algoInit:\" + (com.graphhopper.util.StopWatch.stop().getSeconds())) + \"s\""},"status":-2},{"failures":[],"tindex":"0eec80fb-7916-11e5-a4a1-a39c80e14d7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:33","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.BikeFlagEncoder.this(4, 2, 0)"},"status":-2},{"failures":[],"tindex":"0eec80fc-7916-11e5-a4a1-b96f01d8dc3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:157","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_STORE\""},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:159","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_SYNC\""},"status":-2},{"failures":[],"tindex":"0eeca80d-7916-11e5-a4a1-190ee31a46e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:898","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-2},{"failures":[],"tindex":"0eeca80e-7916-11e5-a4a1-d3c4ead4fcd0","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:247","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSet.contains(int)) {\n    if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n        int = int;\n        int = int + 1;\n    } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n        int = int;\n        int = int + (int);\n    } \n} else {\n    if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n        int = int + 1;\n        int = int;\n    } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n        int = int + (int);\n        int = int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"0eeca80f-7916-11e5-a4a1-bffed54ef032","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:492","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 10000.0))) / 10000.0"},"variableMap":{"value":"java.lang.Double.POSITIVE_INFINITY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FastestWeighting:68","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"0eeca810-7916-11e5-a4a1-f1d1daf91466","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"status":-2},{"failures":[],"tindex":"0eeccf21-7916-11e5-a4a1-0117b52929ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:397","type":"CtAssignmentImpl","sourcecode":"int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\")"},"status":-2},{"failures":[],"tindex":"0eeccf22-7916-11e5-a4a1-b9cf3888dbb2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:188","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"already closed\");\n} "},"variableMap":{"closed":"locked"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:242","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-2},{"failures":[],"tindex":"0eeccf23-7916-11e5-a4a1-1fa5db1f5b87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:781","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double)"},"status":-2},{"failures":[],"tindex":"0eeccf24-7916-11e5-a4a1-ff70fe0757f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:255","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/rtept>\")"},"variableMap":{"output":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat())).append(\"\\\" lon=\\\"\")"},"status":-2},{"failures":[],"tindex":"0eeccf25-7916-11e5-a4a1-1f189b14d063","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:54","type":"CtOperatorAssignmentImpl","sourcecode":"double += double"},"variableMap":{"distance":"tmp","dist":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:248","type":"CtAssignmentImpl","sourcecode":"double = double[][int]"},"status":-2},{"failures":[],"tindex":"0eecf636-7916-11e5-a4a1-37a789c6137e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:801","type":"CtIfImpl","sourcecode":"if (int < 0)\n    continue;\n"},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:281","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.EdgeVisitor.next(com.graphhopper.util.EdgeIteratorState, int)"},"status":-2},{"failures":[],"tindex":"0eecf637-7916-11e5-a4a1-7350bee41c93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:321","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.get(int)"},"status":-2},{"failures":[],"tindex":"0eecf638-7916-11e5-a4a1-69ff69565a90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:165","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase()"},"variableMap":{"dataAccess":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:209","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"0eecf639-7916-11e5-a4a1-e1fc1ec14e34","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:180","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = new com.graphhopper.storage.DAType(com.graphhopper.storage.DAType , true)"},"variableMap":{"type":"defaultType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"status":-2},{"failures":[],"tindex":"0eecf63a-7916-11e5-a4a1-cbc33d9a5753","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:53","type":"CtIfImpl","sourcecode":"if (double < 0.0)\n    return -double;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}