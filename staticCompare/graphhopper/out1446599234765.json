{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":151,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":166,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":177,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":87,"com.graphhopper.GraphHopperAPITest.testNoLoad":464,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":319,"com.graphhopper.reader.OSMReaderTest.testFerry":467,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":474,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":430,"com.graphhopper.routing.util.BikeFlagEncoderTest.testMaxSpeed":145,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":150,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":223,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":249,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsCallsHandlePriority":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":298,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":38,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testReduceToMaxSpeed":255,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":379,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":421,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":24,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":414,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":333,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":363,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":128,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":32,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":450,"com.graphhopper.GraphHopperTest.testPrepare":131,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":341,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":20,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":367,"com.graphhopper.routing.util.BikeFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":231,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":11,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":394,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":256,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":122,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":101,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":149,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":7,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":161,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":362,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":385,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":47,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":468,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":315,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":146,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":43,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":480,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":34,"com.graphhopper.GraphHopperTest.testLoadOSM":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":392,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":407,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":386,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":433,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderAcceptNoException":188,"com.graphhopper.reader.OSMReaderTest.testSort":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":39,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":471,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":284,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":446,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":76,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":347,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":342,"com.graphhopper.routing.DijkstraTest.initializationError":169,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":110,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":282,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":294,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":213,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":290,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":201,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":96,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":349,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":462,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":14,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":171,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":477,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":325,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":8,"com.graphhopper.coll.IntIntBinHeapTest.testSize":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":292,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":304,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":287,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":368,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":431,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":205,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":299,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":434,"com.graphhopper.GraphHopperAPITest.testLoad":112,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":173,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":70,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":68,"com.graphhopper.reader.OSMReaderTest.testBarriers":116,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":291,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testclassBicycle":214,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":447,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_withCosts":216,"com.graphhopper.util.GHUtilityTest.testCopy":125,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":160,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":322,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":197,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":257,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":400,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPriority":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPreferenceForSlowSpeed":226,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":182,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedRelationShouldNotInfluencePriority":212,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":399,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":376,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":365,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":26,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":221,"com.graphhopper.routing.DijkstraBidirectionRefTest.initializationError":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":426,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":323,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":352,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":453,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":454,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":410,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":143,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":339,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":79,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":380,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":295,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":232,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":436,"com.graphhopper.routing.util.FastestWeightingTest.testMinWeightHasSameUnitAs_getWeight":170,"com.graphhopper.routing.util.BikeFlagEncoderTest.testCalcPriority":230,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":314,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":206,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":348,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":445,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_withCosts":235,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":261,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":50,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":395,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":355,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":117,"com.graphhopper.routing.AStarTest.initializationError":153,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":297,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":455,"com.graphhopper.routing.PathBidirRefTest.testExtract":155,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":183,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTram":236,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":389,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":428,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":317,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":94,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":64,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":148,"com.graphhopper.routing.util.BikeFlagEncoderTest.testBarrierAccess":229,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":83,"com.graphhopper.util.GHUtilityTest.testSort2":124,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":15,"com.graphhopper.reader.OSMReaderTest.testMain":114,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":265,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":458,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":53,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPriority":237,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":109,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":108,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":243,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":286,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":340,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":106,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testPriority":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":308,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":140,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":472,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":435,"com.graphhopper.storage.GraphHopperStorageTest.testClone":357,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":381,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":66,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":452,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":270,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":364,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":200,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":59,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidMotorway":196,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":278,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":397,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":332,"com.graphhopper.reader.OSMReaderTest.testRelation":469,"com.graphhopper.util.GHUtilityTest.testSortDirected":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":104,"com.graphhopper.GraphHopperTest.testFootOnly":478,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":409,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":247,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":267,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":396,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":21,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":209,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":329,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":388,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":393,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":449,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":402,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":384,"com.graphhopper.reader.OSMReaderTest.testWithBounds":120,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":224,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":37,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":313,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":184,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":334,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":404,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testSacScale":190,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testReduceToMaxSpeed":222,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":258,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":307,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":268,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":301,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":354,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":152,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":6,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":377,"com.graphhopper.routing.util.BikeFlagEncoderTest.testSacScale":227,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":443,"com.graphhopper.GraphHopperAPITest.testDisconnected179":463,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":324,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":309,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":382,"com.graphhopper.routing.util.BikeFlagEncoderTest.testPreferenceForSlowSpeed":245,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":269,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":320,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidTunnel":219,"com.graphhopper.coll.IntIntBinHeapTest.testSpreading":3,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":466,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":432,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":438,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":263,"com.graphhopper.routing.util.BikeFlagEncoderTest.testReduceToMaxSpeed":241,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":344,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":132,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":359,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":55,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":54,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":174,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTurnFlagEncoding_DefaultNoRestrictionsAndNoCosts":228,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":372,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":371,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":12,"com.graphhopper.routing.DijkstraOneToManyTest.initializationError":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":92,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":273,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":204,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":412,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTram":193,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":288,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":168,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":353,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":244,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":346,"com.graphhopper.routing.PathTest.testWayList":45,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPriority":194,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":343,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":95,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":442,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":10,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":383,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":406,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":419,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":240,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":366,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":175,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":423,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":49,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":358,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testBarrierAccess":210,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":46,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":192,"com.graphhopper.util.GHUtilityTest.testSort":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":390,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":459,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidMotorway":239,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":250,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":316,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":356,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":88,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":398,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":416,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":422,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testMaxSpeed":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":457,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":207,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":415,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":283,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":285,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":191,"com.graphhopper.routing.util.FastestWeightingTest.testSpeed0":172,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":133,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":181,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":302,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":36,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":427,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":338,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":189,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":479,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":401,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":259,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAvoidTunnel":238,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":4,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":473,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":51,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":327,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":361,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":162,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testReduceToMaxSpeed":198,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":13,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":277,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":262,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":260,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":73,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":440,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":456,"com.graphhopper.reader.PrinctonReaderTest.testRead":465,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":441,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":296,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":326,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":318,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":437,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTram":217,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":303,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testPreferenceForSlowSpeed":202,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAvoidTunnel":195,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testCalcPriority":211,"com.graphhopper.routing.util.BikeFlagEncoderTest.testclassBicycle":233,"com.graphhopper.reader.OSMReaderTest.testFoot":113,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":336,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":78,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testSacScale":246,"com.graphhopper.reader.OSMReaderTest.testOneWay":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":391,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":460,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":71,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":75,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":439,"com.graphhopper.coll.IntIntBinHeapTest.testBasic":0,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":56,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":253,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":30,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":370,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSacScale":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":331,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":360,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":413,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":33,"com.graphhopper.routing.util.BikeFlagEncoderTest.testOneway":234,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":271,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":23,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":99,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":176,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":248,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":351,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":328,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":185,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":111,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":424,"com.graphhopper.routing.PathBidirRefTest.testExtract2":156,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":158,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":408,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":80,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":90,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":199,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":97,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":374,"com.graphhopper.coll.IntIntBinHeapTest.testRekey":1,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":417,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":448,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":91,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":118,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":345,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":167,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":418,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":28,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAvoidMotorway":220,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":420,"com.graphhopper.routing.util.EncodingManagerTest.testEncoderWithWrongVersionIsRejected":187,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":387,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":375,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":461,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":274,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":369,"com.graphhopper.GraphHopperTest.testFootAndCar":476,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testOneway":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":429,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":138,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":186,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":321,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":275,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":276,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":405,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":164,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":451,"com.graphhopper.GraphHopperTest.testPrepareOnly":475,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":89,"com.graphhopper.GraphHopperTest.testVia":130,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":58,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":163,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":470,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":403,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":425,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":373,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":179,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":119,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":411,"com.graphhopper.routing.AStarBidirectionTest.initializationError":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":330,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":444,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":281},"transformations":[{"failures":[0,1,2,3],"tindex":"62b8ae4b-8290-11e5-86e3-8ddadb317444","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:186","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))))"},"variableMap":{"segmentSizeInBytes":"size","segmentSizePower":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:110","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"status":-1},{"failures":[],"tindex":"62b8d55c-8290-11e5-86e3-d376f9302446","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:54","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"62b8d55d-8290-11e5-86e3-d9141ab0922e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:161","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"variableMap":{"red":"nodeOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:189","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"62b8d55e-8290-11e5-86e3-5d85c98e37bb","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"dist","incDist2DSum":"dist","fwdSlower":"dist","fullDist2D":"dist","restDist2D":"dist","speed":"dist","decDist2DSum":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:82","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Double.parseDouble(java.lang.String[][int])"},"status":0},{"failures":[],"tindex":"62b8fc6f-8290-11e5-86e3-c7bbd17e128f","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:319","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.stop()"},"variableMap":{"lazySW":"dijkstraSW"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:622","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.StopWatch.start()"},"status":0},{"failures":[137,138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"62b8fc70-8290-11e5-86e3-6f75e2938236","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:641","type":"CtIfImpl","sourcecode":"if (int > 0)\n    java.lang.String += \"->\";\n"},"variableMap":{"str":"tt","i":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:385","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    java.lang.Integer java.lang.Integer = java.util.Map<java.lang.String, java.lang.Integer>.get(java.lang.String);\n    if (java.lang.Integer != null)\n        int = java.lang.Integer;\n    \n} else {\n    if (java.lang.Integer != null) {\n        if (!(com.graphhopper.reader.OSMWay.hasTag(\"service\")))\n            int = java.lang.Integer;\n        else\n            int = java.util.Map<java.lang.String, java.lang.Integer>.get(\"living_street\");\n        \n    } \n}"},"status":-1},{"failures":[],"tindex":"62b8fc71-8290-11e5-86e3-672601e81b03","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:360","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>)) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"sidewalk\", \"no\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"variableMap":{"weightToPrioMap":"weightToPrioMap","com.graphhopper.routing.util.PriorityCode.UNCHANGED":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","intendedValues":"intendedValues","com.graphhopper.routing.util.PriorityCode.REACH_DEST":"com.graphhopper.routing.util.PriorityCode.AVOID_AT_ALL_COSTS","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:546","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"62b8fc72-8290-11e5-86e3-2da44047f785","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:104","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.finished())\n    break;\n"},"status":-2},{"failures":[],"tindex":"62b8fc73-8290-11e5-86e3-a1bda4393b8c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:375","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState> java.util.List<com.graphhopper.util.EdgeIteratorState> = new java.util.ArrayList<com.graphhopper.util.EdgeIteratorState>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:668","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState> java.util.List<com.graphhopper.util.EdgeIteratorState> = new java.util.ArrayList<com.graphhopper.util.EdgeIteratorState>(5)"},"status":-2},{"failures":[151,152],"tindex":"62b92384-8290-11e5-86e3-a93d12ecc21d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:163","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2))"},"variableMap":{"res":"res","fullPL":"fullPL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:160","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1))"},"status":-1},{"failures":[153,154,155,156,157,4,158,5,6,7,159,8,9,160,161,10,162,11,163,164,12,13,14,15,165,16,166,167,17,18,168,19,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,137,192,138,193,194,195,196,197,198,199,200,139,201,202,203,204,205,206,207,208,209,210,140,211,212,213,214,141,142,215,216,217,218,219,220,221,222,223,224,143,225,226,227,228,229,144,230,231,232,233,145,146,234,235,236,237,238,239,240,241,242,243,147,244,245,246,148,247,248,149,249,150,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,48,292,293,294,295,49,296,297,298,299,50,51,300,52,301,302,303,53,304,305,306,307,308,309,310,54,55,311,56,312,57,313,314,315,316,317,318,319,58,320,321,322,323,59,324,325,326,327,60,61,328,62,329,330,331,63,332,333,334,335,336,337,338,64,65,339,66,340,67,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,68,356,357,358,359,69,360,361,362,363,70,71,364,72,365,366,367,73,368,369,370,371,372,373,374,74,75,375,76,376,77,377,378,379,380,381,382,383,384,385,386,387,388,389,390,78,391,392,79,80,81,393,82,83,394,395,396,84,85,397,398,86,399,87,88,400,89,90,401,91,402,403,404,405,406,407,408,409,410,411,92,412,413,93,94,95,414,96,97,415,98,416,99,417,418,100,101,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,102,437,438,439,440,103,441,442,443,444,104,105,445,106,446,447,448,107,449,450,451,452,453,454,455,108,109,456,110,457,111,458,459,460,461,462,112,463,464,465,466,467,113,114,115,116,117,468,118,119,469,470,471,120,472,121,473,122,474,123,475,129,130,131,132,476,133,134,477,135,136,478,479,480],"tindex":"62b92385-8290-11e5-86e3-b5d231f3c6c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:129","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty())\n    continue;\n"},"variableMap":{"entry":"entryVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:133","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"|\")) {\n    java.lang.String = java.lang.String;\n    java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n} "},"status":-1},{"failures":[],"tindex":"62b94a96-8290-11e5-86e3-7900ed30a881","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:806","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * 4"},"status":-2},{"failures":[],"tindex":"62b94a97-8290-11e5-86e3-4316246e1330","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:221","type":"CtLocalVariableImpl","sourcecode":"double double = (double - double) - double"},"variableMap":{"incDist2DSum":"delta_lat","fullDist2D":"factor","decDist2DSum":"factor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:209","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"status":-2},{"failures":[],"tindex":"62b94a98-8290-11e5-86e3-2f47a9b544b7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GraphBuilder:124","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphBuilder.build()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphBuilder:94","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphBuilder.setCHGraph(com.graphhopper.routing.util.Weighting).create()"},"status":0},{"failures":[],"tindex":"62b94a99-8290-11e5-86e3-5b703dc04e2c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:136","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:306","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.hasUTurnSupport()))\n    return ;\n"},"status":0},{"failures":[35,39,40,48,298,50,51,53,54,55,58,326,60,61,63,64,65,68,362,70,71,73,74,75,102,443,104,105,107,108,109],"tindex":"62b94a9a-8290-11e5-86e3-63b48e743765","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:86","type":"CtAssertImpl","sourcecode":"assert long >= 0L"},"variableMap":{"i":"oldOffset"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:724","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)))"},"status":-1},{"failures":[],"tindex":"62b971ab-8290-11e5-86e3-ed845ed8f533","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:118","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false))"},"status":0},{"failures":[],"tindex":"62b971ac-8290-11e5-86e3-978676ae5fbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:91","type":"CtAssignmentImpl","sourcecode":"java.util.zip.ZipEntry = java.util.zip.ZipInputStream.getNextEntry()"},"status":-2},{"failures":[],"tindex":"62b971ad-8290-11e5-86e3-a9acb3352c95","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:809","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.TurnCostExtension:259","type":"CtReturnImpl","sourcecode":"return \"turnCost\""},"status":-1},{"failures":[],"tindex":"62b971ae-8290-11e5-86e3-5bc3963ef8f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.LinearKeyAlgo:70","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.LinearKeyAlgo.setBounds(-180, 180, -90, 90)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.geohash.LinearKeyAlgo.setBounds(com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double, com.graphhopper.util.shapes.BBox.double)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"62b8d55c-8290-11e5-86e3-d376f9302446","diffs":[{"methodsDiff":{"delete":["java.lang.String.trim"]},"type":"staticDiff"}]},{"transformation":"62b971ab-8290-11e5-86e3-ed845ed8f533","diffs":[{"branches":{"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":["com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e1","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e2","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).b"],"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":["com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e1","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e2","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":["com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e1","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).e2","com.graphhopper.util.Helper_void_cleanHack().b","com.graphhopper.storage.BaseGraph$AllEdgeIterator_com.graphhopper.util.EdgeIteratorState_detach(boolean).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.util.EdgeIteratorState.detach","com.graphhopper.storage.index.QueryResult.setClosestEdge"]},"type":"staticDiff"}]},{"transformation":"62b94a99-8290-11e5-86e3-5b703dc04e2c","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"62b8fc6f-8290-11e5-86e3-c7bbd17e128f","diffs":[{"branches":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1"],"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":["com.graphhopper.util.StopWatch_com.graphhopper.util.StopWatch_stop().t1"]},"type":"branch"}]}]}