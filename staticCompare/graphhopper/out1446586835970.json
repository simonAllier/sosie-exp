{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":99,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":121,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":202,"com.graphhopper.reader.OSMReaderTest.testFerry":37,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":349,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":350,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":153,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":317,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":54,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":144,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":66,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":230,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":270,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":179,"com.graphhopper.GraphHopperTest.testPrepare":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":98,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":62,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":277,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":90,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":360,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":206,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":357,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":141,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":87,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":269,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":236,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":114,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":342,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":106,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":140,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":77,"com.graphhopper.GraphHopperTest.testLoadOSM":14,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":244,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":219,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":156,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":237,"com.graphhopper.reader.OSMReaderTest.testSort":40,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":47,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":174,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":301,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":289,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":252,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":126,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":373,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":338,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":188,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":266,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":80,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":307,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":231,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":254,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":195,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":274,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":95,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":15,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":139,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":84,"com.graphhopper.coll.OSMIDMapTest.testGetLong":371,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":321,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":310,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":327,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":304,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":279,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":154,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":157,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":318,"com.graphhopper.GraphHopperAPITest.testLoad":382,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":271,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":261,"com.graphhopper.routing.util.AbstractFlagEncoderTest.testParseDuration":3,"com.graphhopper.reader.OSMReaderTest.testBarriers":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":175,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":86,"com.graphhopper.util.GHUtilityTest.testCopy":353,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":9,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":12,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":16,"com.graphhopper.routing.PathTest.testFindInstruction":112,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":309,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":201,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":290,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":336,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":351,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":322,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":5,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":149,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":73,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":182,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":183,"com.graphhopper.util.InstructionListTest.testWayList2":362,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":245,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":295,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":313,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":159,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":347,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":341,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":172,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":253,"com.graphhopper.storage.RAMDirectoryTest.testSynched":197,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":319,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":207,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":260,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":101,"com.graphhopper.coll.OSMIDMapTest.testGet":368,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":184,"com.graphhopper.routing.PathBidirRefTest.testExtract":115,"com.graphhopper.coll.OSMIDMapTest.testBinSearch":370,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":138,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":240,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":151,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":137,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":344,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":136,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":228,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":135,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":250,"com.graphhopper.util.GHUtilityTest.testSort2":352,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":96,"com.graphhopper.reader.OSMReaderTest.testMain":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":326,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":186,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":185,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":303,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":173,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":331,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":158,"com.graphhopper.storage.StorablePropertiesTest.testStore":345,"com.graphhopper.storage.GraphHopperStorageTest.testClone":263,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":181,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":198,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":17,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":273,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":10,"com.graphhopper.routing.PathTest.testTime":108,"com.graphhopper.util.InstructionListTest.testCreateGPX":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":165,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":210,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":247,"com.graphhopper.reader.OSMReaderTest.testRelation":376,"com.graphhopper.coll.OSMIDSegmentedMapTest.testZeroKey":386,"com.graphhopper.util.GHUtilityTest.testSortDirected":355,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":170,"com.graphhopper.util.InstructionListTest.testCreateGPXWithEle":0,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":123,"com.graphhopper.GraphHopperTest.testFootOnly":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":221,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":4,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":208,"com.graphhopper.storage.RAMDirectoryTest.testNoErrorForDACreate":199,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":109,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":83,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":63,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":160,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":249,"com.graphhopper.search.NameIndexTest.testCreate":367,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":239,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":118,"com.graphhopper.routing.QueryGraphTest.testOneWay":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":248,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":214,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":235,"com.graphhopper.reader.OSMReaderTest.testWithBounds":48,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":6,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":53,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":216,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":330,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":323,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":259,"com.graphhopper.search.NameIndexTest.testFlush":365,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":127,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":81,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":292,"com.graphhopper.util.InstructionListTest.testWayList":361,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":168,"com.graphhopper.GraphHopperAPITest.testDisconnected179":383,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":33,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":332,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":233,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":55,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":375,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":155,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":162,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":30,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":265,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":333,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":339,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":335,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":334,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":75,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":283,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":282,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":71,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":224,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":305,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":103,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":258,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":251,"com.graphhopper.routing.PathTest.testWayList":111,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":229,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":167,"com.graphhopper.coll.OSMIDMapTest.testGet2":369,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":104,"com.graphhopper.reader.dem.HeightTileTest.testGetHeightForNegativeTile":379,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":88,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":120,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":234,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":218,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":142,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":7,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":276,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":146,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":314,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet2":385,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":113,"com.graphhopper.util.GHUtilityTest.testSort":354,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":128,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":192,"com.graphhopper.search.NameIndexTest.testPut":364,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":262,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":306,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":343,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":203,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":211,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":145,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":125,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":189,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":13,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":19,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":34,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":300,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":302,"com.graphhopper.storage.MMapDirectoryTest.testSynched":196,"com.graphhopper.reader.dem.HeightTileTest.testCalcMean":380,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":32,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":324,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":150,"com.graphhopper.routing.PathTest.testFound":107,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":298,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":36,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":212,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":78,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":356,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":320,"com.graphhopper.search.NameIndexTest.testNoErrorOnLargeName":366,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":297,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":268,"com.graphhopper.util.InstructionListTest.testEmptyList":359,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":94,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":187,"com.graphhopper.reader.PrinctonReaderTest.testRead":374,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":315,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":372,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":328,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":161,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":325,"com.graphhopper.reader.OSMReaderTest.testFoot":38,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":132,"com.graphhopper.reader.dem.HeightTileTest.testGetHeight":381,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":242,"com.graphhopper.reader.OSMReaderTest.testOneWay":50,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":243,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":163,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":287,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":337,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":72,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":281,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":267,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":110,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":67,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":226,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":64,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":76,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":22,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":65,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":348,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":61,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":256,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":190,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":255,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":378,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":147,"com.graphhopper.routing.PathBidirRefTest.testExtract2":116,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":220,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":205,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":232,"com.graphhopper.search.NameIndexTest.testTooLongNameNoError":363,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":285,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":176,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":213,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":100,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":238,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":194,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":288,"com.graphhopper.GraphHopperTest.testFootAndCar":31,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":280,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":384,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":217,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":180,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":311,"com.graphhopper.storage.StorablePropertiesTest.testLoad":346,"com.graphhopper.GraphHopperTest.testPrepareOnly":26,"com.graphhopper.GraphHopperTest.testVia":28,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":204,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":119,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":91,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":46,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":377,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":227,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":215,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":148,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":2,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":284,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":223,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":169,"com.graphhopper.util.InstructionListTest.testFind":358,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":299},"transformations":[{"failures":[],"tindex":"847e55b1-8273-11e5-bc8d-63e4b39f034e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:86","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n} "},"variableMap":{"fromMap":"bestWeightMapOther","currEdge":"currFrom","traversalMode":"traversalMode","from":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:115","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.routing.util.TraversalMode.isEdgeBased())) {\n    gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n    if ((com.graphhopper.routing.AStar.AStarEdge) != null) {\n        gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>;\n        com.graphhopper.routing.AStarBidirection.updateBestPath(com.graphhopper.util.GHUtility.getEdge(com.graphhopper.storage.Graph, int, com.graphhopper.routing.AStar.AStarEdge.int), com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n} else {\n    if (((com.graphhopper.routing.AStar.AStarEdge) != null) && ((com.graphhopper.routing.AStar.AStarEdge.int) == int)) {\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        com.graphhopper.routing.PathBidirRef.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        boolean = true;\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"847f8e32-8273-11e5-bc8d-015d486f56a1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:73","type":"CtLocalVariableImpl","sourcecode":"final com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:594","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.CHEdgeExplorer.setBaseNode(com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler.getNode())"},"status":-2},{"failures":[],"tindex":"847f8e33-8273-11e5-bc8d-856d2bc28a22","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:48","type":"CtAssignmentImpl","sourcecode":"long = java.lang.System.nanoTime()"},"variableMap":{"lastTime":"weightLong"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:594","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.CHGraphImpl.long"},"status":0},{"failures":[0,1,2],"tindex":"847fb544-8273-11e5-bc8d-c9545aec6531","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:1066","type":"CtReturnImpl","sourcecode":"return \"TREE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:230","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString().replaceAll(\"\\\\\\'\", \"\\\"\")"},"status":-1},{"failures":[3,4],"tindex":"847fb545-8273-11e5-bc8d-1bb0fb489986","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:307","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:504","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.parseInt(java.lang.String)"},"status":-1},{"failures":[5,6,7,8,9,10,11,12],"tindex":"847fb546-8273-11e5-bc8d-99d94f0f0fe5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:210","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"impassable\", \"yes\")) || (com.graphhopper.reader.OSMWay.hasTag(\"status\", \"impassable\")))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:276","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.Set<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[13],"tindex":"847fb547-8273-11e5-bc8d-1fc87798f7c0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:266","type":"CtIfImpl","sourcecode":"if (((long % 4) != 0) && ((long % 4) != 2))\n    throw new java.lang.IllegalMonitorStateException((\"bytePos of wrong multiple for RAMInt \" + long));\n"},"variableMap":{"bytePos":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:223","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.util.AbstractFlagEncoder.isForward(long)) {\n    double double = com.graphhopper.routing.util.AbstractFlagEncoder.getSpeed(long);\n    double double = 1 + (2 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double double = 1 - (5 * com.graphhopper.util.Helper.(com.graphhopper.util.Helper.keepIn(double, 0, 0.2)));\n    double = double * double;\n    double = (double * (((double * double) + (double * double)) + (1 * double))) / double;\n    long = com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(long, com.graphhopper.util.Helper.com.graphhopper.util.Helper.keepIn(double, ((com.graphhopper.routing.util.BikeCommonFlagEncoder.int) / 2), double));\n} "},"status":-1},{"failures":[],"tindex":"847fdc58-8273-11e5-bc8d-a30c1daf1ddb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:478","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"variableMap":{"high":"node","guess":"node","low":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:96","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getAdjNode()"},"status":-2},{"failures":[14],"tindex":"847fdc59-8273-11e5-bc8d-433baa558169","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:353","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.close()"},"status":-1},{"failures":[15,16,17],"tindex":"847fdc5a-8273-11e5-bc8d-5f789da2a85e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"removed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:68","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int int = 500;\n    int int = (int / int) + 1;\n    int int = 0;\n    for (int int = 0 ; int < int ; int++) {\n        int += com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, int, java.lang.Math.min((int - 1), (int + int)));\n        int += int;\n    }\n} else {\n    int = com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList, 0, (int - 1));\n}"},"status":-1},{"failures":[18,19,20,21,22,23,24],"tindex":"8480036b-8273-11e5-bc8d-0192e8f830aa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:770","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double = double;\n} "},"variableMap":{"min":"tmpLon","dist":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:101","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.shapes.Circle == null) || (double < (com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.Circle.getLat(), com.graphhopper.util.shapes.Circle.getLon(), double, double)))) {\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false));\n    com.graphhopper.storage.index.QueryResult.setClosestNode(int);\n    com.graphhopper.storage.index.QueryResult.setQueryDistance(double);\n    if (double <= 0)\n        break;\n    \n    com.graphhopper.util.shapes.Circle = new com.graphhopper.util.shapes.Circle(double , double , double , com.graphhopper.util.DistanceCalc);\n} "},"status":-1},{"failures":[],"tindex":"8480036c-8273-11e5-bc8d-971f8df3a3bb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:432","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"\\n\""},"variableMap":{"str":"algo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:209","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":0},{"failures":[],"tindex":"8480036d-8273-11e5-bc8d-910a761ea171","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:213","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.next()"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,14,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"8480036e-8273-11e5-bc8d-c5501e93baba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:197","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Long.parseLong(java.lang.String)"},"status":-1},{"failures":[51,52,53,54,55,56,57,58,59,60,13,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,25,26,133,134,135,136,137,138,27,28,29,30,31,32,14,139,33,34,35,36,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,18,209,210,211,19,20,21,22,23,24,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,2,363,364,365,366,367,368,369,370,371,372,373,374,375,37,38,39,40,41,42,43,44,45,376,377,46,47,48,49,378,50,379,380,381,382,383],"tindex":"84802a7f-8273-11e5-bc8d-a1bc815ba23e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:110","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.DAType.isInteg()) {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n} else {\n    if (com.graphhopper.storage.DAType.isStoring())\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , true , java.nio.ByteOrder);\n    else\n        com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder);\n    \n}"},"status":-1},{"failures":[],"tindex":"84805190-8273-11e5-bc8d-5bf361796547","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:215","type":"CtInvocationImpl","sourcecode":"javax.xml.stream.XMLStreamReader.close()"},"status":0},{"failures":[384,385,386],"tindex":"84805191-8273-11e5-bc8d-858757dc0596","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:804","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:139","type":"CtReturnImpl","sourcecode":"return -1"},"status":-1},{"failures":[],"tindex":"848078a2-8273-11e5-bc8d-7343df9c7554","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:688","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.loadEdgesHeader()"},"status":-2},{"failures":[],"tindex":"848078a3-8273-11e5-bc8d-331e3c1bf224","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:81","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry"},"variableMap":{"edgeEntry":"currTo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:102","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry>.put(int, com.graphhopper.storage.EdgeEntry)"},"status":0},{"failures":[63,64,65,66,67,68,69,70,72,73,74,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,26,27,28,29,32,14,33,35],"tindex":"848078a4-8273-11e5-bc8d-a90f7ebb6758","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"maxLevel","index":"maxLevel"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:212","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.storage.CHGraphImpl.setLevel(int, int);\n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"84805190-8273-11e5-bc8d-5bf361796547","diffs":[{"methodsDiff":{"delete":["javax.xml.stream.XMLStreamReader.close"]},"type":"staticDiff"}]}]}