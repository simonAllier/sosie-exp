{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":2,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":14,"com.graphhopper.reader.OSMReaderTest.testFerry":91,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":83,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":0,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":24,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":70,"com.graphhopper.reader.OSMReaderTest.testWithBounds":102,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":1,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":23,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":13,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":19,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":81,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":45,"com.graphhopper.GraphHopperTest.testPrepare":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":46,"com.graphhopper.search.NameIndexTest.testFlush":77,"com.graphhopper.reader.OSMReaderTest.testFoot":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":37,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":85,"com.graphhopper.reader.OSMReaderTest.testOneWay":105,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":59,"com.graphhopper.GraphHopperAPITest.testDisconnected179":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":21,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":16,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":80,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":31,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":96,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":97,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":32,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":49,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":82,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":88,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":5,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":84,"com.graphhopper.GraphHopperTest.testLoadOSM":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":41,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":40,"com.graphhopper.reader.OSMReaderTest.testSort":94,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":54,"com.graphhopper.reader.OSMReaderTest.testMain":93,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":58,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":104,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":47,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":63,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":107,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":57,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":6,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":44,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":9,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":52,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":103,"com.graphhopper.storage.StorablePropertiesTest.testStore":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":43,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":60,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":10,"com.graphhopper.GraphHopperTest.testFootAndCar":89,"com.graphhopper.coll.IntDoubleBinHeapTest.testRekey":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":33,"com.graphhopper.GraphHopperTest.testPrepareOnly":69,"com.graphhopper.GraphHopperTest.testVia":71,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":53,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":55,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":56,"com.graphhopper.GraphHopperAPITest.testLoad":78,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":72,"com.graphhopper.GraphHopperTest.testFootOnly":90,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":99,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":30,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":67,"com.graphhopper.reader.OSMReaderTest.testBarriers":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":39,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":51},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"4dea033c-794e-11e5-8b4d-e7b2f677a569","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:171","type":"CtReturnImpl","sourcecode":"return !boolean"},"variableMap":{"obtained":"storing"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:122","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[80,81,82,83,84,85],"tindex":"4dea2a4d-794e-11e5-8b4d-d387318b840b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:125","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"size":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:121","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"4dea2a4e-794e-11e5-8b4d-8fef1cf3f828","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:276","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString()"},"status":-2},{"failures":[83,86,84,85],"tindex":"4dea515f-794e-11e5-8b4d-9ff058b40d03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:85","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntDoubleBinHeap.peek_element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:102","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.IntDoubleBinHeap.poll_element()"},"status":-1},{"failures":[68,69,70,71,87,88,89,72,73,74,75,90,76,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"4dea5160-794e-11e5-8b4d-8123387a334e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:245","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[],"tindex":"4dea5161-794e-11e5-8b4d-853f0ddd8f26","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:120","type":"CtLocalVariableImpl","sourcecode":"long long = ((long)(int)) * (com.graphhopper.storage.BaseGraph.int)"},"status":-2},{"failures":[],"tindex":"4dea5162-794e-11e5-8b4d-27fd1c123430","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:542","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((((\"adjNode \" + int) + \" out of bounds [0,\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.nf(int))) + \")\"))"},"status":0},{"failures":[98,107],"tindex":"4dea5163-794e-11e5-8b4d-434826bb4599","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:254","type":"CtAssertImpl","sourcecode":"assert (int + 2) <= (int) : \"integer cannot be distributed over two segments\""},"variableMap":{"segmentSizeInBytes":"edgeIdFrom","index":"edgeIdFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:94","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n        int = com.graphhopper.util.EdgeIterator.getEdge();\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"4dea7874-794e-11e5-8b4d-2de0c56c5af0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:140","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:167","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.String>"},"status":-2},{"failures":[],"tindex":"4dea7875-794e-11e5-8b4d-5b41d164f00d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:290","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.storage.Graph.getNodes()"},"status":-2},{"failures":[],"tindex":"4dea7876-794e-11e5-8b4d-0f9a8ce0822e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:412","type":"CtIfImpl","sourcecode":"if (\"none\".equals(java.lang.String))\n    return 140;\n"},"status":-2},{"failures":[],"tindex":"4dea7877-794e-11e5-8b4d-212e72401df6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:596","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.clear()"},"variableMap":{"prepareAlgo":"prepareAlgo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:619","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes((((int)(double)) * 100))"},"status":-2},{"failures":[],"tindex":"4dea7878-794e-11e5-8b4d-eb2f21b304da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:665","type":"CtAssignmentImpl","sourcecode":"int = (int) + 4"},"status":-2},{"failures":[],"tindex":"4dea9f89-794e-11e5-8b4d-1d0e4ebb0e73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:118","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalStateException(\"Too many segments needs to be allocated. Increase segmentSize.\");\n"},"variableMap":{"segmentsToMap":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:49","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (((int[][int]) == 0) && (!(com.graphhopper.storage.GraphHopperStorage.isNodeRemoved(int)))) {\n        com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm.strongConnect(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"4dea9f8a-794e-11e5-8b4d-93fce833844b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:126","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    throw new java.lang.IllegalStateException(\"collection is already empty!?\");\n} "},"variableMap":{"size":"newShortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:287","type":"CtIfImpl","sourcecode":"if (((long) % long) == 0) {\n    double += com.graphhopper.util.StopWatch.getSeconds();\n    double += com.graphhopper.util.StopWatch.getSeconds();\n    double += com.graphhopper.util.StopWatch.getSeconds();\n    double += com.graphhopper.util.StopWatch.getSeconds();\n    com.graphhopper.util.Logger.info((((((((((((((((((com.graphhopper.util.Helper.nf(long)) + \", updates:\") + int) + \", nodes: \") + (com.graphhopper.util.Helper.nf(com.graphhopper.coll.GHTreeMapComposed.getSize()))) + \", shortcuts:\") + (com.graphhopper.util.Helper.nf(int))) + \", dijkstras:\") + (com.graphhopper.util.Helper.nf(long))) + \", \") + com.graphhopper.routing.ch.PrepareContractionHierarchies.(getTimesAsString())) + \", meanDegree:\") + ((long)(double))) + \", algo:\") + (com.graphhopper.routing.DijkstraOneToMany.getMemoryUsageAsString())) + \", \") + (com.graphhopper.util.Helper.getMemInfo())));\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n    com.graphhopper.util.StopWatch = new com.graphhopper.util.StopWatch();\n} "},"status":-2},{"failures":[],"tindex":"4dea9f8b-794e-11e5-8b4d-67c6c788ebe9","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:896","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:550","type":"CtAssignmentImpl","sourcecode":"int = (-int) - 3"},"status":-2},{"failures":[],"tindex":"4deac69c-794e-11e5-8b4d-2ba5b3d21ece","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:399","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.PointList.getSize()"},"variableMap":{"points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:155","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + (com.graphhopper.util.PointList.getSize())"},"status":-2},{"failures":[],"tindex":"4deac69d-794e-11e5-8b4d-21b581eeb187","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:180","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = ((int)((java.lang.Math.log(int)) / (java.lang.Math.log(2))));\n    int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int);\n} "},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"tmpPrevEdge","bytes":"com.graphhopper.util.EdgeIterator.NO_EDGE","segmentSizeInBytes":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:454","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.CHEdgeIterator.next()) {\n    if ((com.graphhopper.util.CHEdgeIterator.isShortcut()) && ((com.graphhopper.util.CHEdgeIterator.getEdge()) == (com.graphhopper.util.EdgeIteratorState.getEdge()))) {\n        long long = int == (com.graphhopper.util.EdgeIterator.int) ? -1 : com.graphhopper.storage.CHGraphImpl.isShortcut(int) ? com.graphhopper.storage.EdgeAccess.toPointer(int) : com.graphhopper.storage.BaseGraph.com.graphhopper.storage.EdgeAccess.toPointer(int);\n        com.graphhopper.storage.EdgeAccess.internalEdgeDisconnect(com.graphhopper.util.EdgeIteratorState.getEdge(), long, com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getBaseNode());\n        break;\n    } \n    int = com.graphhopper.util.CHEdgeIterator.getEdge();\n}"},"status":-2},{"failures":[],"tindex":"4deac69e-794e-11e5-8b4d-fd67608518f3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:754","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.writeEdge(int, int, int, int, int)"},"variableMap":{"edgeAccess":"this","edgeId":"fromNodeId","updatedB":"newEdgeId","updatedA":"toNodeId","linkA":"toNodeId","linkB":"com.graphhopper.util.EdgeIterator.NO_EDGE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:143","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.EdgeAccess.writeEdge(int, int, int, com.graphhopper.util.EdgeIterator.int, com.graphhopper.util.EdgeIterator.int)"},"status":-2},{"failures":[],"tindex":"4deac69f-794e-11e5-8b4d-69c7c57ba458","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:275","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (((java.lang.String) + \"/\") + java.lang.String) + \"hgt.zip\""},"variableMap":{"baseUrl":"debugInfo","fileDetails":"debugInfo","zippedURL":"debugInfo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:57","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}