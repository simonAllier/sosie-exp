{"failureDictionary":{"com.graphhopper.storage.RAMDataAccessTest.testTrimTo":150,"com.graphhopper.storage.RAMDataAccessTest.testLoadClose":152,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":91,"com.graphhopper.reader.OSMReaderTest.testFerry":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":17,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":173,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":7,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":157,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":26,"com.graphhopper.storage.RAMDataAccessTest.testSet_Get_Short_Long":140,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":4,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":87,"com.graphhopper.storage.RAMDataAccessTest.testSegmentSize":143,"com.graphhopper.routing.util.EncodingManagerTest.testToDetailsStringIncludesEncoderVersionNumber":66,"com.graphhopper.reader.OSMReaderTest.testWithBounds":50,"com.graphhopper.storage.MMapDataAccessTest.testSegments":123,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":153,"com.graphhopper.storage.UnsafeDataAccessTest.testSegmentSize":158,"com.graphhopper.storage.RAMDataAccessTest.testBoundsCheck":141,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":125,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_Get_Short_Long":126,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":54,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":122,"com.graphhopper.storage.SynchedDAWrapperTest.testBoundsCheck":127,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":24,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":111,"com.graphhopper.storage.RAMDataAccessTest.testRenameNoFlush":148,"com.graphhopper.GraphHopperTest.testPrepare":28,"com.graphhopper.storage.MMapDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":118,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":64,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testService":9,"com.graphhopper.reader.OSMReaderTest.testFoot":40,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":2,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":93,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":108,"com.graphhopper.reader.OSMReaderTest.testOneWay":52,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":94,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":112,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":19,"com.graphhopper.GraphHopperAPITest.testDisconnected179":68,"com.graphhopper.storage.RAMDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":146,"com.graphhopper.storage.SynchedDAWrapperTest.testSet_GetBytes":128,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":109,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":12,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":34,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":165,"com.graphhopper.storage.SynchedDAWrapperTest.testEnsureCapacity":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":86,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":124,"com.graphhopper.storage.SynchedDAWrapperTest.testSegments":137,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":61,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":117,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":88,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":44,"com.graphhopper.storage.SynchedDAWrapperTest.testCopy":130,"com.graphhopper.reader.dem.CGIARProviderTest.testDown":0,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":45,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":80,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":107,"com.graphhopper.GraphHopperTest.testNoNPE_ifLoadNotSuccessful":38,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":164,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":29,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":119,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":159,"com.graphhopper.storage.SynchedDAWrapperTest.testTrimTo":136,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":103,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":104,"com.graphhopper.storage.RAMDataAccessTest.testCopy":144,"com.graphhopper.GraphHopperTest.testLoadOSM":32,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameNoFlush":134,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":95,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":101,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":74,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":89,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":57,"com.graphhopper.storage.UnsafeDataAccessTest.testTrimTo":163,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":82,"com.graphhopper.reader.OSMReaderTest.testSort":42,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":102,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":55,"com.graphhopper.storage.RAMDataAccessTest.testSegments":151,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":100,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":22,"com.graphhopper.storage.SynchedDAWrapperTest.testRenameFlush":131,"com.graphhopper.reader.OSMReaderTest.testMain":41,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":78,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":65,"com.graphhopper.storage.RAMDataAccessTest.testHeader":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":15,"com.graphhopper.storage.RAMIntDataAccessTest.testSegmentSize":167,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":172,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":174,"com.graphhopper.storage.MMapDataAccessTest.testHeader":121,"com.graphhopper.storage.MMapDataAccessTest.testCopy":116,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":60,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":83,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":120,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":75,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":97,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":105,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":85,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_Get_Short_Long":155,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":170,"com.graphhopper.storage.SynchedDAWrapperTest.testHeader":135,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testService":11,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":70,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":8,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":168,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":73,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":51,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":14,"com.graphhopper.storage.RAMDataAccessTest.testSet_GetBytes":142,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":84,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":90,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":20,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":63,"com.graphhopper.storage.RAMDataAccessTest.testRenameFlush":145,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":139,"com.graphhopper.GraphHopperTest.testFootAndCar":30,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":33,"com.graphhopper.storage.UnsafeDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":160,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":16,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":114,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":92,"com.graphhopper.storage.RAMDataAccessTest.testEnsureCapacity":147,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":113,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":98,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":72,"com.graphhopper.reader.OSMReaderTest.testRelation":53,"com.graphhopper.storage.UnsafeDataAccessTest.testEnsureCapacity":161,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":154,"com.graphhopper.GraphHopperTest.testPrepareOnly":25,"com.graphhopper.GraphHopperTest.testVia":27,"com.graphhopper.routing.util.BikeFlagEncoderTest.testService":13,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":35,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":23,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":48,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":10,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":81,"com.graphhopper.GraphHopperAPITest.testLoad":67,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":31,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadClose":138,"com.graphhopper.storage.UnsafeDataAccessTest.testBoundsCheck":156,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":71,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":6,"com.graphhopper.GraphHopperTest.testFootOnly":36,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameNoFlush":162,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":76,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":47,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":77,"com.graphhopper.reader.OSMReaderTest.testBarriers":43,"com.graphhopper.storage.MMapDataAccessTest.testSegmentSize":115,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":176,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":3,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":37,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":69,"com.graphhopper.storage.SynchedDAWrapperTest.testSegmentSize":129,"com.graphhopper.storage.SynchedDAWrapperTest.testExceptionIfNoEnsureCapacityWasCalled":132,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_GetBytes":166,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":99},"transformations":[{"failures":[0],"tindex":"56e521e4-828b-11e5-8594-6d1cda4d8030","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:131","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"lazyUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"lazyUpdates":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.CGIARProvider:270","type":"CtIfImpl","sourcecode":"if (!((double >= 0) || ((int - double) < (double))))\n    int = int - (int);\n"},"status":-1},{"failures":[],"tindex":"56e548f5-828b-11e5-8594-fb44fe90bc1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:406","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanMappedByteBuffer(java.nio.ByteBuffer)"},"status":0},{"failures":[1,2,3,4,5,6],"tindex":"56e548f6-828b-11e5-8594-11182f74c18a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:214","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.EdgeEntry.double) > double) {\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry);\n    com.graphhopper.storage.EdgeEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.storage.EdgeEntry.double = double;\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry);\n} else\n    continue;\n"},"status":-1},{"failures":[],"tindex":"56e57007-828b-11e5-8594-bfe1809a3ef5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags())"},"variableMap":{"from":"detach","to":"detach"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"status":-2},{"failures":[7,8,9,10,11,12,13],"tindex":"56e57008-828b-11e5-8594-6f5b47a23a3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:551","type":"CtIfImpl","sourcecode":"if (((java.util.HashSet<java.lang.String>.contains(java.lang.String)) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"use_sidepath\"))) || (\"parking_aisle\".equals(java.lang.String))) {\n    if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"yes\"))\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(100.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    else\n        java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n    \n} "},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"56e57009-828b-11e5-8594-6999a6f44b23","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:770","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.GraphHopperStorage.loadExisting()))\n    return false;\n"},"variableMap":{"ghStorage":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:246","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.StorableProperties.loadExisting()) {\n    com.graphhopper.storage.StorableProperties.checkVersions(false);\n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\");\n    if ((com.graphhopper.routing.util.EncodingManager) == null) {\n        if (java.lang.String.isEmpty())\n            throw new java.lang.IllegalStateException((\"No EncodingManager was configured. And no one was found in the graph: \" + (com.graphhopper.storage.Directory.getLocation())));\n        \n        int int = 4;\n        if (\"8\".equals(com.graphhopper.storage.StorableProperties.get(\"graph.bytesForFlags\")))\n            int = 8;\n        \n        com.graphhopper.routing.util.EncodingManager = new com.graphhopper.routing.util.EncodingManager(java.lang.String , int);\n    } else if ((!(java.lang.String.isEmpty())) && (!(com.graphhopper.routing.util.EncodingManager.toDetailsString().equalsIgnoreCase(java.lang.String)))) {\n        throw new java.lang.IllegalStateException((((((\"Encoding does not match:\\nGraphhopper config: \" + (com.graphhopper.routing.util.EncodingManager.toDetailsString())) + \"\\nGraph: \") + java.lang.String) + \", dir:\") + (com.graphhopper.storage.Directory.getLocation())));\n    } \n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.byteOrder\");\n    if (!(java.lang.String.equalsIgnoreCase((\"\" + (com.graphhopper.storage.Directory.getByteOrder())))))\n        throw new java.lang.IllegalStateException(((((\"Configured byteOrder (\" + java.lang.String) + \") is not equal to byteOrder of loaded graph (\") + (com.graphhopper.storage.Directory.getByteOrder())) + \")\"));\n    \n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.dimension\");\n    com.graphhopper.storage.BaseGraph.loadExisting(java.lang.String);\n    java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.chWeightings\");\n    java.lang.String java.lang.String = com.graphhopper.storage.GraphHopperStorage.getCHWeightings().toString();\n    if (!(java.lang.String.equals(java.lang.String)))\n        throw new java.lang.IllegalStateException((((\"Configured graph.chWeightings: \" + java.lang.String) + \" is not equal to loaded \") + java.lang.String));\n    \n    for (com.graphhopper.storage.CHGraphImpl com.graphhopper.storage.CHGraphImpl : java.util.Collection<com.graphhopper.storage.CHGraphImpl>) {\n        if (!(com.graphhopper.storage.CHGraphImpl.loadExisting()))\n            throw new java.lang.IllegalStateException((\"Cannot load \" + com.graphhopper.storage.CHGraphImpl));\n        \n    }\n    return true;\n} "},"status":-1},{"failures":[53,54],"tindex":"56e5971a-828b-11e5-8594-675162e52355","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:254","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder : java.util.List<com.graphhopper.routing.util.AbstractFlagEncoder>) {\n    long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n}"},"status":-1},{"failures":[],"tindex":"56e5971b-828b-11e5-8594-0523954d3fc6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"variableMap":{"need":"java.lang.Integer.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:391","type":"CtIfImpl","sourcecode":"if (double >= (java.lang.Integer.int))\n    return java.lang.Integer.int;\n"},"status":-2},{"failures":[55,56,57,30,58,59,60,2,61,62,4,63,5,64,65],"tindex":"56e5971c-828b-11e5-8594-11f634d7aae2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:40","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Class.forName(\"sun.misc.Cleaner\");\n    java.lang.Class.forName(\"java.nio.DirectByteBuffer\").getMethod(\"cleaner\");\n    boolean = true;\n} catch (java.lang.Exception e) {\n    boolean = false;\n}"},"variableMap":{"v":"switchWrapper"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:72","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n} "},"status":-1},{"failures":[25,32,37,66],"tindex":"56e5be2d-828b-11e5-8594-9318b121e082","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:73","type":"CtReturnImpl","sourcecode":"return \"PLANE_PROJ\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:310","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,55,102,56,57,103,27,28,29,30,31,32,35,36,41,42,43,62,4,63,64],"tindex":"56e5be2e-828b-11e5-8594-312ca222aed3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:760","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.IllegalStateException((\"graph is empty after in-place removal but was \" + int));\n"},"variableMap":{"removeNodeCount":"iteration","nodeCount":"iteration"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:726","type":"CtIfImpl","sourcecode":"if (int > 0)\n    com.graphhopper.storage.index.LocationIndexTree.findNetworkEntriesSingleRegion(gnu.trove.set.hash.TIntHashSet, double, double);\n"},"status":-1},{"failures":[104,105,106,107,108],"tindex":"56e5be2f-828b-11e5-8594-2b1672b34a18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:177","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = new java.io.RandomAccessFile(com.graphhopper.storage.AbstractDataAccess.getFullName() , \"rw\");\n    try {\n        long long = com.graphhopper.storage.UnsafeDataAccess.getCapacity();\n        com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n        java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n        byte[] byte[] = new byte[int];\n        int int = com.graphhopper.storage.UnsafeDataAccess.getSegments();\n        for (int int = 0 ; int < int ; int++) {\n            com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int);\n            java.io.RandomAccessFile.write(byte[]);\n        }\n    } finally {\n        java.io.RandomAccessFile.close();\n    }\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException((\"Couldn\\'t store bytes to \" + com.graphhopper.storage.AbstractDataAccess.(toString())) , java.lang.Exception);\n}"},"status":-1},{"failures":[109],"tindex":"56e5e540-828b-11e5-8594-ab945667ebc4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:245","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"bicycle\")"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:149","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"highway\")"},"status":-1},{"failures":[],"tindex":"56e5e541-828b-11e5-8594-55e293475d83","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:442","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"56e5e542-828b-11e5-8594-7b3b94c183d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.DAType:146","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:897","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.routing.util.FlagEncoder.toString()"},"status":-2},{"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,104,160,161,162,105,163,106,107,108,164,165,166,167,168,169,170,171,172,173,174,175,176,177],"tindex":"56e5e543-828b-11e5-8594-af3cd5cd9d86","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:216","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"56e60c54-828b-11e5-8594-73dc953935ca","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:526","type":"CtReturnImpl","sourcecode":"return int > int ? int + 1 : int"},"variableMap":{"nodeB":"intVal","edgeId":"intVal","nodeA":"intVal"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:182","type":"CtReturnImpl","sourcecode":"return int - 1"},"status":-2},{"failures":[164],"tindex":"56e60c55-828b-11e5-8594-87e8389fb775","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:312","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long & (int)))"},"variableMap":{"bytePos":"tmpIndex","indexDivisor":"segmentSizeIntsPower"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:254","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(long >>> (int)))"},"status":-1},{"failures":[],"tindex":"56e60c56-828b-11e5-8594-b317df57c489","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:74","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMIntDataAccess.setSegmentSize(int)"},"variableMap":{"segmentSizeInBytes":"segmentSizeInBytes","rda":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.AbstractDataAccess.setSegmentSize(int)"},"status":0},{"failures":[],"tindex":"56e60c57-828b-11e5-8594-35db08dbf97b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:238","type":"CtLocalVariableImpl","sourcecode":"double double = double[][int]"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"56e548f5-828b-11e5-8594-fb44fe90bc1b","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.Helper.cleanMappedByteBuffer"]},"type":"staticDiff"},{"branches":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"],"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":["com.graphhopper.util.Helper$1_java.lang.Object_run().t1","com.graphhopper.util.Helper$1_java.lang.Object_run().b","com.graphhopper.util.Helper_void_cleanMappedByteBuffer(java.nio.ByteBuffer).b"]},"type":"branch"}]},{"transformation":"56e60c56-828b-11e5-8594-b317df57c489","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.AbstractDataAccess.setSegmentSize"]},"type":"staticDiff"}]}]}