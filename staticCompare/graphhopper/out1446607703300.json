{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":2,"com.graphhopper.routing.PathTest.testFindInstruction":22,"com.graphhopper.routing.QueryGraphTest.testOneWay":9,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":15,"com.graphhopper.reader.OSMReaderTest.testWithBounds":94,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":5,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":30,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":40,"com.graphhopper.util.BitUtilLittleTest.testToDouble":78,"com.graphhopper.coll.OSMIDMapTest.testUpdateOfLowerKeys":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":26,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":27,"com.graphhopper.GraphHopperTest.testPrepare":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":17,"com.graphhopper.util.InstructionListTest.testWayList2":51,"com.graphhopper.reader.OSMReaderTest.testFoot":88,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":7,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":10,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":87,"com.graphhopper.util.InstructionListTest.testWayList":50,"com.graphhopper.reader.OSMReaderTest.testOneWay":89,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":14,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":92,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":72,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":11,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":31,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":47,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":18,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":86,"com.graphhopper.coll.OSMIDMapTest.testGet":73,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":60,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":25,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":83,"com.graphhopper.GraphHopperTest.testLoadOSM":63,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":57,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":38,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":56,"com.graphhopper.reader.OSMReaderTest.testSort":46,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":55,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":54,"com.graphhopper.reader.OSMReaderTest.testMain":45,"com.graphhopper.util.BitUtilLittleTest.testToLong":79,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":43,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":70,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":96,"com.graphhopper.routing.PathTest.testWayList":21,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":33,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":84,"com.graphhopper.coll.OSMIDMapTest.testGet2":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":35,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":97,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":36,"com.graphhopper.storage.StorablePropertiesTest.testStore":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":69,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":16,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":91,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":29,"com.graphhopper.GraphHopperTest.testFootAndCar":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":41,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":80,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":32,"com.graphhopper.coll.OSMIDMapTest.testGetLong":75,"com.graphhopper.util.InstructionListTest.testCreateGPX":95,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":34,"com.graphhopper.storage.UnsafeDataAccessTest.testNativeOrder":77,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":6,"com.graphhopper.GraphHopperTest.testPrepareOnly":71,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":20,"com.graphhopper.GraphHopperTest.testVia":58,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":1,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":66,"com.graphhopper.GraphHopperAPITest.testLoad":44,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":62,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":4,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":52,"com.graphhopper.GraphHopperTest.testFootOnly":65,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":93,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":37,"com.graphhopper.util.InstructionListTest.testFind":49,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":85,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":23},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"1a5c6c4d-82a4-11e5-a178-bd843ecdc971","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:826","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.PointList.getDimension()) != (com.graphhopper.storage.NodeAccess.getDimension()))\n    throw new java.lang.IllegalArgumentException(((((\"Cannot use pointlist which is \" + (com.graphhopper.util.PointList.getDimension())) + \"D for graph which is \") + (com.graphhopper.storage.NodeAccess.getDimension())) + \"D\"));\n"},"variableMap":{"nodeAccess":"nodeAccess","pillarNodes":"pillarNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:917","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int)"},"status":-1},{"failures":[],"tindex":"1a5c935e-82a4-11e5-a178-111bb116821e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:156","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"1a5c935f-82a4-11e5-a178-2746f52e7ac8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:162","type":"CtReturnImpl","sourcecode":"return int <= int ? long + (int) : long + (int)"},"status":-2},{"failures":[23,66,28,67,68,69,70,41,45,71,62,63,72,64],"tindex":"1a5cba70-82a4-11e5-a178-2b5489e34fd3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:197","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.String>.clear()"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:138","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, java.lang.String> java.util.Map.Entry<java.lang.String, java.lang.String> : java.util.Map<java.lang.String, java.lang.String>.entrySet()) {\n    java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey());\n    java.io.BufferedWriter.append('=');\n    java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getValue());\n    java.io.BufferedWriter.append('\\n');\n}"},"status":-1},{"failures":[],"tindex":"1a5cba71-82a4-11e5-a178-5d229d55fed1","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:500","type":"CtReturnImpl","sourcecode":"return ~int"},"variableMap":{"high":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:101","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[73,74,75,76,77,78,79],"tindex":"1a5cba72-82a4-11e5-a178-db366f03010c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:79","type":"CtAssignmentImpl","sourcecode":"byte[][++int] = ((byte)(long >> 24))"},"variableMap":{"offset":"offset","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:80","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)(long >> 16))"},"status":-1},{"failures":[],"tindex":"1a5cba73-82a4-11e5-a178-e5e0d639a4b4","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:251","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[(2 * (int)) * (int)]"},"variableMap":{"WIDTH":"s"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:199","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[80],"tindex":"1a5cba74-82a4-11e5-a178-6f1480362044","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:164","type":"CtAssignmentImpl","sourcecode":"int = 255"},"variableMap":{"red":"delta"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:366","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[20],"tindex":"1a5ce185-82a4-11e5-a178-33e4165092c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:139","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"variableMap":{"precision":"bwSlower","lat":"decDist2DSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:242","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"status":-1},{"failures":[23,66,28,67,68,69,70,41,71,62,63,72,64],"tindex":"1a5ce186-82a4-11e5-a178-597bf284f3e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:140","type":"CtInvocationImpl","sourcecode":"java.io.BufferedWriter.append(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey())"},"status":-1},{"failures":[81,82,83,84,85,86,87],"tindex":"1a5ce187-82a4-11e5-a178-c90581c4ab04","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:92","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((\"index has to be smaller than size \" + (int)));\n"},"variableMap":{"size":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:246","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    byte[][int] = com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.getByte((((long) + long) + int));\n}"},"status":-1},{"failures":[],"tindex":"1a5ce188-82a4-11e5-a178-15a9d6f7daa4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"connectedId","nodeThis":"connectedId","edgeId":"start","nodeOther":"start"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:108","type":"CtIfImpl","sourcecode":"if (com.graphhopper.coll.GHBitSetImpl.contains(int)) {\n    int[][int] = java.lang.Math.min(int[][int], int[][int]);\n} "},"status":0},{"failures":[],"tindex":"1a5ce189-82a4-11e5-a178-010e0912d3c4","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.TurnWeighting:78","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:405","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"status":-2},{"failures":[],"tindex":"1a5ce18a-82a4-11e5-a178-b9a056fed436","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:990","type":"CtIfImpl","sourcecode":"if ((int) == (com.graphhopper.storage.EdgeAccess.int))\n    throw new java.lang.IllegalStateException(((\"content of edgeId \" + (int)) + \" is marked as invalid - ie. the edge is already removed!\"));\n"},"variableMap":{"baseNode":"high","edgeId":"high","com.graphhopper.storage.EdgeAccess.NO_NODE":"guess"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseLongLongArray:406","type":"CtIfImpl","sourcecode":"if ((long[][int]) < long) {\n    int = int;\n} else {\n    int = int;\n}"},"status":-2},{"failures":[88,89],"tindex":"1a5d089b-82a4-11e5-a178-139592f0f7c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:189","type":"CtOperatorAssignmentImpl","sourcecode":"int *= 2"},"status":-1},{"failures":[90,91],"tindex":"1a5d089c-82a4-11e5-a178-9d8829d511f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:176","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"You must not register a FlagEncoder (\" + java.lang.Object.(toString())) + \") twice!\"))"},"status":-1},{"failures":[80],"tindex":"1a5d089d-82a4-11e5-a178-8379d1720ef0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:451","type":"CtInvocationImpl","sourcecode":"java.util.List<java.nio.ByteBuffer>.set(int, null)"},"variableMap":{"segNumber":"bufferIndex","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:346","type":"CtAssignmentImpl","sourcecode":"java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1))"},"status":-1},{"failures":[92,20,45,47,48,93,94,95,52,58,59,61,65],"tindex":"1a5d089e-82a4-11e5-a178-536e7b86e62a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:171","type":"CtReturnImpl","sourcecode":"return !boolean"},"variableMap":{"obtained":"is3D"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:61","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"1a5d089f-82a4-11e5-a178-3f945125dbfa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:172","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:284","type":"CtLocalVariableImpl","sourcecode":"long long = long & (long)"},"status":-2},{"failures":[96,97],"tindex":"1a5d08a0-82a4-11e5-a178-eda7f3fecacc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:94","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if ((com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(com.graphhopper.util.EdgeIterator.getEdge())) == (this.long)) {\n        int = com.graphhopper.util.EdgeIterator.getEdge();\n        break;\n    } \n}"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}