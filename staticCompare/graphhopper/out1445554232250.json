{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":55,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":235,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":284,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":189,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":208,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":41,"com.graphhopper.reader.OSMReaderTest.testFerry":317,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":305,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":306,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":232,"com.graphhopper.routing.QueryGraphTest.testOneWay":243,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":147,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":185,"com.graphhopper.reader.OSMReaderTest.testWithBounds":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":112,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":224,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":238,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":225,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":61,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":37,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":118,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":251,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":60,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":167,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":334,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":201,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":146,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":148,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":205,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":259,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":70,"com.graphhopper.GraphHopperTest.testPrepare":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":71,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":283,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":4,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":247,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":241,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":266,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":35,"com.graphhopper.util.InstructionListTest.testWayList":309,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":275,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":308,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":304,"com.graphhopper.GraphHopperAPITest.testDisconnected179":218,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":117,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":229,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":48,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":348,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":183,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":226,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":267,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":186,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":301,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":333,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":228,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":323,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":114,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":132,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":293,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":74,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":344,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":10,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":214,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":105,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":111,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":106,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":262,"com.graphhopper.GraphHopperTest.testLoadOSM":347,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":260,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":170,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":27,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":127,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":187,"com.graphhopper.reader.OSMReaderTest.testSort":320,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":278,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":227,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":143,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":32,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":256,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":175,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":176,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":80,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":240,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":288,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":331,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":292,"com.graphhopper.routing.PathTest.testWayList":298,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":51,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":180,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":137,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":156,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":265,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":184,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":273,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":169,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":86,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":140,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":20,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":120,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":88,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":181,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":163,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":280,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":300,"com.graphhopper.util.GHUtilityTest.testSort":315,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":49,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":191,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":269,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":115,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":245,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":209,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":100,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":216,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":202,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":157,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":239,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":200,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":78,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":349,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":79,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":91,"com.graphhopper.GraphHopperAPITest.testLoad":217,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":346,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":287,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":15,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":124,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":82,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":230,"com.graphhopper.reader.OSMReaderTest.testBarriers":321,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":144,"com.graphhopper.routing.PathTest.testFound":294,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":351,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":164,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":271,"com.graphhopper.util.GHUtilityTest.testCopy":314,"com.graphhopper.routing.PathTest.testFindInstruction":299,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":263,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":83,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":303,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":93,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":50,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":13,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":274,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":207,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":33,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":279,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":108,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":312,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":155,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":95,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":253,"com.graphhopper.reader.PrinctonReaderTest.testRead":332,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":136,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":101,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":123,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":46,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":131,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":231,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":258,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":151,"com.graphhopper.util.InstructionListTest.testWayList2":310,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":173,"com.graphhopper.reader.OSMReaderTest.testFoot":318,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":195,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":246,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":192,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":161,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":193,"com.graphhopper.reader.OSMReaderTest.testOneWay":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":87,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":129,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":113,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":141,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":219,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":30,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":133,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":54,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":25,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":92,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":257,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":212,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":5,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":57,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":322,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":297,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":252,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":177,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":286,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":152,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":249,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":261,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":203,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":250,"com.graphhopper.routing.PathBidirRefTest.testExtract":290,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":302,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":341,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":221,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":190,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":336,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":66,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":116,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":340,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":179,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":339,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":338,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":337,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":199,"com.graphhopper.util.GHUtilityTest.testSort2":313,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":281,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":53,"com.graphhopper.reader.OSMReaderTest.testMain":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":158,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":159,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":99,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":154,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":121,"com.graphhopper.routing.PathBidirRefTest.testExtract2":291,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":153,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":69,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":264,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":171,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":196,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":211,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":182,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":28,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":142,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":145,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":165,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":324,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":104,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":128,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":285,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":255,"com.graphhopper.storage.GraphHopperStorageTest.testClone":8,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":39,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":188,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":150,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":17,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":24,"com.graphhopper.GraphHopperTest.testFootAndCar":345,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":126,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":47,"com.graphhopper.routing.PathTest.testTime":295,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":44,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":135,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":254,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":197,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":168,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":277,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":149,"com.graphhopper.util.GHUtilityTest.testSortDirected":316,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":139,"com.graphhopper.GraphHopperTest.testPrepareOnly":335,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":210,"com.graphhopper.GraphHopperTest.testVia":342,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":276,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":326,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":178,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":166,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":122,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":237,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":311,"com.graphhopper.GraphHopperTest.testFootOnly":350,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":172,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":325,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":213,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":174,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":56,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":138,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":296,"com.graphhopper.util.InstructionListTest.testFind":307,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":268,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":76,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":130,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":198},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351],"tindex":"4caffb6b-790f-11e5-a274-9f58a35270fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:522","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"4cb0498c-790f-11e5-a274-85e6cad0cfd7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:63","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n    java.lang.String = java.lang.String;\n"},"variableMap":{"configLocation":"ghLocation","fileStr":"fileLockName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:762","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) && com.graphhopper.GraphHopper.(isAllowWrites())) {\n    com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n    com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, false);\n    if (!(com.graphhopper.storage.Lock.tryLock()))\n        throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n    \n} "},"status":-2},{"failures":[],"tindex":"4cb0498d-790f-11e5-a274-472ba02c12a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"directionBitMask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:255","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"4cb0498e-790f-11e5-a274-59ca811370ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BeelineWeightApproximator:52","type":"CtAssignmentImpl","sourcecode":"this.com.graphhopper.util.DistanceCalc = com.graphhopper.util.DistanceCalc"},"status":-2},{"failures":[],"tindex":"4cb0498f-790f-11e5-a274-7f507254ec20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(java.lang.Math.round((long * (double))))"},"status":-2},{"failures":[],"tindex":"4cb04990-790f-11e5-a274-e948ff0b0932","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:64","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.BitUtil.fromDouble(byte[], double, 0)"},"status":-2},{"failures":[],"tindex":"4cb070a1-790f-11e5-a274-ef387843f0f9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:104","type":"CtIfImpl","sourcecode":"if (int >= (java.util.List<byte[]>.size())) {\n    return null;\n} "},"variableMap":{"segmentNo":"segmentNo","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:102","type":"CtTryImpl","sourcecode":"try {\n    if (int >= (java.util.List<byte[]>.size())) {\n        return null;\n    } \n    byte[] byte[] = java.util.List<byte[]>.get(int);\n    com.graphhopper.storage.VLongStorage com.graphhopper.storage.VLongStorage = new com.graphhopper.storage.VLongStorage(com.graphhopper.coll.CompressedArray.com.graphhopper.coll.CompressedArray.decompress(byte[]));\n    long long = com.graphhopper.storage.VLongStorage.getLength();\n    for (int int = 0 ; (com.graphhopper.storage.VLongStorage.getPosition()) < long ; int++) {\n        long long = com.graphhopper.storage.VLongStorage.readVLong();\n        if (int == int) {\n            com.graphhopper.util.shapes.GHPoint com.graphhopper.util.shapes.GHPoint = new com.graphhopper.util.shapes.GHPoint();\n            com.graphhopper.geohash.SpatialKeyAlgo.decode(long, com.graphhopper.util.shapes.GHPoint);\n            return com.graphhopper.util.shapes.GHPoint;\n        } \n    }\n    return null;\n} catch (java.lang.ArrayIndexOutOfBoundsException ex) {\n    throw new java.lang.RuntimeException((((((((\"index \" + long) + \"=> segNo:\") + int) + \", entry=\") + int) + \", segments:\") + (java.util.List<byte[]>.size())) , java.lang.ArrayIndexOutOfBoundsException);\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"4cb070a2-790f-11e5-a274-fff306f49c33","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:118","type":"CtIfImpl","sourcecode":"if (long == (long + long))\n    return ~(long + long);\n"},"variableMap":{"high":"flags","len":"flags","start":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, double)"},"status":-2},{"failures":[],"tindex":"4cb070a3-790f-11e5-a274-e378a0bb4a4d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.InstructionList:241","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<extensions>\")"},"variableMap":{"output":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:210","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-2},{"failures":[],"tindex":"4cb097b4-790f-11e5-a274-5b5b3405a19e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:369","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(0)"},"variableMap":{"bb":"bb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:339","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(int)"},"status":-2},{"failures":[],"tindex":"4cb097b5-790f-11e5-a274-af0f99bd9140","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"variableMap":{"prepared":"enableInstructions"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:385","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"name\"));\n    java.lang.String java.lang.String = com.graphhopper.routing.util.EncodingManager.com.graphhopper.routing.util.EncodingManager.fixWayName(com.graphhopper.reader.OSMWay.getTag(\"ref\"));\n    if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n        if (com.graphhopper.util.Helper.isEmpty(java.lang.String))\n            java.lang.String = java.lang.String;\n        else\n            java.lang.String += \", \" + java.lang.String;\n        \n    } \n    com.graphhopper.util.EdgeIteratorState.setName(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"4cb097b6-790f-11e5-a274-d1f5a6f285ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:921","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMElement.int) == (com.graphhopper.reader.OSMRelation.Member.type())) {\n    if (\"from\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n        long = com.graphhopper.reader.OSMRelation.Member.ref();\n    } else if (\"to\".equals(com.graphhopper.reader.OSMRelation.Member.role())) {\n        long = com.graphhopper.reader.OSMRelation.Member.ref();\n    } \n} else if (((com.graphhopper.reader.OSMElement.int) == (com.graphhopper.reader.OSMRelation.Member.type())) && (\"via\".equals(com.graphhopper.reader.OSMRelation.Member.role()))) {\n    long = com.graphhopper.reader.OSMRelation.Member.ref();\n} "},"status":-2},{"failures":[],"tindex":"4cb097b7-790f-11e5-a274-e76a4fb7c00e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:118","type":"CtAssignmentImpl","sourcecode":"int = int * 2"},"variableMap":{"i":"child","child":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:121","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][int]"},"status":-2},{"failures":[],"tindex":"4cb0bec8-790f-11e5-a274-0bf11821c631","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:102","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    continue;\n} "},"variableMap":{"freeIndex":"minResolutionInMeter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:302","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((2 * 4), int)"},"status":-2},{"failures":[],"tindex":"4cb0bec9-790f-11e5-a274-d11c4c39c2eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:197","type":"CtLocalVariableImpl","sourcecode":"double double = (((double - double) * double) + ((double - double) * double)) / double"},"variableMap":{"delta_lat":"delta_lat","r_lat":"delta_lon","a_lat":"delta_lon","delta_lon":"delta_lon","r_lon":"delta_lat","a_lon":"delta_lon","norm":"delta_lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:196","type":"CtLocalVariableImpl","sourcecode":"double double = (double * double) + (double * double)"},"status":-2},{"failures":[],"tindex":"4cb0beca-790f-11e5-a274-b1b030a93995","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"flags","mask":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:256","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.handleRelationTags(com.graphhopper.reader.OSMRelation, long)"},"status":-2},{"failures":[],"tindex":"4cb0becb-790f-11e5-a274-e1672b782fd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.EdgeWrapper:54","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:803","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList)"},"status":-2},{"failures":[],"tindex":"4cb0becc-790f-11e5-a274-49bc87baed5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:281","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Translation.tr(\"turn_slight_right\")"},"status":-2},{"failures":[],"tindex":"4cb0e5dd-790f-11e5-a274-8dedbbf68e99","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeEntry:50","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.storage.EdgeEntry != null) {\n    com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.clone();\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry;\n}"},"variableMap":{"parent":"ee","tmpPrev":"ee","cl":"ee"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:225","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraBidirectionRef.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int)"},"status":-2},{"failures":[],"tindex":"4cb0e5de-790f-11e5-a274-dde85300a4a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:155","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    while ((int * 2) <= (int)) {\n        int int = int * 2;\n        if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n            int++;\n        } \n        if (int > (int[][int])) {\n            int[][int] = int[][int];\n            int[][int] = int[][int];\n            int = int;\n        } else {\n            break;\n        }\n    }\n    int[][int] = int;\n    int[][int] = int;\n} else {\n    while ((int[][(int / 2)]) > int) {\n        int[][int] = int[][(int / 2)];\n        int[][int] = int[][(int / 2)];\n        int /= 2;\n    }\n    int[][int] = int;\n    int[][int] = int;\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}