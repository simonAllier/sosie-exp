{"failureDictionary":{"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":22,"com.graphhopper.reader.OSMReaderTest.testOneWay":0,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":18,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":10,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":14,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":5,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":1,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":16,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":6,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":20,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":7,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":13,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":24,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":23,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":4},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"739c8dd7-7937-11e5-b003-210b096e3bfc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:163","type":"CtAssignmentImpl","sourcecode":"int[][] = new int[int][]"},"variableMap":{"segmentCount":"remainingSegments","segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:332","type":"CtAssignmentImpl","sourcecode":"int[][] = java.util.Arrays.copyOf(int[][], int)"},"status":-1},{"failures":[],"tindex":"739cb4e8-7937-11e5-b003-15b02163459d","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:108","type":"CtReturnImpl","sourcecode":"return double + 0.1"},"variableMap":{"val":"maxSpeed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:822","type":"CtReturnImpl","sourcecode":"return double * 0.9"},"status":-2},{"failures":[],"tindex":"739cb4e9-7937-11e5-b003-7b217456fd7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:54","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 3)] = ((byte)(int >>> 24))"},"variableMap":{"offset":"value","bytes":"bytes","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:57","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"status":-2},{"failures":[],"tindex":"739cb4ea-7937-11e5-b003-3d4d806acca4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:103","type":"CtOperatorAssignmentImpl","sourcecode":"byte |= 1"},"variableMap":{"res":"b"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:126","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-2},{"failures":[],"tindex":"739cdbfb-7937-11e5-b003-db5d260a74ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PointList:216","type":"CtIfImpl","sourcecode":"if (int >= (int))\n    throw new java.lang.ArrayIndexOutOfBoundsException((((((com.graphhopper.util.PointList.java.lang.String) + \" index:\") + int) + \", size:\") + (int)));\n"},"variableMap":{"size":"speed","com.graphhopper.util.PointList.ERR_MSG":"highwayTag","index":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:376","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n    int = java.lang.Integer;\nelse\n    int = java.lang.Integer;\n"},"status":-2},{"failures":[],"tindex":"739cdbfc-7937-11e5-b003-f769ad84d9a2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:563","type":"CtAssertImpl","sourcecode":"assert com.graphhopper.storage.BaseGraph.isFrozen() : \"level graph not yet frozen\""},"variableMap":{"baseGraph":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:329","type":"CtIfImpl","sourcecode":"if (boolean) {\n    long long = com.graphhopper.storage.DataAccess.getCapacity();\n    com.graphhopper.storage.BaseGraph.initNodeRefs((long * (int)), long);\n} "},"status":-2},{"failures":[],"tindex":"739cdbfd-7937-11e5-b003-8fab7d3ee2eb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:111","type":"CtIfImpl","sourcecode":"if ((int) <= 0) {\n    throw new java.lang.IllegalStateException(\"An empty queue does not have a minimum value.\");\n} "},"variableMap":{"size":"remainingSegNo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:431","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Constants.boolean)) {\n    java.io.RandomAccessFile.setLength(((com.graphhopper.storage.AbstractDataAccess.int) + (int * (int))));\n} "},"status":-2},{"failures":[],"tindex":"739cdbfe-7937-11e5-b003-25befd2416fe","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:116","type":"CtReturnImpl","sourcecode":"return ((int)(java.lang.Math.log10(int)))"},"variableMap":{"p":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:131","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension.isRequireNodeField()) && ((com.graphhopper.storage.BaseGraph.int) >= 0))\n    return com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.getInt(((((long)(int)) * (com.graphhopper.storage.BaseGraph.int)) + (com.graphhopper.storage.BaseGraph.int)));\nelse\n    throw new java.lang.AssertionError(\"This graph does not provide an additional node field\");\n"},"status":-2},{"failures":[],"tindex":"739cdbff-7937-11e5-b003-4d50197a3f74","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:127","type":"CtReturnImpl","sourcecode":"return ~long"},"variableMap":{"high":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:123","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.EncodedValue.setValue(long, long)"},"status":-2},{"failures":[],"tindex":"739d0310-7937-11e5-b003-6702360e27a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:204","type":"CtIfImpl","sourcecode":"if (double >= 0)\n    java.lang.String += \"E\";\nelse\n    java.lang.String += \"W\";\n"},"status":-2},{"failures":[],"tindex":"739d0311-7937-11e5-b003-27724cf66156","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:272","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.dimension\")"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:268","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.byteOrder\")"},"status":-2},{"failures":[],"tindex":"739d0312-7937-11e5-b003-fd2fc71ad29f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:165","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"739d0313-7937-11e5-b003-ad2ebd2dbb06","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"lastElem","entityType":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:127","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-2},{"failures":[],"tindex":"739d0314-7937-11e5-b003-49e22a440c6d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:534","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"variableMap":{"intIndex":"speed","len":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"739d0315-7937-11e5-b003-39f5fef13006","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:967","type":"CtAssignmentImpl","sourcecode":"int = (23 * int) + (int)"},"variableMap":{"from":"cnt","hash":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:511","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"739d0316-7937-11e5-b003-0f2ffbdf7562","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:704","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"lastInBoundsPillarNode":"nodeOther"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:188","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"739d2a27-7937-11e5-b003-adc3bc8a172d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"variableMap":{"tmpDegreeCounter":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:128","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.storage.EdgeAccess.reverseFlags(long, long)"},"status":-2},{"failures":[],"tindex":"739d2a28-7937-11e5-b003-699cb1b37800","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHBitSetImpl:68","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.clear()"},"status":-2},{"failures":[],"tindex":"739d2a29-7937-11e5-b003-cd78173ae23c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:204","type":"CtIfImpl","sourcecode":"if (int <= ((1 << int) - 12)) {\n    return (1 << int) - 12;\n} "},"variableMap":{"need":"noOfStates","i":"noOfStates"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TraversalMode:85","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int) == 1)\n        return com.graphhopper.util.EdgeIteratorState.getEdge();\n    \n    return com.graphhopper.util.GHUtility.createEdgeKey(com.graphhopper.util.EdgeIteratorState.getBaseNode(), com.graphhopper.util.EdgeIteratorState.getAdjNode(), com.graphhopper.util.EdgeIteratorState.getEdge(), boolean);\n} "},"status":-2},{"failures":[],"tindex":"739d2a2a-7937-11e5-b003-5d95f7154430","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractAlgoPreparation:29","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"Call doWork only once!\");\n"},"variableMap":{"prepared":"doReverse"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState.detach(true);\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3);\n    com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.util.EdgeIteratorState);\n    if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1));\n    else\n        com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2));\n    \n    if ((com.graphhopper.storage.index.QueryResult.getWayIndex()) < 0)\n        throw new java.lang.IllegalStateException((((\"Problem with wayIndex while reversing closest edge:\" + com.graphhopper.util.EdgeIteratorState) + \", \") + com.graphhopper.storage.index.QueryResult));\n    \n} "},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}