{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":19,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":50,"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":76,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":49,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":63,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":111,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":25,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":10,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":132,"com.graphhopper.util.BitUtilBigTest.testReverse":74,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":35,"com.graphhopper.GraphHopperTest.testPrepare":96,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":36,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":120,"com.graphhopper.search.NameIndexTest.testFlush":61,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":103,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":72,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":73,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":112,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":86,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":59,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":142,"com.graphhopper.GraphHopperAPITest.testDisconnected179":135,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":12,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":85,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":18,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":7,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":131,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":42,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":104,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":109,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":21,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":123,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":39,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":128,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":44,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":133,"com.graphhopper.GraphHopperTest.testLoadOSM":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":89,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":31,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":93,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":92,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":30,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":91,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":90,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":145,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":118,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":56,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":58,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":130,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":37,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":125,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":1,"com.graphhopper.coll.GHTBitSetTest.testClear":79,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":15,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":101,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":144,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":77,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":126,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":41,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":55,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":110,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":122,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":138,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":129,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":87,"com.graphhopper.storage.StorablePropertiesTest.testStore":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":33,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":60,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":117,"com.graphhopper.storage.RAMDirectoryTest.testNoDuplicates":53,"com.graphhopper.GraphHopperTest.testFootAndCar":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":2,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":82,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":83,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":107,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":106,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":8,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":47,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":46,"com.graphhopper.util.BitUtilLittleTest.testReverse":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":23,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":114,"com.graphhopper.GraphHopperTest.testPrepareOnly":62,"com.graphhopper.GraphHopperTest.testVia":95,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":57,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":113,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":137,"com.graphhopper.GraphHopperAPITest.testLoad":134,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":68,"com.graphhopper.GraphHopperTest.testFootOnly":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":124,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":20,"com.graphhopper.reader.OSMReaderTest.testBarriers":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":29,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":105,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":9,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":108,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":54},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"7181a341-8294-11e5-b40d-af181c00f30d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:122","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[68,69,70,71,72,73,74,75],"tindex":"7181ca52-8294-11e5-b40d-45a56d16e8ce","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:98","type":"CtAssignmentImpl","sourcecode":"long = 1L << (int - 1)"},"variableMap":{"initialBits":"res","allBits":"maxBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:259","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= int"},"status":-1},{"failures":[],"tindex":"7181ca53-8294-11e5-b40d-432694114938","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:144","type":"CtReturnImpl","sourcecode":"return \"big\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:137","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"failures":[76],"tindex":"7181ca54-8294-11e5-b40d-27bcb7af337c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:375","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"official\")) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(44.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-1},{"failures":[77,78],"tindex":"7181ca55-8294-11e5-b40d-d10e456704b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:144","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[79],"tindex":"7181ca56-8294-11e5-b40d-51886e0ea155","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:229","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHTBitSet:68","type":"CtReturnImpl","sourcecode":"return gnu.trove.set.hash.TIntHashSet.size()"},"status":-1},{"failures":[80,81,82,83,84,85,86,87,88],"tindex":"7181f167-8294-11e5-b40d-8d9aa0183878","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.DAType:155","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \"_INT\""},"variableMap":{"str":"message"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionAnnotation:53","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \"\""},"status":-1},{"failures":[89,90,91,92,93,94,95,96,97,98,64,65,66,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"7181f168-8294-11e5-b40d-1bffa7f8531a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:169","type":"CtIfImpl","sourcecode":"if ((int == (com.graphhopper.util.EdgeIterator.int)) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalArgumentException(\"from and to edge cannot be NO_EDGE\");\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"from","edgeTo":"from","edgeFrom":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:61","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractBidirAlgo.initFrom(int, 0)"},"status":-1},{"failures":[],"tindex":"7181f169-8294-11e5-b40d-5b656c952b92","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:346","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMWay.getId()"},"status":-2},{"failures":[99,115,127,130],"tindex":"7181f16a-8294-11e5-b40d-f7fd5ce44272","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:51","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"empty":"finishedFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:79","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-1},{"failures":[],"tindex":"7181f16b-8294-11e5-b40d-c1e55cc01770","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:287","type":"CtForImpl","sourcecode":"for (long long = long + (int) ; long < long ; long += int) {\n    com.graphhopper.storage.DataAccess.setInt(long, com.graphhopper.storage.GraphExtension.getDefaultNodeFieldValue());\n}"},"status":-2},{"failures":[],"tindex":"7181f16c-8294-11e5-b40d-e12e3ee40ff3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntIntBinHeap:118","type":"CtIfImpl","sourcecode":"if (int > (int[][int])) {\n    int[][int] = int[][int];\n    int[][int] = int[][int];\n} else {\n    break;\n}"},"variableMap":{"elem":"entries","keys":"entries","i":"lastEntry","lastPrio":"lastEntry","child":"lastEntry"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:199","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if (int < (int[][int])) {\n        throw new java.lang.IllegalStateException((\"entries should decrease or stay but was:\" + (java.util.Arrays.toString(int[]))));\n    } \n    int = int[][int];\n    byte[][int] = com.graphhopper.storage.index.LocationIndexTree.getShift(int[][int]);\n    long[][int] = com.graphhopper.storage.index.LocationIndexTree.getBitmask(byte[][int]);\n}"},"status":-2},{"failures":[],"tindex":"7182187d-8294-11e5-b40d-8901268d3b86","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:358","type":"CtAssertImpl","sourcecode":"assert int <= (int) : ((\"the length has to be smaller or equal to the segment size: \" + int) + \" vs. \") + (int)"},"variableMap":{"segmentSizeInBytes":"adjNode","length":"adjNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:535","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.checkAdjNodeBounds(int)"},"status":0},{"failures":[],"tindex":"7182187e-8294-11e5-b40d-df3100a71654","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:244","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = -1;\n    int int = -1;\n    if (com.graphhopper.coll.GHBitSet.contains(int)) {\n        if ((((int + 1) % (int)) != 0) && (!(com.graphhopper.coll.GHBitSet.contains((int + 1))))) {\n            int = int;\n            int = int + 1;\n        } else if (((int + (int)) < int) && (!(com.graphhopper.coll.GHBitSet.contains((int + (int)))))) {\n            int = int;\n            int = int + (int);\n        } \n    } else {\n        if ((((int + 1) % (int)) != 0) && (com.graphhopper.coll.GHBitSet.contains((int + 1)))) {\n            int = int + 1;\n            int = int;\n        } else if (((int + (int)) < int) && (com.graphhopper.coll.GHBitSet.contains((int + (int))))) {\n            int = int + (int);\n            int = int;\n        } \n    }\n    if (int >= 0) {\n        if ((int[][int]) >= 0) {\n            if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n                continue;\n            } \n        } \n        com.graphhopper.storage.DataAccess.setInt((int * 4), com.graphhopper.storage.DataAccess.getInt((int * 4)));\n        int[][int] = int[][int];\n        com.graphhopper.coll.GHBitSet.add(int);\n        int++;\n    } \n}"},"status":-2},{"failures":[],"tindex":"7182187f-8294-11e5-b40d-4b66fda6249d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:43","type":"CtLocalVariableImpl","sourcecode":"double double = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:117","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.RoundaboutInstruction.getTurnAngle()"},"status":-2},{"failures":[],"tindex":"71821880-8294-11e5-b40d-1f03503a937d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:178","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.CompressedArray:141","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = com.graphhopper.storage.VLongStorage.getBytes()"},"status":-2},{"failures":[],"tindex":"71823f91-8294-11e5-b40d-81c313377557","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:258","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.reader.OSMWay.getNodes().size()) < 2)\n    return false;\n"},"variableMap":{"item":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:173","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    if (java.util.Set<java.lang.String>.contains(com.graphhopper.reader.OSMElement.getTag(java.lang.String, \"\")))\n        return true;\n    \n}"},"status":-2},{"failures":[],"tindex":"71823f92-8294-11e5-b40d-2134bd3b1e12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:474","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:243","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[136,137],"tindex":"71823f93-8294-11e5-b40d-030dabb1c0cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtil:185","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"variableMap":{"res":"flags"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~long"},"status":-1},{"failures":[138,139,16,31,140,141,142,143,144,145,146],"tindex":"71823f94-8294-11e5-b40d-75e3af6238e4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:182","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalStateException(\"check your graph - it is empty!\");\n} "},"variableMap":{"locs":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:197","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], int, int[], (int + 1), ((int) - int))"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}