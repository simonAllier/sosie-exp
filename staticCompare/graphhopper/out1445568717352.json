{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"0679c4e4-7931-11e5-a41b-6f9ca7cfa262","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"dMinLon","incDist2DSum":"dMinLon","fwdSlower":"lon","fullDist2D":"minLon","restDist2D":"lon","speed":"dMinLon","decDist2DSum":"minLon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:674","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double)"},"status":-2},{"failures":[],"tindex":"0679ebf5-7931-11e5-a41b-052c5fc373cd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:348","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.put(byte[], int, int)"},"variableMap":{"bb":"bb","values":"values","length":"length","delta":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:345","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.put(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"0679ebf6-7931-11e5-a41b-2167a003f6dc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:49","type":"CtLocalVariableImpl","sourcecode":"long long = (java.lang.System.nanoTime()) - long"},"variableMap":{"start":"len"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:103","type":"CtLocalVariableImpl","sourcecode":"long long = long + long"},"status":-2},{"failures":[],"tindex":"0679ebf7-7931-11e5-a41b-698cff213c09","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:106","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.ConsistentWeightApproximator.setSourceNode(int)"},"status":-2},{"failures":[],"tindex":"067a1308-7931-11e5-a41b-75aa25eacd13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilBig:91","type":"CtIfImpl","sourcecode":"if ((int % 8) != 0)\n    int++;\n"},"variableMap":{"strLen":"i","bLen":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:408","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    if (boolean)\n        double += com.graphhopper.util.PointList.com.graphhopper.util.DistanceCalc3D.calcDist(double, double, double, double[][int], double[][int], double[][int]);\n    else\n        double += com.graphhopper.util.DistanceCalc.calcDist(double, double, double[][int], double[][int]);\n    \n} "},"status":-2},{"failures":[],"tindex":"067a1309-7931-11e5-a41b-9916487a6f12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:223","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\/trkpt>\")"},"variableMap":{"track":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\")"},"status":-2},{"failures":[],"tindex":"067a130a-7931-11e5-a41b-69c1adca97ae","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:208","type":"CtLocalVariableImpl","sourcecode":"double double = double + (double * double)"},"variableMap":{"factor":"lon","delta_lon":"lon","a_lon":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:200","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.util.DistanceCalc.calcNormalizedDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double, double)"},"status":-2},{"failures":[],"tindex":"067a130b-7931-11e5-a41b-0d0b3e2f1d39","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMIntDataAccess:269","type":"CtLocalVariableImpl","sourcecode":"long long = long >> 1"},"variableMap":{"bytePos":"key"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:66","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.coll.OSMIDMap.binarySearch(com.graphhopper.storage.DataAccess, 0, com.graphhopper.coll.OSMIDMap.getSize(), long)"},"status":-2},{"failures":[],"tindex":"067a130c-7931-11e5-a41b-c72d56f100d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:128","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:569","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"prepare.chWeighting\", \"fastest\")"},"status":-2},{"failures":[],"tindex":"067a130d-7931-11e5-a41b-b918690cfb56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:404","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"067a130e-7931-11e5-a41b-cbac4c0c29d3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:272","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.dimension\")"},"variableMap":{"properties":"properties"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:450","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.storage.StorableProperties.get(\"graph.flagEncoders\")"},"status":-2},{"failures":[],"tindex":"067a3a1f-7931-11e5-a41b-0df01536e1f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.search.NameIndex:97","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:71","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = byte[][][int]"},"status":-2},{"failures":[],"tindex":"067a3a20-7931-11e5-a41b-d98990205cc1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:458","type":"CtAssignmentImpl","sourcecode":"int = 8"},"variableMap":{"bytesForFlags":"shiftSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:175","type":"CtOperatorAssignmentImpl","sourcecode":"int += byte[][int]"},"status":-2},{"failures":[],"tindex":"067a3a21-7931-11e5-a41b-01984eb6aab7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMElement:101","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMElement.setTag(java.util.Map.Entry<java.lang.String, java.lang.String>.getKey(), java.util.Map.Entry<java.lang.String, java.lang.String>.getValue())"},"status":-2},{"failures":[],"tindex":"067a3a22-7931-11e5-a41b-d3a97e42af47","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:120","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = int < int"},"variableMap":{"y1":"lastIndex","y2":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:714","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"status":-2},{"failures":[],"tindex":"067a3a23-7931-11e5-a41b-4f91fedbd92f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:295","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"067a3a24-7931-11e5-a41b-c3acebb12e49","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:188","type":"CtAssignmentImpl","sourcecode":"float[][int] = float[][(int / 2)]"},"variableMap":{"keys":"keys","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:192","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-2},{"failures":[],"tindex":"067a3a25-7931-11e5-a41b-f306a1634eb0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:106","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:144","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.shapes.GHPoint"},"status":-2},{"failures":[],"tindex":"067a3a26-7931-11e5-a41b-91960d302c21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:654","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Lock.release()"},"status":-2},{"failures":[],"tindex":"067a6137-7931-11e5-a41b-dd8b12a68ead","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:203","type":"CtIfImpl","sourcecode":"if (double < 0)\n    double = 0;\n"},"variableMap":{"factor":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:108","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge.int)))\n        continue;\n    \n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false);\n    float float = ((float)((com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.routing.AStar.AStarEdge.int)) + (com.graphhopper.routing.AStar.AStarEdge.double)));\n    if (java.lang.Double.isInfinite(float))\n        continue;\n    \n    com.graphhopper.routing.AStar.AStarEdge com.graphhopper.routing.AStar.AStarEdge = com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.get(int);\n    if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n        double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n        double = float + double;\n        if (com.graphhopper.routing.AStar.AStarEdge == null) {\n            com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n            com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n        } else {\n            assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n            java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n            com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n            com.graphhopper.routing.AStar.AStarEdge.double = double;\n            com.graphhopper.routing.AStar.AStarEdge.double = float;\n        }\n        com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n        java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n        com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n    } \n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}