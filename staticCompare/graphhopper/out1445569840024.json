{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":249,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":310,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":258,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":188,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":207,"com.graphhopper.reader.OSMReaderTest.testFerry":229,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":211,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":212,"com.graphhopper.storage.GraphHopperStorageCHTest.testDoThrowExceptionIfDimDoesNotMatch":25,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":246,"com.graphhopper.routing.QueryGraphTest.testOneWay":257,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":48,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":164,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":184,"com.graphhopper.reader.OSMReaderTest.testWithBounds":241,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":128,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":151,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":252,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":263,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":264,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":16,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":107,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":277,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":166,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":328,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":49,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":285,"com.graphhopper.GraphHopperTest.testPrepare":337,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":134,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":309,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":72,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":90,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":273,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":255,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":292,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":105,"com.graphhopper.util.InstructionListTest.testWayList":216,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":215,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":301,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":199,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":226,"com.graphhopper.GraphHopperAPITest.testDisconnected179":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":13,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":268,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":342,"com.graphhopper.storage.RAMIntDataAccessTest.testBoundsCheck":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":182,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":265,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":293,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":298,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":185,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":228,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":325,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":235,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":267,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":153,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":32,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":317,"com.graphhopper.storage.RAMIntDataAccessTest.testSet_Get_Short_Long":2,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":338,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":78,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":202,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":144,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":150,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":146,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":145,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":288,"com.graphhopper.GraphHopperTest.testLoadOSM":341,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":193,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":286,"com.graphhopper.storage.RAMIntDataAccessTest.testEnsureCapacity":7,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":169,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":27,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":96,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":186,"com.graphhopper.reader.OSMReaderTest.testSort":232,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":95,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":304,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":240,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":266,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDoThrowExceptionIfDimDoesNotMatch":114,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":102,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":282,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":174,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":175,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":117,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":254,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":314,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameNoFlush":8,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":244,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":66,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":316,"com.graphhopper.routing.PathTest.testWayList":322,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":149,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":37,"com.graphhopper.storage.RAMIntDataAccessTest.testExceptionIfNoEnsureCapacityWasCalled":6,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":315,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":58,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":291,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":183,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":248,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":299,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":168,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":14,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":123,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":89,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":18,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":125,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":180,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":65,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":87,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":306,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":324,"com.graphhopper.util.GHUtilityTest.testSort":222,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":190,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":296,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":295,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":75,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":154,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":259,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":208,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":121,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":138,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":204,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":158,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":17,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":59,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":253,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":156,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":271,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":113,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":343,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":115,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":26,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":205,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":129,"com.graphhopper.GraphHopperAPITest.testLoad":0,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":340,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":5,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":135,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":313,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":84,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":22,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":119,"com.graphhopper.reader.OSMReaderTest.testBarriers":233,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":269,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":111,"com.graphhopper.routing.PathTest.testFound":318,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":345,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":162,"com.graphhopper.util.GHUtilityTest.testCopy":221,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":297,"com.graphhopper.routing.PathTest.testFindInstruction":323,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":120,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":131,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":110,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":81,"com.graphhopper.util.InstructionListTest.testEmptyList":214,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":300,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":206,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":103,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":88,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":305,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":147,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":219,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":34,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":308,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":133,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":279,"com.graphhopper.reader.PrinctonReaderTest.testRead":227,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":104,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":126,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":139,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":21,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":31,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":71,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":284,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":136,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":53,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":12,"com.graphhopper.util.InstructionListTest.testWayList2":217,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":172,"com.graphhopper.reader.OSMReaderTest.testFoot":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":194,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":260,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":191,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":192,"com.graphhopper.reader.OSMReaderTest.testOneWay":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":42,"com.graphhopper.storage.GraphHopperStorageTest.testDoThrowExceptionIfDimDoesNotMatch":68,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":85,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":270,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":33,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":100,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":99,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":148,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":130,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":283,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":200,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":73,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":80,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":234,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":321,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":278,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":176,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":312,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":127,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":275,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":287,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":159,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":276,"com.graphhopper.routing.PathBidirRefTest.testExtract":326,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":224,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":335,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":272,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":189,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":23,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":155,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":334,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":178,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":333,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":332,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":331,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":198,"com.graphhopper.util.GHUtilityTest.testSort2":220,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":307,"com.graphhopper.reader.OSMReaderTest.testMain":231,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":60,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":250,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":61,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":19,"com.graphhopper.storage.RAMIntDataAccessTest.testTrimTo":9,"com.graphhopper.routing.PathBidirRefTest.testExtract2":327,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":55,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":203,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":116,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":290,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":170,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":195,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":210,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":261,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":181,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":43,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":46,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":163,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":142,"com.graphhopper.storage.RAMIntDataAccessTest.testCopy":4,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":28,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":311,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":15,"com.graphhopper.storage.GraphHopperStorageTest.testClone":76,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":109,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":64,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":51,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":86,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":93,"com.graphhopper.GraphHopperTest.testFootAndCar":339,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":24,"com.graphhopper.routing.PathTest.testTime":319,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":280,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":196,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":167,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":303,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":50,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":122,"com.graphhopper.util.GHUtilityTest.testSortDirected":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":40,"com.graphhopper.GraphHopperTest.testPrepareOnly":329,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":209,"com.graphhopper.GraphHopperTest.testVia":336,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":247,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":302,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":239,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":238,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":177,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":20,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":251,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":97,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":218,"com.graphhopper.GraphHopperTest.testFootOnly":344,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":171,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":237,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":201,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":173,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":39,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":320,"com.graphhopper.util.InstructionListTest.testFind":213,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":294,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":274,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":112,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":197},"transformations":[{"failures":[],"tindex":"a3a6356a-7933-11e5-9632-0ba27be655bd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:123","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSetImpl.clear(int)"},"variableMap":{"node":"toMoveNodes","onStack":"toRemoveSet"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:644","type":"CtForImpl","sourcecode":"for (int int = com.graphhopper.coll.GHBitSet.next(0) ; int >= 0 ; int = com.graphhopper.coll.GHBitSet.next((int + 1))) {\n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        com.graphhopper.coll.GHBitSet.add(com.graphhopper.util.EdgeIterator.getAdjNode());\n    }\n    int--;\n    for ( ; int >= 0 ; int--) {\n        if (!(com.graphhopper.coll.GHBitSet.contains(int)))\n            break;\n        \n    }\n    if (int >= int)\n        com.graphhopper.coll.SparseIntIntArray.put(int, int);\n    \n    int++;\n}"},"status":-2},{"failures":[],"tindex":"a3a65c7b-7933-11e5-9632-a7e52e12efb3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:71","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345],"tindex":"a3a6838c-7933-11e5-9632-fdfdca7e4cef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:314","type":"CtAssignmentImpl","sourcecode":"int = ((int)((java.lang.Math.log(((int) / 4))) / (java.lang.Math.log(2))))"},"status":-1},{"failures":[],"tindex":"a3a6aa9d-7933-11e5-9632-8f5192224d27","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:749","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"a3a6aa9e-7933-11e5-9632-ff8ad12a95a2","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:310","type":"CtReturnImpl","sourcecode":"return \"CGIAR\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:391","type":"CtReturnImpl","sourcecode":"return \"foot\""},"status":-2},{"failures":[],"tindex":"a3a6aa9f-7933-11e5-9632-157b76f170c3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:202","type":"CtAssignmentImpl","sourcecode":"double = 1"},"variableMap":{"factor":"distEstimation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:125","type":"CtAssignmentImpl","sourcecode":"double = float + double"},"status":-2},{"failures":[],"tindex":"a3a6aaa0-7933-11e5-9632-9d49174e5963","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:133","type":"CtIfImpl","sourcecode":"if (int > (-int)) {\n    int -= int;\n    int += int;\n} "},"variableMap":{"err":"nextPillarId","dLat":"nextPillarId","tmpErr":"com.graphhopper.reader.OSMReader.TOWER_NODE","x1":"com.graphhopper.reader.OSMReader.TOWER_NODE","sLon":"nodeType"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:592","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.OSMReader.addTowerNode(com.graphhopper.reader.OSMNode.getId(), double, double, double);\n} else if (int == (com.graphhopper.reader.OSMReader.int)) {\n    com.graphhopper.reader.PillarInfo.setNode(int, double, double, double);\n    com.graphhopper.reader.OSMReader.getNodeMap().put(com.graphhopper.reader.OSMNode.getId(), ((int) + 3));\n    (int)++;\n} "},"status":-2},{"failures":[],"tindex":"a3a6d1b1-7933-11e5-9632-53d99d26426e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:192","type":"CtLocalVariableImpl","sourcecode":"double double = com.graphhopper.routing.util.CarFlagEncoder.getSpeed(com.graphhopper.reader.OSMWay)"},"status":-2},{"failures":[],"tindex":"a3a6d1b2-7933-11e5-9632-2df5541bf576","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"variableMap":{"maxSpeed":"elev","fwdSpeed":"elev"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.shapes.BBox:116","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    double = double;\n} "},"status":-2},{"failures":[],"tindex":"a3a6d1b3-7933-11e5-9632-0b676e8ff40c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:915","type":"CtLocalVariableImpl","sourcecode":"long long = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:114","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(int)"},"status":-2},{"failures":[],"tindex":"a3a6d1b4-7933-11e5-9632-479056633139","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":-2},{"failures":[],"tindex":"a3a6f8c5-7933-11e5-9632-1394b266dc0a","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:231","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"newName mustn\\'t be empty!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:103","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((\"Found existing DataAccess object \\'\" + java.lang.String) + \"\\' but types did not match. Requested:\") + com.graphhopper.storage.DAType) + \", was:\") + (com.graphhopper.storage.DataAccess.getType())))"},"status":-2},{"failures":[],"tindex":"a3a6f8c6-7933-11e5-9632-33048f892fd0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:113","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((java.lang.Math.pow(2, int)) / 360))"},"variableMap":{"allBits":"degree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.HeightTile:92","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(((int) / (int)) * double))"},"status":-2},{"failures":[],"tindex":"a3a6f8c7-7933-11e5-9632-0178b8a405f8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:52","type":"CtOperatorAssignmentImpl","sourcecode":"double += (((0.1963 * double) * double) - 0.9817) * double"},"variableMap":{"r":"dist","angle":"dist"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:150","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-2},{"failures":[],"tindex":"a3a6f8c8-7933-11e5-9632-357b229bd4b3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"code"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:309","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer"},"status":-2},{"failures":[],"tindex":"a3a6f8c9-7933-11e5-9632-738f369f876a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:197","type":"CtAssignmentImpl","sourcecode":"double = double * 0.9"},"variableMap":{"maxMCSpeed":"minEle","speed":"minEle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:184","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToEle(com.graphhopper.storage.DataAccess.getHeader((7 * 4)))"},"status":-2},{"failures":[],"tindex":"a3a71fda-7933-11e5-9632-75932b3e5e5b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:255","type":"CtAssignmentImpl","sourcecode":"double = 30"},"variableMap":{"speed":"dijkstraTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:360","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":-2},{"failures":[],"tindex":"a3a71fdb-7933-11e5-9632-4f7f1a5d515a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.CarFlagEncoder:307","type":"CtOperatorAssignmentImpl","sourcecode":"java.lang.String += \", \""},"variableMap":{"str":"motorcarTag"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:192","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.reader.OSMWay.getTag(\"motor_vehicle\")"},"status":-2},{"failures":[],"tindex":"a3a71fdc-7933-11e5-9632-87737a92d21e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:708","type":"CtIfImpl","sourcecode":"if (boolean)\n    throw new java.lang.IllegalStateException(\"graph is already successfully loaded\");\n"},"variableMap":{"fullyLoaded":"locked"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:242","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(\"locked\", \"yes\"))\n    boolean = true;\n"},"status":-2},{"failures":[],"tindex":"a3a71fdd-7933-11e5-9632-e7f8b1ad7601","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DouglasPeucker:43","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"variableMap":{"a":"fullyLoaded","approx":"fullyLoaded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:450","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}