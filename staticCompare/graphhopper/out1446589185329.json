{"failureDictionary":{"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":112,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":122,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":131,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":232,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":245,"com.graphhopper.reader.OSMReaderTest.testFerry":23,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":142,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":143,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":119,"com.graphhopper.storage.RAMIntDataAccessTest.testHeader":48,"com.graphhopper.routing.QueryGraphTest.testOneWay":130,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":294,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":39,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSortHighLevelFirst":208,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":228,"com.graphhopper.reader.OSMReaderTest.testWithBounds":34,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":6,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":178,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":66,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testInfinityWeight":201,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":263,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":352,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":80,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":328,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":210,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":37,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":256,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":293,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":88,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":260,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":295,"com.graphhopper.GraphHopperTest.testPrepare":17,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":184,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":111,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":317,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":76,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":335,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":128,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":95,"com.graphhopper.util.InstructionListTest.testWayList":147,"com.graphhopper.storage.GraphHopperStorageTest.testInfinityWeight":350,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":103,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":146,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":249,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":141,"com.graphhopper.GraphHopperAPITest.testDisconnected179":134,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":284,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":261,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBounds":193,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":226,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":68,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":96,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":101,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":327,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":229,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":61,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":152,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":271,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":203,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":278,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":18,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":323,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":194,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":200,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":196,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":195,"com.graphhopper.GraphHopperTest.testLoadOSM":21,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":89,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":213,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":230,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":272,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":341,"com.graphhopper.reader.OSMReaderTest.testSort":26,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":340,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":106,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":69,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":290,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":347,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":85,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":218,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":219,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":166,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":116,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":127,"com.graphhopper.storage.GraphHopperStorageTest.testNoCreateCalled":316,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":156,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":52,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":312,"com.graphhopper.routing.PathTest.testWayList":58,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":199,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":8,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":223,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":283,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":117,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":304,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":324,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":102,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":121,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":227,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":351,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":212,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":190,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":173,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":262,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":287,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":334,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":168,"com.graphhopper.storage.GraphHopperStorageCHTest.testShortcutCreationAndAccessForManyVehicles":265,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":175,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":322,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":224,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":311,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":332,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":108,"com.graphhopper.routing.util.FastestWeightingTest.testWeightWrongHeading":3,"com.graphhopper.GraphHopperTest.testFailsForMissingParameters":40,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":60,"com.graphhopper.util.GHUtilityTest.testSort":138,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":129,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":234,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":99,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":98,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":308,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNoCreateCalled":167,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":182,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":204,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":320,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":246,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":171,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":188,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":254,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":257,"com.graphhopper.storage.RAMIntDataAccessTest.testSegments":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":264,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":305,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":165,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":63,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":255,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":163,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":337,"com.graphhopper.storage.GraphHopperStorageCHTest.testBigDataEdge":270,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":179,"com.graphhopper.storage.GraphHopperStorageCHTest.testNoCreateCalled":273,"com.graphhopper.GraphHopperAPITest.testLoad":13,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":20,"com.graphhopper.storage.RAMIntDataAccessTest.testRenameFlush":47,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":115,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":185,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":329,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":268,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":319,"com.graphhopper.reader.OSMReaderTest.testBarriers":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":72,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":169,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadClose":50,"com.graphhopper.routing.PathTest.testFound":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":291,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":43,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":100,"com.graphhopper.util.GHUtilityTest.testCopy":137,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":10,"com.graphhopper.routing.PathTest.testFindInstruction":59,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":92,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":140,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":170,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":181,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":161,"com.graphhopper.util.InstructionListTest.testEmptyList":145,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":44,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":244,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":348,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":333,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":107,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":135,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":197,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":336,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":280,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":110,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":303,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":183,"com.graphhopper.reader.PrinctonReaderTest.testRead":151,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":349,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":282,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":189,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":267,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":87,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":118,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":277,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":186,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":298,"com.graphhopper.storage.GraphHopperStorageCHTest.testBounds":299,"com.graphhopper.storage.RAMIntDataAccessTest.testLoadFlush":51,"com.graphhopper.util.InstructionListTest.testWayList2":148,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":216,"com.graphhopper.reader.OSMReaderTest.testFoot":24,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":133,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":238,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":235,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":353,"com.graphhopper.reader.OSMReaderTest.testOneWay":36,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":236,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":174,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":275,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":202,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":62,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":288,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":330,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":279,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":345,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":344,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":198,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":86,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":180,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":339,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":250,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":318,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":325,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":28,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":57,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":81,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":177,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":78,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":300,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":11,"com.graphhopper.routing.PathBidirRefTest.testExtract":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":79,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":258,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":150,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":160,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":73,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":157,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":233,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":269,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":15,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":205,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":14,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":222,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":159,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":158,"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":314,"com.graphhopper.util.GHUtilityTest.testSort2":136,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":242,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":109,"com.graphhopper.reader.OSMReaderTest.testMain":25,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":5,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":123,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":306,"com.graphhopper.storage.GraphHopperStorageCHTest.testInfinityWeight":307,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":155,"com.graphhopper.storage.GraphHopperStorageTest.testBigDataEdge":313,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":187,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":46,"com.graphhopper.routing.PathBidirRefTest.testExtract2":75,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":301,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":253,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":93,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testBigDataEdge":164,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":214,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":64,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":239,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":248,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":225,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":343,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":289,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":292,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":30,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":207,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":192,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":35,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":113,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":259,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":274,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testCannotBeLoadedWithNormalGraphHopperStorageClass":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":231,"com.graphhopper.storage.GraphHopperStorageTest.testClone":321,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":354,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":310,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":346,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":9,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":297,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":331,"com.graphhopper.GraphHopperTest.testFootAndCar":19,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":338,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":7,"com.graphhopper.routing.PathTest.testTime":55,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":281,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":83,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":240,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":0,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":211,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":105,"com.graphhopper.reader.OSMReaderTest.testRelation":153,"com.graphhopper.util.GHUtilityTest.testSortDirected":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":296,"com.graphhopper.GraphHopperTest.testPrepareOnly":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":286,"com.graphhopper.GraphHopperTest.testVia":16,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":247,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":120,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":104,"com.graphhopper.util.PMapTest.numericPropertyCanBeRetrievedAsDouble":4,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":32,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":154,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":221,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":209,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":124,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":266,"com.graphhopper.GraphHopperTest.testFootOnly":42,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":149,"com.graphhopper.storage.GraphHopperStorageTest.testBounds":342,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":2,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":215,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":31,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":251,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":217,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":56,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":285,"com.graphhopper.util.InstructionListTest.testFind":144,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":97,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":77,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":276},"transformations":[{"failures":[],"tindex":"fccabeb9-8278-11e5-b5a1-ed89df9f8aaa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:284","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.MMapDataAccess.close(true)"},"variableMap":{"this":"edges"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:201","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), int)"},"status":-2},{"failures":[],"tindex":"fccabeba-8278-11e5-b5a1-11c8ab1984dc","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.GHDirectory:91","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType"},"variableMap":{"type":"type","defaultType":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.DAType:174","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DAType = com.graphhopper.storage.DAType.com.graphhopper.storage.DAType"},"status":-2},{"failures":[0,1,2],"tindex":"fccae5cb-8278-11e5-b5a1-550df41b99ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:83","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry) != null) {\n    (int)++;\n    com.graphhopper.coll.GHLongIntBTree.BTreeEntry = com.graphhopper.coll.GHLongIntBTree.ReturnValue.com.graphhopper.coll.GHLongIntBTree.BTreeEntry;\n} "},"status":-1},{"failures":[],"tindex":"fccae5cc-8278-11e5-b5a1-a1ea8e450bb9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.PriorityWeighting:50","type":"CtIfImpl","sourcecode":"if (java.lang.Double.isInfinite(double))\n    return java.lang.Double.double;\n"},"variableMap":{"java.lang.Double.POSITIVE_INFINITY":"java.lang.Double.MAX_VALUE","weight":"java.lang.Double.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:379","type":"CtIfImpl","sourcecode":"if (int == (java.lang.Integer.int))\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[],"tindex":"fccae5cd-8278-11e5-b5a1-9b9cd65c18fb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionList:148","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = com.graphhopper.util.InstructionList.get((int + 1))"},"variableMap":{"this":"this","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:146","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.Instruction com.graphhopper.util.Instruction = int > 0 ? com.graphhopper.util.InstructionList.get((int - 1)) : null"},"status":0},{"failures":[3,4],"tindex":"fccae5ce-8278-11e5-b5a1-c1b41ab1a54f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:582","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.CmdArgs.get(\"graph.flagEncoders\", \"\")"},"variableMap":{"args":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:125","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = com.graphhopper.util.PMap.get(java.lang.String)"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"fccae5cf-8278-11e5-b5a1-efd3b78e42da","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:233","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String))\n    return false;\n"},"variableMap":{"newName":"str","name":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PMap:111","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.util.Helper.isEmpty(java.lang.String))) {\n    try {\n        return java.lang.Boolean.parseBoolean(java.lang.String);\n    } catch (java.lang.Exception ex) {\n    }\n} "},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,16,17,18,19,20,21,40,41,22,42,43],"tindex":"fccb0ce0-8278-11e5-b5a1-7995f0c53aab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    throw new java.lang.IllegalStateException((((((\"Cannot overwrite key \" + java.lang.String) + \" with \") + java.lang.String) + \", was: \") + java.lang.String));\n"},"variableMap":{"val":"graphHopperLocation","existing":"fileLockName","key":"fileLockName"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:632","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType().isStoring()) {\n    com.graphhopper.storage.LockFactory.setLockDir(new java.io.File(java.lang.String));\n    com.graphhopper.storage.Lock = com.graphhopper.storage.LockFactory.create(java.lang.String, true);\n    if (!(com.graphhopper.storage.Lock.tryLock()))\n        throw new java.lang.RuntimeException((\"To avoid multiple writers we need to obtain a write lock but it failed. In \" + java.lang.String) , com.graphhopper.storage.Lock.getObtainFailedReason());\n    \n} "},"status":-1},{"failures":[],"tindex":"fccb0ce1-8278-11e5-b5a1-29658ace900b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:46","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil"},"variableMap":{"com.graphhopper.util.BitUtil.BIG":"com.graphhopper.util.BitUtil.BIG"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:45","type":"CtIfImpl","sourcecode":"if (java.nio.ByteOrder.equals(java.nio.ByteOrder.java.nio.ByteOrder))\n    return com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil;\nelse\n    return com.graphhopper.util.BitUtil.com.graphhopper.util.BitUtil;\n"},"status":-2},{"failures":[44],"tindex":"fccb0ce2-8278-11e5-b5a1-b77a613f025d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:169","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(4)"},"variableMap":{"tmpEntries":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:315","type":"CtInvocationImpl","sourcecode":"gnu.trove.list.array.TIntArrayList.add(int)"},"status":-1},{"failures":[],"tindex":"fccb0ce3-8278-11e5-b5a1-195b3540823b","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:419","type":"CtReturnImpl","sourcecode":"return 50"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:106","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Helper.intToDegree(int)"},"status":-2},{"failures":[28,29],"tindex":"fccb0ce4-8278-11e5-b5a1-5f2fd21adbd3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"variableMap":{"maxLatTmp":"ele","minLatTmp":"ele","lat":"ele","hash":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:86","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.util.Helper.eleToInt(double))"},"status":-1},{"failures":[],"tindex":"fccb0ce5-8278-11e5-b5a1-2f031b9933ed","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:208","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"variableMap":{"algo":"cp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.AngleCalc:129","type":"CtIfImpl","sourcecode":"if (double < double) {\n    java.lang.String = \"N\";\n} else if (double < (double * 3)) {\n    java.lang.String = \"NE\";\n} else if (double < (double * 5)) {\n    java.lang.String = \"E\";\n} else if (double < (double * 7)) {\n    java.lang.String = \"SE\";\n} else if (double < (double * 9)) {\n    java.lang.String = \"S\";\n} else if (double < (double * 11)) {\n    java.lang.String = \"SW\";\n} else if (double < (double * 13)) {\n    java.lang.String = \"W\";\n} else if (double < (double * 15)) {\n    java.lang.String = \"NW\";\n} else {\n    java.lang.String = \"N\";\n}"},"status":-2},{"failures":[],"tindex":"fccb33f6-8278-11e5-b5a1-c79df88c611b","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:106","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"variableMap":{"line":"chWeightingStr"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:806","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.routing.util.FlagEncoder com.graphhopper.routing.util.FlagEncoder : com.graphhopper.routing.util.EncodingManager.fetchEdgeEncoders()) {\n    com.graphhopper.routing.util.Weighting com.graphhopper.routing.util.Weighting = com.graphhopper.GraphHopper.createWeighting(new com.graphhopper.routing.util.WeightingMap(java.lang.String), com.graphhopper.routing.util.FlagEncoder);\n    java.util.Map<com.graphhopper.routing.util.Weighting, com.graphhopper.routing.RoutingAlgorithmFactory>.put(com.graphhopper.routing.util.Weighting, null);\n}"},"status":-2},{"failures":[38,20,21,41,22,45,46,47,48,49,50,51],"tindex":"fccb33f7-8278-11e5-b5a1-19b3c7c45b0f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:149","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n    if (long < 0) {\n        return false;\n    } \n    byte[] byte[] = new byte[int];\n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    int int = ((int)(long / (int)));\n    if ((long % (int)) != 0)\n        int++;\n    \n    int[][] = new int[int][];\n    for (int int = 0 ; int < int ; int++) {\n        int int = (java.io.RandomAccessFile.read(byte[])) / 4;\n        int[] int[] = new int[int];\n        for (int int = 0 ; int < int ; int++) {\n            int[][int] = com.graphhopper.util.BitUtil.toInt(byte[], (int * 4));\n        }\n        int[][][int] = int[];\n    }\n    return true;\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-1},{"failures":[],"tindex":"fccb33f8-8278-11e5-b5a1-39425ea81bc1","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:242","type":"CtReturnImpl","sourcecode":"return ((\"totalMB:\" + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.getTotalMB())) + \", usedMB:\") + com.graphhopper.util.Helper.(com.graphhopper.util.Helper.getUsedMB())"},"status":-2},{"failures":[],"tindex":"fccb33f9-8278-11e5-b5a1-e920780928f3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:644","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:112","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.PillarInfo.getLongitude(int)"},"status":0},{"failures":[],"tindex":"fccb33fa-8278-11e5-b5a1-57c1389371a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:89","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"status":-2},{"failures":[],"tindex":"fccb5b0b-8278-11e5-b5a1-b7e70997ca43","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalc2D:64","type":"CtReturnImpl","sourcecode":"return \"2D\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:252","type":"CtReturnImpl","sourcecode":"return \"bike2\""},"status":-2},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,44,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,126,126,127,127,128,128,129,129,130,130,131,131,132,132,133,133,13,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,23,24,25,26,27,28,29,30,31,153,154,32,33,34,35,155,36,156,38,157,158,159,14,15,160,39,16,17,18,19,20,21,40,41,42,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354],"tindex":"fccb5b0c-8278-11e5-b5a1-9baacd0804f4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:222","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setSegmentSize(com.graphhopper.storage.DataAccess.getSegmentSize())"},"variableMap":{"indexCopy":"da","index":"da"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:115","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.RAMIntDataAccess(java.lang.String , java.lang.String , false , java.nio.ByteOrder)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"fccae5cd-8278-11e5-b5a1-9b9cd65c18fb","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.InstructionList.get"]},"type":"staticDiff"}]},{"transformation":"fccb33f9-8278-11e5-b5a1-e920780928f3","diffs":[{"methodsDiff":{"delete":["com.graphhopper.reader.PillarInfo.getLongitude"]},"type":"staticDiff"}]}]}