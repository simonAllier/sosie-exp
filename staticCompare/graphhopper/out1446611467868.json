{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":103,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":15,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":228,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":95,"com.graphhopper.reader.OSMReaderTest.testFerry":190,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":13,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":177,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":218,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":255,"com.graphhopper.reader.OSMReaderTest.testWithBounds":199,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":237,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":16,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":101,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":57,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":256,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":43,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":108,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":126,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":211,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":176,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":50,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":157,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":178,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":116,"com.graphhopper.GraphHopperTest.testPrepare":220,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":34,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":121,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":39,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":132,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":18,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":23,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":232,"com.graphhopper.util.InstructionListTest.testWayList":204,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":28,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":203,"com.graphhopper.GraphHopperAPITest.testDisconnected179":234,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":249,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":158,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":224,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":97,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":24,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":244,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":145,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":11,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":66,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":60,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":195,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":106,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":253,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":117,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":221,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":92,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":89,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":52,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":88,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":2,"com.graphhopper.GraphHopperTest.testLoadOSM":223,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":137,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":163,"com.graphhopper.reader.OSMReaderTest.testSort":192,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":29,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":59,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":198,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":173,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":245,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":47,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":118,"com.graphhopper.util.PointListTest.testReverse":254,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":69,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":17,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":37,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":63,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":243,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":91,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":100,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":155,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":250,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":22,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":235,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":27,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":171,"com.graphhopper.storage.GraphHopperStorageCHTest.testPrios":247,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":70,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":125,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":119,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":251,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":129,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":31,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":65,"com.graphhopper.util.GHUtilityTest.testSort":210,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":19,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":93,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":124,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":83,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":185,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":225,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":236,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":68,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":134,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":75,"com.graphhopper.GraphHopperAPITest.testLoad":188,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":222,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":80,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":127,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":55,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":123,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":62,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":71,"com.graphhopper.reader.OSMReaderTest.testBarriers":193,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":111,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":174,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":6,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":98,"com.graphhopper.util.GHUtilityTest.testCopy":209,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":21,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":72,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":206,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":77,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":99,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":5,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":227,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":142,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":90,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":133,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":207,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":33,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":184,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":78,"com.graphhopper.reader.PrinctonReaderTest.testRead":189,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":143,"com.graphhopper.routing.util.EncodingManagerTest.testWrongEncoders":233,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":240,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":94,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":161,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":49,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":120,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":167,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":252,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":81,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":180,"com.graphhopper.util.InstructionListTest.testWayList2":205,"com.graphhopper.reader.OSMReaderTest.testFoot":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":114,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":110,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":144,"com.graphhopper.reader.OSMReaderTest.testOneWay":201,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":165,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":128,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":140,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":168,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":139,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":102,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":48,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":105,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":122,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":194,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":44,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":35,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":41,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":181,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":42,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":202,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":217,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":53,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":212,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":113,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":248,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":239,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":154,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":215,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":112,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":214,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":213,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":148,"com.graphhopper.util.GHUtilityTest.testSort2":208,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":32,"com.graphhopper.reader.OSMReaderTest.testMain":191,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":186,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":183,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":159,"com.graphhopper.routing.PathBidirRefTest.testExtract2":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":182,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":150,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":115,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":54,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":146,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":151,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":156,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":172,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":175,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":1,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":152,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":242,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":86,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":200,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":164,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":229,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":46,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":246,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":141,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":187,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":241,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":179,"com.graphhopper.GraphHopperTest.testFootAndCar":9,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":135,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":162,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":230,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":147,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":107,"com.graphhopper.GraphHopperTest.testPrepareOnly":8,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":170,"com.graphhopper.GraphHopperTest.testVia":219,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":96,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":197,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":160,"com.graphhopper.GraphHopperTest.testFootOnly":10,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":196,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":104,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":169,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":166},"transformations":[{"failures":[0,1],"tindex":"de37e993-82ac-11e5-9763-719e31cbe7ec","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:193","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.routing.util.FlagEncoder) == null)\n    throw new java.lang.IllegalStateException(\"No vehicle encoder set.\");\n"},"variableMap":{"prepareFlagEncoder":"encoder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:111","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getEdge();\n    long long = com.graphhopper.reader.OSMReader.getOsmIdOfInternalEdge(int);\n    if ((((int != int) && ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))) && (long != (this.long))) || ((((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type)) && (long == (this.long))) && (long >= 0))) {\n        final com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry = new com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry();\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = int;\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.int = com.graphhopper.util.EdgeIterator.getEdge();\n        com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry.long = com.graphhopper.routing.util.TurnCostEncoder.getTurnFlags(true, 0);\n        java.util.Collection<com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry>.add(com.graphhopper.reader.OSMTurnRelation.TurnCostTableEntry);\n        if ((this.com.graphhopper.reader.OSMTurnRelation.Type) == (com.graphhopper.reader.OSMTurnRelation.Type.com.graphhopper.reader.OSMTurnRelation.Type))\n            break;\n        \n    } \n}"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10],"tindex":"de3810a4-82ac-11e5-9763-2131ea68cf67","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"variableMap":{"flags":"encoded","mask":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:316","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedValue.setValue(long, com.graphhopper.routing.util.FootFlagEncoder.handlePriority(com.graphhopper.reader.OSMWay, int))"},"status":-1},{"failures":[11],"tindex":"de3810a5-82ac-11e5-9763-c7e2469ad6a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:148","type":"CtAssignmentImpl","sourcecode":"int = int = ((int)(java.lang.Math.sqrt(int)))"},"variableMap":{"latSize":"to","size":"j","lonSize":"j"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PrinctonReader:79","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String[][int])"},"status":-1},{"failures":[],"tindex":"de3837b6-82ac-11e5-9763-e7d5e692e9c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:182","type":"CtReturnImpl","sourcecode":"return int - 1"},"variableMap":{"intVal":"capacity"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:235","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,0,189,11,190,7,191,192,193,194,195,1,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,8,212,213,214,215,216,217,218,219,220,221,9,222,223,224,225,10,226],"tindex":"de3837b7-82ac-11e5-9763-a382d84bdf59","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:124","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.lang.IllegalStateException(\"0 segments are not allowed.\");\n"},"variableMap":{"segmentsToMap":"toNodeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:145","type":"CtIfImpl","sourcecode":"if (int != int)\n    com.graphhopper.storage.EdgeAccess.connectNewEdge(int, int);\n"},"status":-1},{"failures":[204],"tindex":"de3837b8-82ac-11e5-9763-23d24d32e260","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:264","type":"CtForEachImpl","sourcecode":"for (com.graphhopper.util.Instruction com.graphhopper.util.Instruction : java.util.List<com.graphhopper.util.Instruction>) {\n    java.util.List<java.util.List<java.lang.Double>>.add(java.util.Arrays.asList(com.graphhopper.util.Instruction.getFirstLat(), com.graphhopper.util.Instruction.getFirstLon()));\n}"},"status":-1},{"failures":[21,22,23,24,25,26,27,227,28,30,31,32,33,34,228,229,35,36,37,38,40,43,44,45,230,46,48,49,51,231,232,219],"tindex":"de385ec9-82ac-11e5-9763-8d8a9a4c2e93","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:213","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int / 2)]"},"status":-1},{"failures":[],"tindex":"de385eca-82ac-11e5-9763-a3dbe7a3f0d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:183","type":"CtAssignmentImpl","sourcecode":"int = gnu.trove.list.array.TIntArrayList.size()"},"status":-2},{"failures":[233],"tindex":"de385ecb-82ac-11e5-9763-ab18b93ca030","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:193","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((java.lang.String.format(com.graphhopper.routing.util.EncodingManager.java.lang.String, int, \"way\")) + (com.graphhopper.routing.util.EncodingManager.java.lang.String)))"},"status":-1},{"failures":[234],"tindex":"de385ecc-82ac-11e5-9763-9945a38c8144","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:157","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHResponse:75","type":"CtReturnImpl","sourcecode":"return !(java.util.List<java.lang.Throwable>.isEmpty())"},"status":-1},{"failures":[54,59,60,72,76,77,78,82,83,88,89,96,100,101,102,106,107,112,113,123,127,128,129,133,134,139,140,166,170,171,172,176,177,182,183],"tindex":"de385ecd-82ac-11e5-9763-85c109fc5ca6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:536","type":"CtAssignmentImpl","sourcecode":"int = int - 3"},"variableMap":{"id":"mSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:202","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[235,236,71,72,237,77,79,86,88,89,238,92,239,95,96,240,101,103,110,112,113,241,116,242,243,122,123,244,128,137,139,140,245,143,246,247,161,248,165,166,249,171,180,182,183,250,186,251],"tindex":"de385ece-82ac-11e5-9763-abdb75ea0899","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:714","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int == 0) || (int == int)"},"variableMap":{"i":"nodeCount","lastIndex":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:328","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.DataAccess.ensureCapacity((((long)(int)) * (int)))"},"status":-1},{"failures":[],"tindex":"de3885df-82ac-11e5-9763-d59ef14b6f85","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:237","type":"CtReturnImpl","sourcecode":"return ((java.lang.Runtime.getRuntime().totalMemory()) - (java.lang.Runtime.getRuntime().freeMemory())) / (com.graphhopper.util.Helper.long)"},"variableMap":{"com.graphhopper.util.Helper.MB":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:162","type":"CtReturnImpl","sourcecode":"return int <= int ? long + (int) : long + (int)"},"status":-2},{"failures":[1],"tindex":"de3885e0-82ac-11e5-9763-3da74eb8941a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMInputFile:198","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMNode.create(long, javax.xml.stream.XMLStreamReader)"},"variableMap":{"parser":"parser","id":"id"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:209","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMRelation.create(long, javax.xml.stream.XMLStreamReader)"},"status":-1},{"failures":[252,212,213,214,216],"tindex":"de3885e1-82ac-11e5-9763-4becd3dd7467","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:388","type":"CtForEachImpl","sourcecode":"for (int int : java.util.List<java.lang.Integer>) {\n    com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + int));\n    com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.routing.VirtualEdgeIteratorState.fetchWayGeometry(3);\n    double double;\n    if (boolean) {\n        int int = com.graphhopper.util.PointList.getSize();\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat((int - 2)), com.graphhopper.util.PointList.getLon((int - 2)), com.graphhopper.util.PointList.getLat((int - 1)), com.graphhopper.util.PointList.getLon((int - 1)));\n    } else {\n        double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.calcOrientation(com.graphhopper.util.PointList.getLat(0), com.graphhopper.util.PointList.getLon(0), com.graphhopper.util.PointList.getLat(1), com.graphhopper.util.PointList.getLon(1));\n    }\n    double = com.graphhopper.routing.QueryGraph.com.graphhopper.util.AngleCalc.alignOrientation(double, double);\n    double double = double - double;\n    if ((java.lang.Math.abs(double)) > 1.74) {\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        com.graphhopper.routing.VirtualEdgeIteratorState com.graphhopper.routing.VirtualEdgeIteratorState = java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.get(((int * 4) + com.graphhopper.routing.QueryGraph.(getPosOfReverseEdge(int))));\n        com.graphhopper.routing.VirtualEdgeIteratorState.setVirtualEdgePreference(true);\n        java.util.List<com.graphhopper.routing.VirtualEdgeIteratorState>.add(com.graphhopper.routing.VirtualEdgeIteratorState);\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"de3885e2-82ac-11e5-9763-cfc4f4fd5f1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:237","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(int[], 0)"},"status":0},{"failures":[5,253],"tindex":"de38acf3-82ac-11e5-9763-617f350f4235","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:597","type":"CtUnaryOperatorImpl","sourcecode":"long++"},"variableMap":{"tmpDegreeCounter":"encoded"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:293","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-1},{"failures":[252,254,212,213,214,216,220,221],"tindex":"de38acf4-82ac-11e5-9763-359013473255","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:91","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.PointList.isEmpty())\n    com.graphhopper.util.PointList = new com.graphhopper.util.PointList(com.graphhopper.util.PointList.size() , com.graphhopper.util.PointList.is3D());\n"},"variableMap":{"tmpPoints":"clonePL","fullPoints":"clonePL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:361","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.reverse()"},"status":-1},{"failures":[195,255,256],"tindex":"de38acf5-82ac-11e5-9763-ad70c3976e97","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:190","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.setSeaLevel(true)"},"variableMap":{"demProvider":"demProvider"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:237","type":"CtInvocationImpl","sourcecode":"gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.reader.dem.HeightTile>.put(int, com.graphhopper.reader.dem.HeightTile)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"de3885e2-82ac-11e5-9763-cfc4f4fd5f1c","diffs":[{"methodsDiff":{"delete":["java.util.Arrays.fill"]},"type":"staticDiff"}]}]}