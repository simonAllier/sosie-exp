{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":19,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":28,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":158,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":84,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":162,"com.graphhopper.routing.PathTest.testFindInstruction":15,"com.graphhopper.reader.OSMReaderTest.testFerry":37,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":0,"com.graphhopper.routing.QueryGraphTest.testOneWay":27,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":59,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":136,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":4,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":6,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":8,"com.graphhopper.reader.OSMReaderTest.testWithBounds":48,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":22,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":78,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":126,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":70,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":141,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":74,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":134,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":139,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":16,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":72,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":121,"com.graphhopper.GraphHopperTest.testPrepare":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":75,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":9,"com.graphhopper.util.InstructionListTest.testWayList2":33,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":137,"com.graphhopper.reader.OSMReaderTest.testFoot":38,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":116,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":25,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":1,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":29,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":88,"com.graphhopper.util.InstructionListTest.testWayList":32,"com.graphhopper.reader.OSMReaderTest.testOneWay":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":86,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":5,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testUnchangedForStepsBridgeAndTunnel":112,"com.graphhopper.GraphHopperAPITest.testDisconnected179":36,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":115,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":135,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":66,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":79,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":2,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":151,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":81,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":138,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":42,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":11,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":103,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":62,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":111,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":58,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":127,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":123,"com.graphhopper.GraphHopperTest.testLoadOSM":65,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":53,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":87,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":98,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":82,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":57,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":56,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":105,"com.graphhopper.reader.OSMReaderTest.testSort":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":55,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":145,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":54,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":120,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":47,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":92,"com.graphhopper.reader.OSMReaderTest.testMain":39,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":73,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":76,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":117,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":102,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":146,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":12,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":144,"com.graphhopper.routing.PathTest.testWayList":14,"com.graphhopper.storage.MMapDataAccessTest.testCopy":150,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":154,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":147,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":106,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":99,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":89,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":113,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":165,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":108,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":13,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":44,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":119,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":18,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":97,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":10,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":140,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":83,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":107,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":148,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":7,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":157,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":159,"com.graphhopper.GraphHopperTest.testFootAndCar":63,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":71,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":149,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":26,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":85,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":163,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":129,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":96,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":23,"com.graphhopper.GraphHopperTest.testPrepareOnly":52,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":30,"com.graphhopper.GraphHopperTest.testVia":60,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":164,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":17,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":67,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":156,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":46,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testSetSpeed0_issue367":122,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":160,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":142,"com.graphhopper.GraphHopperAPITest.testLoad":35,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":64,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":95,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":21,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":34,"com.graphhopper.GraphHopperTest.testFootOnly":68,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":124,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":114,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":100,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":45,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":130,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":152,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":101,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":133,"com.graphhopper.util.InstructionListTest.testFind":31,"com.graphhopper.reader.OSMReaderTest.testBarriers":41,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":69,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":93,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":3,"com.graphhopper.coll.GHSortedCollectionTest.testUpdate":143,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":91,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":109},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"cc0e29aa-8276-11e5-991b-2b9a96e695e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:139","type":"CtIfImpl","sourcecode":"if (boolean)\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int), com.graphhopper.util.PointAccess.getElevation(int));\nelse\n    com.graphhopper.util.PointList.add(com.graphhopper.util.PointAccess.getLatitude(int), com.graphhopper.util.PointAccess.getLongitude(int));\n"},"status":-1},{"failures":[37,39,40,41,42,44,45,46,47,48,49,50,51,59,60,61,62,64,65,66,67],"tindex":"cc0e50bb-8276-11e5-991b-53967420acf4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:197","type":"CtAssignmentImpl","sourcecode":"int = ~int"},"variableMap":{"index":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:839","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMReader.addTowerNode(long, double, double, double)"},"status":-1},{"failures":[],"tindex":"cc0e77cc-8276-11e5-991b-a7ca7469cc7e","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:546","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"tunnel\", java.util.Set<java.lang.String>))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(50.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":0},{"failures":[],"tindex":"cc0e77cd-8276-11e5-991b-756875c1e457","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:654","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.Lock.release()"},"status":-2},{"failures":[5,13,20,112,30,42,43,71,72,74,76,77,109,110],"tindex":"cc0e9ede-8276-11e5-991b-bfe25ec5f1b4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:563","type":"CtAssertImpl","sourcecode":"assert com.graphhopper.storage.BaseGraph.isFrozen() : \"level graph not yet frozen\""},"variableMap":{"baseGraph":"that"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:63","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double, double)"},"status":-1},{"failures":[],"tindex":"cc0e9edf-8276-11e5-991b-695314a3a906","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:94","type":"CtIfImpl","sourcecode":"if (boolean) {\n    int = com.graphhopper.util.PointList.getSize();\n    com.graphhopper.util.DouglasPeucker.simplify(com.graphhopper.util.PointList);\n} "},"status":0},{"failures":[113,114,115],"tindex":"cc0e9ee0-8276-11e5-991b-a7b0b186cb00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:80","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"cc0e9ee1-8276-11e5-991b-4fce3d850083","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.SparseArray:367","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"pos":"visitedCountFrom","mSize":"visitedCountFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:158","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"cc0ec5f2-8276-11e5-991b-87229d454f55","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:115","type":"CtIfImpl","sourcecode":"if (int > 100)\n    throw new java.lang.IllegalArgumentException(\"periodicUpdates has to be in [0, 100], to disable it use 0\");\n"},"variableMap":{"periodicUpdates":"removed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:84","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.DouglasPeucker.compressNew(com.graphhopper.util.PointList, int)"},"status":0},{"failures":[],"tindex":"cc0ec5f3-8276-11e5-991b-c9a23b52f472","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.AngleCalc:119","type":"CtOperatorAssignmentImpl","sourcecode":"double += 2 * (java.lang.Math.double)"},"variableMap":{"orientation":"dijkstraTime","java.lang.Math.PI":"dijkstraTime"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:360","type":"CtOperatorAssignmentImpl","sourcecode":"double += com.graphhopper.util.StopWatch.getSeconds()"},"status":0},{"failures":[116,117,0,118,119,1,120,6,14,15,24,121,122,30,123,124,125,126,127,128,129,130,131,132,133,73,134,135,136,75,137,138,139,78,140,141,142,111],"tindex":"cc0ec5f4-8276-11e5-991b-0feeecd6e5d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:547","type":"CtIfImpl","sourcecode":"if (double == 0) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else if (double > 1) {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n} else {\n    return com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double);\n}"},"variableMap":{"longTripsSpeed":"speed","shortTripsSpeed":"speed","this":"this","durationInHours":"speed","unknownSpeed":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:352","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.util.AbstractFlagEncoder.setAccess(com.graphhopper.routing.util.AbstractFlagEncoder.setSpeed(0, double), boolean, boolean)"},"status":-1},{"failures":[],"tindex":"cc0ec5f5-8276-11e5-991b-29f1317a726d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:88","type":"CtIfImpl","sourcecode":"if (\"${project.version}\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: maven did not preprocess the version file! Do not use the jar for a release!\");\n} else if (\"0.0\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: cannot get version!?\");\n} else {\n    java.lang.String java.lang.String = java.lang.String;\n    if (int >= 0)\n        java.lang.String = java.lang.String.substring(0, int);\n    \n    com.graphhopper.util.Constants.boolean = java.lang.String.toLowerCase().contains(\"-snapshot\");\n    com.graphhopper.util.Constants.java.lang.String = java.lang.String;\n}"},"status":-2},{"failures":[143],"tindex":"cc0eed06-8276-11e5-991b-634e18a42738","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHSortedCollection:64","type":"CtIfImpl","sourcecode":"if (gnu.trove.set.hash.TIntHashSet.isEmpty()) {\n    java.util.TreeMap<java.lang.Integer, gnu.trove.set.hash.TIntHashSet>.remove(int);\n} "},"status":-1},{"failures":[144,71,134,74,145,75,146,147,76,148,149,150,151,152,153,154,155,109,156],"tindex":"cc0eed07-8276-11e5-991b-81409a9cfb68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:370","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], int, int)"},"variableMap":{"bb":"bb","values":"values","length":"length","delta":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:373","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.get(byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"cc0eed08-8276-11e5-991b-f95e659bca41","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.BaseGraph:1060","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:540","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.util.CmdArgs.getBool(\"graph.elevation.calcmean\", false)"},"status":-2},{"failures":[157,158,159],"tindex":"cc0f1419-8276-11e5-991b-13cd05d9238c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"variableMap":{"endIndexPlusOne":"counter","frontIndex":"counter"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:172","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"cc0f141a-8276-11e5-991b-27c0a51f2adf","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:747","type":"CtIfImpl","sourcecode":"if (double < double)\n    return true;\n"},"variableMap":{"minDistance":"weight","rMin":"weightLimit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:147","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.storage.EdgeEntry.double) > (double)"},"status":-2},{"failures":[],"tindex":"cc0f141b-8276-11e5-991b-e1cb8a2bb9d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:50","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.GraphHopperStorage.this(java.util.Collections.<com.graphhopper.routing.util.Weighting>emptyList(), com.graphhopper.storage.Directory, com.graphhopper.routing.util.EncodingManager, boolean, com.graphhopper.storage.GraphExtension)"},"status":-2},{"failures":[160,161,162,163,164,165,89,105],"tindex":"cc0f141c-8276-11e5-991b-bb503dbf3654","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHDirectory:154","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.cleanHack()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:142","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestNode(int)"},"status":-1},{"failures":[44],"tindex":"cc0f141d-8276-11e5-991b-b19938868742","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:170","type":"CtOperatorAssignmentImpl","sourcecode":"long |= 1"},"variableMap":{"hash":"viaNodeID"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:932","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.reader.OSMRelation.Member.ref()"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"cc0e9edf-8276-11e5-991b-695314a3a906","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.DouglasPeucker.simplify","com.graphhopper.util.PointList.getSize"]},"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]},{"transformation":"cc0ec5f3-8276-11e5-991b-c9a23b52f472","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.StopWatch.getSeconds"]},"type":"staticDiff"}]}]}