{"failureDictionary":{"com.graphhopper.routing.util.FootFlagEncoderTest.testPriority":78,"com.graphhopper.reader.OSMReaderTest.testFerry":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":46,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":3,"com.graphhopper.routing.util.FootFlagEncoderTest.testSlowHiking":83,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":35,"com.graphhopper.routing.util.CarFlagEncoderTest.testSwapDir":102,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetToMaxSpeed":88,"com.graphhopper.routing.util.CarFlagEncoderTest.testBarrierAccess":86,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":55,"com.graphhopper.reader.OSMReaderTest.testWithBounds":25,"com.graphhopper.storage.MMapDataAccessTest.testSegments":30,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":34,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":66,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":36,"com.graphhopper.routing.util.FootFlagEncoderTest.testBasics":85,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":38,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":62,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetAccess":93,"com.graphhopper.GraphHopperTest.testPrepare":5,"com.graphhopper.reader.OSMReaderTest.testFoot":15,"com.graphhopper.reader.OSMReaderTest.testOneWay":28,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":53,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":58,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":10,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":56,"com.graphhopper.routing.util.CarFlagEncoderTest.testMilitaryAccess":87,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":40,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":45,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed0_issue367":94,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":51,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":19,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":20,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":68,"com.graphhopper.routing.util.CarFlagEncoderTest.testCombination":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":41,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":6,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxValue":96,"com.graphhopper.routing.util.FootFlagEncoderTest.testAccess":84,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":32,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":109,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":77,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":49,"com.graphhopper.GraphHopperTest.testLoadOSM":9,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":75,"com.graphhopper.reader.OSMReaderTest.testSort":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":42,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":24,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":67,"com.graphhopper.reader.OSMReaderTest.testMain":16,"com.graphhopper.routing.util.CarFlagEncoderTest.testRoundabout":90,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_noCosts":98,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":27,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testSetSpeed0_issue367":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":48,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":63,"com.graphhopper.routing.util.CarFlagEncoderTest.testSpeed":89,"com.graphhopper.routing.PathTest.testWayList":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":39,"com.graphhopper.routing.util.CarFlagEncoderTest.testFordAccess":91,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":61,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":21,"com.graphhopper.routing.util.FootFlagEncoderTest.testMixSpeedAndSafe":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":107,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":60,"com.graphhopper.routing.util.FootFlagEncoderTest.testGetSpeed":76,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":54,"com.graphhopper.routing.util.CarFlagEncoderTest.testAccess":97,"com.graphhopper.routing.util.CarFlagEncoderTest.testRegisterOnlyOnceAllowed":99,"com.graphhopper.routing.util.CarFlagEncoderTest.testMaxSpeed":95,"com.graphhopper.GraphHopperTest.testFootAndCar":7,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibility":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":104,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":33,"com.graphhopper.routing.util.CarFlagEncoderTest.testOneway":100,"com.graphhopper.routing.util.CarFlagEncoderTest.testSetSpeed":103,"com.graphhopper.routing.util.CarFlagEncoderTest.testTurnFlagEncoding_withCosts":101,"com.graphhopper.routing.util.FootFlagEncoderTest.testRailPlatformIssue366":81,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":108,"com.graphhopper.GraphHopperTest.testPrepareOnly":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":59,"com.graphhopper.GraphHopperTest.testVia":4,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":11,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":110,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":37,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":23,"com.graphhopper.reader.OSMReaderTest.testTurnFlagCombination":69,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":8,"com.graphhopper.routing.util.FootFlagEncoderTest.testTurnFlagEncoding_noCostsAndRestrictions":82,"com.graphhopper.GraphHopperTest.testFootOnly":12,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":74,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":52,"com.graphhopper.routing.util.FootFlagEncoderTest.testCombined":80,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":65,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":22,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":31,"com.graphhopper.routing.util.CarFlagEncoderTest.testRailway":92,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":50,"com.graphhopper.reader.OSMReaderTest.testBarriers":18,"com.graphhopper.routing.util.MotorcycleFlagEncoderTest.testHandleWayTags":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":105,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":13,"com.graphhopper.routing.util.EncodingManagerTest.testCompatibilityBug":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":106},"transformations":[{"failures":[],"tindex":"06a0fa5e-7947-11e5-85db-a39823015764","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:146","type":"CtAssignmentImpl","sourcecode":"double = double * double"},"variableMap":{"tmp":"minLat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:179","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox.double = com.graphhopper.util.Helper.intToDegree(com.graphhopper.storage.DataAccess.getHeader((5 * 4)))"},"status":-2},{"failures":[0],"tindex":"06a1216f-7947-11e5-85db-11c510022882","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:105","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"06a14880-7947-11e5-85db-4f03a6009e27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.VLongStorage:90","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 7"},"variableMap":{"i":"includeWay"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:245","type":"CtOperatorAssignmentImpl","sourcecode":"long |= com.graphhopper.routing.util.AbstractFlagEncoder.acceptWay(com.graphhopper.reader.OSMWay)"},"status":-1},{"failures":[30,31,32,33,34,20,35,36],"tindex":"06a14881-7947-11e5-85db-074fc3f79660","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:154","type":"CtOperatorAssignmentImpl","sourcecode":"long += long"},"status":-1},{"failures":[37,38,39,34,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"06a14882-7947-11e5-85db-1d7231120731","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:236","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.inPlaceNodeRemove(int)"},"status":-1},{"failures":[],"tindex":"06a14883-7947-11e5-85db-bd402916f910","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:72","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,69,23,24,25,26,28,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,29,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"06a16f94-7947-11e5-85db-d7a048a8ed6a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:956","type":"CtOperatorAssignmentImpl","sourcecode":"int += int + 1"},"variableMap":{"arrayLength":"shift","maxGeoRef":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:151","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-1},{"failures":[104,105,106,107,108,109,21,110],"tindex":"06a16f95-7947-11e5-85db-f92d79df517a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.CompressedArray:72","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"compressionLevel":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:267","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-1},{"failures":[],"tindex":"06a16f96-7947-11e5-85db-1bb878f950a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:661","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GraphHopper.ensureWriteAccess()"},"status":-2},{"failures":[],"tindex":"06a16f97-7947-11e5-85db-ff427f19951b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:738","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"Unknown key \" + int) + \" for boolean value\"))"},"variableMap":{"key":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:534","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(((\"edgeId \" + int) + \" out of bounds\"))"},"status":-2},{"failures":[],"tindex":"06a16f98-7947-11e5-85db-e1f73d9180d3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.BitUtilLittle:136","type":"CtReturnImpl","sourcecode":"return \"little\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:95","type":"CtReturnImpl","sourcecode":"return \"bike\""},"status":-2},{"failures":[],"tindex":"06a16f99-7947-11e5-85db-01fffa74140d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"lat":"connectedId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.TarjansStronglyConnectedComponentsAlgorithm:110","type":"CtAssignmentImpl","sourcecode":"int[][int] = java.lang.Math.min(int[][int], int[][int])"},"status":-2},{"failures":[],"tindex":"06a196aa-7947-11e5-85db-b7375f0160db","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:103","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.routing.util.AllEdgesIterator.detach(false))"},"status":-2},{"failures":[],"tindex":"06a196ab-7947-11e5-85db-61183a81a8de","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:176","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 64)\n    throw new java.lang.UnsupportedOperationException((\"Strings needs to fit into a \\'long\\' but length was \" + (java.lang.String.length())));\n"},"variableMap":{"str":"graphHopperFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:711","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"-gh\")) {\n} else if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    throw new java.lang.IllegalArgumentException(\"To import an osm file you need to use importOrLoad\");\n} else if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException ex) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"06a196ac-7947-11e5-85db-49cce288cbdb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:406","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.addAll(com.graphhopper.reader.OSMReader.addBarrierEdge(long, long, long, long, long))"},"variableMap":{"createdEdges":"newEdges","newNodeId":"flags","wayOsmId":"wayOsmId","wayFlags":"flags","this":"this","nodeFlags":"wayOsmId","nodeId":"wayOsmId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:699","type":"CtInvocationImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long))"},"status":-2},{"failures":[],"tindex":"06a196ad-7947-11e5-85db-359dc10fb171","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:499","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.TranslationMap"},"variableMap":{"trMap":"com.graphhopper.util.TranslationMap.class"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.TranslationMap:66","type":"CtTryImpl","sourcecode":"try {\n    for (java.lang.String java.lang.String : com.graphhopper.util.TranslationMap.java.util.List<java.lang.String>) {\n        com.graphhopper.util.TranslationMap.TranslationHashMap com.graphhopper.util.TranslationMap.TranslationHashMap = new com.graphhopper.util.TranslationMap.TranslationHashMap(com.graphhopper.util.Helper.getLocale(java.lang.String));\n        com.graphhopper.util.TranslationMap.TranslationHashMap.doImport(com.graphhopper.util.TranslationMap.com.graphhopper.util.TranslationMap.getResourceAsStream((java.lang.String + \".txt\")));\n        com.graphhopper.util.TranslationMap.add(com.graphhopper.util.TranslationMap.TranslationHashMap);\n    }\n    com.graphhopper.util.TranslationMap.postImportHook();\n    return this;\n} catch (java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-2},{"failures":[],"tindex":"06a196ae-7947-11e5-85db-a13426969317","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:58","type":"CtLocalVariableImpl","sourcecode":"double double = double * (1.0 - double)"},"variableMap":{"deltaX":"r_lon_deg","tmp":"shrinkFactor"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DistanceCalcEarth:226","type":"CtLocalVariableImpl","sourcecode":"double double = double * double"},"status":-2},{"failures":[],"tindex":"06a1bdbf-7947-11e5-85db-11a3aa2c6a7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:383","type":"CtOperatorAssignmentImpl","sourcecode":"long += java.nio.ByteBuffer.capacity()"},"status":-2},{"failures":[],"tindex":"06a1bdc0-7947-11e5-85db-0518871af0fd","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.util.EncodingManager:157","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap)"},"variableMap":{"configuration":"configuration","fe":"fe"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:148","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap)"},"status":-2},{"failures":[],"tindex":"06a1bdc1-7947-11e5-85db-2d6a3a68d302","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:589","type":"CtIfImpl","sourcecode":"if (double < 0)\n    throw new java.lang.IllegalArgumentException((\"weight cannot be negative but was \" + double));\n"},"variableMap":{"weight":"weight"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:264","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.AStar.AStarEdge == null) {\n    com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n    com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n} else {\n    assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n    java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n    com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n    com.graphhopper.routing.AStar.AStarEdge.double = double;\n    com.graphhopper.routing.AStar.AStarEdge.double = float;\n}"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}