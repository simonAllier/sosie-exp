{"failureDictionary":{"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":4,"com.graphhopper.coll.IntDoubleBinHeapTest.testSpreading":12,"com.graphhopper.geohash.LinearKeyAlgoTest.testEncode":2,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":18,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":17,"com.graphhopper.coll.IntDoubleBinHeapTest.testBasic":10,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":9,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMoreComplexGraph":15,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNormedDist":3,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":5,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":6,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":8,"com.graphhopper.coll.IntDoubleBinHeapTest.testSize":11,"com.graphhopper.geohash.LinearKeyAlgoTest.testDecode":1,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":14,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":7,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":16,"com.graphhopper.geohash.LinearKeyAlgoTest.testInstantiation":0,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":13},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"988b74f8-790d-11e5-b795-d3fc79b136e2","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:121","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = com.graphhopper.util.shapes.BBox.clone()"},"variableMap":{"bbox":"bounds","box":"bounds"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:56","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.shapes.BBox = new com.graphhopper.util.shapes.BBox(double , double , double , double)"},"status":-1},{"failures":[10,11,12,13,14,15],"tindex":"988b9c09-790d-11e5-b795-b5aba7e6758c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:158","type":"CtWhileImpl","sourcecode":"while (int > 255) {\n    int = int / 10;\n    int += 50;\n}"},"variableMap":{"red":"size","green":"size"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:119","type":"CtIfImpl","sourcecode":"if ((int != (int)) && ((float[][(int + 1)]) < (float[][int]))) {\n    int++;\n} "},"status":-1},{"failures":[16,17,18],"tindex":"988b9c0a-790d-11e5-b795-73692f023173","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:151","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = java.io.RandomAccessFile.read(byte[]);\n    if (int <= 0)\n        throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n    \n    com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n}"},"status":-1},{"failures":[],"tindex":"988b9c0b-790d-11e5-b795-899d4a66c880","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.PathBidir:70","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"edgeId":"a"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:179","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.checkNodeId(int)"},"status":-2},{"failures":[],"tindex":"988b9c0c-790d-11e5-b795-fd3ab24e2c30","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:675","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long"},"variableMap":{"encoded":"visitedNodesSum","backwardBit":"visitedNodesSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1063","type":"CtOperatorAssignmentImpl","sourcecode":"long += com.graphhopper.routing.RoutingAlgorithm.getVisitedNodes()"},"status":-2},{"failures":[],"tindex":"988bc31d-790d-11e5-b795-1736b2d5a239","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:253","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.TIntList.size()) < int)\n    for (int int = 0 ; int < (com.graphhopper.util.TIntList.size()) ; int++) {\n        com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(com.graphhopper.util.TIntList.get(int));\n        while (com.graphhopper.util.EdgeIterator.next()) {\n            com.graphhopper.util.EdgeIterator.setFlags(com.graphhopper.routing.util.FlagEncoder.setAccess(com.graphhopper.util.EdgeIterator.getFlags(), false, false));\n            int++;\n        }\n    }\n"},"status":-2},{"failures":[],"tindex":"988bc31e-790d-11e5-b795-1f4f11f813a4","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:118","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.isEmpty()))\n    throw new java.lang.IllegalArgumentException(\"baseUrl cannot be empty\");\n"},"variableMap":{"baseUrl":"str"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:211","type":"CtIfImpl","sourcecode":"if (int < 100)\n    java.lang.String += \"0\";\n"},"status":-2},{"failures":[],"tindex":"988bc31f-790d-11e5-b795-6102fc7526ba","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.StopWatch:67","type":"CtReturnImpl","sourcecode":"return (long) / 1000000"},"variableMap":{"nanoTime":"fromOsmWayId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMTurnRelation:63","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"988bc320-790d-11e5-b795-31a78369942b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:97","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = 0;\n"},"variableMap":{"latSimilar":"frontIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:82","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], int, int[], 0, int)"},"status":-2},{"failures":[],"tindex":"988bc321-790d-11e5-b795-89096aef104f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:995","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.EdgeIterator.int"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"com.graphhopper.storage.index.LocationIndexTree.START_POINTER","nextEdgeId":"com.graphhopper.storage.index.LocationIndexTree.START_POINTER"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:323","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.store(com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.com.graphhopper.storage.index.LocationIndexTree.InMemTreeEntry, com.graphhopper.storage.index.LocationIndexTree.int)"},"status":-2},{"failures":[],"tindex":"988bc322-790d-11e5-b795-79f92d0b78b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:590","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType"},"status":-2},{"failures":[],"tindex":"988bea33-790d-11e5-b795-31405343970b","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:106","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"988bea34-790d-11e5-b795-1bd42853809d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:240","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(\"tmp.lock\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:68","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String)"},"status":-2},{"failures":[],"tindex":"988bea35-790d-11e5-b795-15d461edabfb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:132","type":"CtIfImpl","sourcecode":"if ((((com.graphhopper.storage.EdgeEntry) == null) || com.graphhopper.routing.Dijkstra.(isWeightLimitExceeded())) || (!com.graphhopper.routing.Dijkstra.(finished())))\n    return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n"},"variableMap":{"currEdge":"parent","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:97","type":"CtWhileImpl","sourcecode":"while (true) {\n    int int = com.graphhopper.routing.AStar.AStarEdge.int;\n    (int)++;\n    if (com.graphhopper.routing.AStar.isWeightLimitExceeded())\n        return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n    \n    if (com.graphhopper.routing.AStar.finished())\n        break;\n    \n    com.graphhopper.util.EdgeIterator com.graphhopper.util.EdgeIterator = com.graphhopper.util.EdgeExplorer.setBaseNode(int);\n    while (com.graphhopper.util.EdgeIterator.next()) {\n        if (!com.graphhopper.routing.AbstractRoutingAlgorithm.(accept(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge.int)))\n            continue;\n        \n        int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n        int int = com.graphhopper.routing.util.TraversalMode.createTraversalId(com.graphhopper.util.EdgeIterator, false);\n        float float = ((float)((com.graphhopper.routing.util.Weighting.calcWeight(com.graphhopper.util.EdgeIterator, false, com.graphhopper.routing.AStar.AStarEdge.int)) + (com.graphhopper.routing.AStar.AStarEdge.double)));\n        if (java.lang.Double.isInfinite(float))\n            continue;\n        \n        com.graphhopper.routing.AStar.AStarEdge com.graphhopper.routing.AStar.AStarEdge = com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.get(int);\n        if ((com.graphhopper.routing.AStar.AStarEdge == null) || ((com.graphhopper.routing.AStar.AStarEdge.double) > float)) {\n            double = com.graphhopper.routing.util.WeightApproximator.approximate(int);\n            double = float + double;\n            if (com.graphhopper.routing.AStar.AStarEdge == null) {\n                com.graphhopper.routing.AStar.AStarEdge = new com.graphhopper.routing.AStar.AStarEdge(com.graphhopper.util.EdgeIterator.getEdge() , int , double , float);\n                com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>.put(int, com.graphhopper.routing.AStar.AStarEdge);\n            } else {\n                assert (com.graphhopper.routing.AStar.AStarEdge.double) > double : \"Inconsistent distance estimate\";\n                java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.remove(com.graphhopper.routing.AStar.AStarEdge);\n                com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge();\n                com.graphhopper.routing.AStar.AStarEdge.double = double;\n                com.graphhopper.routing.AStar.AStarEdge.double = float;\n            }\n            com.graphhopper.routing.AStar.AStarEdge.com.graphhopper.storage.EdgeEntry = com.graphhopper.routing.AStar.AStarEdge;\n            java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.add(com.graphhopper.routing.AStar.AStarEdge);\n            com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.routing.AStar.AStarEdge, int);\n        } \n    }\n    if (java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.isEmpty())\n        return com.graphhopper.routing.AbstractRoutingAlgorithm.createEmptyPath();\n    \n    com.graphhopper.routing.AStar.AStarEdge = java.util.PriorityQueue<com.graphhopper.routing.AStar.AStarEdge>.poll();\n    if ((com.graphhopper.routing.AStar.AStarEdge) == null)\n        throw new java.lang.AssertionError(\"Empty edge cannot happen\");\n    \n}"},"status":-2},{"failures":[],"tindex":"988c1146-790d-11e5-b795-617f2feced05","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:91","type":"CtUnaryOperatorImpl","sourcecode":"(long)++"},"variableMap":{"size":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"status":-2},{"failures":[],"tindex":"988c1147-790d-11e5-b795-879131693d58","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Downloader:119","type":"CtLocalVariableImpl","sourcecode":"int int = 8 * 1024"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:181","type":"CtLocalVariableImpl","sourcecode":"int int = javax.xml.stream.XMLStreamReader.next()"},"status":-2},{"failures":[],"tindex":"988c1148-790d-11e5-b795-2d54b0117e1c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GraphHopperStorage:403","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.edge(int, int)"},"variableMap":{"a":"origEdgeId","b":"origEdgeId","baseGraph":"mainGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:567","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.Graph.getEdgeIteratorState(int, int)"},"status":-2},{"failures":[],"tindex":"988c1149-790d-11e5-b795-5bf08562eabf","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.RoundaboutInstruction:41","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += 1"},"variableMap":{"exitNumber":"minNetworkSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:59","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"988c114a-790d-11e5-b795-210e26401ff1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.TranslationMap:250","type":"CtIfImpl","sourcecode":"if (((java.lang.String.isEmpty()) || (java.lang.String.startsWith(\"//\"))) || (java.lang.String.startsWith(\"#\")))\n    continue;\n"},"variableMap":{"line":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:766","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.Lock.tryLock()))\n    throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n"},"status":-2},{"failures":[],"tindex":"988c114b-790d-11e5-b795-492652114a4a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:897","type":"CtUnaryOperatorImpl","sourcecode":"~long"},"variableMap":{"nodeFlags":"bits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:228","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 1"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}