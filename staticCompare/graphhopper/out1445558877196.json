{"failureDictionary":{"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTagsInfluencedByRelation":19,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":6,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleWayTags":15,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testGetSpeed":14,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":4,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testGetSpeed":17,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTagsInfluencedByRelation":10,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleCommonWayTags":11,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":9,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":13,"com.graphhopper.GraphHopperTest.testLoadOSM":2,"com.graphhopper.routing.util.BikeFlagEncoderTest.testGetSpeed":8,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testHandleCommonWayTags":16,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleCommonWayTags":20,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":0,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testGetSpeed":12,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":3,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":7},"transformations":[{"failures":[0],"tindex":"1d4a7edb-791a-11e5-a3a8-495d35db7385","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.AngleCalc:81","type":"CtOperatorAssignmentImpl","sourcecode":"double -= 2 * (java.lang.Math.double)"},"variableMap":{"java.lang.Math.PI":"fullDist2D","angleXY":"incDist2DSum"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:187","type":"CtAssignmentImpl","sourcecode":"double = double"},"status":-1},{"failures":[],"tindex":"1d4aa5ec-791a-11e5-a3a8-89f591339b10","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"high","entityType":"low"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:400","type":"CtAssignmentImpl","sourcecode":"int = (int + int) >>> 1"},"status":-2},{"failures":[],"tindex":"1d4accfd-791a-11e5-a3a8-23864eae08bc","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.Path:110","type":"CtIfImpl","sourcecode":"if ((int) < 0)\n    throw new java.lang.IllegalStateException(\"Call extract() before retrieving fromNode\");\n"},"variableMap":{"fromNode":"N_ELE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHNodeAccess:59","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GHNodeAccess.is3D()) {\n    com.graphhopper.storage.BaseGraph.com.graphhopper.storage.DataAccess.setInt((long + (com.graphhopper.storage.BaseGraph.int)), com.graphhopper.util.Helper.eleToInt(double));\n    com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double, double);\n} else {\n    com.graphhopper.storage.BaseGraph.com.graphhopper.util.shapes.BBox.update(double, double);\n}"},"status":-2},{"failures":[],"tindex":"1d4accfe-791a-11e5-a3a8-ef202a804588","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:133","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[1,2,3,4,5,6,7],"tindex":"1d4accff-791a-11e5-a3a8-3fa6f4bdab85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"err":"edgeCount","dLat":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:213","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.DataAccess.getHeader((1 * 4))"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"1d4acd00-791a-11e5-a3a8-edc7deae114c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"speed","nodeThis":"speed","edgeId":"speed","nodeOther":"speed"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:373","type":"CtIfImpl","sourcecode":"if ((java.lang.Integer != null) && (java.lang.Integer > java.lang.Integer)) {\n    if (java.util.HashSet<java.lang.String>.contains(java.lang.String))\n        int = java.lang.Integer;\n    else\n        int = java.lang.Integer;\n    \n} "},"status":-1},{"failures":[],"tindex":"1d4af411-791a-11e5-a3a8-7b64337c6067","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:291","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"1d4af412-791a-11e5-a3a8-c96e0cf522ef","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:494","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.BaseGraph.isFrozen())\n    throw new java.lang.IllegalStateException(\"Cannot create edge if graph is already frozen\");\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:253","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.GraphExtension.isRequireEdgeField())\n    int = com.graphhopper.storage.BaseGraph.nextEdgeEntryIndex(4);\nelse\n    int = -1;\n"},"status":-2},{"failures":[],"tindex":"1d4af413-791a-11e5-a3a8-513823356b6a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMRelation:102","type":"CtIfImpl","sourcecode":"if (boolean && boolean) {\n    return true;\n} "},"variableMap":{"hasOther":"store","hasRel":"store"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:136","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"status":-2},{"failures":[],"tindex":"1d4af414-791a-11e5-a3a8-a710acb9b61a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:665","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new java.lang.IllegalStateException(((\"Couldn\\'t load from existing folder: \" + (java.lang.String)) + \" but also cannot import from OSM file as it wasn\\'t specified!\"));\n"},"status":-2},{"failures":[],"tindex":"1d4b1b25-791a-11e5-a3a8-af5f274207b6","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:497","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.round((double * 100))) / 100.0"},"variableMap":{"value":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:246","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.Instruction.com.graphhopper.util.AngleCalc.calcAzimuth(double, double, double, double)"},"status":-2},{"failures":[],"tindex":"1d4b1b26-791a-11e5-a3a8-5bc7c79fcbbc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:410","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.BikeCommonFlagEncoder.int"},"variableMap":{"com.graphhopper.routing.util.BikeCommonFlagEncoder.PUSHING_SECTION_SPEED":"preparePeriodicUpdates","speed":"preparePeriodicUpdates"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:574","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.util.CmdArgs.getInt(\"prepare.updates.periodic\", int)"},"status":-2},{"failures":[],"tindex":"1d4b1b27-791a-11e5-a3a8-8d2ef9bd07b7","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:101","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.RAMDataAccess.getCapacity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:241","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.storage.AbstractDataAccess.readHeader(java.io.RandomAccessFile)"},"status":-2},{"failures":[],"tindex":"1d4b1b28-791a-11e5-a3a8-0d11df116b1b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:89","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"allBits is too big and does not fit into 8 bytes\");\n"},"variableMap":{"allBits":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:281","type":"CtIfImpl","sourcecode":"if (((int[][int]) == int) || (com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int, int)) >= com.graphhopper.storage.index.Location2IDQuadtree.(getNormedDist(int[][int], int)))) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"1d4b4239-791a-11e5-a3a8-f154aeb0a1c7","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:361","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:419","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"1d4b423a-791a-11e5-a3a8-1f1c68acf5d6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.CmdArgs:59","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"-D\"))\n    java.lang.String = java.lang.String.substring(2);\n"},"variableMap":{"systemProperty":"graphHopperFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:711","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"-gh\")) {\n} else if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    throw new java.lang.IllegalArgumentException(\"To import an osm file you need to use importOrLoad\");\n} else if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException ex) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"1d4b423b-791a-11e5-a3a8-d1908edeb0b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AbstractBidirAlgo:74","type":"CtAssignmentImpl","sourcecode":"boolean = !com.graphhopper.routing.AbstractBidirAlgo.(fillEdgesFrom())"},"status":-2},{"failures":[],"tindex":"1d4b423c-791a-11e5-a3a8-11fe42bcc70e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GHDirectory:125","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.DataAccess = new com.graphhopper.storage.MMapDataAccess(java.lang.String , java.lang.String , java.nio.ByteOrder , com.graphhopper.storage.DAType.isAllowWrites())"},"status":-2},{"failures":[],"tindex":"1d4b423d-791a-11e5-a3a8-fd5ddb96d661","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:202","type":"CtForImpl","sourcecode":"for (int int = 4 ; int < 32 ; int++) {\n    if (int <= ((1 << int) - 12)) {\n        return (1 << int) - 12;\n    } \n}"},"status":-2},{"failures":[],"tindex":"1d4b694e-791a-11e5-a3a8-632c375b65e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:217","type":"CtAssignmentImpl","sourcecode":"float[][int] = ((float)(double))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}