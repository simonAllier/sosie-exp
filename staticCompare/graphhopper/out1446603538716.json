{"failureDictionary":{"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testNoErrorOnEdgeCase_lastIndex":50,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":77,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":119,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":127,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":136,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":63,"com.graphhopper.reader.OSMReaderTest.testFerry":18,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":116,"com.graphhopper.routing.QueryGraphTest.testOneWay":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testNoErrorOnEdgeCase_lastIndex":59,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":108,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":102,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":109,"com.graphhopper.reader.OSMReaderTest.testWithBounds":29,"com.graphhopper.storage.MMapDataAccessTest.testSegments":47,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":84,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":15,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":74,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":121,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":83,"com.graphhopper.coll.CompressedArrayTest.testCompress":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":134,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testNoErrorOnEdgeCase_lastIndex":58,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":62,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":68,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":115,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":46,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.MMapDataAccessTest.textMixMMAP2RAM":37,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":94,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":111,"com.graphhopper.reader.OSMReaderTest.testFoot":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":90,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":124,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":85,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":128,"com.graphhopper.reader.OSMReaderTest.testOneWay":32,"com.graphhopper.storage.MMapDataAccessTest.testSet_Get_Short_Long":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":70,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":48,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":51,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":79,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":23,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":24,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":112,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":97,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":43,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":53,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.routing.util.FootFlagEncoderTest.handleWayTagsRoundabout":106,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":129,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":89,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":133,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":132,"com.graphhopper.reader.OSMReaderTest.testSort":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":88,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":131,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":130,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":75,"com.graphhopper.reader.OSMReaderTest.testMain":20,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":60,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":95,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":123,"com.graphhopper.storage.MMapDirectoryTest.testNoErrorForDACreate":35,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":33,"com.graphhopper.storage.MMapDataAccessTest.testHeader":45,"com.graphhopper.storage.MMapDataAccessTest.testCopy":41,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":54,"com.graphhopper.routing.PathTest.testWayList":114,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":96,"com.graphhopper.storage.MMapDataAccessTest.testRenameNoFlush":44,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":92,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":113,"com.graphhopper.storage.index.Location2IDFullIndexTest.testNoErrorOnEdgeCase_lastIndex":57,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":25,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":98,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":100,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":118,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":30,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":61,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":91,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":110,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":135,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":137,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":34,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":40,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testBounds":86,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":125,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":66,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":56,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":39,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testNoErrorOnEdgeCase_lastIndex":55,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":81,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":122,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.coll.CompressedArrayTest.testCompress2":104,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":117,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":64,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":101,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":27,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":120,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":16,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeight":138,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":52,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":78,"com.graphhopper.reader.OSMReaderTest.testBarriers":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":87,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":67,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":99},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"68152a27-829a-11e5-9b79-7b37ea080a9a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:121","type":"CtReturnImpl","sourcecode":"return java.lang.Math.round(((com.graphhopper.coll.GHLongIntBTree.BTreeEntry.getCapacity()) / (com.graphhopper.util.Helper.long)))"},"variableMap":{"com.graphhopper.util.Helper.MB":"key","root":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:101","type":"CtReturnImpl","sourcecode":"return com.graphhopper.coll.GHLongIntBTree.BTreeEntry.get(long)"},"status":-1},{"failures":[],"tindex":"68157848-829a-11e5-9b79-831e6aeebc49","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Constants:76","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"0.0\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:999","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (\"idLookup:\" + (com.graphhopper.util.StopWatch.stop().getSeconds())) + \"s\""},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,24,102,103],"tindex":"68157849-829a-11e5-9b79-89ff75acf4ab","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:175","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1 ; ) {\n    try {\n        java.nio.ByteBuffer = java.io.RandomAccessFile.getChannel().map((boolean ? java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode : java.nio.channels.FileChannel.MapMode.java.nio.channels.FileChannel.MapMode), long, long);\n        break;\n    } catch (java.io.IOException tmpex) {\n        java.io.IOException = java.io.IOException;\n        int++;\n        com.graphhopper.util.Helper.cleanHack();\n        try {\n            java.lang.Thread.sleep(5);\n        } catch (java.lang.InterruptedException iex) {\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"68159f5a-829a-11e5-9b79-3708bf2db727","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:186","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(2000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:84","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.InstructionList.replaceLast(com.graphhopper.util.ViaInstruction)"},"status":-2},{"failures":[],"tindex":"68159f5b-829a-11e5-9b79-538e2d4bdfac","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:183","type":"CtIfImpl","sourcecode":"if (int == (int))\n    break;\n"},"variableMap":{"turnCostIndex":"to","NO_TURN_ENTRY":"to"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:290","type":"CtInvocationImpl","sourcecode":"com.graphhopper.coll.GHBitSet.add(int)"},"status":-2},{"failures":[],"tindex":"68159f5c-829a-11e5-9b79-a547987bfc95","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:116","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\"=\")"},"status":-2},{"failures":[],"tindex":"6815c66d-829a-11e5-9b79-8b193c46b78b","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:105","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.QueryGraph.lookup(java.util.List<com.graphhopper.storage.index.QueryResult>)"},"status":0},{"failures":[],"tindex":"6815c66e-829a-11e5-9b79-c5b3cbc2aef4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.StorableProperties:181","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"silent":"found"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:118","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[104,105],"tindex":"6815c66f-829a-11e5-9b79-49fb48587c37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.VLongStorage:162","type":"CtAssignmentImpl","sourcecode":"byte = com.graphhopper.storage.VLongStorage.readByte()"},"status":-1},{"failures":[],"tindex":"6815c670-829a-11e5-9b79-8f6b969d611f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDMap:87","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4"},"variableMap":{"size":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:108","type":"CtAssignmentImpl","sourcecode":"long = (long + long) >>> 1"},"status":-2},{"failures":[106],"tindex":"6815c671-829a-11e5-9b79-358a4f79f679","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:670","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (((com.graphhopper.reader.OSMWay.hasTag(\"oneway\", \"-1\")) || (com.graphhopper.reader.OSMWay.hasTag(\"oneway:bicycle\", \"-1\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"vehicle:forward\", \"no\"))) || (com.graphhopper.reader.OSMWay.hasTag(\"bicycle:forward\", \"no\"))"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:302","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.reader.OSMWay.hasTag(\"junction\", \"roundabout\")"},"status":-1},{"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,3,4,5,6,7,8,10,134,135,136,137],"tindex":"6815ed82-829a-11e5-9b79-5d1ef652972e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:169","type":"CtIfImpl","sourcecode":"if (int > int) {\n    int = int;\n} "},"variableMap":{"min":"newSize","tmpSize":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:127","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.incCap(int)"},"status":-1},{"failures":[],"tindex":"6815ed83-829a-11e5-9b79-577fb68a8f1f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDirectory:31","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDirectory.this(\"\", false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDirectory:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.RAMDirectory.this(java.lang.String, false)"},"status":0},{"failures":[],"tindex":"6815ed84-829a-11e5-9b79-81853d8d4496","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:472","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return 0;\n"},"status":0},{"failures":[],"tindex":"6815ed85-829a-11e5-9b79-09e0e917c1b5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.MiniPerfTest:44","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.nanoTime()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:157","type":"CtLocalVariableImpl","sourcecode":"long long = com.graphhopper.util.EdgeIteratorState.getFlags()"},"status":-2},{"failures":[],"tindex":"68161496-829a-11e5-9b79-552578ffca42","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper7:67","type":"CtIfImpl","sourcecode":"if (javax.xml.stream.XMLStreamReader != null) {\n    javax.xml.stream.XMLStreamReader.close();\n} "},"variableMap":{"r":"parser"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:229","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    javax.xml.stream.XMLStreamReader.close();\n"},"status":0},{"failures":[],"tindex":"68161497-829a-11e5-9b79-f1a7fd023a7d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:194","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullWithEdgesIndex:172","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"68161498-829a-11e5-9b79-a76782d2a90b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.SparseIntIntArray:136","type":"CtIfImpl","sourcecode":"if (int != int) {\n    int[][int] = int[][int];\n    int[][int] = int;\n} "},"variableMap":{"val":"lastPrio","keys":"elem","values":"keys","i":"child","o":"child"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:111","type":"CtForImpl","sourcecode":"for (int = 1 ; (int * 2) <= (int) ; int = int) {\n    int = int * 2;\n    if ((int != (int)) && ((int[][(int + 1)]) < (int[][int]))) {\n        int++;\n    } \n    if (int > (int[][int])) {\n        int[][int] = int[][int];\n        int[][int] = int[][int];\n    } else {\n        break;\n    }\n}"},"status":-2},{"failures":[138],"tindex":"68161499-829a-11e5-9b79-852f95d05230","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:607","type":"CtIfImpl","sourcecode":"if (double >= (com.graphhopper.storage.CHGraphImpl.double))\n    return java.lang.Double.double;\n"},"status":-1},{"failures":[25],"tindex":"68163baa-829a-11e5-9b79-0122f0896eb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:244","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntLongMap = new gnu.trove.map.hash.TIntLongHashMap(com.graphhopper.reader.OSMReader.getOsmWayIdSet().size() , 0.5F , -1 , -1)"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"6815ed84-829a-11e5-9b79-81853d8d4496","diffs":[{"branchesDiff":{"delete":["t0"]},"type":"staticDiff"}]}]}