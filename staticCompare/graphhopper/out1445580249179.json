{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":172,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":33,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":56,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":65,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints120":194,"com.graphhopper.storage.index.LocationIndexTreeTest.testSearchWithFilter_issue318":204,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":159,"com.graphhopper.reader.OSMReaderTest.testFerry":283,"com.graphhopper.util.DepthFirstSearchTest.testDFS1":332,"com.graphhopper.util.DepthFirstSearchTest.testDFS2":333,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":53,"com.graphhopper.routing.QueryGraphTest.testOneWay":64,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":142,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":200,"com.graphhopper.reader.OSMReaderTest.testWithBounds":294,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":179,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":59,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":170,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":71,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":178,"com.graphhopper.storage.GraphHopperStorageTest.testCopyProperties":280,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testAddShortcuts":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":177,"com.graphhopper.storage.GraphHopperStorageTest.test8BytesFlags":259,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testRMin":229,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":300,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph":216,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":105,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":141,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBug178":49,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":143,"com.graphhopper.storage.index.Location2IDFullIndexTest.testDifferentVehicles":220,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":187,"com.graphhopper.GraphHopperTest.testPrepare":309,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":98,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":32,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":249,"com.graphhopper.storage.GraphHopperStorageTest.testAddLocation":265,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":15,"com.graphhopper.util.InstructionListTest.testWayList":322,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":24,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":321,"com.graphhopper.util.BreadthFirstSearchTest.testBFS2":331,"com.graphhopper.GraphHopperAPITest.testDisconnected179":319,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":166,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":314,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex":198,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveNode":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":161,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":16,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCannotCalculateSP":21,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":201,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":10,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":298,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":74,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":289,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyProperties":115,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":2,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":128,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":175,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":190,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":310,"com.graphhopper.storage.GraphHopperStorageTest.testFlags":255,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":223,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":107,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":109,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":51,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":108,"com.graphhopper.GraphHopperTest.testLoadOSM":313,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testCircleBug":50,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph":209,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":232,"com.graphhopper.storage.GraphHopperStorageCHTest.internalDisconnect":123,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":202,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":271,"com.graphhopper.reader.OSMReaderTest.testSort":286,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":270,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFootPath":27,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":73,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":293,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":138,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeReturn":276,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":246,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex2":237,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex3":238,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":188,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.internalDisconnect":83,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":37,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":61,"com.graphhopper.reader.OSMTurnRelationTest.testGetRestrictionAsEntries":299,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":1,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":245,"com.graphhopper.routing.PathTest.testWayList":7,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":112,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":189,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":169,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":242,"com.graphhopper.storage.GraphHopperStorageCHTest.testUpdateUnidirectional":133,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":38,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeReturn":151,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdges":256,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":14,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":80,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":22,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testRMin":199,"com.graphhopper.storage.GraphHopperStorageTest.testNameIndex":279,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":231,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPropertiesWithNoInit":104,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":136,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":264,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdges":91,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":254,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":243,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_Freeze":247,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":157,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":262,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":29,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":9,"com.graphhopper.util.GHUtilityTest.testSort":328,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":167,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":63,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":206,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":19,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug1":18,"com.graphhopper.storage.GraphHopperStorageCHTest.testNameIndex":154,"com.graphhopper.coll.IntIntBinHeapTest.testSize":334,"com.graphhopper.routing.QueryGraphTest.testVirtEdges":66,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":116,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":252,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph2":195,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":102,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":225,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints120":217,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleShortcutCreationAndTraversal":118,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":60,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":152,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":77,"com.graphhopper.storage.index.Location2IDFullIndexTest.testFullIndex":215,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":81,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":315,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_Freeze":82,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":267,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testFullIndex":192,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.test8BytesFlags":94,"com.graphhopper.GraphHopperAPITest.testLoad":318,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":312,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":99,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":260,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":69,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":251,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":76,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":85,"com.graphhopper.reader.OSMReaderTest.testBarriers":287,"com.graphhopper.routing.PathTest.testFound":3,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":139,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":181,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":317,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraph":226,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":20,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":163,"com.graphhopper.util.GHUtilityTest.testCopy":327,"com.graphhopper.routing.PathTest.testFindInstruction":8,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":86,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":330,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":96,"com.graphhopper.storage.GraphStorageViaMMapTest.test8BytesFlags":168,"com.graphhopper.storage.GraphHopperStorageTest.testUpdateUnidirectional":258,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":23,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSimpleGraph":193,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":277,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":263,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":28,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":110,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":266,"com.graphhopper.util.GHUtilityTest.testCopyWithSelfRef":325,"com.graphhopper.storage.GraphHopperStorageCHTest.testFlags":130,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":31,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":150,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":97,"com.graphhopper.reader.PrinctonReaderTest.testRead":297,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":0,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":278,"com.graphhopper.storage.GraphHopperStorageCHTest.testFootMix":132,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFootMix":92,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":103,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":158,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":48,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":127,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":164,"com.graphhopper.storage.GraphHopperStorageTest.internalDisconnect":248,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":100,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":146,"com.graphhopper.util.InstructionListTest.testWayList2":323,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":235,"com.graphhopper.reader.OSMReaderTest.testFoot":284,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":184,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":67,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":180,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":210,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex2":207,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":281,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyProperties":155,"com.graphhopper.storage.index.LocationIndexTreeTest.testInMemIndex3":208,"com.graphhopper.reader.OSMReaderTest.testOneWay":296,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testFlags":90,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testNameIndex":114,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":261,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":129,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":274,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":273,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeReturn":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":171,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":95,"com.graphhopper.storage.GraphHopperStorageTest.testPropertiesWithNoInit":269,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":221,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":174,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":250,"com.graphhopper.storage.GraphHopperStorageTest.testFootMix":257,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":288,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":6,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":43,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":35,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph":239,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUpdateUnidirectional":93,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":40,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":147,"com.graphhopper.routing.PathBidirRefTest.testExtract":11,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph3":41,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSimpleGraph2":218,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":307,"com.graphhopper.routing.util.FootFlagEncoderTest.testGraph":78,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":205,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":302,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":121,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":183,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":117,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":306,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":241,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":305,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":182,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":304,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":303,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":214,"com.graphhopper.util.GHUtilityTest.testSort2":326,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional2":30,"com.graphhopper.reader.OSMReaderTest.testMain":285,"com.graphhopper.routing.QueryGraphTest.testUseMeanElevation":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":153,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":101,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":149,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":119,"com.graphhopper.routing.PathBidirRefTest.testExtract2":12,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":148,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":224,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":186,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testEdgeFilter":233,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":68,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testDifferentVehicles":197,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":211,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":244,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":272,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":137,"com.graphhopper.storage.GraphHopperStorageCHTest.testAddLocation":140,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testCHGraphBug":227,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":290,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":191,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":106,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":295,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit":34,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":124,"com.graphhopper.storage.index.Location2IDFullIndexTest.testSinglePoints32":219,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":46,"com.graphhopper.storage.index.LocationIndexTreeTest.testEdgeFilter":203,"com.graphhopper.storage.GraphHopperStorageTest.testClone":253,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":282,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":156,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":185,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":275,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":145,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":268,"com.graphhopper.GraphHopperTest.testFootAndCar":311,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":165,"com.graphhopper.routing.PathTest.testTime":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":162,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdges":131,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":45,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":212,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":230,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testNoPathFound":26,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":176,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":88,"com.graphhopper.storage.GraphHopperStorageCHTest.testPropertiesWithNoInit":144,"com.graphhopper.util.GHUtilityTest.testSortDirected":329,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":135,"com.graphhopper.GraphHopperTest.testPrepareOnly":301,"com.graphhopper.storage.index.Location2IDFullWithEdgesIndexTest.testSinglePoints32":196,"com.graphhopper.GraphHopperTest.testVia":308,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":54,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":160,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.test0SpeedButUnblocked_Issue242":25,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":292,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":240,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testInMemIndex":228,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetWeightIfAdvancedEncoder":120,"com.graphhopper.GraphHopperTest.testFootOnly":316,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":324,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSearchWithFilter_issue318":234,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":291,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":222,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":236,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":5,"com.graphhopper.storage.GraphHopperStorageCHTest.test8BytesFlags":134,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":173,"com.graphhopper.util.InstructionListTest.testFind":320,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWikipediaShortestPath":17,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testFindShortcuts_Roundabout":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":126,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":213},"transformations":[{"failures":[0],"tindex":"dffd8586-794b-11e5-9573-65f2b4d91641","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"dffdd3a7-794b-11e5-9573-773839257c01","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:179","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (int + 1) == int"},"variableMap":{"len":"nodeB","i":"edgeId"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:500","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.graphhopper.storage.BaseGraph.EdgeIterable.init(int, int)"},"status":-1},{"failures":[],"tindex":"dffdfab8-794b-11e5-9573-c386c8ef0a93","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:534","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} "},"variableMap":{"intIndex":"endIndexPlusOne","len":"frontIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:92","type":"CtReturnImpl","sourcecode":"return (int) - (int)"},"status":-2},{"failures":[334],"tindex":"dffdfab9-794b-11e5-9573-e57cfd351452","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:408","type":"CtAssignmentImpl","sourcecode":"int[] = null"},"variableMap":{"oldPriorities":"keys"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntIntBinHeap:228","type":"CtAssignmentImpl","sourcecode":"int[] = java.util.Arrays.copyOf(int[], (int + 1))"},"status":-1},{"failures":[],"tindex":"dffdfaba-794b-11e5-9573-e942562d35c7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:123","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.Integer> java.util.List<java.lang.Integer> = new java.util.ArrayList<java.lang.Integer>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:386","type":"CtLocalVariableImpl","sourcecode":"java.util.List<java.lang.Integer> java.util.List<java.lang.Integer> = boolean ? java.util.Arrays.asList(com.graphhopper.routing.QueryGraph.int, com.graphhopper.routing.QueryGraph.int) : java.util.Arrays.asList(com.graphhopper.routing.QueryGraph.int, com.graphhopper.routing.QueryGraph.int)"},"status":-2},{"failures":[],"tindex":"dffdfabb-794b-11e5-9573-0f902c34f294","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:237","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Integer.int"},"variableMap":{"logSize":"encoded","java.lang.Integer.MAX_VALUE":"com.graphhopper.routing.util.FootFlagEncoder.MEAN_SPEED"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:293","type":"CtAssignmentImpl","sourcecode":"long = com.graphhopper.routing.util.EncodedDoubleValue.setDoubleValue(long, com.graphhopper.routing.util.FootFlagEncoder.int)"},"status":-2},{"failures":[],"tindex":"dffe21cc-794b-11e5-9573-3df893a40af6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:284","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.DataAccess.getHeader(0)) != (int))\n    throw new java.lang.IllegalStateException((\"incorrect location index version, expected:\" + (int)));\n"},"variableMap":{"dataAccess":"edges","MAGIC_INT":"edgeCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:220","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setHeader((1 * 4), int)"},"status":-2},{"failures":[],"tindex":"dffe21cd-794b-11e5-9573-37270c254b3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:93","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.routing.util.AllEdgesIterator.getBaseNode()"},"status":-2},{"failures":[],"tindex":"dffe21ce-794b-11e5-9573-0f7adf5dfd18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:629","type":"CtIfImpl","sourcecode":"if (!com.graphhopper.routing.QueryGraph.(isVirtualNode(int))) {\n    com.graphhopper.routing.TIntHashSet.add(int);\n    com.graphhopper.routing.QueryGraph.addVirtualEdges(com.graphhopper.routing.TIntObjectMap<com.graphhopper.routing.VirtualEdgeIterator>, com.graphhopper.routing.util.EdgeFilter, true, int, int);\n} "},"status":-2},{"failures":[],"tindex":"dffe21cf-794b-11e5-9573-a1b2e2a670e5","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:571","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt(long, 0)"},"variableMap":{"dataAccess":"da","refPointer":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:105","type":"CtWhileImpl","sourcecode":"while ((long - long) > 1) {\n    long = (long + long) >>> 1;\n    long long = long << 3;\n    com.graphhopper.storage.DataAccess.getBytes(long, byte[], 8);\n    long long = com.graphhopper.coll.OSMIDMap.com.graphhopper.util.BitUtil.toLong(byte[]);\n    if (long < long)\n        long = long;\n    else\n        long = long;\n    \n}"},"status":-2},{"failures":[],"tindex":"dffe48e0-794b-11e5-9573-771883bf20ca","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.NativeFSLockFactory:137","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.close(java.nio.channels.FileChannel)"},"variableMap":{"tmpChannel":"cl"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:268","type":"CtInvocationImpl","sourcecode":"java.io.Closeable.close()"},"status":-2},{"failures":[],"tindex":"dffe48e1-794b-11e5-9573-47df4083587b","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.OSMReader:520","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.OSMReader.int"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"noEntryValue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDMap:96","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"dffe48e2-794b-11e5-9573-b168cf93f731","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:80","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.PrepareRoutingSubnetworks.removeDeadEndUnvisitedNetworks(com.graphhopper.routing.util.PrepareRoutingSubnetworks.PrepEdgeFilter)"},"status":-2},{"failures":[],"tindex":"dffe48e3-794b-11e5-9573-15d8eabba31f","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:324","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.reader.OSMRelation.Member.int"},"variableMap":{"com.graphhopper.reader.OSMRelation.Member.WAY":"val","entityType":"val"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:440","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String)"},"status":-2},{"failures":[],"tindex":"dffe6ff4-794b-11e5-9573-85b1256e439b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:111","type":"CtIfImpl","sourcecode":"if (com.graphhopper.util.Helper.isEmpty(java.lang.String)) {\n    continue;\n} "},"variableMap":{"line":"com.graphhopper.routing.util.EncodingManager.RACINGBIKE"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:126","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.trim().toLowerCase();\n    if (java.lang.String.isEmpty())\n        continue;\n    \n    java.lang.String java.lang.String = \"\";\n    if (java.lang.String.contains(\"|\")) {\n        java.lang.String = java.lang.String;\n        java.lang.String = java.lang.String.split(\"\\\\|\")[0];\n    } \n    com.graphhopper.util.PMap com.graphhopper.util.PMap = new com.graphhopper.util.PMap(java.lang.String);\n    com.graphhopper.routing.util.AbstractFlagEncoder com.graphhopper.routing.util.AbstractFlagEncoder;\n    if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.CarFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.BikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.Bike2WeightFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.RacingBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MountainBikeFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.FootFlagEncoder(com.graphhopper.util.PMap);\n    else if (java.lang.String.equals(com.graphhopper.routing.util.EncodingManager.java.lang.String))\n        com.graphhopper.routing.util.AbstractFlagEncoder = new com.graphhopper.routing.util.MotorcycleFlagEncoder(com.graphhopper.util.PMap);\n    else\n        throw new java.lang.IllegalArgumentException((\"entry in encoder list not supported \" + java.lang.String));\n    \n    if (com.graphhopper.util.PMap.has(\"version\")) {\n        if ((com.graphhopper.routing.util.AbstractFlagEncoder.getVersion()) != (com.graphhopper.util.PMap.getInt(\"version\", -1))) {\n            throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())));\n        } \n    } \n    java.util.List<com.graphhopper.routing.util.FlagEncoder>.add(com.graphhopper.routing.util.AbstractFlagEncoder);\n}"},"status":-2},{"failures":[],"tindex":"dffe9705-794b-11e5-9573-e999321fcc9d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:184","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((int)(java.lang.Math.pow(2, int))), com.graphhopper.storage.AbstractDataAccess.int)"},"variableMap":{"com.graphhopper.storage.AbstractDataAccess.SEGMENT_SIZE_MIN":"lat","tmp":"lat","segmentSizeInBytes":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"status":-2},{"failures":[],"tindex":"dffe9706-794b-11e5-9573-2b9bbb1355f7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:235","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.LocationIndexTree.InMemConstructionIndex.prepare()"},"status":-2},{"failures":[],"tindex":"dffe9707-794b-11e5-9573-2713d5834e09","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"variableMap":{"edgeId":"tmpNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:724","type":"CtIfImpl","sourcecode":"if (int < (com.graphhopper.reader.OSMReader.int)) {\n    int = (-int) - 3;\n    com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    if (int >= 0) {\n        java.util.List<com.graphhopper.util.EdgeIteratorState>.add(com.graphhopper.reader.OSMReader.addEdge(int, int, com.graphhopper.util.PointList, long, long));\n        com.graphhopper.util.PointList.clear();\n        com.graphhopper.util.PointList.add(com.graphhopper.storage.NodeAccess, int);\n    } \n    int = int;\n} "},"status":-2},{"failures":[],"tindex":"dffe9708-794b-11e5-9573-7578a42f9936","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:83","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"=\")"},"variableMap":{"tagTxt":"output"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.InstructionList:235","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n<rtept lat=\\\"\").append(com.graphhopper.util.Helper.round6(com.graphhopper.util.Instruction.getFirstLat())).append(\"\\\" lon=\\\"\")"},"status":-2},{"failures":[],"tindex":"dffebe19-794b-11e5-9573-ab5d0b279b3d","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:547","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"cannot change EMPTY PointList\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:79","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Illegal key \" + long))"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}