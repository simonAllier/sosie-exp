{"failureDictionary":{"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAccess":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":115,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIfEmptyWay":46,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":49,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":111,"com.graphhopper.reader.OSMReaderTest.testFerry":13,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":94,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":97,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeProperties":90,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":45,"com.graphhopper.storage.GraphHopperStorageTest.testCreateLocation":133,"com.graphhopper.storage.GraphHopperStorageTest.testDozendEdges":128,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":170,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":79,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateDuplicateEdges":161,"com.graphhopper.reader.OSMReaderTest.testWithBounds":24,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateDuplicateEdges":148,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetAllEdgesWithDelete":98,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":117,"com.graphhopper.reader.PrinctonReaderTest.testRead":168,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testAccess":54,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":95,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":67,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testTramStations":53,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":105,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":172,"com.graphhopper.geohash.LinearKeyAlgoTest.testEncode":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":65,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdgeFilter":138,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes2":141,"com.graphhopper.util.BitUtilBigTest.testReverse":30,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTramStations":55,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":0,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":89,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectional":147,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCheckFirstNode":159,"com.graphhopper.GraphHopperTest.testPrepare":4,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDozendEdges":157,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":29,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":35,"com.graphhopper.reader.OSMReaderTest.testFoot":14,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":119,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":118,"com.graphhopper.util.BitUtilLittleTest.testToBitString":31,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":63,"com.graphhopper.util.InstructionListTest.testWayList":37,"com.graphhopper.storage.GraphHopperStorageTest.testDirectional":134,"com.graphhopper.reader.OSMReaderTest.testOneWay":26,"com.graphhopper.storage.GraphHopperStorageCHTest.testUnidirectionalEdgeFilter":140,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":77,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteAndOptimize":85,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testDisconnectEdge":136,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":82,"com.graphhopper.storage.GraphHopperStorageCHTest.testEdges":143,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":9,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":81,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":68,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":96,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":112,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteAndOptimize":75,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectionalEdgeFilter":124,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":18,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":43,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":169,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":41,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":19,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":107,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":62,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":39,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":142,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":121,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":5,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph2":166,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":59,"com.graphhopper.util.CHEdgeIteratorTest.testUpdateFlags":110,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":102,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":101,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":167,"com.graphhopper.GraphHopperTest.testLoadOSM":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":72,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnsureSize":83,"com.graphhopper.storage.GraphHopperStorageTest.testUnidirectional":131,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSetNodes":164,"com.graphhopper.reader.OSMReaderTest.testSort":16,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":71,"com.graphhopper.storage.GraphHopperStorageTest.testCheckFirstNode":130,"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":23,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":106,"com.graphhopper.storage.GraphHopperStorageCHTest.testDozendEdges":144,"com.graphhopper.reader.OSMReaderTest.testMain":15,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":123,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":99,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":165,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":92,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_Freeze":137,"com.graphhopper.routing.util.BikeFlagEncoderTest.testAccess":52,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":91,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":38,"com.graphhopper.storage.GraphHopperStorageTest.testEnsureSize":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCreateLocation":162,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":120,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":32,"com.graphhopper.storage.UnsafeDataAccessTest.testHeader":60,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":103,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetAllEdgesWithDelete":88,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":122,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWeightLimit_issue380":44,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectional":160,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":87,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdges":156,"com.graphhopper.routing.util.BikeFlagEncoderTest.testTramStations":51,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes":129,"com.graphhopper.storage.GraphHopperStorageTest.testEdges":127,"com.graphhopper.storage.GraphHopperStorageTest.testClone":126,"com.graphhopper.storage.GraphHopperStorageTest.testSetNodes":135,"com.graphhopper.storage.GraphHopperStorageTest.testCreateDuplicateEdges":132,"com.graphhopper.storage.GraphHopperStorageCHTest.testDirectional":150,"com.graphhopper.storage.GraphHopperStorageCHTest.testSetNodes":151,"com.graphhopper.storage.GraphHopperStorageTest.testGetAllEdgesWithDelete":78,"com.graphhopper.storage.GraphHopperStorageCHTest.testCheckFirstNode":146,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":48,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":50,"com.graphhopper.GraphHopperTest.testFootAndCar":6,"com.graphhopper.reader.dem.SRTMProviderTest.testGetFileString":171,"com.graphhopper.util.BitUtilBigTest.testToBitString":28,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":42,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testAccess":58,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":139,"com.graphhopper.storage.GraphHopperStorageTest.testIdenticalNodes2":125,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDirectional":163,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":113,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEdgeProperties":100,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes2":154,"com.graphhopper.util.BitUtilLittleTest.testReverse":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":70,"com.graphhopper.storage.GraphHopperStorageCHTest.testCreateLocation":149,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":155,"com.graphhopper.GraphHopperTest.testPrepareOnly":1,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":86,"com.graphhopper.GraphHopperTest.testVia":3,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureSize":93,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":64,"com.graphhopper.storage.GraphHopperStorageTest.testEdgeProperties":80,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":22,"com.graphhopper.GraphHopperAPITest.testLoad":47,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":7,"com.graphhopper.GraphHopperTest.testFootOnly":11,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdenticalNodes":158,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":76,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":104,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":21,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":74,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":40,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":116,"com.graphhopper.reader.OSMReaderTest.testBarriers":17,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":109,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testUnidirectionalEdgeFilter":153,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":61,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdenticalNodes":145,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":114,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testTramStations":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":84,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":152},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"56ee4611-82ac-11e5-b473-dfb495638c6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:735","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[27],"tindex":"56ee6d22-82ac-11e5-b473-d350ac921b31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.geohash.LinearKeyAlgo:88","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.min(java.lang.Math.max(double, com.graphhopper.util.shapes.BBox.double), com.graphhopper.util.shapes.BBox.double)"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36],"tindex":"56ee6d23-82ac-11e5-b473-672ea13135eb","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Instruction:199","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('(')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:229","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,3,4,5,6,7,8,10,11,47],"tindex":"56ee9434-82ac-11e5-b473-47dba3c76844","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.InstructionAnnotation:43","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"empty":"found"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Path:123","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"56ee9435-82ac-11e5-b473-770a66c15927","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:111","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath(com.graphhopper.util.EdgeIterator, com.graphhopper.storage.EdgeEntry, int)"},"status":0},{"failures":[],"tindex":"56ee9436-82ac-11e5-b473-61e9cf80de90","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.AStar:73","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.routing.AStar.AStarEdge>()"},"variableMap":{"fromMap":"bestWeightMapFrom"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStarBidirection:233","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge> = gnu.trove.map.TIntObjectMap<com.graphhopper.routing.AStar.AStarEdge>"},"status":-1},{"failures":[48,49,50],"tindex":"56ee9437-82ac-11e5-b473-fdd8a9ca5ec3","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.EdgeAccess:194","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int == (com.graphhopper.util.EdgeIterator.int)))\n    throw new java.lang.IllegalStateException((((((\"Cannot write edge with illegal ID:\" + int) + \"; nodeThis:\") + int) + \", nodeOther:\") + int));\n"},"variableMap":{"com.graphhopper.util.EdgeIterator.NO_EDGE":"searchIndex","nodeThis":"freeIndex","edgeId":"searchIndex","nodeOther":"searchIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:113","type":"CtForImpl","sourcecode":"for ( ; int < int ; int++) {\n    if (java.lang.Double.isNaN(com.graphhopper.util.PointList.getLatitude(int))) {\n        int = int;\n        break;\n    } \n}"},"status":-1},{"failures":[51,52,53,54,55,56,57,58],"tindex":"56eebb48-82ac-11e5-b473-cfe7a5e2038c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:268","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"motorroad\", \"yes\"))\n    return 0;\n"},"variableMap":{"way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:276","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(java.util.List<java.lang.String>, java.util.Set<java.lang.String>))\n    return 0;\n"},"status":-1},{"failures":[],"tindex":"56eebb49-82ac-11e5-b473-1f56dcf1866d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:88","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.clone(false)"},"variableMap":{"pointList":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:339","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":0},{"failures":[59,60,61,62,63],"tindex":"56eebb4a-82ac-11e5-b473-af98d9245ab1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.AbstractDataAccess:102","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.writeUTF(\"GH\")"},"variableMap":{"file":"raFile"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:180","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.UnsafeDataAccess.getCapacity();\n    com.graphhopper.storage.AbstractDataAccess.writeHeader(java.io.RandomAccessFile, long, int);\n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    byte[] byte[] = new byte[int];\n    int int = com.graphhopper.storage.UnsafeDataAccess.getSegments();\n    for (int int = 0 ; int < int ; int++) {\n        com.graphhopper.storage.UnsafeDataAccess.getBytes((int * (int)), byte[], int);\n        java.io.RandomAccessFile.write(byte[]);\n    }\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,18,19,20,21,23,24,26],"tindex":"56eee25b-82ac-11e5-b473-f171e9358679","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:615","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.BaseGraph.com.graphhopper.coll.GHBitSet = com.graphhopper.coll.GHBitSet.copyTo(new com.graphhopper.coll.GHBitSetImpl())"},"variableMap":{"clonedG":"this","removedNodes":"removedNodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:935","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.coll.GHBitSet = new com.graphhopper.coll.GHBitSetImpl(com.graphhopper.storage.BaseGraph.getNodes())"},"status":-1},{"failures":[48,49,50,5],"tindex":"56ef307c-82ac-11e5-b473-17fff8ba9b68","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:178","type":"CtIfImpl","sourcecode":"if (int > 64)\n    throw new java.lang.IllegalStateException(\"sum of all shifts does not fit into a long variable\");\n"},"variableMap":{"shiftSum":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DouglasPeucker:147","type":"CtIfImpl","sourcecode":"if (double < double) {\n    int = int;\n    double = double;\n} "},"status":-1},{"failures":[2],"tindex":"56ef307d-82ac-11e5-b473-63f652c5bccd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:719","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"variableMap":{"graphHopperFolder":"ghLocation"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:766","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.Lock.tryLock()))\n    throw new java.lang.RuntimeException((\"To avoid reading partial data we need to obtain the read lock but it failed. In \" + (java.lang.String)) , com.graphhopper.storage.Lock.getObtainFailedReason());\n"},"status":-1},{"failures":[],"tindex":"56ef307e-82ac-11e5-b473-df6749ee47d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:552","type":"CtIfImpl","sourcecode":"if (int > (-(com.graphhopper.reader.OSMReader.int))) {\n    int = int - 3;\n    return com.graphhopper.reader.PillarInfo.getLon(int);\n} else\n    return java.lang.Double.double;\n"},"status":-2},{"failures":[0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"56ef578f-82ac-11e5-b473-fdf0d283f15d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMWay:65","type":"CtAssignmentImpl","sourcecode":"int = javax.xml.stream.XMLStreamReader.nextTag()"},"status":-1},{"failures":[],"tindex":"56ef5790-82ac-11e5-b473-4d72e1f5ab6c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:337","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.CHEdgeIteratorImpl.checkShortcut(true, \"getSkippedEdge2\")"},"variableMap":{"this":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:438","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodingManager.applyWayTags(com.graphhopper.reader.OSMWay, com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"56ef5791-82ac-11e5-b473-bf8fc133d5d7","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[110,111,64,112,113,114,68,115,116,117,118,72,119,120,121,122,123,124,74,125,126,127,78,128,129,130,131,82,132,133,134,135,136,137,138,139,140,84,141,142,143,88,144,145,146,147,92,148,149,150,151,152,153,94,154,155,156,98,157,158,159,160,102,161,162,163,164,165,166,167,168,169,15,21,24,26],"tindex":"56ef7ea2-82ac-11e5-b473-ad9c74bcffb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:93","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int++;\n}"},"status":-1},{"failures":[19,170,170,171,171,172,172],"tindex":"56ef7ea3-82ac-11e5-b473-e99375203953","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.HeightTile:161","type":"CtOperatorAssignmentImpl","sourcecode":"int += 50"},"variableMap":{"red":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:113","type":"CtAssignmentImpl","sourcecode":"int = -int"},"status":-1},{"failures":[6],"tindex":"56ef7ea4-82ac-11e5-b473-914a354a1550","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GraphHopper:719","type":"CtIfImpl","sourcecode":"if (new java.io.File((java.lang.String + \"-gh\")).exists())\n    java.lang.String += \"-gh\";\n"},"variableMap":{"graphHopperFolder":"vehicle"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GHRequest:254","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    this.java.lang.String = java.lang.String;\n"},"status":-1}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"56ee9435-82ac-11e5-b473-770a66c15927","diffs":[{"branches":{"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":["com.graphhopper.routing.AbstractRoutingAlgorithm_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).b"],"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":["com.graphhopper.routing.AbstractRoutingAlgorithm_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).b"],"com.graphhopper.util.InstructionListTest.testFind":["com.graphhopper.routing.AbstractRoutingAlgorithm_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).b"],"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":["com.graphhopper.routing.AbstractRoutingAlgorithm_void_updateBestPath(com.graphhopper.util.EdgeIteratorState,com.graphhopper.storage.EdgeEntry,int).b"]},"type":"branch"},{"methodsDiff":{"delete":["com.graphhopper.routing.AbstractRoutingAlgorithm.updateBestPath"]},"type":"staticDiff"}]}]}