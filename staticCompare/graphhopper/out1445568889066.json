{"failureDictionary":{"com.graphhopper.storage.GraphHopperStorageTest.testIdentical":31,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":41,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkIfOnlyOneVehicle":53,"com.graphhopper.util.GHUtilityTest.testSort2":82,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":3,"com.graphhopper.reader.OSMReaderTest.testMain":59,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":30,"com.graphhopper.reader.OSMReaderTest.testFerry":57,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":27,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteNodeForUnidir":23,"com.graphhopper.util.BreadthFirstSearchTest.testBFS":81,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":39,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":25,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete3":15,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":14,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":1,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.test481":49,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode2":36,"com.graphhopper.reader.OSMReaderTest.testWithBounds":67,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":47,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":64,"com.graphhopper.reader.PrinctonReaderTest.testRead":70,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":2,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":43,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testFindSubnetworks":51,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveSubnetworkWhenMultipleVehicles":52,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":40,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":68,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode":11,"com.graphhopper.storage.GraphHopperStorageCHTest.testComplexDeleteNode2":13,"com.graphhopper.storage.GraphHopperStorageTest.testGetLocations":35,"com.graphhopper.GraphHopperTest.testFootAndCar":79,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":7,"com.graphhopper.util.GHUtilityTest.testSort":83,"com.graphhopper.reader.OSMReaderTest.testFoot":58,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":44,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":45,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testGetLocations":26,"com.graphhopper.reader.OSMReaderTest.testOneWay":69,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":20,"com.graphhopper.storage.GraphHopperStorageCHTest.testGetLocations":12,"com.graphhopper.storage.GraphHopperStorageTest.testComplexDeleteNode":34,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathLimit":48,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testTarjan":55,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete3":38,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testIdentical":22,"com.graphhopper.util.GHUtilityTest.testSortDirected":84,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete":10,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete":24,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":0,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph":16,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":66,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":62,"com.graphhopper.reader.PrinctonReaderTest.testMediumRead":71,"com.graphhopper.storage.GraphHopperStorageCHTest.testIdentical":8,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":46,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testKeepLargestNetworks":54,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":63,"com.graphhopper.GraphHopperAPITest.testLoad":85,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":42,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":4,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete":33,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testRemoveDeadEndUnvisitedNetworks":50,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":78,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":65,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":17,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":18,"com.graphhopper.storage.GraphHopperStorageTest.testDeleteNodeForUnidir":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement6":77,"com.graphhopper.routing.util.PrepareRoutingSubnetworksTest.testNodeOrderingRegression":56,"com.graphhopper.reader.OSMReaderTest.testBarriers":61,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete3":29,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":28,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":72,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":6,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":76,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":75,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":5,"com.graphhopper.reader.OSMReaderTest.testSort":60,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":74,"com.graphhopper.storage.GraphHopperStorageCHTest.testDeleteNodeForUnidir":9,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":21,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":73},"transformations":[{"failures":[],"tindex":"6cd5fe44-7931-11e5-83b3-e729ab56a92c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:85","type":"CtUnaryOperatorImpl","sourcecode":"~(long)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"6cd62555-7931-11e5-83b3-697c45be1887","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:148","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:385","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.BaseGraph.getNodes()"},"status":-1},{"failures":[],"tindex":"6cd64c66-7931-11e5-83b3-273e722008b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:853","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.OSMReader.printInfo(\"way\")"},"status":-2},{"failures":[],"tindex":"6cd64c67-7931-11e5-83b3-e12f36603e98","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.MotorcycleFlagEncoder:125","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 3 , 7)"},"variableMap":{"priorityWayEncoder":"priorityWayEncoder","shift":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:223","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue = new com.graphhopper.routing.util.EncodedValue(\"PreferWay\" , int , 3 , 1 , 0 , 7)"},"status":-2},{"failures":[],"tindex":"6cd64c68-7931-11e5-83b3-43410b90b4ad","series":0,"name":"add","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.SparseIntIntArray:414","type":"CtIfImpl","sourcecode":"if ((int[][int]) == int) {\n    return int;\n} else {\n    return ~int;\n}"},"status":-2},{"failures":[],"tindex":"6cd67379-7931-11e5-83b3-2b79e9435863","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:422","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.PillarInfo:112","type":"CtReturnImpl","sourcecode":"return com.graphhopper.reader.PillarInfo.getLongitude(int)"},"status":-2},{"failures":[],"tindex":"6cd6737a-7931-11e5-83b3-ebd3f0b0d84b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.GHUtility:254","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int < 0))\n    continue;\n"},"variableMap":{"newAdjIndex":"maxCount","newBaseIndex":"maxCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.PrepareRoutingSubnetworks:170","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = com.graphhopper.routing.util.TIntArrayList.size();\n    com.graphhopper.routing.util.TIntList = com.graphhopper.routing.util.TIntArrayList;\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"6cd6737b-7931-11e5-83b3-dfad1eb05d13","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.QueryGraph:585","type":"CtIfImpl","sourcecode":"if ((int % 2) == 0)\n    int++;\nelse\n    int--;\n"},"variableMap":{"edgeId":"indexM"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:93","type":"CtIfImpl","sourcecode":"if (\"0.0\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: cannot get version!?\");\n} else {\n    java.lang.String java.lang.String = java.lang.String;\n    if (int >= 0)\n        java.lang.String = java.lang.String.substring(0, int);\n    \n    com.graphhopper.util.Constants.boolean = java.lang.String.toLowerCase().contains(\"-snapshot\");\n    com.graphhopper.util.Constants.java.lang.String = java.lang.String;\n}"},"status":-2},{"failures":[],"tindex":"6cd6737c-7931-11e5-83b3-5d8a318f649c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:668","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState> java.util.List<com.graphhopper.util.EdgeIteratorState> = new java.util.ArrayList<com.graphhopper.util.EdgeIteratorState>(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:375","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.graphhopper.util.EdgeIteratorState> java.util.List<com.graphhopper.util.EdgeIteratorState> = new java.util.ArrayList<com.graphhopper.util.EdgeIteratorState>()"},"status":-2},{"failures":[],"tindex":"6cd69a8d-7931-11e5-83b3-cd3729fdd160","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:596","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.clear()"},"variableMap":{"prepareAlgo":"prepareAlgo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:619","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes((((int)(double)) * 100))"},"status":-2},{"failures":[],"tindex":"6cd69a8e-7931-11e5-83b3-93fbc9e4a73e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMInputFile:92","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.mark(10)"},"status":-2},{"failures":[],"tindex":"6cd69a8f-7931-11e5-83b3-2f080dc33c24","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:413","type":"CtReturnImpl","sourcecode":"return 140"},"status":-2},{"failures":[],"tindex":"6cd69a90-7931-11e5-83b3-2121ae0803eb","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:318","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.util.EdgeIterator.Edge.isValid(int)) != (com.graphhopper.util.EdgeIterator.Edge.isValid(int))) {\n    throw new java.lang.IllegalStateException(((((\"Skipped edges of a shortcut needs \" + \"to be both valid or invalid but they were not \") + int) + \", \") + int));\n} "},"variableMap":{"edge1":"v","edge2":"v"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:652","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.ch.PrepareContractionHierarchies.findShortcuts(com.graphhopper.routing.ch.PrepareContractionHierarchies.AddShortcutHandler.setNode(int))"},"status":-2},{"failures":[],"tindex":"6cd6c1a1-7931-11e5-83b3-3d39d1c8cf77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:157","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.QueryResult.setClosestEdge(com.graphhopper.util.EdgeIteratorState)"},"status":-2},{"failures":[],"tindex":"6cd6c1a2-7931-11e5-83b3-e790ede0aa85","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:191","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(5)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:158","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String.startsWith(\"grade\")))\n    java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(110.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue());\n"},"status":-2},{"failures":[],"tindex":"6cd6c1a3-7931-11e5-83b3-5fb55d99de12","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.TraversalMode:103","type":"CtIfImpl","sourcecode":"if ((int) == 1)\n    return int;\n"},"variableMap":{"edgeId":"current","noOfStates":"current"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.VirtualEdgeIterator:78","type":"CtReturnImpl","sourcecode":"return java.util.List<com.graphhopper.util.EdgeIteratorState>.get(int).getBaseNode()"},"status":-2},{"failures":[],"tindex":"6cd6c1a4-7931-11e5-83b3-d5c040109328","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.SimpleIntDeque:81","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[(int) + 10]"},"variableMap":{"endIndexPlusOne":"read"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMIntDataAccess:167","type":"CtLocalVariableImpl","sourcecode":"int[] int[] = new int[int]"},"status":-2},{"failures":[],"tindex":"6cd6e8b5-7931-11e5-83b3-a33928286285","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.AStar:134","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.routing.AStar.AStarEdge.int = com.graphhopper.util.EdgeIterator.getEdge()"},"status":-2},{"failures":[],"tindex":"6cd6e8b6-7931-11e5-83b3-135d05f0f33b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:444","type":"CtIfImpl","sourcecode":"if (!(com.graphhopper.storage.StorableProperties.loadExisting()))\n    throw new java.lang.IllegalStateException((\"Cannot load properties to fetch EncodingManager configuration at: \" + (com.graphhopper.storage.Directory.getLocation())));\n"},"status":-2},{"failures":[],"tindex":"6cd6e8b7-7931-11e5-83b3-434c9b3567b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:658","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}