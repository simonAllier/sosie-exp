{"failureDictionary":{"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":20,"com.graphhopper.routing.QueryGraphTest.testEnforceHeadingByEdgeId":25,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointOrder":90,"com.graphhopper.routing.PathTest.testFindInstruction":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraph":70,"com.graphhopper.routing.QueryGraphTest.testLoopStreet_Issue151":82,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode":65,"com.graphhopper.storage.UnsafeDataAccessTest.testSet_GetBytes":0,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_FromEqualsTo":74,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testQueryGraphAndFastest":76,"com.graphhopper.storage.index.LocationIndexTreeTest.testFindingWayGeometry":39,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcShortestPath":78,"com.graphhopper.reader.OSMReaderTest.testWithBounds":95,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDeleteAndOptimize":64,"com.graphhopper.routing.QueryGraphTest.testFillVirtualEdges":21,"com.graphhopper.storage.GraphHopperStorageTest.testPillarNodes":46,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":57,"com.graphhopper.storage.GraphHopperStorageCHTest.testQueryGraph":122,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":60,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":31,"com.graphhopper.routing.QueryGraphTest.testEnforceHeading":18,"com.graphhopper.util.BitUtilBigTest.testReverse":12,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testAddLocation":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":33,"com.graphhopper.GraphHopperTest.testPrepare":102,"com.graphhopper.util.BitUtilBigTest.testBitString2Long":11,"com.graphhopper.util.InstructionListTest.testWayList2":28,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_BiGraph":79,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testReverseSpatialKey":13,"com.graphhopper.storage.GraphHopperStorageTest.testDetachEdge":44,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":23,"com.graphhopper.routing.QueryGraphTest.testEdgesShareOneNode":26,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":71,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints120":117,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadFlush":5,"com.graphhopper.util.BitUtilLittleTest.testToBitString":7,"com.graphhopper.util.InstructionListTest.testWayList":27,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge":75,"com.graphhopper.storage.StorablePropertiesTest.testVersionCheck":15,"com.graphhopper.util.InstructionTest.testCalcAzimuthAndGetDirection":88,"com.graphhopper.storage.GraphHopperStorageTest.testSimpleDelete2":45,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBidirectional":72,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":58,"com.graphhopper.storage.index.LocationIndexTreeTest.testMoreReal":115,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":48,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":17,"com.graphhopper.storage.UnsafeDataAccessTest.testLoadClose":4,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":59,"com.graphhopper.storage.UnsafeDataAccessTest.testCopy":1,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":103,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testPillarNodes":36,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":69,"com.graphhopper.storage.UnsafeDataAccessTest.testRenameFlush":2,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSimpleDelete2":35,"com.graphhopper.GraphHopperTest.testLoadOSM":106,"com.graphhopper.storage.index.LocationIndexTreeTest.testReverseSpatialKey":14,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement1":96,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testWayGeometry":38,"com.graphhopper.storage.index.LocationIndexTreeTest.testWayGeometry":40,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement5":100,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement4":99,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testGrid":111,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":32,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement3":98,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":97,"com.graphhopper.storage.index.LocationIndexTreeTest.testDifferentVehicles":121,"com.graphhopper.reader.OSMReaderTest.testMain":29,"com.graphhopper.storage.GraphHopperStorageCHTest.testPillarNodes":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testComplexDeleteNode2":67,"com.graphhopper.routing.QueryGraphTest.testOneWayLoop_Issue162":22,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcIf1EdgeAway":80,"com.graphhopper.storage.GraphHopperStorageCHTest.testSimpleDelete2":42,"com.graphhopper.routing.PathTest.testWayList":16,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSimpleGraph2":112,"com.graphhopper.util.BitUtilLittleTest.testBitString2Long":8,"com.graphhopper.storage.index.LocationIndexTreeTest.testGrid":118,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testDifferentVehicles":114,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":81,"com.graphhopper.util.PointListTest.testIterable":87,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":54,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testBits":6,"com.graphhopper.routing.QueryGraphTest.testInternalAPIOriginalTraversalKey":19,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testMoreReal":108,"com.graphhopper.storage.GraphHopperStorageCHTest.testDetachEdge":41,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testDetachEdge":34,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints32":113,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_SpecialCases":77,"com.graphhopper.util.DouglasPeuckerTest.testSimplifyCheckPointCount":89,"com.graphhopper.util.DouglasPeuckerTest.testPathSimplify":92,"com.graphhopper.GraphHopperTest.testFootAndCar":104,"com.graphhopper.util.BitUtilBigTest.testToBitString":10,"com.graphhopper.routing.QueryGraphTest.testIteration_Issue163":24,"com.graphhopper.storage.index.LocationIndexTreeTest.testSnappedPointAndGeometry":116,"com.graphhopper.util.InstructionListTest.testCreateGPX":86,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":55,"com.graphhopper.storage.index.LocationIndexTreeTest.testSimpleGraph2":119,"com.graphhopper.util.BitUtilLittleTest.testReverse":9,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testFindingWayGeometry":37,"com.graphhopper.reader.OSMReaderTest.testRelation":47,"com.graphhopper.routing.QueryGraphTest.testGetEdgeProps":85,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":63,"com.graphhopper.GraphHopperTest.testVia":101,"com.graphhopper.routing.QueryGraphTest.testTurnCostsProperlyPropagated_Issue282":83,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":107,"com.graphhopper.util.DouglasPeuckerTest.testParse":91,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSinglePoints120":110,"com.graphhopper.GraphHopperAPITest.testLoad":50,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":105,"com.graphhopper.routing.QueryGraphTest.testAvoidDuplicateVirtualNodesIfIdentical":84,"com.graphhopper.GraphHopperTest.testFootOnly":30,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":53,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":94,"com.graphhopper.storage.index.LocationIndexTreeCHTest.testSnappedPointAndGeometry":109,"com.graphhopper.util.InstructionListTest.testFind":52,"com.graphhopper.reader.OSMReaderTest.testBarriers":93,"com.graphhopper.storage.UnsafeDataAccessTest.testSegments":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":61,"com.graphhopper.util.GHUtilityTest.testCopy":51,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testViaEdges_WithCoordinates":73,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":62,"com.graphhopper.storage.index.LocationIndexTreeTest.testSinglePoints32":120},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"0ee58cfc-82be-11e5-8953-8b37610b4382","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:149","type":"CtIfImpl","sourcecode":"if (((int) * (int)) < int)\n    (int)++;\n"},"variableMap":{"latSize":"length","size":"length","lonSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:236","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.storage.UnsafeDataAccess.sun.misc.Unsafe.putByte((((long) + long) + int), byte[][int]);\n}"},"status":-1},{"failures":[],"tindex":"0ee5b40d-82be-11e5-8953-f19f6ecafadd","series":0,"name":"add","transplant":{"position":"com.graphhopper.GraphHopper:663","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Load graph before importing OSM data\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodingManager:169","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((((\"Encoder \" + java.lang.String) + \" was used in version \") + (com.graphhopper.util.PMap.getLong(\"version\", -1))) + \", but current version is \") + (com.graphhopper.routing.util.AbstractFlagEncoder.getVersion())))"},"status":-2},{"failures":[],"tindex":"0ee5db1e-82be-11e5-8953-a36887b39cd8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:176","type":"CtLocalVariableImpl","sourcecode":"int int = 1024 * 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:179","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(double))"},"status":-2},{"failures":[],"tindex":"0ee5db1f-82be-11e5-8953-6d496b53928a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.RoundaboutInstruction:141","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.graphhopper.util.Helper.isEmpty(java.lang.String) ? com.graphhopper.util.Translation.tr(\"roundaboutExit\", com.graphhopper.util.RoundaboutInstruction.getExitNumber()) : com.graphhopper.util.Translation.tr(\"roundaboutExitOnto\", com.graphhopper.util.RoundaboutInstruction.getExitNumber(), java.lang.String)"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14],"tindex":"0ee5db20-82be-11e5-8953-417cebaed17b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMElement:85","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n\")"},"variableMap":{"tagTxt":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtil:231","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('1')"},"status":-1},{"failures":[],"tindex":"0ee5db21-82be-11e5-8953-b33263c8e69c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:476","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState.setDistance(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDistance()).setName(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getName()).setFlags(com.graphhopper.storage.BaseGraph.CommonEdgeIterator.getDirectFlags())"},"variableMap":{"from":"closestEdge","to":"closestEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.QueryResult:131","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.util.EdgeIteratorState = com.graphhopper.util.EdgeIteratorState"},"status":-2},{"failures":[15],"tindex":"0ee60232-82be-11e5-8953-79234f962b0b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMReader:586","type":"CtIfImpl","sourcecode":"if (int == (com.graphhopper.reader.OSMReader.int))\n    return false;\n"},"variableMap":{"com.graphhopper.reader.OSMReader.EMPTY":"vers","nodeType":"vers"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:179","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals((int + \"\")))) {\n    if (boolean) {\n        return false;\n    } \n    throw new java.lang.IllegalStateException((((((\"Version of \" + java.lang.String) + \" unsupported: \") + java.lang.String) + \", expected:\") + int));\n} "},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"0ee60233-82be-11e5-8953-73d11bcd7cc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:905","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.PointList.add(double, double)"},"status":-1},{"failures":[],"tindex":"0ee60234-82be-11e5-8953-551b7eb597d0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:261","type":"CtIfImpl","sourcecode":"if ((!(java.util.List<java.nio.ByteBuffer>.isEmpty())) && ((java.util.List<java.nio.ByteBuffer>.get(0)) instanceof java.nio.MappedByteBuffer)) {\n    for (java.nio.ByteBuffer java.nio.ByteBuffer : java.util.List<java.nio.ByteBuffer>) {\n        ((java.nio.MappedByteBuffer)(java.nio.ByteBuffer)).force();\n    }\n} "},"variableMap":{"segments":"segments"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:364","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int -= int;\n    java.nio.ByteBuffer.get(byte[], 0, int);\n    java.nio.ByteBuffer = java.util.List<java.nio.ByteBuffer>.get((int + 1));\n    java.nio.ByteBuffer.position(0);\n    java.nio.ByteBuffer.get(byte[], int, int);\n} else {\n    java.nio.ByteBuffer.get(byte[], 0, int);\n}"},"status":-2},{"failures":[47],"tindex":"0ee60235-82be-11e5-8953-25a3fbf9e98e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:616","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.graphhopper.reader.OSMRelation.Member com.graphhopper.reader.OSMRelation.Member = com.graphhopper.reader.OSMRelation.getMembers().get(int);\n    if ((com.graphhopper.reader.OSMRelation.Member.type()) != (com.graphhopper.reader.OSMRelation.Member.int))\n        continue;\n    \n    long long = com.graphhopper.reader.OSMRelation.Member.ref();\n    long long = com.graphhopper.reader.OSMReader.getRelFlagsMap().get(long);\n    long long = com.graphhopper.routing.util.EncodingManager.handleRelationTags(com.graphhopper.reader.OSMRelation, long);\n    if (long != long)\n        com.graphhopper.reader.OSMReader.getRelFlagsMap().put(long, long);\n    \n}"},"status":-1},{"failures":[],"tindex":"0ee62946-82be-11e5-8953-059332821dfa","series":0,"name":"add","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:162","type":"CtIfImpl","sourcecode":"if (double < double) {\n    double double = (double + double) / 2;\n    if (double < double) {\n        double = double;\n    } else {\n        long |= 1;\n        double = double;\n    }\n} "},"variableMap":{"maxLatTmp":"distance","minLatTmp":"distance","lat":"distance","hash":"edgePointer"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.EdgeAccess:76","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + (int)), com.graphhopper.storage.EdgeAccess.distToInt(double))"},"status":0},{"failures":[],"tindex":"0ee62947-82be-11e5-8953-7b8bc0aa3463","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.CHGraphImpl:577","type":"CtReturnImpl","sourcecode":"return com.graphhopper.storage.CHGraphImpl.this.getWeight(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:540","type":"CtReturnImpl","sourcecode":"return java.lang.Double.double"},"status":-2},{"failures":[],"tindex":"0ee62948-82be-11e5-8953-552aac9dc17f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.UnsafeDataAccess:138","type":"CtTryImpl","sourcecode":"try {\n    long long = com.graphhopper.storage.AbstractDataAccess.(readHeader(java.io.RandomAccessFile)) - (com.graphhopper.storage.AbstractDataAccess.int);\n    if (long < 0)\n        return false;\n    \n    java.io.RandomAccessFile.seek(com.graphhopper.storage.AbstractDataAccess.int);\n    int int = ((int)(long / (int)));\n    if ((long % (int)) != 0)\n        int++;\n    \n    com.graphhopper.storage.UnsafeDataAccess.ensureCapacity(long, false);\n    byte[] byte[] = new byte[int];\n    for (int int = 0 ; int < int ; int++) {\n        int int = java.io.RandomAccessFile.read(byte[]);\n        if (int <= 0)\n            throw new java.lang.IllegalStateException((((\"segment \" + int) + \" is empty? \") + com.graphhopper.storage.AbstractDataAccess.(toString())));\n        \n        com.graphhopper.storage.UnsafeDataAccess.setBytes((int * (int)), byte[], int);\n    }\n    return true;\n} finally {\n    java.io.RandomAccessFile.close();\n}"},"status":-2},{"failures":[],"tindex":"0ee62949-82be-11e5-8953-e57e9638e4fd","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:231","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.AbstractDataAccess.isClosed())\n    throw new java.lang.IllegalStateException(\"already closed\");\n"},"variableMap":{"this":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:401","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.initNodeRefs(0, com.graphhopper.storage.DataAccess.getCapacity())"},"status":-2},{"failures":[],"tindex":"0ee6294a-82be-11e5-8953-a3bfce2ad42c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DistancePlaneProjection:57","type":"CtLocalVariableImpl","sourcecode":"double double = double / (com.graphhopper.util.DistanceCalcEarth.double)"},"variableMap":{"dist":"deltaLon","com.graphhopper.util.DistanceCalcEarth.R":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:654","type":"CtLocalVariableImpl","sourcecode":"double double = (com.graphhopper.util.shapes.GHPoint.double) - ((0.5 + int) * (double))"},"status":-2},{"failures":[],"tindex":"0ee6505b-82be-11e5-8953-11407f9824d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:75","type":"CtTryImpl","sourcecode":"try {\n    int int;\n    while ((int = java.util.zip.ZipInputStream.read(byte[])) > 0) {\n        java.io.FileOutputStream.write(byte[], 0, int);\n        long += int * double;\n        if (com.graphhopper.util.ProgressListener != null)\n            com.graphhopper.util.ProgressListener.update(long);\n        \n    }\n} finally {\n    java.io.FileOutputStream.close();\n}"},"status":0},{"failures":[],"tindex":"0ee6505c-82be-11e5-8953-bb3d3c513fd2","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.GHUtility:172","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.NodeAccess com.graphhopper.storage.NodeAccess = com.graphhopper.storage.CHGraph.getNodeAccess()"},"variableMap":{"g":"toSortedGraph"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:262","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.storage.NodeAccess com.graphhopper.storage.NodeAccess = com.graphhopper.storage.Graph.getNodeAccess()"},"status":-2},{"failures":[48,16,49,50,51,52,27,28,53,54,55,56,57,58,59,60,61,33,62,63,64,65,66,67,68,69,36],"tindex":"0ee6505d-82be-11e5-8953-3b7c8e861f11","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.IntDoubleBinHeap:115","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"size":"N_ADDITIONAL"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:267","type":"CtAssignmentImpl","sourcecode":"int = com.graphhopper.storage.BaseGraph.nextNodeEntryIndex(4)"},"status":-1},{"failures":[16,49,70,71,72,73,74,75,76,77,78,79,17,80,81,18,82,83,19,20,84,85,22,23,25,26,50,52,27,86,28,53,87,88,89,90,91,92,29,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,31,34,37,108,109,110,111,112,113,114,39,115,116,117,118,119,120,121,122,41,44],"tindex":"0ee6505e-82be-11e5-8953-5766be9eeb7e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.dem.CGIARProvider:139","type":"CtAssignmentImpl","sourcecode":"double = ((int)((double * (double)))) / (double)"},"variableMap":{"precision":"lat","lat":"lat"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PointList:128","type":"CtAssignmentImpl","sourcecode":"double[][int] = double"},"status":-1},{"failures":[],"tindex":"0ee6505f-82be-11e5-8953-5ba8d3393a65","series":0,"name":"add","transplant":{"position":"com.graphhopper.reader.pbf.PbfBlobDecoder:252","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.String> == null) {\n    java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n} "},"variableMap":{"tags":"map"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.StorableProperties:71","type":"CtInvocationImpl","sourcecode":"com.graphhopper.util.Helper.saveProperties(java.util.Map<java.lang.String, java.lang.String>, java.io.StringWriter)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"0ee6505b-82be-11e5-8953-11407f9824d7","diffs":[{"methodsDiff":{"delete":["com.graphhopper.util.ProgressListener.update","java.io.FileOutputStream.write"]},"branchesDiff":{"delete":["l1","t0"]},"type":"staticDiff"}]}]}