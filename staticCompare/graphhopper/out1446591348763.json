{"failureDictionary":{"com.graphhopper.storage.GraphStorageViaMMapTest.testDozendEdges":38,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetLocations":36,"com.graphhopper.routing.util.EncodingManagerTest.testSupportFords":13,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectionalEdgeFilter":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder_Fastest":9,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":73,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":54,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSimpleGraph2":60,"com.graphhopper.storage.MMapDataAccessTest.testCopy":64,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":55,"com.graphhopper.storage.MMapDataAccessTest.textMixRAM2MMAP":62,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testPathRecursiveUnpacking":0,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete":34,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateLocation":51,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeightMMap":83,"com.graphhopper.storage.GraphHopperStorageTest.testCopyTo":21,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testTwoWeightsPerEdge2":6,"com.graphhopper.storage.MMapDataAccessTest.testSegments":68,"com.graphhopper.storage.GraphStorageViaMMapTest.testCheckFirstNode":45,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode":35,"com.graphhopper.storage.GraphStorageViaMMapTest.testSetNodes":57,"com.graphhopper.storage.MMapDataAccessTest.testLoadFlush":70,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testBaseGraphMultipleVehicles":1,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnsureCapacity":72,"com.graphhopper.reader.dem.SRTMProviderTest.testGetHeight":84,"com.graphhopper.storage.GraphStorageViaMMapTest.testPropertiesWithNoInit":44,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testRoundaboutUnpacking":8,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteAndOptimize":33,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":43,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testEnabledElevation":79,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":24,"com.graphhopper.storage.GraphHopperStorageTest.testClone":20,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsIdenticalView":11,"com.graphhopper.storage.GraphStorageViaMMapTest.testFlags":29,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeReturn":50,"com.graphhopper.storage.MMapDataAccessTest.testTrimTo":67,"com.graphhopper.storage.GraphHopperStorageCHTest.testEnabledElevation":78,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":52,"com.graphhopper.storage.GraphHopperStorageTest.testEnabledElevation":80,"com.graphhopper.storage.GraphStorageViaMMapTest.testInfinityWeight":53,"com.graphhopper.coll.OSMIDSegmentedMapTest.testGet":85,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":23,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testUnpackingOrder":7,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdges":30,"com.graphhopper.storage.GraphStorageViaMMapTest.testUpdateUnidirectional":32,"com.graphhopper.storage.GraphStorageViaMMapTest.testCreateDuplicateEdges":49,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testCalcFastestPath":2,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testDirectedGraphBug2":3,"com.graphhopper.storage.GraphStorageViaMMapTest.testUnidirectional":46,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testBarrierAccess":76,"com.graphhopper.storage.GraphStorageViaMMapTest.testClone":16,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints32":61,"com.graphhopper.storage.MMapDataAccessTest.testBoundsCheck":63,"com.graphhopper.storage.GraphStorageViaMMapTest.testFootMix":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdgeProperties":42,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testClone":18,"com.graphhopper.storage.MMapDataAccessTest.testLoadClose":69,"com.graphhopper.storage.GraphStorageViaMMapTest.testGetAllEdgesWithDelete":37,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testApplyWayTags":74,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testMultiplePreparationsDifferentView":10,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes2":27,"com.graphhopper.storage.GraphStorageViaMMapTest.testDeleteNodeForUnidir":26,"com.graphhopper.storage.MMapDataAccessTest.testRenameFlush":65,"com.graphhopper.storage.GraphStorageViaMMapTest.testAddLocation":40,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":81,"com.graphhopper.routing.util.MountainBikeFlagEncoderTest.testBarrierAccess":75,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":82,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testWithCoordinates":4,"com.graphhopper.storage.GraphHopperStorageCHTest.testClone":14,"com.graphhopper.routing.ch.DijkstraBidirectionCHTest.testRekeyBugOfIntBinHeap":5,"com.graphhopper.storage.GraphStorageViaMMapTest.testComplexDeleteNode2":41,"com.graphhopper.routing.util.FootFlagEncoderTest.testBarrierAccess":77,"com.graphhopper.storage.GraphStorageViaMMapTest.testDirectional":56,"com.graphhopper.storage.GraphHopperStorageCHTest.testCopyTo":15,"com.graphhopper.storage.MMapDataAccessTest.testEnsureCapacity":66,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testSinglePoints120":58,"com.graphhopper.storage.index.Location2IDQuadtreeTest.testGrid":59,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testCopyTo":19,"com.graphhopper.storage.GraphStorageViaMMapTest.testIdenticalNodes":39,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testDirectedGraph":12,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyTo":17,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete3":48,"com.graphhopper.util.GHUtilityTest.testCopy":22,"com.graphhopper.storage.GraphStorageViaMMapTest.testEdges":28,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":47,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":71},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"064c1e6b-827e-11e5-8251-df81cf4e162a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.Path4CH:62","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getSkippedEdge2()"},"variableMap":{"mainEdgeState":"mainEdgeState"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.Path4CH:63","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.CHEdgeIteratorState.getAdjNode()"},"status":-1},{"failures":[13],"tindex":"064c457c-827e-11e5-8251-b30c2f429049","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:47","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.AbstractFlagEncoder.setBlockFords(com.graphhopper.util.PMap.getBool(\"blockFords\", true))"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22],"tindex":"064c457d-827e-11e5-8251-fbdeecc04459","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:293","type":"CtIfImpl","sourcecode":"if (com.graphhopper.storage.NodeAccess.is3D())\n    com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int), com.graphhopper.storage.NodeAccess.getElevation(int));\nelse\n    com.graphhopper.storage.NodeAccess.setNode(int, com.graphhopper.storage.NodeAccess.getLatitude(int), com.graphhopper.storage.NodeAccess.getLongitude(int));\n"},"status":-1},{"failures":[23,24,25,26,27,16,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,17,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"064c6c8e-827e-11e5-8251-138db25cf898","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHLongIntBTree:334","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"noNumberValue":"bufferIndex"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:313","type":"CtReturnImpl","sourcecode":"return java.util.List<java.nio.ByteBuffer>.get(int).getInt(int)"},"status":-1},{"failures":[],"tindex":"064c6c8f-827e-11e5-8251-0d6c88016c3e","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:56","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.storage.EdgeEntry>(int)"},"variableMap":{"fromMap":"bestWeightMapTo","size":"nodes"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:66","type":"CtAssignmentImpl","sourcecode":"gnu.trove.map.TIntObjectMap<com.graphhopper.storage.EdgeEntry> = new gnu.trove.map.hash.TIntObjectHashMap<com.graphhopper.storage.EdgeEntry>((int / 10))"},"status":0},{"failures":[],"tindex":"064c6c90-827e-11e5-8251-c986e58504a8","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:231","type":"CtAssignmentImpl","sourcecode":"double = (double * (((double * double) + (double * double)) + (1 * double))) / double"},"variableMap":{"fwdFaster":"lat","incDist2DSum":"minLon","fwdSlower":"lon","fullDist2D":"lon","restDist2D":"lat","speed":"minLon","decDist2DSum":"lon"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.LocationIndexTree:674","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.DistanceCalc.calcDist(com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, com.graphhopper.util.shapes.GHPoint.double, double)"},"status":-2},{"failures":[],"tindex":"064c6c91-827e-11e5-8251-ff0307a09f59","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.Dijkstra:100","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.add(com.graphhopper.storage.EdgeEntry)"},"variableMap":{"nEdge":"ee","fromHeap":"prioQueue"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.DijkstraBidirectionRef:216","type":"CtInvocationImpl","sourcecode":"java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove(com.graphhopper.storage.EdgeEntry)"},"status":0},{"failures":[74],"tindex":"064c6c92-827e-11e5-8251-afcd13c49e03","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:398","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIterator.fetchWayGeometry(0)"},"variableMap":{"allIter":"edge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.Bike2WeightFlagEncoder:153","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = com.graphhopper.util.EdgeIteratorState.fetchWayGeometry(3)"},"status":-1},{"failures":[],"tindex":"064c93a3-827e-11e5-8251-8b1ee1ae129d","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.GHUtility:265","type":"CtLocalVariableImpl","sourcecode":"int int = gnu.trove.list.TIntList.get(int)"},"status":-2},{"failures":[75,76,77],"tindex":"064c93a4-827e-11e5-8251-df0022f52ea4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:250","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMNode.hasTag(java.lang.String, java.util.Set<java.lang.String>))\n    return long;\n"},"status":-1},{"failures":[23,78,43,71,79,73,80,81,82],"tindex":"064c93a5-827e-11e5-8251-e9c89ccb7098","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:92","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(1, com.graphhopper.util.PointList.getSize())"},"variableMap":{"pointList":"res"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Helper:353","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList"},"status":-1},{"failures":[],"tindex":"064c93a6-827e-11e5-8251-070d76000a73","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:106","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"//\")) || (java.lang.String.startsWith(\"#\"))) {\n    continue;\n} "},"variableMap":{"line":"graphHopperFolder"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:714","type":"CtIfImpl","sourcecode":"if ((java.lang.String.endsWith(\".osm\")) || (java.lang.String.endsWith(\".xml\"))) {\n    throw new java.lang.IllegalArgumentException(\"To import an osm file you need to use importOrLoad\");\n} else if (!(java.lang.String.contains(\".\"))) {\n    if (new java.io.File((java.lang.String + \"-gh\")).exists())\n        java.lang.String += \"-gh\";\n    \n} else {\n    java.io.File java.io.File = new java.io.File((java.lang.String + \".ghz\"));\n    if ((java.io.File.exists()) && (!(java.io.File.isDirectory()))) {\n        try {\n            new com.graphhopper.util.Unzipper().unzip(java.io.File.getAbsolutePath(), java.lang.String, boolean);\n        } catch (java.io.IOException ex) {\n            throw new java.lang.RuntimeException((((\"Couldn\\'t extract file \" + (java.io.File.getAbsolutePath())) + \" to \") + java.lang.String) , java.io.IOException);\n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"064c93a7-827e-11e5-8251-e7250f302a63","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.MapEntry:92","type":"CtLocalVariableImpl","sourcecode":"int int = 7"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:719","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.coll.SparseIntIntArray.valueAt(int)"},"status":-2},{"failures":[],"tindex":"064c93a8-827e-11e5-8251-0748248e50a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:78","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[82,83,84],"tindex":"064cbab9-827e-11e5-8251-3f94508f78ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.dem.SRTMProvider:239","type":"CtInvocationImpl","sourcecode":"com.graphhopper.reader.dem.HeightTile.setHeights(com.graphhopper.storage.DataAccess)"},"status":-1},{"failures":[],"tindex":"064cbaba-827e-11e5-8251-1b67ab1087db","series":0,"name":"add","transplant":{"position":"com.graphhopper.coll.GHTreeMapComposed:32","type":"CtUnaryOperatorImpl","sourcecode":"-3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:468","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.BaseGraph.loadWayGeometryHeader()"},"status":-2},{"failures":[],"tindex":"064cbabb-827e-11e5-8251-f9f87c98d7c6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.VirtualEdgeIteratorState:90","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.copy(0, ((com.graphhopper.util.PointList.getSize()) - 1))"},"variableMap":{"pointList":"com.graphhopper.util.PointList.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:879","type":"CtReturnImpl","sourcecode":"return com.graphhopper.util.PointList.com.graphhopper.util.PointList"},"status":-2},{"failures":[85],"tindex":"064cbabc-827e-11e5-8251-0362045ae845","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:73","type":"CtAssignmentImpl","sourcecode":"long[] = java.util.Arrays.copyOf(long[], int)"},"status":-1},{"failures":[],"tindex":"064cbabd-827e-11e5-8251-d75881004f36","series":0,"name":"replace","transplant":{"position":"com.graphhopper.geohash.SpatialKeyAlgo:235","type":"CtIfImpl","sourcecode":"if (long > 1) {\n    long >>>= 1;\n} else {\n    break;\n}"},"variableMap":{"bits":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedValue:79","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.util.EncodedValue.checkValue(long)"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":19,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"064c6c91-827e-11e5-8251-ff0307a09f59","diffs":[{"methodsDiff":{"delete":["java.util.PriorityQueue<com.graphhopper.storage.EdgeEntry>.remove"]},"type":"staticDiff"}]}]}