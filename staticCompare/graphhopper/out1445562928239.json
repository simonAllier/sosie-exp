{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"8be64be3-7923-11e5-a8d2-e369285fe117","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.BresenhamLine:135","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"err":"segmentCount","dLat":"segmentCount"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:156","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"8be64be4-7923-11e5-a8d2-9bbd69819704","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper:447","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1166","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.LockFactory.forceRemove(java.lang.String, true)"},"status":-2},{"failures":[],"tindex":"8be64be5-7923-11e5-a8d2-ab8ab6dfb70f","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:368","type":"CtIfImpl","sourcecode":"if ((double >= 0) && ((double < 0) || (double < double)))\n    double = double;\n"},"variableMap":{"maxSpeed":"meanDegree","fwdSpeed":"meanDegree"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:638","type":"CtIfImpl","sourcecode":"if (com.graphhopper.routing.ch.PrepareContractionHierarchies.ShortcutHandler instanceof com.graphhopper.routing.ch.PrepareContractionHierarchies.AddShortcutHandler) {\n    double = (((double) * 2) + long) / 3;\n} "},"status":-2},{"failures":[],"tindex":"8be672f6-7923-11e5-a8d2-5737aaa2a0e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.CHGraphImpl:721","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.CHGraphImpl.getWeighting()"},"status":-2},{"failures":[],"tindex":"8be672f7-7923-11e5-a8d2-35c23dd4047f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:390","type":"CtLocalVariableImpl","sourcecode":"int int = 5"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.Location2IDQuadtree:246","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"8be672f8-7923-11e5-a8d2-f91de6b4a01c","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.OSMIDSegmentedMap:63","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    (int)++;\n    int = 0;\n} "},"variableMap":{"currentBucket":"x2","currentIndex":"x2","bucketSize":"y1"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.index.BresenhamLine:36","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.index.BresenhamLine.com.graphhopper.storage.index.BresenhamLine.bresenham(int, int, int, int, com.graphhopper.storage.index.PointEmitter)"},"status":-2},{"failures":[],"tindex":"8be672f9-7923-11e5-a8d2-65a2a1d23d43","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.GHNodeAccess:90","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException(\"Cannot access elevation - 3D is not enabled\");\n"},"variableMap":{"elevation":"switchWrapper"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.PathBidirRef:72","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.graphhopper.storage.EdgeEntry com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n    com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry;\n} "},"status":-2},{"failures":[],"tindex":"8be672fa-7923-11e5-a8d2-7b621194497a","series":0,"name":"replace","transplant":{"position":"com.graphhopper.GHRequest:151","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    throw new java.lang.IllegalStateException((\"Please call empty constructor if you intent to use \" + \"more than two places via addPoint method.\"));\n"},"variableMap":{"possibleToAdd":"isPusingSection"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:599","type":"CtIfImpl","sourcecode":"if (com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", java.util.Set<java.lang.String>)) {\n    if (boolean && (!(com.graphhopper.reader.OSMWay.hasTag(\"bicycle\", \"designated\"))))\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    else\n        com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n    \n} else if (\"cycleway\".equals(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\nelse if (java.util.Set<java.lang.String>.contains(java.lang.String))\n    com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType = com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType.com.graphhopper.routing.util.BikeCommonFlagEncoder.WayType;\n"},"status":-2},{"failures":[],"tindex":"8be69a0b-7923-11e5-a8d2-a35a9357471d","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Instruction:233","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.PointList.getLatitude(1)"},"variableMap":{"nextLat":"nextLat","points":"points"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Instruction:237","type":"CtAssignmentImpl","sourcecode":"double = com.graphhopper.util.Instruction.com.graphhopper.util.PointList.getLatitude(0)"},"status":-2},{"failures":[],"tindex":"8be69a0c-7923-11e5-a8d2-7d31b4e31d60","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:158","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"tmpNo":"shift"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:221","type":"CtOperatorAssignmentImpl","sourcecode":"int += com.graphhopper.routing.util.EncodedValue.getBits()"},"status":-2},{"failures":[],"tindex":"8be69a0d-7923-11e5-a8d2-3d5fbc6de3d1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:596","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.clear()"},"variableMap":{"prepareAlgo":"prepareAlgo"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:619","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.DijkstraOneToMany.setLimitVisitedNodes((((int)(double)) * 100))"},"status":-2},{"failures":[],"tindex":"8be69a0e-7923-11e5-a8d2-2dade1a33af9","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.DepthFirstSearch:49","type":"CtWhileImpl","sourcecode":"while (com.graphhopper.util.EdgeIterator.next()) {\n    int int = com.graphhopper.util.EdgeIterator.getAdjNode();\n    if (com.graphhopper.util.XFirstSearch.checkAdjacent(com.graphhopper.util.EdgeIterator)) {\n        com.graphhopper.util.TIntArrayStack.push(int);\n    } \n}"},"status":-2},{"failures":[],"tindex":"8be69a0f-7923-11e5-a8d2-b1fe24c5d2c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:359","type":"CtInvocationImpl","sourcecode":"java.util.TreeMap<java.lang.Double, java.lang.Integer>.put(40.0, com.graphhopper.routing.util.PriorityCode.com.graphhopper.routing.util.PriorityCode.getValue())"},"status":-2},{"failures":[],"tindex":"8be69a10-7923-11e5-a8d2-718df1ca5a80","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.index.Location2IDFullIndex:148","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.CarFlagEncoder:195","type":"CtReturnImpl","sourcecode":"return (long) | (long)"},"status":-2},{"failures":[],"tindex":"8be6c121-7923-11e5-a8d2-23f88b66e259","series":0,"name":"add","transplant":{"position":"com.graphhopper.storage.index.LocationIndexTree:396","type":"CtLocalVariableImpl","sourcecode":"double double"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Unzipper:69","type":"CtLocalVariableImpl","sourcecode":"double double = 1"},"status":-2},{"failures":[],"tindex":"8be6c122-7923-11e5-a8d2-ef123f6f798f","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.Helper:348","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(int , true)"},"variableMap":{"max":"max"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:341","type":"CtLocalVariableImpl","sourcecode":"com.graphhopper.util.PointList com.graphhopper.util.PointList = new com.graphhopper.util.PointList(((int - int) + 1) , com.graphhopper.storage.NodeAccess.is3D())"},"status":-2},{"failures":[],"tindex":"8be6c123-7923-11e5-a8d2-056e3c82345b","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.BaseGraph:841","type":"CtLocalVariableImpl","sourcecode":"int int = 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:584","type":"CtLocalVariableImpl","sourcecode":"int int = com.graphhopper.util.EdgeIterator.getAdjNode()"},"status":-2},{"failures":[],"tindex":"8be6c124-7923-11e5-a8d2-dfa3b1ffdaaa","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.TurnCostExtension:61","type":"CtIfImpl","sourcecode":"if ((int) > 0)\n    throw new java.lang.AssertionError(\"The turn cost storage must be initialized only once.\");\n"},"variableMap":{"turnCostsCount":"indexM"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.Constants:93","type":"CtIfImpl","sourcecode":"if (\"0.0\".equals(java.lang.String)) {\n    com.graphhopper.util.Constants.java.lang.String = \"0.0\";\n    com.graphhopper.util.Constants.boolean = true;\n    java.lang.System.java.io.PrintStream.println(\"GraphHopper Initialization WARNING: cannot get version!?\");\n} else {\n    java.lang.String java.lang.String = java.lang.String;\n    if (int >= 0)\n        java.lang.String = java.lang.String.substring(0, int);\n    \n    com.graphhopper.util.Constants.boolean = java.lang.String.toLowerCase().contains(\"-snapshot\");\n    com.graphhopper.util.Constants.java.lang.String = java.lang.String;\n}"},"status":-2},{"failures":[],"tindex":"8be6c125-7923-11e5-a8d2-d59b5a624c54","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.RAMDataAccess:323","type":"CtIfImpl","sourcecode":"if (long > com.graphhopper.storage.RAMDataAccess.(getCapacity())) {\n    throw new java.lang.IllegalStateException(((((\"Cannot increase capacity (\" + com.graphhopper.storage.RAMDataAccess.(getCapacity())) + \") to \") + long) + \" via trimTo. Use ensureCapacity instead. \"));\n} "},"variableMap":{"this":"nodes","capacity":"j"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.BaseGraph:724","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.DataAccess.setInt((long + long), com.graphhopper.storage.DataAccess.getInt((long + long)))"},"status":-2},{"failures":[],"tindex":"8be6c126-7923-11e5-a8d2-7901297355f0","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:188","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(5);\n} catch (java.lang.InterruptedException iex) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:308","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null)\n    int = java.lang.Integer;\n"},"status":-2}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"}}