{"failureDictionary":{"com.graphhopper.reader.OSMReaderTest.testWayReferencesNotExistingAdjNode":28,"com.graphhopper.routing.QueryGraphTest.testMultipleVirtualNodes":62,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValueAndSwap":44,"com.graphhopper.reader.OSMReaderTest.testMain":20,"com.graphhopper.reader.OSMReaderTest.testFerry":18,"com.graphhopper.storage.GraphHopperStorageTest.testSave_and_fileFormat":42,"com.graphhopper.reader.OSMReaderTest.testEstimatedCenter":31,"com.graphhopper.storage.GraphStorageViaMMapTest.testNameIndex":39,"com.graphhopper.util.BitUtilLittleTest.testFromBitString":33,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testService":73,"com.graphhopper.GraphHopperTest.testDoNotAllowWritingAndLoadingAtTheSameTime":7,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutDirectExit":56,"com.graphhopper.storage.GraphStorageViaMMapTest.testCopyProperties":40,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testTram":74,"com.graphhopper.util.BitUtilBigTest.testFromBitString":69,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidanceOfHighMaxSpeed":72,"com.graphhopper.reader.OSMReaderTest.testWithBounds":29,"com.graphhopper.storage.RAMDataAccessTest.testLoadFlush":47,"com.graphhopper.reader.OSMReaderTest.testTurnRestrictions":25,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode2":55,"com.graphhopper.coll.GHLongIntBTreeTest.testTwoSplits":2,"com.graphhopper.reader.OSMReaderTest.testMaxSpeed":30,"com.graphhopper.routing.util.EncodingManagerTest.testMixBikeTypesAndRelationCombination":64,"com.graphhopper.routing.util.EncodedDoubleValueTest.testMaxValue":45,"com.graphhopper.routing.util.Bike2WeightFlagEncoderTest.testHandleWayTags":66,"com.graphhopper.storage.GraphStorageViaMMapTest.testEnabledElevation":36,"com.graphhopper.storage.GraphStorageViaMMapTest.testDetachEdge":35,"com.graphhopper.GraphHopperTest.testCustomFactoryForNoneCH":5,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleWayTagsCallsHandlePriority":77,"com.graphhopper.storage.SynchedDAWrapperTest.testLoadFlush":46,"com.graphhopper.GraphHopperTest.testPrepare":9,"com.graphhopper.storage.GraphStorageViaMMapTest.testPillarNodes":38,"com.graphhopper.GraphHopperTest.testFootAndCar":11,"com.graphhopper.util.InstructionListTest.testWayList2":51,"com.graphhopper.storage.GraphHopperStorageCHTest.testSave_and_fileFormat":41,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout":60,"com.graphhopper.util.BitUtilBigTest.testToBitString":68,"com.graphhopper.storage.MMapDataAccessTest.testSet_GetBytes":34,"com.graphhopper.coll.GHLongIntBTreeTest.testUpdate":4,"com.graphhopper.reader.OSMReaderTest.testFoot":19,"com.graphhopper.routing.QueryGraphTest.testOneVirtualNode":63,"com.graphhopper.util.InstructionListTest.testWayList":50,"com.graphhopper.reader.OSMReaderTest.testOneWay":32,"com.graphhopper.util.InstructionListTest.testNoInstructionIfSameStreet":49,"com.graphhopper.routing.util.BikeFlagEncoderTest.testHandleWayTags":67,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testHandleCommonWayTags":76,"com.graphhopper.coll.GHLongIntBTreeTest.testPut":1,"com.graphhopper.GraphHopperTest.testAllowMultipleReadingInstances":14,"com.graphhopper.GraphHopperTest.testPrepareOnly":6,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidMotorway":75,"com.graphhopper.GraphHopperTest.testVia":8,"com.graphhopper.GraphHopperTest.testLoadOSMNoCH":15,"com.graphhopper.reader.OSMReaderTest.testBarriersOnTowerNodes":27,"com.graphhopper.reader.OSMReaderTest.testReadEleFromCustomOSM":23,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutBegin":61,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutClockwise":59,"com.graphhopper.reader.OSMReaderTest.testReadEleFromDataProvider":24,"com.graphhopper.routing.ch.PrepareContractionHierarchiesTest.testShortestPathSkipNode":54,"com.graphhopper.GraphHopperAPITest.testLoad":65,"com.graphhopper.GraphHopperTest.testLoadingWithDifferentCHConfig_issue471":12,"com.graphhopper.coll.GHLongIntBTreeTest.testSplitAndOverwrite":0,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundaboutIssue353":57,"com.graphhopper.GraphHopperTest.testFootOnly":16,"com.graphhopper.util.InstructionListTest.testInstructionsWithTimeAndPlace":52,"com.graphhopper.coll.GHLongIntBTreeTest.testRandom":3,"com.graphhopper.GraphHopperTest.testSortedGraph_noCH":10,"com.graphhopper.reader.OSMReaderTest.testNegativeIds":26,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testAvoidTunnel":70,"com.graphhopper.routing.PathTest.testCalcInstructionsRoundabout2":58,"com.graphhopper.reader.OSMReaderTest.testBarriers":22,"com.graphhopper.util.InstructionListTest.testFind":48,"com.graphhopper.GraphHopperTest.testLoadOSM":13,"com.graphhopper.GraphHopperTest.testFailsForWrongConfig":17,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testclassBicycle":71,"com.graphhopper.reader.OSMReaderTest.testSort":21,"com.graphhopper.storage.GraphStorageViaMMapTest.testSimpleDelete2":37,"com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest.testSave_and_fileFormat":43,"com.graphhopper.GraphHopperTest.testGetPathsDirectionEnforcement2":53,"com.graphhopper.routing.util.RacingBikeFlagEncoderTest.testPreferenceForSlowSpeed":78},"transformations":[{"failures":[],"tindex":"64d4b4d4-8289-11e5-a00a-47ea25c401ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.ch.PrepareEncoder:45","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.ch.PrepareEncoder.long"},"variableMap":{"com.graphhopper.routing.ch.PrepareEncoder.scBwdDir":"acceptBit"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.FootFlagEncoder:237","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"64d4dbe5-8289-11e5-a00a-afc3705049ff","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:121","type":"CtIfImpl","sourcecode":"if ((long % long) != 0)\n    int++;\n"},"variableMap":{"byteCount":"key","longSegmentSize":"key","segmentsToMap":"high"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.GHLongIntBTree:475","type":"CtWhileImpl","sourcecode":"while ((int - int) > 1) {\n    int = (int + int) >>> 1;\n    long long = long[][int];\n    if (long < long) {\n        int = int;\n    } else {\n        int = int;\n    }\n}"},"status":-1},{"failures":[33],"tindex":"64d4dbe6-8289-11e5-a00a-353eafc687de","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.PointList:110","type":"CtAssignmentImpl","sourcecode":"int = 15"},"variableMap":{"cap":"bLen"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilLittle:92","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43],"tindex":"64d502f7-8289-11e5-a00a-79363cf2e0d4","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.MMapDataAccess:369","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(0)"},"variableMap":{"bb":"bb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.MMapDataAccess:339","type":"CtInvocationImpl","sourcecode":"java.nio.ByteBuffer.position(int)"},"status":-1},{"failures":[],"tindex":"64d502f8-8289-11e5-a00a-d91291bd82a6","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.DijkstraOneToMany:114","type":"CtReturnImpl","sourcecode":"return com.graphhopper.routing.DijkstraOneToMany.int"},"variableMap":{"com.graphhopper.routing.DijkstraOneToMany.NOT_FOUND":"length"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.SimpleIntDeque:57","type":"CtReturnImpl","sourcecode":"return int[].int"},"status":-2},{"failures":[],"tindex":"64d502f9-8289-11e5-a00a-45cc671c1505","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.NativeFSLockFactory:67","type":"CtInvocationImpl","sourcecode":"com.graphhopper.storage.NativeFSLockFactory.create(java.lang.String, boolean)"},"status":0},{"failures":[44,45],"tindex":"64d502fa-8289-11e5-a00a-114efeb90edc","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.BitUtil:255","type":"CtOperatorAssignmentImpl","sourcecode":"long |= long & 1"},"variableMap":{"res":"flags","value":"mask"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.EncodedDoubleValue:67","type":"CtOperatorAssignmentImpl","sourcecode":"long &= ~(long)"},"status":-1},{"failures":[],"tindex":"64d502fb-8289-11e5-a00a-6f4d324c64d3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.DouglasPeucker:70","type":"CtLocalVariableImpl","sourcecode":"int int = 500"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.coll.IntDoubleBinHeap:108","type":"CtLocalVariableImpl","sourcecode":"int int = int[][1]"},"status":-2},{"failures":[46,47],"tindex":"64d502fc-8289-11e5-a00a-a78652290bb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.RAMDataAccess:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"already closed\")"},"status":-1},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"64d502fd-8289-11e5-a00a-47ca3bb82ba1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.storage.EdgeEntry:53","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = com.graphhopper.storage.EdgeEntry.com.graphhopper.storage.EdgeEntry"},"variableMap":{"parent":"nEdge","cl":"nEdge"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.Dijkstra:97","type":"CtAssignmentImpl","sourcecode":"com.graphhopper.storage.EdgeEntry = new com.graphhopper.storage.EdgeEntry(com.graphhopper.util.EdgeIterator.getEdge() , com.graphhopper.util.EdgeIterator.getAdjNode() , double)"},"status":-1},{"failures":[],"tindex":"64d52a0e-8289-11e5-a00a-9f1879dfdfc7","series":0,"name":"add","transplant":{"position":"com.graphhopper.util.DistanceCalcEarth:248","type":"CtReturnImpl","sourcecode":"return \"EXACT\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.storage.GraphHopperStorage:364","type":"CtReturnImpl","sourcecode":"return ((((((((((com.graphhopper.storage.GraphHopperStorage.isCHPossible() ? \"CH|\" : \"\") + (com.graphhopper.routing.util.EncodingManager)) + \"|\") + (com.graphhopper.storage.GraphHopperStorage.getDirectory().getDefaultType())) + \"|\") + (com.graphhopper.storage.BaseGraph.com.graphhopper.storage.NodeAccess.getDimension())) + \"D\") + \"|\") + (com.graphhopper.storage.BaseGraph.com.graphhopper.storage.GraphExtension)) + \"|\") + (com.graphhopper.storage.GraphHopperStorage.getProperties().versionsToString())"},"status":-2},{"failures":[62,63],"tindex":"64d52a0f-8289-11e5-a00a-3f6f492bc6db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.QueryGraph:158","type":"CtIfImpl","sourcecode":"if ((com.graphhopper.storage.index.QueryResult.getSnappedPosition()) == (com.graphhopper.storage.index.QueryResult.Position.com.graphhopper.storage.index.QueryResult.Position))\n    com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 1));\nelse\n    com.graphhopper.storage.index.QueryResult.setWayIndex((((com.graphhopper.util.PointList.getSize()) - (com.graphhopper.storage.index.QueryResult.getWayIndex())) - 2));\n"},"status":-1},{"failures":[64],"tindex":"64d52a10-8289-11e5-a00a-4f5390eba4cb","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:183","type":"CtAssignmentImpl","sourcecode":"long = 3L << int"},"variableMap":{"directionBitMask":"relBitMask","shift":"usedBits"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.AbstractFlagEncoder:574","type":"CtAssignmentImpl","sourcecode":"long = (1L << int) - 1"},"status":-1},{"failures":[16,20,22,23,24,26,27],"tindex":"64d52a11-8289-11e5-a00a-39d2723ebebc","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.Helper7:40","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Class.forName(\"sun.misc.Cleaner\");\n    java.lang.Class.forName(\"java.nio.DirectByteBuffer\").getMethod(\"cleaner\");\n    boolean = true;\n} catch (java.lang.Exception e) {\n    boolean = false;\n}"},"variableMap":{"v":"convertToTowerNode"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.reader.OSMReader:715","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int = int;\n} "},"status":-1},{"failures":[65,8,9,10,11,12,13,15,16],"tindex":"64d55122-8289-11e5-a00a-150e83319a27","series":0,"name":"replace","transplant":{"position":"com.graphhopper.util.PathMerger:116","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.addError(new java.lang.RuntimeException(\"Connection between locations not found\"))"},"variableMap":{"rsp":"rsp"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.GraphHopper:1073","type":"CtInvocationImpl","sourcecode":"com.graphhopper.GHResponse.setDebugInfo(java.lang.String)"},"status":-1},{"failures":[66,67],"tindex":"64d55123-8289-11e5-a00a-0129e90d1cc1","series":0,"name":"replace","transplant":{"position":"com.graphhopper.routing.util.BikeCommonFlagEncoder:651","type":"CtReturnImpl","sourcecode":"return (com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))"},"variableMap":{"pushingSections":"pushingSections","way":"way"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.BikeFlagEncoder:87","type":"CtReturnImpl","sourcecode":"return ((com.graphhopper.reader.OSMWay.hasTag(\"highway\", java.util.HashSet<java.lang.String>)) || (com.graphhopper.reader.OSMWay.hasTag(\"railway\", \"platform\"))) || (((\"track\".equals(java.lang.String)) && (java.lang.String != null)) && (!(\"grade1\".equals(java.lang.String))))"},"status":-1},{"failures":[],"tindex":"64d55124-8289-11e5-a00a-8daa68f02af3","series":0,"name":"replace","transplant":{"position":"com.graphhopper.coll.GHSortedCollection:164","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"shortcuts"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.ch.PrepareContractionHierarchies:567","type":"CtLocalVariableImpl","sourcecode":"int int = (com.graphhopper.routing.ch.PrepareContractionHierarchies.CalcShortcutHandler.int) - int"},"status":-2},{"failures":[68,69],"tindex":"64d55125-8289-11e5-a00a-ebc7fbb4c803","series":0,"name":"replace","transplant":{"position":"com.graphhopper.reader.OSMNode:114","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Node: \")"},"variableMap":{"txt":"sb"},"type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.BitUtilBig:122","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[70,71,72,73,74,75,76,77,78],"tindex":"64d55126-8289-11e5-a00a-a5f0b1f7d404","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.routing.util.RacingBikeFlagEncoder:147","type":"CtInvocationImpl","sourcecode":"super.collect(com.graphhopper.reader.OSMWay, java.util.TreeMap<java.lang.Double, java.lang.Integer>)"},"status":-1},{"failures":[],"tindex":"64d55127-8289-11e5-a00a-55e0da4d2e48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.graphhopper.util.PathMerger:54","type":"CtInvocationImpl","sourcecode":"com.graphhopper.routing.Path.getWeight()"},"status":0}],"header":{"groupId":"com.graphhopper","transformationCount":20,"projectType":"maven","artifactId":"graphhopper-parent","generatorVersion":"1.0","version":"0.5.0"},"diffs":[{"transformation":"64d55127-8289-11e5-a00a-55e0da4d2e48","diffs":[{"methodsDiff":{"delete":["com.graphhopper.routing.Path.getWeight"]},"type":"staticDiff"}]},{"transformation":"64d502f9-8289-11e5-a00a-45cc671c1505","diffs":[{"methodsDiff":{"delete":["com.graphhopper.storage.NativeFSLockFactory.create"]},"type":"staticDiff"}]}]}