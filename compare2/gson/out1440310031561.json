{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"b14eb592-42b4-11e5-b113-a3a9c873ff94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:290","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.Type = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type)).getUpperBounds()[0];\n} "},"status":0},{"failures":[],"tindex":"b5bce165-4305-11e5-8f7a-2b5de2bc387e","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:291","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n} else {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, null);\n}"},"variableMap":{"node":"node","this":"this","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:354","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"32f626b7-446b-11e5-9456-d3f994748ed4","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:287","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n} "},"variableMap":{"parent":"nearest","replacement":"nearest"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:175","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedTreeMap.Node<K, V>, true)"},"status":1},{"failures":[],"tindex":"394a2b1c-42af-11e5-9794-8dc0426b5178","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:523","type":"CtInvocationImpl","sourcecode":"java.io.Writer.close()"},"status":0},{"failures":[],"tindex":"02565ce2-42bb-11e5-b5d9-c330d69659f1","series":0,"name":"add","transplant":{"position":"com.google.gson.GsonBuilder:403","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"dateStyle":"result","style":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1176","type":"CtAssignmentImpl","sourcecode":"int = ((int)(long))"},"status":1},{"failures":[],"tindex":"8d22a645-42b5-11e5-88c5-214ab5c04fbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:172","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":0},{"failures":[],"tindex":"67a46d34-42de-11e5-8cda-a553ea14e828","series":0,"name":"add","transplant":{"position":"com.google.gson.Gson:804","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.setLenient(true)"},"variableMap":{"reader":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:948","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.doPeek();\n} "},"status":0},{"failures":[],"tindex":"440e342a-430f-11e5-ad54-c71b5bf654e1","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:782","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturned":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:353","type":"CtIfImpl","sourcecode":"if ((int == (-1)) || ((int == 0) && (!boolean))) {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n} else {\n    assert int == 1;\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n}"},"status":0},{"failures":[],"tindex":"41d49164-42bd-11e5-bd90-951a5fdaead8","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:583","type":"CtIfImpl","sourcecode":"if (int != (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"Nesting problem.\");\n} "},"variableMap":{"com.google.gson.stream.JsonScope.EMPTY_OBJECT":"p","context":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:818","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.doPeek();\n} "},"status":0},{"failures":[],"tindex":"01fec3fa-42dc-11e5-900b-211a17b35d3f","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:693","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"leavesToSkip":"rightHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:390","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1"},"status":1},{"failures":[],"tindex":"28ac4296-4315-11e5-b540-7b12ec83da75","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:194","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.skipValue()"},"variableMap":{"in":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:919","type":"CtIfImpl","sourcecode":"if (int != (com.google.gson.stream.JsonReader.int)) {\n    throw new java.lang.IllegalStateException((((((((\"Expected a double but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n} "},"status":0},{"failures":[],"tindex":"67b07847-4349-11e5-8873-29698da8591d","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:548","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedTreeMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturned":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:326","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"d631f0c6-42e1-11e5-9956-4b39d2157aa6","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:623","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"null\""},"variableMap":{"keyword":"peekedString"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:930","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":1},{"failures":[],"tindex":"83153dea-42fb-11e5-bc91-3f1a55073f07","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtIfImpl","sourcecode":"if (!com.google.gson.stream.JsonReader.(fillBuffer(1))) {\n    break;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:529","type":"CtIfImpl","sourcecode":"if ((((int) < (int)) || com.google.gson.stream.JsonReader.(fillBuffer(1))) && ((char[][int]) == '>')) {\n    (int)++;\n} "},"status":0},{"failures":[],"tindex":"d15a8662-4355-11e5-948f-3fffe77dbbeb","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:163","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super K> == (com.google.gson.internal.LinkedTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(K instanceof java.lang.Comparable))) {\n    throw new java.lang.ClassCastException(((K.getClass().getName()) + \" is not Comparable\"));\n} "},"status":1},{"failures":[],"tindex":"47fb32db-42ef-11e5-8066-715f5e17dff9","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1453","type":"CtAssignmentImpl","sourcecode":"int = (int) + 1"},"variableMap":{"pos":"lineNumber","lineStart":"lineNumber"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1556","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"3b74ee63-430e-11e5-b704-c799b4bbdf13","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:583","type":"CtIfImpl","sourcecode":"if (int != (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"Nesting problem.\");\n} "},"variableMap":{"com.google.gson.stream.JsonScope.EMPTY_OBJECT":"last","context":"last"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:709","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} "},"status":0},{"failures":[],"tindex":"60070213-42af-11e5-869c-d5ded5fa20f3","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:235","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"variableMap":{"h":"l"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1383","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":1},{"failures":[],"tindex":"d3669403-42e4-11e5-9dc0-57952eced300","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:687","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} "},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN":"p","last":"pos","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1258","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int += int;\n} "},"status":0},{"failures":[],"tindex":"28342791-42ad-11e5-9a85-a198734963d7","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:514","type":"CtInvocationImpl","sourcecode":"java.io.Writer.flush()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:523","type":"CtInvocationImpl","sourcecode":"java.io.Writer.close()"},"status":1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"b14eb592-42b4-11e5-b113-a3a9c873ff94","diffs":[{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).e1","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).t2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).l2","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).l3","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).l2","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_open(int,java.lang.String).e1","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).e1"],"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":["com.google.gson.internal.bind.ObjectTypeAdapter$1_<T>_com.google.gson.TypeAdapter_create(com.google.gson.Gson,com.google.gson.reflect.TypeToken).t1","com.google.gson.internal.bind.ObjectTypeAdapter_com.google.gson.internal.bind.ObjectTypeAdapter(com.google.gson.Gson).b"]},"type":"branch"},{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testClassWithBaseCollectionFieldSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.ObjectTypeAdapterTest.testSerialize":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JavaSerializationTest.testNumberIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testPrintPrintingObjectWithNulls":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"},{"nodes":{"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":["com.google.gson.internal.bind.ObjectTypeAdapter.com.google.gson.internal.bind.ObjectTypeAdapter(com.google.gson.Gson)"]},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.Gson$FutureTypeAdapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.Gson$FutureTypeAdapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.Gson$FutureTypeAdapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)"],"com.google.gson.functional.MapTest.testMapSerializationWithWildcardValues":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.bind.ObjectTypeAdapter$1.<T> com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken) -> com.google.gson.internal.bind.ObjectTypeAdapter.com.google.gson.internal.bind.ObjectTypeAdapter(com.google.gson.Gson)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()"]},"type":"graph"}]},{"transformation":"b5bce165-4305-11e5-8f7a-2b5de2bc387e","diffs":[{"nodes":{},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"type":"graph"}]},{"transformation":"32f626b7-446b-11e5-9456-d3f994748ed4","diffs":[{"variables":{"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"28342791-42ad-11e5-9a85-a198734963d7","diffs":[{"variables":{"com.google.gson.MixedStreamTest.testWriteClosed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"02565ce2-42bb-11e5-b5d9-c330d69659f1","diffs":[{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithConfiguredGsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testEscapingObjectFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDeserializingDecimalPointValueZeroSucceeds":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"67a46d34-42de-11e5-8cda-a553ea14e828","diffs":[{"nodes":{},"edges":{"com.google.gson.functional.ReadersWritersTest.testReaderForDeserialization":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.EscapingTest.testEscapingObjectFields":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.stream.JsonReaderTest.testPeekLongMaxValue":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.PrimitiveTest.testDeserializeJsonArrayAsLongWrapper":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":["com.google.gson.stream.JsonReader.long nextLong() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"]},"type":"graph"}]},{"transformation":"440e342a-430f-11e5-ad54-c71b5bf654e1","diffs":[{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap_void_rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean).t2","com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).t1"]},"type":"branch"}]},{"transformation":"d631f0c6-42e1-11e5-9956-4b39d2157aa6","diffs":[{"variables":{"com.google.gson.functional.MapTest.testNumberKeyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"d15a8662-4355-11e5-948f-3fffe77dbbeb","diffs":[{"nodes":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.internal.bind.JsonElementReaderTest.testObject":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.LinkedTreeMap.void clear()"]},"edges":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.internal.bind.JsonElementReaderTest.testObject":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void clear()"]},"type":"graph"},{"branches":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.internal.bind.JsonElementReaderTest.testObject":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.internal.LinkedTreeMap_V_put(K,V).t6","com.google.gson.internal.LinkedTreeMap_V_put(K,V).e7","com.google.gson.internal.LinkedTreeMap_V_put(K,V).t5","com.google.gson.JsonObject_void_addProperty(java.lang.String,java.lang.String).e1","com.google.gson.internal.LinkedTreeMap_V_put(K,V).e4","com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap_void_clear().b"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.LinkedTreeMap_void_clear().b"]},"type":"branch"},{"variables":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.internal.bind.JsonElementReaderTest.testObject":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]}]}