{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"3b42a180-4313-11e5-b016-a77c8c1a483f","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:543","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"next":"pivot","e":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:388","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"a469d4bc-4397-11e5-9c84-6b790a9a7b87","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:692","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"size":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1123","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":1},{"failures":[],"tindex":"ec6d4984-4309-11e5-af44-27f98f5691c2","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:386","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.WildcardType"},"variableMap":{"original":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    return java.lang.Class<?>.isArray() ? new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.canonicalize(java.lang.Class<?>.getComponentType())) : java.lang.Class<?>;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(java.lang.reflect.ParameterizedType.getOwnerType() , java.lang.reflect.ParameterizedType.getRawType() , java.lang.reflect.ParameterizedType.getActualTypeArguments());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(java.lang.reflect.GenericArrayType.getGenericComponentType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(java.lang.reflect.WildcardType.getUpperBounds() , java.lang.reflect.WildcardType.getLowerBounds());\n} else {\n    return java.lang.reflect.Type;\n}"},"status":1},{"failures":[],"tindex":"0efd51d9-42be-11e5-9090-0173fae3965c","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:562","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"year":"leftHeight","value":"rightHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:258","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1"},"status":1},{"failures":[],"tindex":"7d2dc616-4304-11e5-8526-b9bfea031dfe","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:506","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"node":"root","child":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:101","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = null"},"status":1},{"failures":[],"tindex":"62e68342-42c6-11e5-b156-4b0b9c29c364","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:782","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturned":"right"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:357","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"181d1eff-430f-11e5-89ea-67de754efbb5","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:724","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"stack":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:254","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"0c353b0c-42ef-11e5-8e18-37bc313c2798","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:329","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"variableMap":{"this":"this","right":"adjacent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:259","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"ef34b983-42b2-11e5-b434-df69d1363a24","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:550","type":"CtAssignmentImpl","sourcecode":"this.java.lang.reflect.Type = null"},"variableMap":{"lowerBound":"arg"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:214","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>.getName(), java.lang.reflect.Type)"},"status":1},{"failures":[],"tindex":"ec39bb65-42ad-11e5-bef1-aba7a99c0ad4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:696","type":"CtContinueImpl","sourcecode":"continue"},"status":0},{"failures":[],"tindex":"d312b38f-42da-11e5-b0db-6df112aae822","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1295","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"limit":"l"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1383","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":1},{"failures":[],"tindex":"161330b1-42dd-11e5-899a-a71651a73647","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:574","type":"CtIfImpl","sourcecode":"if ((int) == 1) {\n    com.google.gson.stream.JsonReader.checkLenient();\n} "},"variableMap":{"stackSize":"com.google.gson.stream.JsonReader.PEEKED_END_ARRAY","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1240","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n    int++;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n    int++;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    (int)--;\n    int--;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    (int)--;\n    int--;\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipUnquotedValue();\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipQuotedValue('\\'');\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipQuotedValue('\\\"');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    int += int;\n} "},"status":0},{"failures":[],"tindex":"91bbb687-42da-11e5-bee4-03f8104f1976","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:291","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> != null) {\n    if ((com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == com.google.gson.internal.LinkedTreeMap.Node<K, V>) {\n        com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    } else {\n        assert (com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n        com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    }\n} else {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n}"},"variableMap":{"parent":"left","node":"left","left":"left","root":"left","right":"left","replacement":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:347","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"a6f1049b-42c2-11e5-a0b4-115085df78e7","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:230","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()"},"variableMap":{"clazz":"contextRawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:351","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type)"},"status":1},{"failures":[],"tindex":"dbadef6d-42ae-11e5-bb1f-496192619fd6","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:392","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"JsonWriter is closed.\");\n} "},"variableMap":{"stackSize":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:586","type":"CtForImpl","sourcecode":"for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> ; (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.AvlIterator<K, V>.next()) != null ; ) {\n    if (((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int) & int) == 0) {\n        int++;\n    } else {\n        int++;\n    }\n}"},"status":0},{"failures":[],"tindex":"4f5616ff-42af-11e5-b1e4-974c86b91bb9","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:679","type":"CtLocalVariableImpl","sourcecode":"int int = ((java.lang.Integer.highestOneBit(int)) * 2) - 1"},"variableMap":{"targetSize":"rightLeftHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:352","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"status":1},{"failures":[],"tindex":"b41612bd-42b4-11e5-9669-e7fd899358dc","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:858","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NONE":"p","peeked":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1024","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"f2d3b4c5-42c1-11e5-8c16-0983634ef94e","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:145","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[] = new java.lang.String[128]"},"variableMap":{"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS":"newPathNames"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1278","type":"CtAssignmentImpl","sourcecode":"java.lang.String[] = java.lang.String[]"},"status":0},{"failures":[],"tindex":"eb5f0d8d-446c-11e5-9f7b-538c3a392cbe","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1110","type":"CtIfImpl","sourcecode":"if (int == char) {\n    int = int;\n    return ;\n} else if (int == '\\\\') {\n    int = int;\n    com.google.gson.stream.JsonReader.readEscapeCharacter();\n    int = int;\n    int = int;\n} else if (int == '\\n') {\n    (int)++;\n    int = int;\n} "},"variableMap":{"p":"lineNumber","c":"lineStart","quote":"quote","pos":"lineStart","lineStart":"limit","limit":"limit","this":"this","l":"limit","lineNumber":"lineNumber"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1104","type":"CtDoImpl","sourcecode":"do {\n    int int = int;\n    int int = int;\n    while (int < int) {\n        int int = char[][int++];\n        if (int == char) {\n            int = int;\n            return ;\n        } else if (int == '\\\\') {\n            int = int;\n            com.google.gson.stream.JsonReader.readEscapeCharacter();\n            int = int;\n            int = int;\n        } else if (int == '\\n') {\n            (int)++;\n            int = int;\n        } \n    }\n    int = int;\n} while (com.google.gson.stream.JsonReader.fillBuffer(1) )"},"status":0},{"failures":[],"tindex":"3b6d0abb-42d4-11e5-9c45-91ce0c843044","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:314","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n} "},"variableMap":{"parent":"left","replacement":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:375","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"0efd51d9-42be-11e5-9090-0173fae3965c","diffs":[{"variables":{"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"ec6d4984-4309-11e5-af44-27f98f5691c2","diffs":[{"branches":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":["com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e2","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).t2","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).e1","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).t2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).e1","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1_void_write(com.google.gson.stream.JsonWriter,java.lang.Object).e1","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).l3","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).l3","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).l2","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).l2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).e1","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).t2","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).l3","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":["com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e6","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b"],"com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).e1","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e4","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equal(java.lang.Object,java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e6","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).e1","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e4","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equal(java.lang.Object,java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e6","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_java.lang.reflect.Type[]_getUpperBounds().b","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]).e1","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_java.lang.reflect.Type[]_getLowerBounds().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_int_hashCode().b"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_java.lang.reflect.Type_getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object).e1","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2","com.google.gson.reflect.TypeToken_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":["com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2","com.google.gson.reflect.TypeToken_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).b","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).e1","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e4","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equal(java.lang.Object,java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"]},"type":"branch"},{"nodes":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":["com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":["com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.boolean equals(java.lang.Object)"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()"],"com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"]},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"]},"type":"graph"},{"variables":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()_type","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()_rawType","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()_ownerType","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()_rawType","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()_ownerType","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_type","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_delegate","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_typeTokenCache","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()_type","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.ObjectTypeAdapterTest.testSerialize":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()_type","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()_type","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"3b42a180-4313-11e5-b016-a77c8c1a483f","diffs":[{"variables":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testBadFieldTypeForCustomDeserializerCustomTree":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"a469d4bc-4397-11e5-9c84-6b790a9a7b87","diffs":[{"variables":{"com.google.gson.stream.JsonReaderTest.testSkipVeryLongQuotedString":["com.google.gson.stream.JsonReader.void skipValue()_pos"]},"type":"variable"}]},{"transformation":"3b6d0abb-42d4-11e5-9c45-91ce0c843044","diffs":[{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).t3","com.google.gson.internal.LinkedHashTreeMap_void_rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node).t1","com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).t1"]},"type":"branch"}]},{"transformation":"0c353b0c-42ef-11e5-8e18-37bc313c2798","diffs":[{"nodes":{},"edges":{"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedTreeMap.void removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"]},"type":"graph"}]},{"transformation":"a6f1049b-42c2-11e5-a0b4-115085df78e7","diffs":[{"variables":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()_ownerType","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()_ownerType"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()_ownerType","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()_ownerType","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testStringKeyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()_ownerType","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()_ownerType","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"},{"nodes":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])"],"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])"]},"edges":{"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])"],"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()"]},"type":"graph"},{"branches":{"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e7","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).t7","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_canonicalize(java.lang.reflect.Type).t2"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).t2","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).e1","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).t2","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).e1","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).t1","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).t2","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).l2","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).t2","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).l3","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).l2","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).l2","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).l3","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).e1","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().e2","com.google.gson.internal.$Gson$Types_java.lang.reflect.ParameterizedType_newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).l3","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().e1","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).l3"],"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":["com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e7","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e8","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).t7","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_canonicalize(java.lang.reflect.Type).t2","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e5"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":["com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e7","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e8","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).t7","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_canonicalize(java.lang.reflect.Type).t2","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e5"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e7","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).t7"],"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":["com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e8","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types_java.lang.reflect.ParameterizedType_newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_canonicalize(java.lang.reflect.Type).t2","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e5"]},"type":"branch"}]},{"transformation":"4f5616ff-42af-11e5-b1e4-974c86b91bb9","diffs":[{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).t1"]},"type":"branch"}]}]}