{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"4f00b905-42b1-11e5-af1b-250496631d18","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1382","type":"CtAssignmentImpl","sourcecode":"int = (int) + 2"},"variableMap":{"p":"modCount","pos":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:107","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":1},{"failures":[],"tindex":"de7787f7-42b4-11e5-b29d-593b04d4ffa9","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:259","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"variableMap":{"node":"nearest","this":"this","adjacent":"nearest"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:175","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedTreeMap.Node<K, V>, true)"},"status":0},{"failures":[],"tindex":"a8cc9e4b-42f9-11e5-86d8-a7b4b119667b","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1301","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"total":"peeked","limit":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:931","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":1},{"failures":[],"tindex":"99de2899-443f-11e5-ba48-99b37363b46d","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:514","type":"CtInvocationImpl","sourcecode":"java.io.Writer.flush()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:559","type":"CtInvocationImpl","sourcecode":"java.io.Writer.write(java.lang.String, int, (int - int))"},"status":1},{"failures":[],"tindex":"8e21e88e-4311-11e5-a73a-793bbdaf954d","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:858","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NONE":"pos","peeked":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:676","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"748beb25-42f7-11e5-b145-eb20eade6549","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1526","type":"CtOperatorAssignmentImpl","sourcecode":"char <<= 4"},"variableMap":{"result":"c"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1530","type":"CtOperatorAssignmentImpl","sourcecode":"char += (char - 'a') + 10"},"status":1},{"failures":[],"tindex":"d3666dea-42e4-11e5-9dc0-096b69e57e6e","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:219","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"next":"adjacent","node":"left","prev":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:244","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"f1c89e75-42ec-11e5-bcce-177b2dc81418","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:548","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedTreeMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturned":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:259","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"078ac3a6-432a-11e5-8e88-e3c0442ed190","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1301","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"total":"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN","limit":"last"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:695","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":0},{"failures":[],"tindex":"98bb3104-42b0-11e5-a4dd-dbec36f17b65","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1382","type":"CtAssignmentImpl","sourcecode":"int = (int) + 2"},"variableMap":{"p":"peekedNumberLength","pos":"peekedNumberLength"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1259","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":0},{"failures":[],"tindex":"6a064906-431c-11e5-8c0e-9f4afbea8d07","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:556","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"last":"lineStart","i":"lineStart"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1306","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"adf65759-42be-11e5-bc5b-0b891813f9ef","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:286","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"variableMap":{"node":"left","this":"this","adjacent":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:375","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"a37e8732-42ff-11e5-875a-f94791695476","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:219","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"next":"adjacent","node":"adjacent","prev":"adjacent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:244","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"7ba58b0f-42ad-11e5-a08b-23824135ea3a","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:219","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"next":"root","node":"root","prev":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:101","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = null"},"status":1},{"failures":[],"tindex":"453e85cb-43f2-11e5-9d6f-13c31aa4e416","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:191","type":"CtIfImpl","sourcecode":"if (((int)++) > (int)) {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.doubleCapacity();\n} "},"variableMap":{"size":"rightDelta","this":"this","threshold":"rightDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:353","type":"CtIfImpl","sourcecode":"if ((int == (-1)) || ((int == 0) && (!boolean))) {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n} else {\n    assert int == 1;\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n}"},"status":0},{"failures":[],"tindex":"077a3a98-42b6-11e5-b6bb-497e3c24d875","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1223","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"stackSize":"minimum"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1307","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"ddc16431-42c4-11e5-b244-ab07966919d3","series":0,"name":"add","transplant":{"position":"com.google.gson.Gson:662","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.setLenient(true)"},"variableMap":{"writer":"jsonWriter"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:634","type":"CtInvocationImpl","sourcecode":"com.google.gson.Gson.toJson(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter)"},"status":1},{"failures":[],"tindex":"1ea09eb4-4347-11e5-828a-ff0c5b7a3bc9","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:698","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"node":"pivot","stack":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:445","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"3a1dd74a-4310-11e5-9974-1b70c5b1ed8b","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:403","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"dateStyle":"stackSize","style":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:932","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":1},{"failures":[],"tindex":"60220de9-42bb-11e5-b8d5-21d9191d617b","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:746","type":"CtIfImpl","sourcecode":"if (((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) || (int == (com.google.gson.stream.JsonReader.int))) {\n    int = int;\n    return int = com.google.gson.stream.JsonReader.int;\n} else {\n    return com.google.gson.stream.JsonReader.int;\n}"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NUMBER":"c","com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT":"c","com.google.gson.stream.JsonReader.PEEKED_NONE":"c","last":"c","peeked":"c","i":"c","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT":"c","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"c","peekedNumberLength":"c"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1368","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    return int;\n} "},"status":0}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"a8cc9e4b-42f9-11e5-86d8-a7b4b119667b","diffs":[{"variables":{"com.google.gson.functional.MapTest.testNumberKeyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"748beb25-42f7-11e5-b145-eb20eade6549","diffs":[{"variables":{"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"3a1dd74a-4310-11e5-9974-1b70c5b1ed8b","diffs":[{"variables":{"com.google.gson.functional.MapTest.testNumberKeyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"99de2899-443f-11e5-ba48-99b37363b46d","diffs":[{"variables":{"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_type","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_delegate","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.FieldNamingTest.testIdentity":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testSubClassSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.stream.JsonWriter_void_beforeValue(boolean).e1"]},"type":"branch"}]},{"transformation":"de7787f7-42b4-11e5-b29d-593b04d4ffa9","diffs":[{"nodes":{"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.bind.JsonElementReaderTest.testObject":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.stream.JsonReader.boolean isLiteral(char)"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"]},"edges":{"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.bind.JsonElementReaderTest.testObject":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.stream.JsonReader.boolean isLiteral(char)"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"]},"type":"graph"},{"variables":{"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)_root"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)_root"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)_root","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)_root"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)_root"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"},{"branches":{"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2"],"com.google.gson.internal.bind.JsonElementReaderTest.testObject":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).e1","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).b","com.google.gson.TreeTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).e2","com.google.gson.Gson_com.google.gson.JsonElement_toJsonTree(java.lang.Object).e1","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).e1","com.google.gson.Gson$2_com.google.gson.JsonElement_serialize(java.lang.Object).e2"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t3"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"]},"type":"branch"}]},{"transformation":"ddc16431-42c4-11e5-b244-ab07966919d3","diffs":[{"variables":{"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"},{"nodes":{},"edges":{"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":["com.google.gson.Gson.void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.Gson.void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.Gson.void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.JsonObjectTest.testPropertyWithQuotes":["com.google.gson.Gson.void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":["com.google.gson.Gson.void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectSerializationWithWriterAndSerializeNulls":["com.google.gson.Gson.void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.ObjectTest.testNullSerialization":["com.google.gson.Gson.void toJson(com.google.gson.JsonElement,java.lang.Appendable) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"]},"type":"graph"}]},{"transformation":"d3666dea-42e4-11e5-9dc0-096b69e57e6e","diffs":[{"variables":{"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"a37e8732-42ff-11e5-875a-f94791695476","diffs":[{"variables":{"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"1ea09eb4-4347-11e5-828a-ff0c5b7a3bc9","diffs":[{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).t1"]},"type":"branch"}]},{"transformation":"adf65759-42be-11e5-bc5b-0b891813f9ef","diffs":[{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap_void_rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node).t1","com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).t1"]},"type":"branch"},{"nodes":{},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"type":"graph"}]}]}