{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"e40e2998-42c2-11e5-b971-43311d788ee0","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1358","type":"CtIfImpl","sourcecode":"if (((int == ' ') || (int == '\\r')) || (int == '\\t')) {\n    continue;\n} "},"variableMap":{"c":"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:687","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} "},"status":0},{"failures":[],"tindex":"fa315f0c-42ed-11e5-adb8-47c6bd64b4ba","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1557","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"pos":"peeked","lineStart":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:385","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":1},{"failures":[],"tindex":"18a9af7b-4326-11e5-8d0d-91668fd81886","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"pos":"modifier","lineStart":"modifier"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:79","type":"CtOperatorAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder.int |= int"},"status":1},{"failures":[],"tindex":"d3669403-42e4-11e5-9dc0-57952eced300","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:687","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} "},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN":"p","last":"pos","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1258","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int += int;\n} "},"status":0},{"failures":[],"tindex":"1b2ba970-42b8-11e5-b312-c504df27a787","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:199","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n} "},"variableMap":{"from":"rawType","ptype":"rawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:129","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.$Gson$Preconditions.com.google.gson.internal.$Gson$Preconditions.checkArgument((java.lang.reflect.Type instanceof java.lang.Class))"},"status":0},{"failures":[],"tindex":"57dc49d9-42b0-11e5-b813-e53e943edfa5","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1307","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"minimum":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1367","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"d796b1a7-4414-11e5-909a-3344621a00a9","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:107","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"next":"adjacent","prev":"adjacent","header":"adjacent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:245","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"5e1988e5-4329-11e5-b044-7fe27878e2d3","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isInterface()) {\n    java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.Class<?>.getInterfaces();\n    for (int int = 0, int int = java.lang.Class<?>[].int ; int < int ; int++) {\n        if ((java.lang.Class<?>[][int]) == java.lang.Class<?>) {\n            return java.lang.Class<?>.getGenericInterfaces()[int];\n        } else if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>[][int])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericInterfaces()[int], java.lang.Class<?>[][int], java.lang.Class<?>);\n        } \n    }\n} "},"variableMap":{"rawType":"rawSupertype","toResolve":"rawSupertype","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>);\n} "},"status":0},{"failures":[],"tindex":"655f1e7f-42be-11e5-ab3a-b51f76a1ddde","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:322","type":"CtAssertImpl","sourcecode":"assert (com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"parent":"originalParent","node":"originalParent","right":"originalParent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:298","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, false)"},"status":1},{"failures":[],"tindex":"1b148153-42e9-11e5-973c-a518fe7bf273","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:744","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"leavesSkipped":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:273","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":1},{"failures":[],"tindex":"897b332f-42be-11e5-b621-93d272ec0db3","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:649","type":"CtReturnImpl","sourcecode":"return int = int"},"variableMap":{"peeking":"i","peeked":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:414","type":"CtReturnImpl","sourcecode":"return int"},"status":1},{"failures":[],"tindex":"6c7176c8-4353-11e5-b2f2-6569c1b73980","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:735","type":"CtIfImpl","sourcecode":"if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    int = com.google.gson.stream.JsonReader.int;\n} "},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN":"p","last":"c","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"c","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT":"lineStart"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1118","type":"CtIfImpl","sourcecode":"if (int == '\\n') {\n    (int)++;\n    int = int;\n} "},"status":1},{"failures":[],"tindex":"0ba8cb7b-430f-11e5-a8fd-1f28fbcea0a7","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:119","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"i":"rightHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:258","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1"},"status":1},{"failures":[],"tindex":"1365633c-42ba-11e5-b937-6777b153bed7","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonPrimitive:290","type":"CtReturnImpl","sourcecode":"return 31"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1369","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"f2545cb7-43fd-11e5-bd2f-7f8a236bdc84","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:402","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.reflect.Type, java.lang.Class<?>, java.lang.Class<?>)"},"variableMap":{"context":"ownerType","this":"this","contextRawType":"contextRawType","declaredByRaw":"contextRawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:351","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type)"},"status":1},{"failures":[],"tindex":"5cff294d-430d-11e5-82ee-712933760480","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:319","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n} else {\n    assert (com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n}"},"variableMap":{"parent":"root","node":"root","left":"root","right":"root","replacement":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:583","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.AvlIterator<K, V>.reset(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":1},{"failures":[],"tindex":"5c76524f-4462-11e5-b725-97ef48ecf639","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:246","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null"},"variableMap":{"node":"node","left":"right"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:250","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"bf4a572f-4346-11e5-8278-ff27603a4216","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:319","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n} else {\n    assert (com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n}"},"variableMap":{"parent":"node","node":"node","left":"node","right":"node","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:358","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":1},{"failures":[],"tindex":"43772d0c-4326-11e5-a1d0-4f0f66cec30b","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:194","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.skipValue()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.TimeTypeAdapter:52","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.nextNull()"},"status":0},{"failures":[],"tindex":"6a0621f2-431c-11e5-8c0e-e1e4e28f6735","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>);\n} "},"variableMap":{"rawType":"toResolve","toResolve":"rawType","this":"this","rawSupertype":"toResolve"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:247","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?> == java.lang.Class<?>) {\n    return java.lang.Class<?>.getGenericSuperclass();\n} else if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>);\n} "},"status":0}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"0ba8cb7b-430f-11e5-a8fd-1f28fbcea0a7","diffs":[{"variables":{"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"d796b1a7-4414-11e5-909a-3344621a00a9","diffs":[{"variables":{"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"6c7176c8-4353-11e5-b2f2-6569c1b73980","diffs":[{"variables":{"com.google.gson.functional.VersioningTest.testIgnoreLaterVersionClassDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"18a9af7b-4326-11e5-8d0d-91668fd81886","diffs":[{"variables":{"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"5c76524f-4462-11e5-b725-97ef48ecf639","diffs":[{"variables":{"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"6a0621f2-431c-11e5-8c0e-e1e4e28f6735","diffs":[{"nodes":{},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)"]},"type":"graph"},{"variables":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_type","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_delegate"]},"type":"variable"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).e1","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1_void_write(com.google.gson.stream.JsonWriter,java.lang.Object).t1","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).t2","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).l3","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).l2","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).l3","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).t2","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().e2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).e1","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).l2","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().e1","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).e1"]},"type":"branch"}]},{"transformation":"655f1e7f-42be-11e5-ab3a-b51f76a1ddde","diffs":[{"nodes":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)"]},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)"]},"type":"graph"},{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap_void_rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean).b"]},"type":"branch"}]},{"transformation":"897b332f-42be-11e5-b621-93d272ec0db3","diffs":[{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testDateSerializationInCollection":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.ObjectTypeAdapterTest.testSerialize":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JavaSerializationTest.testNumberIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testMapStandardSubclassDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testEnumSet":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementSerialization":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithCause":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ObjectTest.testTruncatedDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testArrayOfCollectionSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testCollectionOfStringsSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"fa315f0c-42ed-11e5-adb8-47c6bd64b4ba","diffs":[{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testStringKeyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ObjectTest.testPrivateNoArgConstructorDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"f2545cb7-43fd-11e5-bd2f-7f8a236bdc84","diffs":[{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().t1","com.google.gson.stream.JsonWriter_void_writeDeferredName().e2","com.google.gson.stream.JsonWriter_void_beforeName().t1","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginObject().e1"],"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":["com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e8","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e5"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":["com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e8","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e5"],"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":["com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e8","com.google.gson.internal.$Gson$Types_java.lang.reflect.Type_resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type).e5"]},"type":"branch"},{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_delegate","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedSerializers":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.FieldNamingTest.testIdentity":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testStringKeyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"},{"nodes":{},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)"],"com.google.gson.functional.MapTest.testStringKeyDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.ArrayTest.testArrayOfCollectionDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintListOfPrimitiveArrays":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class)"]},"type":"graph"}]},{"transformation":"1b2ba970-42b8-11e5-b312-c504df27a787","diffs":[{"nodes":{},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"]},"type":"graph"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.stream.JsonWriter_void_beforeValue(boolean).e1","com.google.gson.stream.JsonWriter_void_beforeValue(boolean).t1","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_open(int,java.lang.String).s5"]},"type":"branch"}]},{"transformation":"1b148153-42e9-11e5-973c-a518fe7bf273","diffs":[{"variables":{"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.void remove()_modCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.void remove()_expectedModCount"]},"type":"variable"}]},{"transformation":"5e1988e5-4329-11e5-b044-7fe27878e2d3","diffs":[{"variables":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_type","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_delegate"]},"type":"variable"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().t1","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).t2","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).t2","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).e1","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1_void_write(com.google.gson.stream.JsonWriter,java.lang.Object).l2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).l3","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).e1","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).l3","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).e1"]},"type":"branch"},{"nodes":{},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.GsonBuilder.com.google.gson.Gson create()"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)"]},"type":"graph"}]}]}