{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"493b738e-4322-11e5-b2eb-8dd2c7ef90ae","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:693","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"leavesToSkip":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:272","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"077a3a98-42b6-11e5-b6bb-497e3c24d875","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1223","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"stackSize":"minimum"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1307","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"d65ac262-42c9-11e5-9e6a-cb1958bffa3e","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:235","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"variableMap":{"h":"l"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:677","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"a991950f-4316-11e5-80b5-f1f8624fe966","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:322","type":"CtAssertImpl","sourcecode":"assert (com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"parent":"node","node":"node","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:358","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":1},{"failures":[],"tindex":"993ea74a-42b2-11e5-892a-737ae1237c3f","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:774","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"rightDelta","expectedModCount":"rightDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:325","type":"CtIfImpl","sourcecode":"if ((int == (-1)) || ((int == 0) && (!boolean))) {\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n} else {\n    assert int == 1;\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n}"},"status":0},{"failures":[],"tindex":"b8aa8f5d-4378-11e5-90b1-39b9f2c09810","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:246","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null"},"variableMap":{"node":"right","left":"right"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:250","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"45bc221a-42b1-11e5-a9ce-e5a79402d78c","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:119","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"i":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1434","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"c0c2f560-4343-11e5-bf38-692f1b826ae8","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1253","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.skipUnquotedValue()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1405","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.skipToEndOfLine()"},"status":0},{"failures":[],"tindex":"0fae5882-4310-11e5-9b39-85f924bfbbc3","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:259","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"variableMap":{"node":"nearest","this":"this","adjacent":"nearest"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:175","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedTreeMap.Node<K, V>, true)"},"status":0},{"failures":[],"tindex":"81eafbeb-42b6-11e5-8132-51de1dbf11aa","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:506","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"node":"right","child":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:250","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"1077768f-42b0-11e5-8071-75f2005ab740","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:272","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"stackSize":"lineStart"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1120","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"fcde8008-4321-11e5-ac4f-d796548e2fc8","series":0,"name":"add","transplant":{"position":"com.google.gson.GsonBuilder:403","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"dateStyle":"pos","style":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1345","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":1},{"failures":[],"tindex":"bfd56171-4313-11e5-819c-1f53717f5475","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:151","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['\\t'] = \"\\\\t\""},"variableMap":{"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS":"replacements"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:541","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String[][char]"},"status":1},{"failures":[],"tindex":"749ddb86-42be-11e5-a18b-f542196ba6df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:113","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null"},"status":0},{"failures":[],"tindex":"ff4d5920-42ae-11e5-a4c9-77eeea859a88","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:627","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:110","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"a1ef7f6c-42d6-11e5-b096-1f8235c69644","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:326","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"lenient":"isEmpty"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:807","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":1},{"failures":[],"tindex":"9a3055f4-42b9-11e5-bfbf-f3ba0c37b9f0","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LazilyParsedNumber:51","type":"CtReturnImpl","sourcecode":"return new java.math.BigDecimal(java.lang.String).longValue()"},"variableMap":{"value":"peekedString"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:961","type":"CtIfImpl","sourcecode":"if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue((int == (com.google.gson.stream.JsonReader.int) ? '\\'' : '\\\"'));\n    try {\n        long long = java.lang.Long.parseLong(java.lang.String);\n        int = com.google.gson.stream.JsonReader.int;\n        (int[][((int) - 1)])++;\n        return long;\n    } catch (java.lang.NumberFormatException ignored) {\n    }\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected a long but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":0},{"failures":[],"tindex":"d13061df-42b9-11e5-82e7-93a62cf391ac","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1301","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"total":"last","limit":"last"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:695","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":0},{"failures":[],"tindex":"e676de73-43a6-11e5-8e79-31938d12704a","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:691","type":"CtIfImpl","sourcecode":"if (((int) > 0) && (((int) & 1) == 0)) {\n    (int)++;\n    (int)--;\n    (int)++;\n} "},"variableMap":{"size":"stackSize","leavesSkipped":"stackSize","leavesToSkip":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:511","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"JsonWriter is closed.\");\n} "},"status":0},{"failures":[],"tindex":"ad2d3fbd-4326-11e5-a304-cd98a99a5703","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:199","type":"CtIfImpl","sourcecode":"if (!(java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable)) {\n    return false;\n} "},"variableMap":{"b":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:188","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type == null) {\n    return false;\n} "},"status":1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"bfd56171-4313-11e5-819c-1f53717f5475","diffs":[{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).t2","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).e1","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).t2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).t2","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).e1","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).t1","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).t2","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).e1","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).l2","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).s5","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).l3","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1_void_write(com.google.gson.stream.JsonWriter,java.lang.Object).l2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).l3","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).l2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).e1","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).l3","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().e2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).l3","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().e1","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).e1"]},"type":"branch"},{"variables":{"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubClassSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"ad2d3fbd-4326-11e5-a304-cd98a99a5703","diffs":[{"nodes":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken.boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)"]},"edges":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.reflect.TypeToken.boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)","com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)","com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)"]},"type":"graph"},{"branches":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken_boolean_matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map).b","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).t1","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).t2","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).e1","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).b","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).l3"]},"type":"branch"}]},{"transformation":"c0c2f560-4343-11e5-bf38-692f1b826ae8","diffs":[{"branches":{"com.google.gson.CommentsTest.testParseComments":["com.google.gson.stream.JsonReader_void_skipUnquotedValue().s16","com.google.gson.stream.JsonReader_void_skipUnquotedValue().s14","com.google.gson.stream.JsonReader_void_skipUnquotedValue().s15","com.google.gson.stream.JsonReader_void_skipUnquotedValue().s12","com.google.gson.stream.JsonReader_void_skipUnquotedValue().s13","com.google.gson.stream.JsonReader_void_skipUnquotedValue().l17","com.google.gson.stream.JsonReader_void_skipUnquotedValue().l18","com.google.gson.stream.JsonReader_void_skipUnquotedValue().b"]},"type":"branch"},{"nodes":{"com.google.gson.CommentsTest.testParseComments":["com.google.gson.stream.JsonReader.void skipUnquotedValue()"]},"edges":{"com.google.gson.CommentsTest.testParseComments":["com.google.gson.stream.JsonReader.int nextNonWhitespace(boolean) -> com.google.gson.stream.JsonReader.void skipUnquotedValue()"]},"type":"graph"}]},{"transformation":"0fae5882-4310-11e5-9b39-85f924bfbbc3","diffs":[{"branches":{"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t3","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e2"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2"],"com.google.gson.internal.bind.JsonElementReaderTest.testObject":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t5","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t6","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t8","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t2","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t3","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t3","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e2"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t5","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t6","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t5","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t6","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t3","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t8","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e2"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t5","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t6","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).b","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e9","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e7","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"]},"type":"branch"},{"variables":{"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)_root"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)_root"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)_root"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)_root"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)_root","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"},{"nodes":{"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)"],"com.google.gson.internal.bind.JsonElementReaderTest.testObject":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)"]},"edges":{"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.bind.JsonElementReaderTest.testObject":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean)","com.google.gson.internal.LinkedTreeMap.com.google.gson.internal.LinkedTreeMap$Node find(K,boolean) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"]},"type":"graph"}]},{"transformation":"81eafbeb-42b6-11e5-8132-51de1dbf11aa","diffs":[{"branches":{"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedTreeMap_void_removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedTreeMap_void_removeInternal(com.google.gson.internal.LinkedTreeMap$Node,boolean).t4"]},"type":"branch"},{"variables":{"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"fcde8008-4321-11e5-ac4f-d796548e2fc8","diffs":[{"variables":{"com.google.gson.MixedStreamTest.testReadMixedStreamed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EscapingTest.testEscapingObjectFields":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"a1ef7f6c-42d6-11e5-b096-1f8235c69644","diffs":[{"variables":{"com.google.gson.MixedStreamTest.testReadMixedStreamed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForStrings":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EnumTest.testEnumCaseMapping":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersEscapedDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testStringKeyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"b8aa8f5d-4378-11e5-90b1-39b9f2c09810","diffs":[{"variables":{"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]}]}