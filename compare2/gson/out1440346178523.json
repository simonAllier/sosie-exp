{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"61f0b5ed-42e4-11e5-8697-5b3b20803208","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:782","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturned":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:358","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"6a8a47a3-42e1-11e5-b483-8f924ebb5737","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:919","type":"CtIfImpl","sourcecode":"if (int != (com.google.gson.stream.JsonReader.int)) {\n    throw new java.lang.IllegalStateException((((((((\"Expected a double but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n} "},"variableMap":{"p":"com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME","com.google.gson.stream.JsonReader.PEEKED_BUFFERED":"com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:797","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\\"');\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected a name but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":0},{"failures":[],"tindex":"11f755a9-42af-11e5-97e5-5d12c96bdcb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:260","type":"CtInvocationImpl","sourcecode":"java.lang.Integer.parseInt(com.google.gson.JsonPrimitive.getAsString())"},"status":0},{"failures":[],"tindex":"c92ca16e-42e4-11e5-b18e-4770686f6270","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:746","type":"CtIfImpl","sourcecode":"if (((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) || (int == (com.google.gson.stream.JsonReader.int))) {\n    int = int;\n    return int = com.google.gson.stream.JsonReader.int;\n} else {\n    return com.google.gson.stream.JsonReader.int;\n}"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NUMBER":"h","com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT":"h","com.google.gson.stream.JsonReader.PEEKED_NONE":"h","last":"h","peeked":"h","i":"h","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT":"h","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"h","peekedNumberLength":"h"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:236","type":"CtReturnImpl","sourcecode":"return (int ^ (int >>> 7)) ^ (int >>> 4)"},"status":1},{"failures":[],"tindex":"4351318e-434f-11e5-8bfa-510a6f1621d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:298","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, false)"},"status":0},{"failures":[],"tindex":"76fbfb84-42d9-11e5-bf74-f9d65a920979","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:963","type":"CtTryImpl","sourcecode":"try {\n    long long = java.lang.Long.parseLong(java.lang.String);\n    int = com.google.gson.stream.JsonReader.int;\n    (int[][((int) - 1)])++;\n    return long;\n} catch (java.lang.NumberFormatException ignored) {\n}"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NONE":"com.google.gson.stream.JsonReader.PEEKED_NUMBER","stackSize":"peekedNumberLength","peeked":"pos","peekedString":"peekedString","pathIndices":"pathIndices"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:958","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = new java.lang.String(char[] , int , int);\n    int += int;\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue((int == (com.google.gson.stream.JsonReader.int) ? '\\'' : '\\\"'));\n    try {\n        long long = java.lang.Long.parseLong(java.lang.String);\n        int = com.google.gson.stream.JsonReader.int;\n        (int[][((int) - 1)])++;\n        return long;\n    } catch (java.lang.NumberFormatException ignored) {\n    }\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected a long but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":0},{"failures":[],"tindex":"5c205d87-42ef-11e5-98f1-435af721abc6","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:583","type":"CtIfImpl","sourcecode":"if (int != (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"Nesting problem.\");\n} "},"variableMap":{"com.google.gson.stream.JsonScope.EMPTY_OBJECT":"stackSize","context":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1274","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], 0, int[], 0, int)"},"status":0},{"failures":[],"tindex":"aaf71c23-42c5-11e5-a394-272d767714c7","series":0,"name":"add","transplant":{"position":"com.google.gson.Gson:662","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.setLenient(true)"},"variableMap":{"writer":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:586","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.newline()"},"status":0},{"failures":[],"tindex":"1fa89a9b-42e7-11e5-9dba-71d387d95049","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:556","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"last":"modCount","i":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:194","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"6117cda7-42bd-11e5-b533-3ba1d56170b9","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:117","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"next":"replacement","prev":"replacement","header":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:327","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[][int] = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"0d4f37df-42d9-11e5-ad6a-65a4cd8a57f3","series":0,"name":"add","transplant":{"position":"com.google.gson.reflect.TypeToken:214","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>.getName(), java.lang.reflect.Type)"},"variableMap":{"var":"v","arg":"arg","typeVarMap":"typeVarMap"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:212","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Type = java.util.Map<java.lang.String, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>.getName())"},"status":1},{"failures":[],"tindex":"5efb5375-42d3-11e5-9938-fb2ab0771936","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:647","type":"CtAssignmentImpl","sourcecode":"this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"stackTop":"pivot"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:416","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"4203fa16-4336-11e5-baa5-4347cd0f01ae","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"pos":"com.google.gson.stream.JsonReader.PEEKED_NONE","lineStart":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:907","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":1},{"failures":[],"tindex":"3c2c2b03-43bf-11e5-adc8-8f47cd89aa03","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:107","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"next":"root","prev":"created","header":"created"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:167","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"3d00c6c7-434a-11e5-a1c0-51ca79a5a1cc","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:235","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"variableMap":{"h":"limit"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1391","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"36d8b3e8-42c5-11e5-816d-f17703ddc406","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:119","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"i":"lineStart"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1306","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"41d81de0-4313-11e5-9ff8-3950325c0ed2","series":0,"name":"add","transplant":{"position":"com.google.gson.GsonBuilder:403","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"dateStyle":"modCount","style":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:107","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":1},{"failures":[],"tindex":"28d19266-42f2-11e5-b341-e91484cf1d85","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:782","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturned":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:382","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int = int + 1;\n    if (boolean) {\n        break;\n    } \n} else {\n    assert (int == (-1)) || (int == 1);\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1;\n    if (!boolean) {\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"cbcdfa76-42ac-11e5-b7e3-ad4a5a164153","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:158","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == null) {\n    break;\n} "},"variableMap":{"child":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:375","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"16ed2cc8-42c9-11e5-b74e-d57c35a60154","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:220","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)"},"status":0}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"4351318e-434f-11e5-8bfa-510a6f1621d5","diffs":[{"nodes":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)"]},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)"]},"type":"graph"},{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap_void_rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean).b"]},"type":"branch"}]},{"transformation":"3c2c2b03-43bf-11e5-adc8-8f47cd89aa03","diffs":[{"variables":{"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).e1","com.google.gson.TreeTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).e2","com.google.gson.Gson_com.google.gson.JsonElement_toJsonTree(java.lang.Object).e1"]},"type":"branch"}]},{"transformation":"cbcdfa76-42ac-11e5-b7e3-ad4a5a164153","diffs":[{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).t3","com.google.gson.internal.LinkedHashTreeMap_void_rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node).t1","com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).t1"]},"type":"branch"}]},{"transformation":"28d19266-42f2-11e5-b341-e91484cf1d85","diffs":[{"nodes":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap.void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap.void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)"]},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap.void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node) -> com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap.void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node) -> com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"type":"graph"},{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).b","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).t3","com.google.gson.internal.LinkedHashTreeMap_void_rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node).e1","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).t1","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e2","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).t2","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).b","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e3","com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).t1","com.google.gson.internal.LinkedHashTreeMap_void_rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node).b","com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).e1"]},"type":"branch"}]},{"transformation":"4203fa16-4336-11e5-baa5-4347cd0f01ae","diffs":[{"variables":{"com.google.gson.functional.MapTest.testNumberKeyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"16ed2cc8-42c9-11e5-b74e-d57c35a60154","diffs":[{"nodes":{},"edges":{"com.google.gson.functional.MapTest.testMapNamePromotionWithJsonElementReader":["com.google.gson.internal.bind.JsonTreeReader.void promoteNameToValue() -> com.google.gson.internal.bind.JsonTreeReader.void expect(com.google.gson.stream.JsonToken)"]},"type":"graph"}]},{"transformation":"aaf71c23-42c5-11e5-a394-272d767714c7","diffs":[{"branches":{"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":["com.google.gson.stream.JsonWriter_void_beforeValue(boolean).e1","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().t1"]},"type":"branch"},{"variables":{"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":["com.google.gson.stream.JsonWriter.com.google.gson.stream.JsonWriter close(int,int,java.lang.String)_out"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.stream.JsonWriter.com.google.gson.stream.JsonWriter value(java.lang.Number)_lenient"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_type","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_delegate"]},"type":"variable"},{"nodes":{"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":["com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":["com.google.gson.stream.JsonWriter.void setLenient(boolean)"]},"edges":{"com.google.gson.functional.PrettyPrintingTest.testEmptyMapField":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsSubWhenSpecifiedWithExplicitTypeForToJsonMethod":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.stream.JsonWriterTest.testPrettyPrintObject":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.JsonObjectTest.testPropertyWithQuotes":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.FieldNamingTest.testIdentity":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceArrayFieldSerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.ExposeFieldsTest.testArrayWithOneNullExposeFieldObjectSerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldSerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.ObjectTest.testInnerClassSerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.InterfaceTest.testSerializingObjectImplementingInterface":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.RawSerializationTest.testTwoLevelParameterizedObject":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.MixedStreamTest.testWriteDoesNotMutateState":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.ArrayTest.testObjectArrayWithNonPrimitivesSerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.VersioningTest.testVersionedGsonMixingSinceAndUntilSerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.stream.JsonWriter.void beforeName() -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"]},"type":"graph"}]}]}