{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"796f0fc1-4304-11e5-bf5c-2bc4fe9a7288","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:246","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null"},"variableMap":{"node":"node","left":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:241","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"9d7f48d7-42b0-11e5-9531-5ba4dbdfbc35","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1248","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"count":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:273","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"04cc8002-42db-11e5-9e9f-450b3d900e5e","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:338","type":"CtIfImpl","sourcecode":"if ((int != int) && (int != int)) {\n    throw new java.lang.IllegalStateException(\"Nesting problem.\");\n} "},"variableMap":{"context":"rightDelta","nonempty":"rightDelta","empty":"rightDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:325","type":"CtIfImpl","sourcecode":"if ((int == (-1)) || ((int == 0) && (!boolean))) {\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n} else {\n    assert int == 1;\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n}"},"status":0},{"failures":[],"tindex":"5a809c6d-42e5-11e5-a199-e5cebca86049","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:298","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, false)"},"variableMap":{"originalParent":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:358","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"2485adf3-43ff-11e5-a30d-4138a54fcfe9","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1612","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.int = com.google.gson.stream.JsonReader.int;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.int = com.google.gson.stream.JsonReader.int;\n} else {\n    throw new java.lang.IllegalStateException(((((((((\"Expected a name but was \" + (com.google.gson.stream.JsonReader.peek())) + \" \") + \" at line \") + (com.google.gson.stream.JsonReader.getLineNumber())) + \" column \") + (com.google.gson.stream.JsonReader.getColumnNumber())) + \" path \") + (com.google.gson.stream.JsonReader.getPath())));\n}"},"variableMap":{"p":"com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED_NAME":"p","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED":"p","reader":"this","peeked":"peekedNumberLength","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED":"peekedNumberLength","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED_NAME":"com.google.gson.stream.JsonReader.PEEKED_LONG"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:822","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextUnquotedValue();\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\'');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\\"');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = java.lang.String;\n    java.lang.String = null;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = java.lang.Long.toString(long);\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = new java.lang.String(char[] , int , int);\n    int += int;\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected a string but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":0},{"failures":[],"tindex":"5df346b5-432a-11e5-8899-6dae8e443ef8","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:145","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> == null) {\n    break;\n} "},"variableMap":{"child":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:318","type":"CtIfImpl","sourcecode":"if (int == (-2)) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = int - int;\n    if ((int == (-1)) || ((int == 0) && (!boolean))) {\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    } else {\n        assert int == 1;\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    }\n    if (boolean) {\n        break;\n    } \n} else if (int == 2) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = int - int;\n    if ((int == 1) || ((int == 0) && (!boolean))) {\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    } else {\n        assert int == (-1);\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    }\n    if (boolean) {\n        break;\n    } \n} else if (int == 0) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = int + 1;\n    if (boolean) {\n        break;\n    } \n} else {\n    assert (int == (-1)) || (int == 1);\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1;\n    if (!boolean) {\n        break;\n    } \n}"},"status":1},{"failures":[],"tindex":"cf430ad9-42b1-11e5-8f50-2b68b1311e69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:336","type":"CtIfImpl","sourcecode":"if (com.google.gson.TypeAdapter<?> != null) {\n    return ((com.google.gson.TypeAdapter<T>)(com.google.gson.TypeAdapter<?>));\n} "},"status":0},{"failures":[],"tindex":"70c0502b-42ba-11e5-8d47-d54edeee8fa6","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:490","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\")"},"variableMap":{"stringBuilder":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1481","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('[').append(int[][int])"},"status":0},{"failures":[],"tindex":"e3b31f41-42c7-11e5-9c92-57d35862daa2","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1358","type":"CtIfImpl","sourcecode":"if (((int == ' ') || (int == '\\r')) || (int == '\\t')) {\n    continue;\n} "},"variableMap":{"c":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1488","type":"CtIfImpl","sourcecode":"if ((java.lang.String[][int]) != null) {\n    java.lang.StringBuilder.append(java.lang.String[][int]);\n} "},"status":0},{"failures":[],"tindex":"4987b04e-42ae-11e5-b749-3dfadfce0a63","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:83","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    throw new java.lang.RuntimeException(\"Missing type parameter.\");\n} "},"variableMap":{"superclass":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:199","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n} "},"status":0},{"failures":[],"tindex":"e94ca619-42b0-11e5-80e6-73c9d235e424","series":0,"name":"add","transplant":{"position":"com.google.gson.Gson:804","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.setLenient(true)"},"variableMap":{"reader":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1047","type":"CtSwitchImpl","sourcecode":"switch (char[][((int) + int)]) {\n    case '/' :\n    case '\\\\' :\n    case ';' :\n    case '#' :\n    case '=' :\n        com.google.gson.stream.JsonReader.checkLenient();\n    case '{' :\n    case '}' :\n    case '[' :\n    case ']' :\n    case ':' :\n    case ',' :\n    case ' ' :\n    case '\\t' :\n    case '\\f' :\n    case '\\r' :\n    case '\\n' :\n        break findNonLiteralCharacter;\n}"},"status":0},{"failures":[],"tindex":"28c111bc-42ba-11e5-a928-0b9b2bd385fd","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:389","type":"CtAssertImpl","sourcecode":"assert (int == (-1)) || (int == 1)"},"variableMap":{"delta":"leftDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:343","type":"CtIfImpl","sourcecode":"if ((int == 1) || ((int == 0) && (!boolean))) {\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n} else {\n    assert int == (-1);\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n}"},"status":1},{"failures":[],"tindex":"6acab5fd-42e2-11e5-8799-155819a852f0","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:189","type":"CtIfImpl","sourcecode":"if (!(java.lang.reflect.Type instanceof java.lang.reflect.WildcardType)) {\n    return false;\n} "},"variableMap":{"b":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:188","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type == null) {\n    return false;\n} "},"status":1},{"failures":[],"tindex":"5f0857ba-42c9-11e5-bf19-676e8e08538f","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:858","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NONE":"peekedNumberLength","peeked":"peekedNumberLength"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1259","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":0},{"failures":[],"tindex":"d894afa1-42d8-11e5-9f84-0368c6cd4c65","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:272","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"stackSize":"lineStart"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1557","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"be0bce5d-4344-11e5-809e-5f23e9172ab4","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"pos":"limit","lineStart":"total"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1301","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":1},{"failures":[],"tindex":"67a46d30-42de-11e5-8cda-8fad046b6f3e","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:403","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"dateStyle":"stackSize","style":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1213","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":1},{"failures":[],"tindex":"1e06eeb4-4330-11e5-8f2e-535bedef78f1","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"pos":"peeked","lineStart":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:405","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":1},{"failures":[],"tindex":"82406e2a-42c1-11e5-9ba9-e1b3e20ddb8c","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:578","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == null) {\n    continue;\n} "},"variableMap":{"root":"right"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:357","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"f22897a8-42ad-11e5-aab8-a3f2c63c8353","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1604","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:556","type":"CtIfImpl","sourcecode":"if ((int != (java.text.DateFormat.int)) && (int != (java.text.DateFormat.int))) {\n    com.google.gson.DefaultDateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(int , int);\n} else {\n    return ;\n}"},"status":1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"6acab5fd-42e2-11e5-8799-155819a852f0","diffs":[{"branches":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken_boolean_matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map).b","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).t1","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).t2","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).e1","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).b","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).l3"]},"type":"branch"},{"nodes":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken.boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)"]},"edges":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.reflect.TypeToken.boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)","com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)","com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)"]},"type":"graph"}]},{"transformation":"67a46d30-42de-11e5-8cda-8fad046b6f3e","diffs":[{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.MixedStreamTest.testReadMixedStreamed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testGsonWithSerializedNameFieldNamingPolicyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideWrapperBooleanAdapter":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testExposeAnnotationDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testTopLevelArrayOfIntsDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomNestedDeserializers":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"4987b04e-42ae-11e5-b749-3dfadfce0a63","diffs":[{"nodes":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken.boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)"]},"edges":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.reflect.TypeToken.boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)","com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)"]},"type":"graph"},{"branches":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).e5","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).t1","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).t2","com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).e3","com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).e4","com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).l8","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).b","com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).l7","com.google.gson.reflect.TypeToken_boolean_matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map).b","com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).t4","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).e1","com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).t3","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).l3"]},"type":"branch"}]},{"transformation":"28c111bc-42ba-11e5-a928-0b9b2bd385fd","diffs":[{"variables":{"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"5df346b5-432a-11e5-8899-6dae8e443ef8","diffs":[{"variables":{"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"},{"branches":{"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"]},"type":"branch"},{"nodes":{"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"]},"edges":{"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"]},"type":"graph"}]},{"transformation":"e94ca619-42b0-11e5-80e6-73c9d235e424","diffs":[{"nodes":{},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.internal.bind.JsonElementReaderTest.testStrictNansAndInfinities":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.JsonParserTest.testParseReader":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.UncategorizedTest.testInvalidJsonDeserializationFails":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultCalendarDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.stream.JsonReaderTest.testMalformedNumbers":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.ParameterizedTypesTest.testDeepParameterizedTypeDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.NullObjectAndFieldTest.testExplicitNullSetsFieldToNullDuringDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.ObjectTest.testStringFieldWithEmptyValueDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.CollectionTest.testSetDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue() -> com.google.gson.stream.JsonReader.void setLenient(boolean)"]},"type":"graph"}]},{"transformation":"be0bce5d-4344-11e5-809e-5f23e9172ab4","diffs":[{"variables":{"com.google.gson.MixedStreamTest.testReadMixedStreamed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testEscapingObjectFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"2485adf3-43ff-11e5-a30d-4138a54fcfe9","diffs":[{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.stream.JsonReader.int nextInt()_peekedNumberLength"],"com.google.gson.MixedStreamTest.testReadMixedStreamed":["com.google.gson.stream.JsonReader.int peekNumber()_peekedNumberLength","com.google.gson.stream.JsonReader.int nextInt()_peekedNumberLength"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":["com.google.gson.stream.JsonReader.long nextLong()_peekedNumberLength"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.stream.JsonReader.int peekNumber()_peekedNumberLength","com.google.gson.stream.JsonReader.int nextInt()_peekedNumberLength"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.stream.JsonReader.int peekNumber()_peekedNumberLength"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":["com.google.gson.stream.JsonReader.int peekNumber()_peekedNumberLength","com.google.gson.stream.JsonReader.int nextInt()_peekedNumberLength"]},"type":"variable"}]},{"transformation":"5a809c6d-42e5-11e5-a199-e5cebca86049","diffs":[{"nodes":{},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean)"]},"type":"graph"}]},{"transformation":"f22897a8-42ad-11e5-aab8-a3f2c63c8353","diffs":[{"variables":{"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testNullsInArrayWithSerializeNullPropertySetSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testOverrideBigDecimalTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.FieldNamingTest.testIdentity":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.MixedStreamTest.testWriteLenient":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.GsonBuilderTest.testTransientFieldExclusion":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testRegisteredTypeAdapterTakesPrecedenceOverClassAnnotationAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDoubleInfinitySerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.OverrideCoreTypeAdaptersTest.testOverrideStringAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"cf430ad9-42b1-11e5-8f50-2b68b1311e69","diffs":[{"branches":{"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t4","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e6","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).t2","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().t1","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).t2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).t2","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).e1","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).t1","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).t2","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).e1","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1_void_write(com.google.gson.stream.JsonWriter,java.lang.Object).l2","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).l3","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).l3","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).l2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).e1","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_void_write(com.google.gson.stream.JsonWriter,T).l3","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).e1","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).l3"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.Gson$FutureTypeAdapter_void_setDelegate(com.google.gson.TypeAdapter).b","com.google.gson.internal.Excluder_boolean_excludeClass(java.lang.Class,boolean).e1","com.google.gson.internal.Excluder_<T>_com.google.gson.TypeAdapter_create(com.google.gson.Gson,com.google.gson.reflect.TypeToken).b","com.google.gson.internal.Excluder_<T>_com.google.gson.TypeAdapter_create(com.google.gson.Gson,com.google.gson.reflect.TypeToken).t1","com.google.gson.internal.bind.ObjectTypeAdapter$1_<T>_com.google.gson.TypeAdapter_create(com.google.gson.Gson,com.google.gson.reflect.TypeToken).e1","com.google.gson.internal.bind.ObjectTypeAdapter$1_<T>_com.google.gson.TypeAdapter_create(com.google.gson.Gson,com.google.gson.reflect.TypeToken).b","com.google.gson.internal.Excluder_boolean_isAnonymousOrLocal(java.lang.Class).b","com.google.gson.internal.Excluder_boolean_excludeClass(java.lang.Class,boolean).e3","com.google.gson.Gson$FutureTypeAdapter_void_setDelegate(com.google.gson.TypeAdapter).e1","com.google.gson.internal.Excluder_boolean_excludeClass(java.lang.Class,boolean).e2","com.google.gson.internal.Excluder_boolean_excludeClass(java.lang.Class,boolean).b"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t7","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e8","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e5","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e4","com.google.gson.internal.$Gson$Types_boolean_equal(java.lang.Object,java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"]},"type":"branch"},{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.ObjectTypeAdapterTest.testSerialize":["com.google.gson.Gson$FutureTypeAdapter.void setDelegate(com.google.gson.TypeAdapter)_delegate","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context"],"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"},{"nodes":{"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.boolean equals(java.lang.Object)"]},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.GsonBuilder.com.google.gson.Gson create()"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types$WildcardTypeImpl.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()"]},"type":"graph"}]},{"transformation":"9d7f48d7-42b0-11e5-9531-5ba4dbdfbc35","diffs":[{"variables":{"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.void remove()_modCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.void remove()_expectedModCount"]},"type":"variable"}]},{"transformation":"1e06eeb4-4330-11e5-8f2e-535bedef78f1","diffs":[{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.MixedStreamTest.testReadMixedStreamed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUrlNullDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseDashPolicyDeserialiation":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ObjectTest.testJsonInMixedQuotesDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsBaseType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ThrowableFunctionalTest.testExceptionWithoutCause":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrimitiveTest.testDeserializePrimitiveWrapperAsObjectField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]}]}