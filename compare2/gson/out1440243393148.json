{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"e27907e6-42d8-11e5-a9fa-290ac9065498","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:513","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"pos":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:178","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":1},{"failures":[],"tindex":"04cc8002-42db-11e5-9e9f-450b3d900e5e","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:338","type":"CtIfImpl","sourcecode":"if ((int != int) && (int != int)) {\n    throw new java.lang.IllegalStateException(\"Nesting problem.\");\n} "},"variableMap":{"context":"rightDelta","nonempty":"rightDelta","empty":"rightDelta"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:325","type":"CtIfImpl","sourcecode":"if ((int == (-1)) || ((int == 0) && (!boolean))) {\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n} else {\n    assert int == 1;\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n}"},"status":0},{"failures":[],"tindex":"83d4a583-42f5-11e5-ac8d-dfb09c4a4195","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1295","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"limit":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:931","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":1},{"failures":[],"tindex":"a5b0f6e5-42b5-11e5-b530-ed1d244bfdaa","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:392","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"JsonWriter is closed.\");\n} "},"variableMap":{"stackSize":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:356","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], 0, int[], 0, int)"},"status":0},{"failures":[],"tindex":"734dde48-42f2-11e5-ac0d-0b9f19f21e96","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:615","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"true\""},"variableMap":{"keyword":"peekedString"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:983","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":0},{"failures":[],"tindex":"de90beb3-42c0-11e5-9dca-398a47557983","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:746","type":"CtIfImpl","sourcecode":"if (((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) || (int == (com.google.gson.stream.JsonReader.int))) {\n    int = int;\n    return int = com.google.gson.stream.JsonReader.int;\n} else {\n    return com.google.gson.stream.JsonReader.int;\n}"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NUMBER":"c","com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT":"c","com.google.gson.stream.JsonReader.PEEKED_NONE":"c","last":"c","peeked":"c","i":"c","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT":"c","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"c","peekedNumberLength":"c"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1410","type":"CtReturnImpl","sourcecode":"return int"},"status":1},{"failures":[],"tindex":"f59d08dd-42ae-11e5-810c-7de4d394da21","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"name == null\");\n} "},"variableMap":{"name":"indent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:571","type":"CtInvocationImpl","sourcecode":"java.io.Writer.write(java.lang.String)"},"status":0},{"failures":[],"tindex":"7d8cc6c1-42c0-11e5-ad45-fbfba913bdd1","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:649","type":"CtReturnImpl","sourcecode":"return int = int"},"variableMap":{"peeking":"c","peeked":"c"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1395","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"e13efeb1-42d4-11e5-a3f0-810917519581","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:347","type":"CtAssignmentImpl","sourcecode":"int[][((int) - 1)] = 0"},"variableMap":{"stackSize":"stackSize","pathIndices":"pathIndices"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:908","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":1},{"failures":[],"tindex":"98cc2272-4314-11e5-8008-d19d1f7cc93d","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:119","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"i":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1019","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"1a71d5ad-433a-11e5-8929-41914bacc534","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:619","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"false\""},"variableMap":{"keyword":"datePattern"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:404","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = null"},"status":1},{"failures":[],"tindex":"2f3a0f15-42c6-11e5-b5d3-cbada7932957","series":0,"name":"add","transplant":{"position":"com.google.gson.JsonPrimitive:324","type":"CtReturnImpl","sourcecode":"return (double == double) || ((java.lang.Double.isNaN(double)) && (java.lang.Double.isNaN(double)))"},"variableMap":{"a":"annotationVersion","b":"annotationVersion"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:245","type":"CtIfImpl","sourcecode":"if (double <= (double)) {\n    return false;\n} "},"status":1},{"failures":[],"tindex":"d1065d0f-4491-11e5-b716-519f9e033690","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:548","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedTreeMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturned":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:318","type":"CtIfImpl","sourcecode":"if (int == (-2)) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = int - int;\n    if ((int == (-1)) || ((int == 0) && (!boolean))) {\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    } else {\n        assert int == 1;\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    }\n    if (boolean) {\n        break;\n    } \n} else if (int == 2) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = int - int;\n    if ((int == 1) || ((int == 0) && (!boolean))) {\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    } else {\n        assert int == (-1);\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    }\n    if (boolean) {\n        break;\n    } \n} else if (int == 0) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = int + 1;\n    if (boolean) {\n        break;\n    } \n} else {\n    assert (int == (-1)) || (int == 1);\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1;\n    if (!boolean) {\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"3ac3fd2c-42b3-11e5-8fe8-b37720d4cdd6","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1417","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:295","type":"CtReturnImpl","sourcecode":"return ((int)(long ^ (long >>> 32)))"},"status":1},{"failures":[],"tindex":"ab710088-4337-11e5-9db3-5d443d0965f3","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:543","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"next":"replacement","e":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:293","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"17f79748-431e-11e5-a41c-a5bd54fd7d34","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1248","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"count":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1114","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"d53b5b84-42bc-11e5-9bf1-ab14ecc05216","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1382","type":"CtAssignmentImpl","sourcecode":"int = (int) + 2"},"variableMap":{"p":"pos","pos":"lineStart"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1437","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":1},{"failures":[],"tindex":"6a064906-431c-11e5-8c0e-9f4afbea8d07","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:556","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"last":"lineStart","i":"lineStart"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1306","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"2e598a35-432c-11e5-9504-13a7e77c0d2e","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:235","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"variableMap":{"h":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:103","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"821f7c06-4497-11e5-81d8-bb9150dafbdd","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:355","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = int + 1"},"variableMap":{"node":"left","leftHeight":"leftHeight","height":"leftHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:243","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.internal.LinkedTreeMap.Node<K, V>.int"},"status":1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"83d4a583-42f5-11e5-ac8d-dfb09c4a4195","diffs":[{"variables":{"com.google.gson.functional.MapTest.testNumberKeyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"e13efeb1-42d4-11e5-a3f0-810917519581","diffs":[{"variables":{"com.google.gson.functional.MapTest.testNumberKeyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testRawCollectionDeserializationNotAlllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testTypesWithMultipleParametersDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testArrayOfPrimitivesAsObjectsDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDoubleNaNDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"d53b5b84-42bc-11e5-9bf1-ab14ecc05216","diffs":[{"variables":{"com.google.gson.CommentsTest.testParseComments":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.stream.JsonReader.java.lang.String nextQuotedValue(char)_lineStart"]},"type":"variable"}]},{"transformation":"1a71d5ad-433a-11e5-8929-41914bacc534","diffs":[{"variables":{"com.google.gson.functional.DefaultTypeAdaptersTest.testDateDeserializationWithPattern":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"d1065d0f-4491-11e5-b716-519f9e033690","diffs":[{"branches":{"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"]},"type":"branch"},{"nodes":{"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"]},"edges":{"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"]},"type":"graph"}]},{"transformation":"de90beb3-42c0-11e5-9dca-398a47557983","diffs":[{"variables":{"com.google.gson.MixedStreamTest.testReadMixedStreamed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testDeserializeWithCustomTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testEscapingObjectFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomDeserializers":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.GsonTypeAdapterTest.testDefaultTypeAdapterThrowsParseException":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"e27907e6-42d8-11e5-a9fa-290ac9065498","diffs":[{"nodes":{},"edges":{"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.GsonBuilder.com.google.gson.GsonBuilder() -> com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken()","com.google.gson.GsonBuilder.com.google.gson.Gson create() -> com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)","com.google.gson.GsonBuilder.com.google.gson.Gson create() -> com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken()","com.google.gson.GsonBuilder.com.google.gson.GsonBuilder() -> com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)","com.google.gson.GsonBuilder.com.google.gson.Gson create() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.GsonBuilder.com.google.gson.GsonBuilder() -> com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(java.lang.Class)","com.google.gson.GsonBuilder.void addTypeAdaptersForDate(java.lang.String,int,int,java.util.List) -> com.google.gson.Gson.com.google.gson.Gson(com.google.gson.internal.Excluder,com.google.gson.FieldNamingStrategy,java.util.Map,boolean,boolean,boolean,boolean,boolean,boolean,com.google.gson.LongSerializationPolicy,java.util.List)","com.google.gson.GsonBuilder.com.google.gson.Gson create() -> com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(java.lang.Class)","com.google.gson.GsonBuilder.com.google.gson.Gson create() -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.GsonBuilder.com.google.gson.GsonBuilder() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.Gson$2.com.google.gson.JsonElement serialize(java.lang.Object) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.JsonObject.void addProperty(java.lang.String,java.lang.String) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)","com.google.gson.JsonObject.void addProperty(java.lang.String,java.lang.String) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.JsonObject.void addProperty(java.lang.String,java.lang.String) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.Gson$2.com.google.gson.JsonElement serialize(java.lang.Object) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)","com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.Gson$2.com.google.gson.JsonElement serialize(java.lang.Object) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)"]},"type":"graph"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.JsonObject_void_add(java.lang.String,com.google.gson.JsonElement).e4","com.google.gson.JsonObject_void_add(java.lang.String,com.google.gson.JsonElement).e6","com.google.gson.Gson_com.google.gson.JsonElement_toJsonTree(java.lang.Object,java.lang.reflect.Type).e1","com.google.gson.Gson_com.google.gson.JsonElement_toJsonTree(java.lang.Object,java.lang.reflect.Type).e2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).e1","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).e2","com.google.gson.JsonObject_void_add(java.lang.String,com.google.gson.JsonElement).t5"]},"type":"branch"},{"variables":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.internal.bind.JsonElementReaderTest.testObject":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JavaSerializationTest.testMapIsSerializable":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testCustomSerializationOfNulls":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.internal.bind.JsonTreeWriterTest.testObject":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testMapDeserializationWithDuplicateKeys":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"a5b0f6e5-42b5-11e5-b530-ed1d244bfdaa","diffs":[{"variables":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_delegate"]},"type":"variable"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().t1"]},"type":"branch"}]},{"transformation":"f59d08dd-42ae-11e5-810c-7de4d394da21","diffs":[{"nodes":{},"edges":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.void write(com.google.gson.stream.JsonWriter,java.lang.Object) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.Gson.com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> com.google.gson.Gson.com.google.gson.TypeAdapter doubleAdapter(boolean)","com.google.gson.Gson.com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> com.google.gson.internal.bind.CollectionTypeAdapterFactory.com.google.gson.internal.bind.CollectionTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)","com.google.gson.Gson.com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> com.google.gson.Gson.com.google.gson.TypeAdapter floatAdapter(boolean)","com.google.gson.Gson.com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor)","com.google.gson.Gson.com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> com.google.gson.internal.bind.MapTypeAdapterFactory.com.google.gson.internal.bind.MapTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,boolean)","com.google.gson.Gson.com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.com.google.gson.internal.bind.ReflectiveTypeAdapterFactory(com.google.gson.internal.ConstructorConstructor,com.google.gson.FieldNamingStrategy,com.google.gson.internal.Excluder)","com.google.gson.internal.ConstructorConstructor.com.google.gson.internal.ConstructorConstructor(java.util.Map) -> com.google.gson.Gson.com.google.gson.Gson()","com.google.gson.Gson.com.google.gson.TypeAdapter longAdapter(com.google.gson.LongSerializationPolicy) -> com.google.gson.internal.bind.TypeAdapters.<TT> com.google.gson.TypeAdapterFactory newFactory(java.lang.Class,com.google.gson.TypeAdapter)"]},"type":"graph"},{"variables":{"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":["com.google.gson.stream.JsonWriter.com.google.gson.stream.JsonWriter close(int,int,java.lang.String)_out"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_delegate"]},"type":"variable"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().t1"]},"type":"branch"}]},{"transformation":"ab710088-4337-11e5-9db3-5d443d0965f3","diffs":[{"variables":{"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]}]}