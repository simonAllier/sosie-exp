{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"74963731-42ba-11e5-a025-6339cc285389","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:100","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.$Gson$Preconditions.checkArgument(((java.lang.Object instanceof java.lang.Number) || com.google.gson.JsonPrimitive.(com.google.gson.JsonPrimitive.isPrimitiveOrString(java.lang.Object))))"},"status":0},{"failures":[],"tindex":"786a63fc-42da-11e5-bf19-051bb8810961","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>);\n} "},"variableMap":{"rawType":"rawSupertype","toResolve":"rawType","this":"this","rawSupertype":"rawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:247","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?> == java.lang.Class<?>) {\n    return java.lang.Class<?>.getGenericSuperclass();\n} else if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>);\n} "},"status":0},{"failures":[],"tindex":"b9ace93d-42ec-11e5-8113-9ba388ac1155","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:235","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"variableMap":{"h":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1111","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":1},{"failures":[],"tindex":"1ab3e5a7-42b1-11e5-9abc-0bf4346a40cd","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1258","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int += int;\n} "},"variableMap":{"p":"delta","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"leftHeight","pos":"rightHeight","peekedNumberLength":"leftHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:354","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = int + 1;\n    if (boolean) {\n        break;\n    } \n} else {\n    assert (int == (-1)) || (int == 1);\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1;\n    if (!boolean) {\n        break;\n    } \n}"},"status":1},{"failures":[],"tindex":"ceebf0aa-43a2-11e5-91a3-831044dcf9ae","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:744","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"leavesSkipped":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:953","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":1},{"failures":[],"tindex":"5927dcbc-42fa-11e5-9194-e99c1502dc81","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:727","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"parent":"node","left":"prev","center":"next"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:248","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"6b5316a3-42b1-11e5-a816-45b0163227b8","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:774","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"pos","expectedModCount":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1527","type":"CtIfImpl","sourcecode":"if ((char >= '0') && (char <= '9')) {\n    char += char - '0';\n} else if ((char >= 'a') && (char <= 'f')) {\n    char += (char - 'a') + 10;\n} else if ((char >= 'A') && (char <= 'F')) {\n    char += (char - 'A') + 10;\n} else {\n    throw new java.lang.NumberFormatException((\"\\\\u\" + (new java.lang.String(char[] , int , 4))));\n}"},"status":0},{"failures":[],"tindex":"5313f569-42c7-11e5-9876-a1c746fe37b6","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:858","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NONE":"modCount","peeked":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:107","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":1},{"failures":[],"tindex":"8b282da7-42e8-11e5-ac20-1b1bbdacbb9e","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:235","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"variableMap":{"h":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:347","type":"CtAssignmentImpl","sourcecode":"int[][((int) - 1)] = 0"},"status":0},{"failures":[],"tindex":"130a5653-42e0-11e5-8f90-1f50b9e2b615","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:271","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedTreeMap.Node<K, V>, false)"},"variableMap":{"originalParent":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:259","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"a2200852-42b5-11e5-8368-7b3dc90aebb4","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:149","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['\\\"'] = \"\\\\\\\"\""},"variableMap":{"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS":"replacements"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:541","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String[][char]"},"status":1},{"failures":[],"tindex":"c8c958b5-4363-11e5-8b48-cb2d1c64a572","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtIfImpl","sourcecode":"if (!com.google.gson.stream.JsonReader.(fillBuffer(1))) {\n    break;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:476","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.checkLenient()"},"status":0},{"failures":[],"tindex":"eed07607-42b9-11e5-93e2-714cb88e31e7","series":0,"name":"add","transplant":{"position":"com.google.gson.GsonBuilder:134","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"generateNonExecutableJson":"serializeInnerClasses"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:86","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder.boolean = false"},"status":1},{"failures":[],"tindex":"500dee28-4484-11e5-8037-b321b13867b4","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:113","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null"},"variableMap":{"next":"pivotLeft","e":"parent","prev":"pivotLeft"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:410","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"e7f0143a-42e6-11e5-99b1-0fbaa928e082","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:319","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n} else {\n    assert (com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n}"},"variableMap":{"parent":"nearest","node":"nearest","left":"nearest","right":"nearest","replacement":"nearest"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:188","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, true)"},"status":0},{"failures":[],"tindex":"9a7b82e9-42ce-11e5-afb3-a968028c57d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:356","type":"CtIfImpl","sourcecode":"if (boolean) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"1a70eb44-433a-11e5-8929-ef7c965fdbbd","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.JsonTreeWriter:138","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"variableMap":{"name":"result","pendingName":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:834","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.lang.String(char[] , int , int)"},"status":0},{"failures":[],"tindex":"0c127918-42b1-11e5-b125-7713107eedb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:370","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.ThreadLocal<java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.Gson.FutureTypeAdapter<?>>>.remove();\n} "},"status":0},{"failures":[],"tindex":"3acb453d-42b2-11e5-b30c-e19b2850479d","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:212","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Type = java.util.Map<java.lang.String, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>.getName())"},"variableMap":{"v":"var","arg":"arg","typeVarMap":"typeVarMap"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:214","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>.getName(), java.lang.reflect.Type)"},"status":1},{"failures":[],"tindex":"ff4d5920-42ae-11e5-a4c9-77eeea859a88","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:627","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:110","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"eed07607-42b9-11e5-93e2-714cb88e31e7","diffs":[{"variables":{"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"130a5653-42e0-11e5-8f90-1f50b9e2b615","diffs":[{"branches":{"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).e8","com.google.gson.internal.LinkedTreeMap_void_rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean).t7"]},"type":"branch"}]},{"transformation":"1ab3e5a7-42b1-11e5-9abc-0bf4346a40cd","diffs":[{"variables":{"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"},{"nodes":{"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)"]},"edges":{"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rebalance(com.google.gson.internal.LinkedTreeMap$Node,boolean) -> com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateLeft(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)","com.google.gson.internal.LinkedTreeMap.void rotateRight(com.google.gson.internal.LinkedTreeMap$Node) -> com.google.gson.internal.LinkedTreeMap.void replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node)"]},"type":"graph"},{"branches":{"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2"],"com.google.gson.ObjectTypeAdapterTest.testDeserialize":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"],"com.google.gson.internal.LinkedTreeMapTest.testIterationOrder":["com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).b","com.google.gson.internal.LinkedTreeMap_void_rotateRight(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_rotateLeft(com.google.gson.internal.LinkedTreeMap$Node).e1","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e3","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).e2","com.google.gson.internal.LinkedTreeMap_void_replaceInParent(com.google.gson.internal.LinkedTreeMap$Node,com.google.gson.internal.LinkedTreeMap$Node).t1"]},"type":"branch"}]},{"transformation":"ceebf0aa-43a2-11e5-91a3-831044dcf9ae","diffs":[{"variables":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassSerializationDoesNotImpactDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testMapDeserializationWithWildcardValues":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NamingPolicyTest.testComplexFieldNameStrategy":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testGsonInstanceReusableForSerializationAndDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubClassDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EscapingTest.testEscapingObjectFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ObjectTest.testPrimitiveArrayInAnObjectDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypeDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"74963731-42ba-11e5-a025-6339cc285389","diffs":[{"branches":{"com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.JsonPrimitiveTest.testShortEqualsBigInteger":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b"],"com.google.gson.JsonParserTest.testParseEmptyString":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b"],"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b"],"com.google.gson.JsonArrayTest.testSet":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.internal.LinkedTreeMap_V_put(K,V).t5","com.google.gson.internal.LinkedTreeMap_V_put(K,V).e6","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1","com.google.gson.JsonObject_void_addProperty(java.lang.String,java.lang.String).e1","com.google.gson.internal.LinkedTreeMap_V_put(K,V).e4"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b"],"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.MixedStreamTest.testWriteNulls":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":["com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).l3","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).e1","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).e2","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t1","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t2"],"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b"],"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":["com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).l3","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).e1","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).b","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).e2","com.google.gson.JsonPrimitive_boolean_isPrimitiveOrString(java.lang.Object).t2"]},"type":"branch"},{"nodes":{"com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.JsonPrimitiveTest.testShortEqualsBigInteger":["com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose":["com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.JsonParserTest.testParseEmptyString":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization":["com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":["com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.JsonArrayTest.testSet":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":["com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.MixedStreamTest.testWriteNulls":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":["com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":["com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"]},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()"],"com.google.gson.JsonStreamParserTest.testNoSideEffectForHasNext":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.DefaultMapJsonSerializerTest.testNonEmptyMapSerialization":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.JsonPrimitiveTest.testShortEqualsBigInteger":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.PrintFormattingTest.testJsonObjectWithNullValuesSerialized":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.internal.bind.JsonElementReaderTest.testEarlyClose":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.JsonParserTest.testParseEmptyString":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerialization":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.EnumTest.testEnumSubclassWithRegisteredTypeAdapter":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.CustomSerializerTest.testSubClassSerializerInvokedForBaseClassFieldsHoldingArrayOfSubClassInstances":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.DefaultDateTypeAdapterTest.testFormatUsesDefaultTimezone":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testRegisteredSerializerOverridesJsonAdapter":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.ParameterizedTypesTest.testParameterizedTypesWithCustomDeserializer":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testFromJsonTree":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.PrimitiveTest.testPrimitiveClassLiteral":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.GsonTypeAdapterTest.testTypeAdapterProperlyConvertsTypes":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.JsonArrayTest.testSet":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.CollectionTest.testUserCollectionTypeAdapter":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.CircularReferenceTest.testSelfReferenceCustomHandlerSerialization":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.Gson.com.google.gson.JsonElement toJsonTree(java.lang.Object) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.Gson.com.google.gson.JsonElement toJsonTree(java.lang.Object) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)","com.google.gson.Gson.com.google.gson.JsonElement toJsonTree(java.lang.Object) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonArraySerialization":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.MixedStreamTest.testWriteNulls":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.internal.bind.JsonTreeWriterTest.testArray":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfSubclassFields":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.JsonObjectTest.testReadPropertyWithEmptyStringName":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.JsonPrimitive.boolean isPrimitiveOrString(java.lang.Object)","com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.JsonPrimitive.void setValue(java.lang.Object) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"]},"type":"graph"}]},{"transformation":"786a63fc-42da-11e5-bf19-051bb8810961","diffs":[{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).t2","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).t1","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).e1","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1_void_write(com.google.gson.stream.JsonWriter,java.lang.Object).l2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).l3","com.google.gson.stream.JsonWriter_void_beforeValue(boolean).e1","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).e1"]},"type":"branch"},{"variables":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_type","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_delegate"]},"type":"variable"},{"nodes":{},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)"]},"type":"graph"}]},{"transformation":"b9ace93d-42ec-11e5-8113-9ba388ac1155","diffs":[{"variables":{"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorReturnsSubTypeForField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"a2200852-42b5-11e5-8368-7b3dc90aebb4","diffs":[{"variables":{"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoStrings":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_delegate","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testStringBufferSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testNullExposeFieldSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.FieldNamingTest.testIdentity":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testHtmlCharacterSerialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.LongSerializationPolicyTest.testStringLongSerializationIntegration":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testSubClassSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ArrayTest.testSingleStringArraySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).t1","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).t2","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).t2","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).l2","com.google.gson.stream.JsonWriter_void_beforeValue(boolean).e1","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).l3","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().e2","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().e1","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).l3","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).e1"]},"type":"branch"},{"nodes":{},"edges":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)"],"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":["com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()"]},"type":"graph"}]},{"transformation":"0c127918-42b1-11e5-b125-7713107eedb8","diffs":[{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).t2","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).t2","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).e1","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).t2","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).l2","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1_void_write(com.google.gson.stream.JsonWriter,java.lang.Object).l2","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable).l3","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).l3","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).e1","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).l3","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).e1"]},"type":"branch"}]}]}