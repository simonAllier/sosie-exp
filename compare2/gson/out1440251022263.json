{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"78f52456-4359-11e5-8793-0df5408bb522","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:295","type":"CtAssertImpl","sourcecode":"assert (com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"parent":"node","node":"adjacent","right":"adjacent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:259","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"status":1},{"failures":[],"tindex":"077a3a98-42b6-11e5-b6bb-497e3c24d875","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1223","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"stackSize":"minimum"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1307","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"dd879492-42d7-11e5-9be1-2be08ca2c293","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:287","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n} "},"variableMap":{"parent":"adjacent","replacement":"adjacent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:259","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"status":1},{"failures":[],"tindex":"05737bd3-42bb-11e5-be66-8f775eab8980","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:235","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"status":0},{"failures":[],"tindex":"a37e8732-42ff-11e5-875a-f94791695476","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:219","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"next":"adjacent","node":"adjacent","prev":"adjacent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:244","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"6c7f4c1f-4329-11e5-a435-83199e8ee6e6","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:562","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"year":"peekedNumberLength","value":"peekedNumberLength"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1259","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":0},{"failures":[],"tindex":"751489aa-42d7-11e5-86d4-799346d48c36","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:280","type":"CtReturnImpl","sourcecode":"return this.int"},"variableMap":{"hashCode":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:713","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.int"},"status":1},{"failures":[],"tindex":"64215bf4-42c0-11e5-bd7e-bff0ccaf0936","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1223","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"stackSize":"l"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1391","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":1},{"failures":[],"tindex":"0d948ca8-43ec-11e5-aa05-f58b9acb7377","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:199","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"result":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:627","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.int"},"status":0},{"failures":[],"tindex":"83eb13a8-42d0-11e5-aed5-f1c44c51c549","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:562","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"year":"peeked","value":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:976","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":0},{"failures":[],"tindex":"ca957a6b-42ac-11e5-a892-f3617f4cfd46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:223","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.Class<?>.getGenericInterfaces()) {\n    if (com.google.gson.reflect.TypeToken<T>.com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type, java.lang.reflect.ParameterizedType, new java.util.HashMap<java.lang.String, java.lang.reflect.Type>(java.util.Map<java.lang.String, java.lang.reflect.Type>))) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"feba3513-42e8-11e5-a434-290606582640","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:523","type":"CtInvocationImpl","sourcecode":"java.io.Writer.close()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:327","type":"CtInvocationImpl","sourcecode":"java.io.Writer.write(java.lang.String)"},"status":1},{"failures":[],"tindex":"409c9669-42ac-11e5-9215-0de85c4c8ff7","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1417","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:280","type":"CtReturnImpl","sourcecode":"return this.int"},"status":1},{"failures":[],"tindex":"6ca57f58-42b4-11e5-9f58-df203c7eccc7","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:556","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"last":"modCount","i":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:107","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"469ff92d-42ae-11e5-97f3-eb8d83d0356b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:129","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.$Gson$Preconditions.com.google.gson.internal.$Gson$Preconditions.checkArgument((java.lang.reflect.Type instanceof java.lang.Class))"},"status":0},{"failures":[],"tindex":"3987128b-42c2-11e5-8e4e-dd91756b2709","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:578","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == null) {\n    continue;\n} "},"status":0},{"failures":[],"tindex":"7d378ae9-4373-11e5-b007-ed686b1db4b0","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:243","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.internal.LinkedTreeMap.Node<K, V>.int"},"variableMap":{"left":"node","leftHeight":"height","height":"leftHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:355","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = int + 1"},"status":1},{"failures":[],"tindex":"8eb3ae00-42fc-11e5-be32-91d6aa56544d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:101","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = null"},"status":0},{"failures":[],"tindex":"14c1b5e5-42ae-11e5-bdb5-95ffafa5ff0f","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:661","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:341","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":1},{"failures":[],"tindex":"68af5006-42e2-11e5-8ac7-77afc113b380","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:687","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} "},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN":"leftHeight","last":"rightHeight","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"rightHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:382","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int = int + 1;\n    if (boolean) {\n        break;\n    } \n} else {\n    assert (int == (-1)) || (int == 1);\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1;\n    if (!boolean) {\n        break;\n    } \n}"},"status":1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"feba3513-42e8-11e5-a434-290606582640","diffs":[{"nodes":{},"edges":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> com.google.gson.stream.JsonWriter.void setHtmlSafe(boolean)","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> com.google.gson.stream.JsonWriter.void setLenient(boolean)","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.void write(com.google.gson.stream.JsonWriter,java.util.Collection) -> com.google.gson.stream.JsonWriter.void setSerializeNulls(boolean)"],"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"]},"type":"graph"},{"variables":{"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExcludeTopLevelClassDeserializationDoesNotImpactSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testInterfaceTypeMapWithSerializer":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.RawSerializationTest.testCollectionOfPrimitives":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EnumTest.testCollectionOfEnumsSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testDefaultConstructorNotCalledOnField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.FieldNamingTest.testIdentity":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.UncategorizedTest.testObjectEqualButNotSameSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.VersioningTest.testVersionedClassesSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testExplicitSerializationOfNulls":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testDefaultGregorianCalendarSerialization":["com.google.gson.stream.JsonWriter.com.google.gson.stream.JsonWriter close(int,int,java.lang.String)_out","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.FieldExclusionTest.testDefaultInnerClassExclusion":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TreeTypeAdaptersTest.testSerializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.ObjectTypeAdapterTest.testSerializeNullValue":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubClassSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.MixedStreamTest.testWriteClosed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testParameterizedSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMapWithTypeVariableSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginObject().s5","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).t2","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).t2","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).l2","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).l3","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).l3","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object,java.lang.reflect.Type).e1"]},"type":"branch"}]},{"transformation":"14c1b5e5-42ae-11e5-bdb5-95ffafa5ff0f","diffs":[{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.MixedStreamTest.testReadMixedStreamed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvokedOnStrings":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ArrayTest.testSingleStringArrayDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EscapingTest.testEscapingQuotesInStringArray":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"ca957a6b-42ac-11e5-a892-f3617f4cfd46","diffs":[{"branches":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).e1"]},"type":"branch"}]},{"transformation":"7d378ae9-4373-11e5-b007-ed686b1db4b0","diffs":[{"variables":{"com.google.gson.functional.MoreSpecificTypeSerializationTest.testMapOfParameterizedSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testClassWithBaseFieldSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testBadTypeForDeserializingCustomTree":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonObjectSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ReadersWritersTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForTopLevelObject":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testRawCollectionOfBagOfPrimitivesNotAllowed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonTreeTest.testJsonTreeToString":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testMultipleEnableComplexKeyRegistrationHasNoEffect":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"68af5006-42e2-11e5-8ac7-77afc113b380","diffs":[{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).b","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).t3","com.google.gson.internal.LinkedHashTreeMap_void_rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node).e1","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).t1","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e2","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).t2","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).b","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e3","com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).t1","com.google.gson.internal.LinkedHashTreeMap_void_rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node).b","com.google.gson.internal.LinkedHashTreeMap_void_rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node).e1"]},"type":"branch"},{"nodes":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap.void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap.void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)"]},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap.void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node) -> com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap.void rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap.void rotateLeft(com.google.gson.internal.LinkedHashTreeMap$Node) -> com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"type":"graph"}]},{"transformation":"469ff92d-42ae-11e5-97f3-eb8d83d0356b","diffs":[{"nodes":{},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"]},"type":"graph"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().t6","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().t1","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().t2","com.google.gson.stream.JsonWriter_com.google.gson.stream.JsonWriter_beginArray().l7"]},"type":"branch"}]},{"transformation":"409c9669-42ac-11e5-9215-0de85c4c8ff7","diffs":[{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_delegate","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.ObjectTypeAdapterTest.testSerialize":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type"],"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type"],"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"},{"branches":{"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t4","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.reflect.TypeToken_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"]},"type":"branch"},{"nodes":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)"],"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"]},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.GsonBuilder.com.google.gson.Gson create()"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()"],"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)"]},"type":"graph"}]}]}