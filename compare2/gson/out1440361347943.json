{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"fea0d340-42d8-11e5-918d-1de6209deacc","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:403","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"dateStyle":"limit","style":"l"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1020","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":1},{"failures":[],"tindex":"c4bb3e98-42b4-11e5-b4a9-0795394b627c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:200","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type))"},"status":0},{"failures":[],"tindex":"5935277f-42f3-11e5-9106-b15a094da78b","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:156","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[] = com.google.gson.stream.JsonWriter.java.lang.String[].clone()"},"variableMap":{"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS":"pathNames","com.google.gson.stream.JsonWriter.HTML_SAFE_REPLACEMENT_CHARS":"pathNames"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1278","type":"CtAssignmentImpl","sourcecode":"java.lang.String[] = java.lang.String[]"},"status":0},{"failures":[],"tindex":"8a6d5a7f-4313-11e5-9926-e38c217b1e6a","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:683","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null"},"variableMap":{"stack":"pivotLeft"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:410","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"84372bca-42b5-11e5-bde1-0fad6a0a7c53","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:727","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"parent":"pivotLeft","left":"parent","center":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:410","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":1},{"failures":[],"tindex":"2736ae0c-442d-11e5-9f2e-75366e3c54b2","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:101","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Type"},"variableMap":{"type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:94","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    return java.lang.Class<?>.isArray() ? new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.canonicalize(java.lang.Class<?>.getComponentType())) : java.lang.Class<?>;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(java.lang.reflect.ParameterizedType.getOwnerType() , java.lang.reflect.ParameterizedType.getRawType() , java.lang.reflect.ParameterizedType.getActualTypeArguments());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(java.lang.reflect.GenericArrayType.getGenericComponentType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(java.lang.reflect.WildcardType.getUpperBounds() , java.lang.reflect.WildcardType.getLowerBounds());\n} else {\n    return java.lang.reflect.Type;\n}"},"status":1},{"failures":[],"tindex":"1c04acfc-42cf-11e5-9af0-ebfb8b3bbc96","series":0,"name":"add","transplant":{"position":"com.google.gson.GsonBuilder:403","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"dateStyle":"p","style":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:362","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.doPeek()"},"status":1},{"failures":[],"tindex":"7345b966-43bc-11e5-bfb6-0b6d880626e0","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1611","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonReader.int = com.google.gson.stream.JsonReader.int"},"variableMap":{"reader":"this","peeked":"p","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:880","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.doPeek()"},"status":1},{"failures":[],"tindex":"db046c07-42fc-11e5-8507-0f4b695f25ae","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:548","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedTreeMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturned":"adjacent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:259","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"cbdb18ea-42b7-11e5-ba5c-1ba646c86153","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:588","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"leftSize":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:272","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"228aaa1f-4322-11e5-9a19-033893b5586b","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:158","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == null) {\n    break;\n} "},"variableMap":{"child":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:578","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == null) {\n    continue;\n} "},"status":0},{"failures":[],"tindex":"5e1988e5-4329-11e5-b044-7fe27878e2d3","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isInterface()) {\n    java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.Class<?>.getInterfaces();\n    for (int int = 0, int int = java.lang.Class<?>[].int ; int < int ; int++) {\n        if ((java.lang.Class<?>[][int]) == java.lang.Class<?>) {\n            return java.lang.Class<?>.getGenericInterfaces()[int];\n        } else if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>[][int])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericInterfaces()[int], java.lang.Class<?>[][int], java.lang.Class<?>);\n        } \n    }\n} "},"variableMap":{"rawType":"rawSupertype","toResolve":"rawSupertype","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>);\n} "},"status":0},{"failures":[],"tindex":"34a949ea-42bd-11e5-90bd-e95ccc2c3402","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1248","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"count":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:273","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"09f5b8d5-42cf-11e5-a1e5-6de48fd4e01f","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:680","type":"CtAssignmentImpl","sourcecode":"int = int - int"},"variableMap":{"targetSize":"pos","treeCapacity":"pos","leavesToSkip":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1434","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"56b74e27-42b7-11e5-9f45-af8384dfe7e0","series":0,"name":"add","transplant":{"position":"com.google.gson.reflect.TypeToken:199","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n} "},"variableMap":{"from":"arg","ptype":"arg"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:210","type":"CtWhileImpl","sourcecode":"while (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type = java.util.Map<java.lang.String, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>.getName());\n}"},"status":0},{"failures":[],"tindex":"4471f425-430e-11e5-93fe-f31e105415f8","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1322","type":"CtReturnImpl","sourcecode":"return ((int) - (int)) + 1"},"variableMap":{"pos":"h","lineStart":"h"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:236","type":"CtReturnImpl","sourcecode":"return (int ^ (int >>> 7)) ^ (int >>> 4)"},"status":1},{"failures":[],"tindex":"24fc6839-42ea-11e5-b278-9d998e03a900","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:680","type":"CtAssignmentImpl","sourcecode":"int = int - int"},"variableMap":{"targetSize":"h","treeCapacity":"h","leavesToSkip":"h"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:235","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"status":1},{"failures":[],"tindex":"0c565465-42eb-11e5-8d70-dfe202522f66","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:538","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.consumeNonExecutePrefix()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:604","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.checkLenient()"},"status":0},{"failures":[],"tindex":"500f1368-4491-11e5-93c5-215ad7211e15","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1295","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"limit":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:883","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":1},{"failures":[],"tindex":"5453a28e-42b1-11e5-9a29-85559b422cfc","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:386","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.WildcardType"},"variableMap":{"original":"w"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:109","type":"CtReturnImpl","sourcecode":"return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(java.lang.reflect.WildcardType.getUpperBounds() , java.lang.reflect.WildcardType.getLowerBounds())"},"status":1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"1c04acfc-42cf-11e5-9af0-ebfb8b3bbc96","diffs":[{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testAbsentJsonElementsAreSetToNull":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForCollectionElementDeserialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JavaSerializationTest.testNumberIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeArrayDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EnumTest.testCollectionOfEnumsDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.UncategorizedTest.testTrailingWhitespace":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testBitSetDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ObjectTest.testArrayOfArraysDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeVariableTest.testAdvancedTypeVariables":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrimitiveTest.testStringsAsBooleans":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNullForArrayElements":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]},{"transformation":"c4bb3e98-42b4-11e5-b4a9-0795394b627c","diffs":[{"nodes":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken.boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)"]},"edges":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.reflect.TypeToken.boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)","com.google.gson.reflect.TypeToken.boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map) -> com.google.gson.reflect.TypeToken.boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)"]},"type":"graph"},{"branches":{"com.google.gson.reflect.TypeTokenTest.testIsAssignableFromWithTypeParameters":["com.google.gson.reflect.TypeToken_boolean_matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map).b","com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).e5","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).t1","com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).t4","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).t2","com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).e4","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).e1","com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).l8","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).b","com.google.gson.reflect.TypeToken_boolean_typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map).l3","com.google.gson.reflect.TypeToken_boolean_isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map).l7"]},"type":"branch"}]},{"transformation":"34a949ea-42bd-11e5-90bd-e95ccc2c3402","diffs":[{"variables":{"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_expectedModCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.com.google.gson.internal.LinkedTreeMap$Node nextNode()_modCount"],"com.google.gson.internal.LinkedTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.void remove()_modCount","com.google.gson.internal.LinkedTreeMap$LinkedTreeMapIterator.void remove()_expectedModCount"]},"type":"variable"}]},{"transformation":"0c565465-42eb-11e5-8d70-dfe202522f66","diffs":[{"branches":{"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.stream.JsonReader_boolean_fillBuffer(int).t1","com.google.gson.stream.JsonReader_void_consumeNonExecutePrefix().t1"]},"type":"branch"},{"variables":{"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.stream.JsonReader.int getColumnNumber()_lineStart","com.google.gson.stream.JsonReader.int getColumnNumber()_pos"],"com.google.gson.stream.JsonReaderTest.testMalformedNumbers":["com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue()_pos","com.google.gson.stream.JsonReader.java.lang.String nextString()_pos","com.google.gson.stream.JsonReader.java.lang.String nextUnquotedValue()_limit"]},"type":"variable"},{"nodes":{},"edges":{"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.stream.JsonReader.void consumeNonExecutePrefix() -> com.google.gson.stream.JsonReader.boolean fillBuffer(int)"]},"type":"graph"}]},{"transformation":"fea0d340-42d8-11e5-918d-1de6209deacc","diffs":[{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.VersioningTest.testVersionedUntilDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeHierarchyAdapterTest.testTypeHierarchy":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.EscapingTest.testGsonAcceptsEscapedAndNonEscapedJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.SecurityTest.testJsonWithNonExectuableTokenWithRegularGsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testJsonAdapterInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CircularReferenceTest.testDirectedAcyclicGraphDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ExposeFieldsTest.testExposedInterfaceFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testTypeVariablesViaTypeParameter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomAdapterInvokedForMapElementDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testEnumCaseMapping":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testClassAnnotationAdapterFactoryTakesPrecedenceOverDefault":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testTwoTypesCollapseToOneDeserialize":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testStringKeyDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonParserTest.testChangingCustomTreeAndDeserializing":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.NullObjectAndFieldTest.testCustomTypeAdapterPassesNullDesrialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategySerializationDoesNotImpactDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.InheritanceTest.testSubInterfacesOfCollectionDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"5e1988e5-4329-11e5-b044-7fe27878e2d3","diffs":[{"nodes":{},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.GsonBuilder.com.google.gson.GsonBuilder()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.GsonBuilder.com.google.gson.Gson create()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()","com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"]},"type":"graph"},{"branches":{"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).e1","com.google.gson.stream.JsonWriter_void_writeDeferredName().t2","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).l3","com.google.gson.Gson$FutureTypeAdapter_void_write(com.google.gson.stream.JsonWriter,T).l2","com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).t2","com.google.gson.stream.JsonWriter_void_writeDeferredName().l7","com.google.gson.Gson_void_toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter).l2","com.google.gson.stream.JsonWriter_void_writeDeferredName().t6","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).e1"]},"type":"branch"}]},{"transformation":"500f1368-4491-11e5-93c5-215ad7211e15","diffs":[{"variables":{"com.google.gson.functional.StreamingTypeAdaptersTest.testNullSafe":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CollectionTest.testNullsInListDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testNullWrappedPrimitiveMemberDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testExtraCommasInArrays":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ObjectTest.testNullPrimitiveFieldsDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testJsonNullDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testNullsInArrayDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testEnsureCustomDeserializerNotInvokedForNullValues":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapTest.testMapDeserializationWithNullValue":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testTopLevelNullObjectDeserializationWithReader":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"}]},{"transformation":"5453a28e-42b1-11e5-9a29-85559b422cfc","diffs":[{"variables":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.ObjectTypeAdapterTest.testSerialize":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.OverrideCoreTypeAdaptersTest.testOverridePrimitiveBooleanAdapter":["com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"},{"nodes":{"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()"]},"edges":{"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()"]},"type":"graph"},{"branches":{"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types$WildcardTypeImpl_java.lang.reflect.Type[]_getUpperBounds().b","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]).e1","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_java.lang.reflect.Type[]_getLowerBounds().b","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_int_hashCode().b"]},"type":"branch"}]},{"transformation":"2736ae0c-442d-11e5-9f2e-75366e3c54b2","diffs":[{"branches":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":["com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e2","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.Gson_java.lang.String_toJson(java.lang.Object).e1","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1_void_write(com.google.gson.stream.JsonWriter,java.lang.Object).e1","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).l3","com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,java.util.Collection).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter_void_write(com.google.gson.stream.JsonWriter,T).t2","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":["com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e6","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b"],"com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).e1","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e4","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equal(java.lang.Object,java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e6","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).e1","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e4","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equal(java.lang.Object,java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e6","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_java.lang.reflect.Type[]_getUpperBounds().b","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]).e1","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_java.lang.reflect.Type[]_getLowerBounds().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1","com.google.gson.internal.$Gson$Types$WildcardTypeImpl_int_hashCode().b"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper_java.lang.reflect.Type_getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type,java.lang.Object).e1","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2","com.google.gson.reflect.TypeToken_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":["com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).e2","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t2","com.google.gson.reflect.TypeToken_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t6","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t5","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_java.lang.reflect.Type_getGenericComponentType().b","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl_com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_java.lang.Class_getRawType(java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e3","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).t3","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).e1","com.google.gson.internal.$Gson$Preconditions_void_checkArgument(boolean).b","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).b","com.google.gson.internal.$Gson$Preconditions_<T>_T_checkNotNull(T).e1","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e4","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_boolean_equals(java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equal(java.lang.Object,java.lang.Object).b","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e1","com.google.gson.internal.$Gson$Types_boolean_equals(java.lang.reflect.Type,java.lang.reflect.Type).e2"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).l2","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_int_hashCode().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getRawType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type_getOwnerType().b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_java.lang.reflect.Type[]_getActualTypeArguments().b","com.google.gson.internal.$Gson$Types_int_hashCodeOrZero(java.lang.Object).b","com.google.gson.internal.$Gson$Types_void_checkNotPrimitive(java.lang.reflect.Type).b","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl_com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]).t1"]},"type":"branch"},{"variables":{"com.google.gson.functional.ExclusionStrategyFunctionalTest.testExclusionStrategyWithMode":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()_type","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()_rawType","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()_ownerType","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()_rawType","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()_ownerType","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.UncategorizedTest.testReturningDerivedClassesDuringDeserialization":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.FieldNamingTest.testUpperCamelCase":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EnumTest.testClassWithEnumFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ConcurrencyTest.testSingleThreadSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveCharacterTest.testPrimitiveCharacterAutoboxedSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonTreeTest.testToJsonTreeObjectType":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomTypeAdaptersTest.testCustomSerializers":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.VersioningTest.testVersionedGsonWithUnversionedClassesDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.EscapingTest.testEscapeAllHtmlCharacters":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TypeHierarchyAdapterTest.testRegisterSuperTypeFirst":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InheritanceTest.testBaseSerializedAsBaseWhenSpecifiedWithExplicitType":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.DefaultInetAddressTypeAdapterTest.testInetAddressSerializationAndDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testFieldAnnotationTakesPrecedenceOverRegisteredTypeAdapter":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomDeserializerTest.testCustomDeserializerReturnsNull":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JsonParserTest.testReadWriteTwoObjects":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.SecurityTest.testNonExecutableJsonDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrimitiveTest.testDeserializeJsonObjectAsBigDecimal":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ExposeFieldsTest.testNoExposedFieldDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.TreeTypeAdapter.T read(com.google.gson.stream.JsonReader)_gson","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_typeTokenCache","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NullObjectAndFieldTest.testTopLevelNullObjectSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()_type","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.ObjectTypeAdapterTest.testSerialize":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()_type","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)_type","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InternationalizationTest.testStringsWithUnicodeChineseCharactersSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.CustomSerializerTest.testBaseClassSerializerInvokedForBaseClassFields":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.StringTest.testEscapingQuotesInStringSerialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.TypeAdapterPrecedenceTest.testNonstreamingHierarchicalFollowedByNonstreaming":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.internal.bind.ObjectTypeAdapter.void write(com.google.gson.stream.JsonWriter,java.lang.Object)_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.DefaultTypeAdaptersTest.testUriDeserialization":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.RuntimeTypeAdapterFactoryFunctionalTest.testSubclassesAutomaticallySerialzed":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.java.lang.reflect.Type getType()_type","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.GsonBuilderTest.testExcludeFieldsWithModifiers":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.GsonTypeAdapterTest.testDeserializerForAbstractClass":["com.google.gson.TreeTypeAdapter.void write(com.google.gson.stream.JsonWriter,T)_gson","com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.TreeTypeAdapter.com.google.gson.TypeAdapter delegate()_gson","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getDelegateAdapter(com.google.gson.TypeAdapterFactory,com.google.gson.reflect.TypeToken)_factories","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.InterfaceTest.testSerializingInterfaceObjectField":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.NamingPolicyTest.testGsonWithLowerCaseUnderscorePolicySerialization":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.JsonAdapterAnnotationOnClassesTest.testSuperclassTypeAdapterNotInvoked":["com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.void write(com.google.gson.stream.JsonWriter,T)_context","com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken)_factories"]},"type":"variable"},{"nodes":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":["com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":["com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.boolean equals(java.lang.Object)"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()"],"com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object)","com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()"]},"edges":{"com.google.gson.functional.TreeTypeAdaptersTest.testDeserializeId":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.LongSerializationPolicyTest.testDefaultLongSerializationIntegration":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.ParameterizedTypesTest.testVariableTypeDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()"],"com.google.gson.DefaultMapJsonSerializerTest.testEmptyMapSerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.JavaSerializationTest.testListIsSerializable":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.functional.CircularReferenceTest.testCircularSerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.PrettyPrintingTest.testPrettyPrintArrayOfPrimitiveArrays":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.InstanceCreatorTest.testInstanceCreatorForParametrizedType":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.FieldAttributesTest.testDeclaredTypeAndClass":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)"],"com.google.gson.functional.PrintFormattingTest.testCompactFormattingLeavesNoWhiteSpace":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.GenericArrayTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)"],"com.google.gson.functional.ThrowableFunctionalTest.testErrorWithoutCause":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()"],"com.google.gson.functional.MapTest.testMapOfMapDeserialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.functional.CollectionTest.testWildcardCollectionField":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getLowerBounds()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$WildcardTypeImpl.com.google.gson.internal.$Gson$Types$WildcardTypeImpl(java.lang.reflect.Type[],java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$WildcardTypeImpl.java.lang.reflect.Type[] getUpperBounds()"],"com.google.gson.functional.TypeVariableTest.testBasicTypeVariables":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)"],"com.google.gson.functional.DelegateTypeAdapterTest.testDelegateInvoked":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.functional.RawSerializationTest.testParameterizedObject":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.functional.ObjectTest.testClassWithTransientFieldsSerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.ArrayTest.testSingleNullInArraySerialization":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type)","com.google.gson.Gson.<T> com.google.gson.TypeAdapter getAdapter(com.google.gson.reflect.TypeToken) -> com.google.gson.reflect.TypeToken.boolean equals(java.lang.Object)","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.java.lang.reflect.Type getGenericComponentType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl.com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl(java.lang.reflect.Type)"],"com.google.gson.functional.MapAsArrayTypeAdapterTest.testSerializeComplexMapWithTypeAdapter":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.ParameterizedTypeTest.testOurTypeFunctionality":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types.boolean equal(java.lang.Object,java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.boolean equals(java.lang.Object) -> com.google.gson.internal.$Gson$Types.boolean equals(java.lang.reflect.Type,java.lang.reflect.Type)"],"com.google.gson.MixedStreamTest.testWriteHtmlSafe":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.functional.JsonParserTest.testExtraCommasInMaps":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.functional.StreamingTypeAdaptersTest.testSerializeWithCustomTypeAdapter":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor get(com.google.gson.reflect.TypeToken) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.CommentsTest.testParseComments":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()"],"com.google.gson.functional.MoreSpecificTypeSerializationTest.testListOfSubclassFields":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type getCollectionElementType(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"],"com.google.gson.functional.ReadersWritersTest.testTypeMismatchThrowsJsonSyntaxExceptionForReaders":["com.google.gson.internal.$Gson$Types.java.lang.Class getRawType(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.ConstructorConstructor.<T> com.google.gson.internal.ObjectConstructor newDefaultImplementationConstructor(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getRawType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type[] getMapKeyAndValueTypes(java.lang.reflect.Type,java.lang.Class) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type getOwnerType()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.reflect.TypeToken.com.google.gson.reflect.TypeToken() -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type resolve(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.java.lang.reflect.Type[] getActualTypeArguments()","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Preconditions.void checkArgument(boolean)","com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[])","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Preconditions.<T> T checkNotNull(T)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.int hashCode() -> com.google.gson.internal.$Gson$Types.int hashCodeOrZero(java.lang.Object)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.void checkNotPrimitive(java.lang.reflect.Type)","com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl.com.google.gson.internal.$Gson$Types$ParameterizedTypeImpl(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> com.google.gson.internal.$Gson$Types.java.lang.reflect.Type canonicalize(java.lang.reflect.Type)"]},"type":"graph"}]}]}