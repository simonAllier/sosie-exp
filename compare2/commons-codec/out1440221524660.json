{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"24e31eed-4335-11e5-bdf1-e3a75f0587e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(int)) == (java.lang.String.charAt(int))) {\n    int++;\n} "},"variableMap":{"es1":"value","es2":"value","i":"index","diff":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:538","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'J') {\n    int += 2;\n} else {\n    int++;\n}"},"status":1},{"failures":[],"tindex":"d12d1bbd-4310-11e5-b2b3-df3518f244f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:412","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"d\" + java.lang.String"},"variableMap":{"remainder":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:332","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = new java.lang.String(char[]).replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":0},{"failures":[],"tindex":"40735edc-439c-11e5-a67e-013875c1d716","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[])"},"variableMap":{"this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[])"},"status":0},{"failures":[],"tindex":"6062fa58-42ae-11e5-9926-391d17955b41","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:64","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.isEmpty()"},"variableMap":{"langs":"ls"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:191","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.add(java.lang.String)"},"status":1},{"failures":[],"tindex":"fd8fa374-42ae-11e5-934d-6ff62e069248","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:83","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"b\", \"p\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y\", \"A\")"},"status":1},{"failures":[],"tindex":"8f3cc6da-4314-11e5-84da-1d0fa02e011b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.Charsets:74","type":"CtReturnImpl","sourcecode":"return java.nio.charset.Charset == null ? java.nio.charset.Charset.defaultCharset() : java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:240","type":"CtReturnImpl","sourcecode":"return this.java.nio.charset.Charset"},"status":0},{"failures":[],"tindex":"e60d26b6-42c5-11e5-8b83-bdc86cae7149","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"blocksize":"pos","cnt":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:354","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"a4f3ccb1-4394-11e5-a05e-85f91608c3aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:816","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"variableMap":{"messageDigest":"ctx","valueToDigest":"prefix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:206","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":1},{"failures":[],"tindex":"479c7639-437c-11e5-88e4-6f564f052a34","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:301","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 2) {\n    final char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 2));\n    if ((char == 'A') && (char == 'Y')) {\n        java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2));\n    } \n} "},"variableMap":{"lastChar":"charZero","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:211","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setCharAt(0, char)"},"status":0},{"failures":[],"tindex":"03416066-4357-11e5-ae0e-c55cf80d12b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:483","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"011cc97b-434b-11e5-945a-37775c6d8301","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:502","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"status":0},{"failures":[],"tindex":"ab950956-434a-11e5-bf7b-eda1c49a16e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^[aeiou]\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:73","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"cq\", \"2q\")"},"status":1},{"failures":[],"tindex":"e00f05cd-42b6-11e5-afba-5f055bb42c23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:82","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ph\", \"fh\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:61","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^tough\", \"tou2f\")"},"status":1},{"failures":[],"tindex":"8aabfc69-4336-11e5-ad64-59024b08fbb1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:222","type":"CtTryImpl","sourcecode":"try {\n    java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>.put(java.lang.String, org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String), org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String)));\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalStateException((\"Problem processing \" + org.apache.commons.codec.language.bm.Rule.(org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String))) , java.lang.IllegalStateException);\n}"},"status":0},{"failures":[],"tindex":"6493069f-43ca-11e5-838a-a102f23b43b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:244","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.isLastChar(int, int)) {\n    break;\n} "},"variableMap":{"wdsz":"n","this":"this","n":"wdsz"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:193","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder, int, 'H')) {\n    if (((int == 0) && (int >= 3)) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, 2))) {\n        java.lang.StringBuilder.append('K');\n    } else {\n        java.lang.StringBuilder.append('X');\n    }\n} else {\n    java.lang.StringBuilder.append('K');\n}"},"status":0},{"failures":[],"tindex":"b0d55c6b-42b3-11e5-aa9a-5d88e93e9d08","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y\", \"A\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:273","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":0},{"failures":[],"tindex":"7b2635b3-42df-11e5-ab45-f16a8cfe20f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:166","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'M')) && org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) {\n    break;\n} "},"variableMap":{"wdsz":"n","this":"this","local":"code","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:284","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SH\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIO\"))) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIA\"))) {\n    java.lang.StringBuilder.append('X');\n} else {\n    java.lang.StringBuilder.append('S');\n}"},"status":0},{"failures":[],"tindex":"e87b692b-4398-11e5-bbc6-312acbff1bed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:415","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)"},"status":0},{"failures":[],"tindex":"8a683d1b-42e1-11e5-aa6c-572a0fffc98e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3$\", \"A\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:423","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":1},{"failures":[],"tindex":"e43f45a8-42df-11e5-8508-99f7302ff329","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:219","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"},"diffs":[{"transformation":"a4f3ccb1-4394-11e5-a05e-85f91608c3aa","diffs":[{"nodes":{"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":["org.apache.commons.codec.binary.StringUtils.byte[] getBytes(java.lang.String,java.nio.charset.Charset)","org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String)"],"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":["org.apache.commons.codec.binary.StringUtils.byte[] getBytes(java.lang.String,java.nio.charset.Charset)","org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String)"]},"edges":{"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":["org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String) -> org.apache.commons.codec.binary.StringUtils.byte[] getBytes(java.lang.String,java.nio.charset.Charset)","org.apache.commons.codec.digest.Md5Crypt.java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String) -> org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String)"],"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":["org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String) -> org.apache.commons.codec.binary.StringUtils.byte[] getBytes(java.lang.String,java.nio.charset.Charset)","org.apache.commons.codec.digest.Md5Crypt.java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String) -> org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String)"]},"type":"graph"}]},{"transformation":"6062fa58-42ae-11e5-9926-391d17955b41","diffs":[{"variables":{"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":["org.apache.commons.codec.language.bm.Lang.org.apache.commons.codec.language.bm.Languages$LanguageSet guessLanguages(java.lang.String)_rules"]},"type":"variable"}]},{"transformation":"24e31eed-4335-11e5-bdf1-e3a75f0587e6","diffs":[{"nodes":{},"edges":{"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":["org.apache.commons.codec.language.DoubleMetaphone.int handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> org.apache.commons.codec.language.DoubleMetaphone.char charAt(java.lang.String,int)"],"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":["org.apache.commons.codec.language.DoubleMetaphone.int handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean) -> org.apache.commons.codec.language.DoubleMetaphone.char charAt(java.lang.String,int)"]},"type":"graph"},{"branches":{"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":["org.apache.commons.codec.language.DoubleMetaphone_int_handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean).e7","org.apache.commons.codec.language.DoubleMetaphone_int_handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean).t7"],"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":["org.apache.commons.codec.language.DoubleMetaphone_int_handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean).e7","org.apache.commons.codec.language.DoubleMetaphone_int_handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean).t7"],"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":["org.apache.commons.codec.language.DoubleMetaphone_int_handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean).e7","org.apache.commons.codec.language.DoubleMetaphone_int_handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean).t7"]},"type":"branch"}]}]}