{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"224894a5-42af-11e5-b0d2-4f43ab85518d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (int < (int - int)) {\n    java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    int += int;\n}"},"variableMap":{"blocksize":"i","tempResult":"bytes","pBytes":"bytes","keyLen":"i","cp":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:360","type":"CtTryImpl","sourcecode":"try {\n    if ((byte[][++int]) == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        continue;\n    } \n    final int int = org.apache.commons.codec.net.Utils.digit16(byte[][int]);\n    final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n    java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n} catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , java.lang.ArrayIndexOutOfBoundsException);\n}"},"status":0},{"failures":[],"tindex":"03409d0d-4357-11e5-ae0e-d1ba429f608a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 31)"},"variableMap":{"left":"currentLine","right":"currentLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:256","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"7acdd295-42ae-11e5-bf53-bdb9accebc8b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"variableMap":{"u":"i","y":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:362","type":"CtIfImpl","sourcecode":"if ((byte[][++int]) == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    continue;\n} "},"status":0},{"failures":[],"tindex":"e004f18b-4316-11e5-b5cc-6f09e139c40a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:411","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:87","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"b\", \"p\")"},"status":1},{"failures":[],"tindex":"54df0558-4343-11e5-b8d0-d748f145e0ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:159","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"variableMap":{"line":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:60","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^rough\", \"rou2f\")"},"status":1},{"failures":[],"tindex":"8d8500a2-4340-11e5-bacb-23aced4d6e46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"366f1457-42ae-11e5-9082-e14e73273dd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3$\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:77","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"tch\", \"2ch\")"},"status":1},{"failures":[],"tindex":"1d6c8c00-42f2-11e5-be12-2f5eacf2c01e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (int + 1) == int"},"variableMap":{"wdsz":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:782","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"CHIA\")) {\n    return true;\n} else if (int <= 1) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 2)))) {\n    return false;\n} else if (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 2));\n    return ((char != 'I') && (char != 'E')) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"status":1},{"failures":[],"tindex":"eb0afebe-42dd-11e5-926d-5bf697ba7fd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"b":"roundsCustom","encodeBlanks":"roundsCustom"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"407310b9-439c-11e5-a67e-371a42e35c3a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:457","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":1},{"failures":[],"tindex":"e1543db9-43ee-11e5-9023-d90fd2ce43ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:447","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) << (org.apache.commons.codec.binary.Base64.int)) + int"},"variableMap":{"result":"pos","ibitWorkArea":"pos","context":"context","org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"a26c59d5-42e2-11e5-ad7c-ad6d2408fe85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)"},"variableMap":{"str":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:429","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase(java.util.Locale.java.util.Locale)"},"status":1},{"failures":[],"tindex":"5995cbc8-42ae-11e5-a138-9356987a915d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"right","encodeSize":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:312","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":1},{"failures":[],"tindex":"dc807369-4348-11e5-848e-ef3f5e41b736","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"c":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:404","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"a3d18c95-42ae-11e5-bf7c-39ac07010d66","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:230","type":"CtAssignmentImpl","sourcecode":"byte[][8] = 0"},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 8) & 255))"},"status":1},{"failures":[],"tindex":"011cc97d-434b-11e5-945a-e93078ab7c48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:242","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.this(int, byte[], false)"},"variableMap":{"this":"this","lineSeparator":"org.apache.commons.codec.binary.Base64.CHUNK_SEPARATOR","lineLength":"lineLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:215","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.this(int, org.apache.commons.codec.binary.Base64.byte[])"},"status":0},{"failures":[],"tindex":"40747055-439c-11e5-a67e-396f53dc8b6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = int & int"},"variableMap":{"v":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT","e0":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:139","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.Sha2Crypt.int"},"status":0},{"failures":[],"tindex":"a3d16582-42ae-11e5-bf7c-934567652545","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:735","type":"CtIfImpl","sourcecode":"if (java.math.BigInteger == null) {\n    throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\");\n} "},"status":0},{"failures":[],"tindex":"d7b3ec14-42b3-11e5-b62d-2d86087ec0d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:141","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.util.Scanner.nextLine()"},"variableMap":{"scanner":"lsScanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.util.Scanner.nextLine().trim()"},"status":1},{"failures":[],"tindex":"7614ae4f-4311-11e5-baf1-c58d475dae07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(byte[])"},"variableMap":{"base64Data":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"},"diffs":[{"transformation":"a26c59d5-42e2-11e5-ad7c-ad6d2408fe85","diffs":[{"nodes":{"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":["org.apache.commons.codec.language.SoundexUtils.java.lang.String clean(java.lang.String)"]},"edges":{"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":["org.apache.commons.codec.language.ColognePhonetic.java.lang.String preprocess(java.lang.String) -> org.apache.commons.codec.language.SoundexUtils.java.lang.String clean(java.lang.String)"]},"type":"graph"}]},{"transformation":"8d8500a2-4340-11e5-bacb-23aced4d6e46","diffs":[{"branches":{"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":["org.apache.commons.codec.binary.Base64_void_decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).t2","org.apache.commons.codec.binary.Base64_void_encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).t3","org.apache.commons.codec.binary.Base64_void_decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).e7"]},"type":"branch"}]},{"transformation":"1d6c8c00-42f2-11e5-be12-2f5eacf2c01e","diffs":[{"nodes":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":["org.apache.commons.codec.language.DoubleMetaphone.boolean isVowel(char)"]},"edges":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":["org.apache.commons.codec.language.DoubleMetaphone.boolean conditionC0(java.lang.String,int) -> org.apache.commons.codec.language.DoubleMetaphone.char charAt(java.lang.String,int)","org.apache.commons.codec.language.DoubleMetaphone.boolean conditionC0(java.lang.String,int) -> org.apache.commons.codec.language.DoubleMetaphone.boolean contains(java.lang.String,int,int,java.lang.String[])","org.apache.commons.codec.language.DoubleMetaphone.boolean conditionC0(java.lang.String,int) -> org.apache.commons.codec.language.DoubleMetaphone.boolean isVowel(char)"],"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":["org.apache.commons.codec.language.DoubleMetaphone.boolean conditionC0(java.lang.String,int) -> org.apache.commons.codec.language.DoubleMetaphone.char charAt(java.lang.String,int)","org.apache.commons.codec.language.DoubleMetaphone.boolean conditionC0(java.lang.String,int) -> org.apache.commons.codec.language.DoubleMetaphone.boolean contains(java.lang.String,int,int,java.lang.String[])","org.apache.commons.codec.language.DoubleMetaphone.boolean conditionC0(java.lang.String,int) -> org.apache.commons.codec.language.DoubleMetaphone.boolean isVowel(char)"]},"type":"graph"},{"branches":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":["org.apache.commons.codec.language.DoubleMetaphone_boolean_isVowel(char).b"],"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":["org.apache.commons.codec.language.DoubleMetaphone_int_handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int).t1"]},"type":"branch"}]},{"transformation":"a3d16582-42ae-11e5-bf7c-934567652545","diffs":[{"nodes":{"org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull":["org.apache.commons.codec.binary.Base64.byte[] toIntegerBytes(java.math.BigInteger)"]},"edges":{"org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull":["org.apache.commons.codec.binary.Base64.byte[] encodeInteger(java.math.BigInteger) -> org.apache.commons.codec.binary.Base64.byte[] toIntegerBytes(java.math.BigInteger)"]},"type":"graph"},{"branches":{"org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull":["org.apache.commons.codec.binary.Base64_byte[]_toIntegerBytes(java.math.BigInteger).b"]},"type":"branch"}]}]}