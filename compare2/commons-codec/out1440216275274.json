{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"71ea8b2b-42dd-11e5-8207-336e42f0158c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('}')"},"status":0},{"failures":[],"tindex":"860201df-436e-11e5-94ac-396740209186","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"tempResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[],"tindex":"7c39558d-43d7-11e5-aa25-5d78dff59193","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:434","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"f280b802-42f9-11e5-abf5-8fa1ff3bdbb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:221","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"140bd999-43c4-11e5-87ab-89cbffc591b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:321","type":"CtReturnImpl","sourcecode":"return null"},"status":1},{"failures":[],"tindex":"1a82c31e-42b1-11e5-b227-d9b104fa0e1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:289","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"224894a5-42af-11e5-b0d2-4f43ab85518d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (int < (int - int)) {\n    java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    int += int;\n}"},"variableMap":{"blocksize":"i","tempResult":"bytes","pBytes":"bytes","keyLen":"i","cp":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:360","type":"CtTryImpl","sourcecode":"try {\n    if ((byte[][++int]) == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        continue;\n    } \n    final int int = org.apache.commons.codec.net.Utils.digit16(byte[][int]);\n    final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n    java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n} catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n    throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , java.lang.ArrayIndexOutOfBoundsException);\n}"},"status":0},{"failures":[],"tindex":"dc3c46d1-4478-11e5-94d9-af005826121e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[],"tindex":"d37417c5-42db-11e5-8f6b-0765aa5bf46a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:102","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"why\", \"Why\")"},"status":0},{"failures":[],"tindex":"fd8fa374-42ae-11e5-934d-6ff62e069248","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:83","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"b\", \"p\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y\", \"A\")"},"status":1},{"failures":[],"tindex":"eb0afebe-42dd-11e5-926d-5bf697ba7fd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"b":"roundsCustom","encodeBlanks":"roundsCustom"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"e5d494bf-4335-11e5-8c8e-77d2447f7b2a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:166","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'M')) && org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) {\n    break;\n} "},"variableMap":{"wdsz":"n","this":"this","local":"code","n":"wdsz"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:313","type":"CtIfImpl","sourcecode":"if ((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, (int + 1)))) {\n    java.lang.StringBuilder.append(char);\n} "},"status":0},{"failures":[],"tindex":"bd7b1b49-437e-11e5-9c55-5bcf3bbd3418","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"c":"currentLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:256","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"8bfcbd12-42ad-11e5-b582-f358589e8aca","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:74","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"c\", \"k\")"},"status":1},{"failures":[],"tindex":"3f98e9a7-42f3-11e5-a086-89833e4d4ef1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:321","type":"CtReturnImpl","sourcecode":"return null"},"status":1},{"failures":[],"tindex":"0a61d389-433c-11e5-bbf1-416a2ea18abc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()"},"status":0},{"failures":[],"tindex":"71ea6412-42dd-11e5-8207-d9d7811bf61c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:771","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Z' ? int + 2 : int + 1"},"variableMap":{"this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:133","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int, boolean)"},"status":0},{"failures":[],"tindex":"f6725e61-42cc-11e5-908f-ed39f90ef2d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:108","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w$\", \"3\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:269","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"Y\")"},"status":1},{"failures":[],"tindex":"f63f1602-42ed-11e5-98a9-47563c4b82af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:384","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme starts with \\'(\\' so must end with \\')\\'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"status":0},{"failures":[],"tindex":"bfc9be52-42ed-11e5-b1e6-f72dde66dc86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha384(byte[])"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"},"diffs":[{"transformation":"0a61d389-433c-11e5-bbf1-416a2ea18abc","diffs":[{"nodes":{"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()"],"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()"],"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()"],"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()"]},"edges":{"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)"],"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)"],"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean) -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)"],"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean) -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)"]},"type":"graph"},{"branches":{"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush(boolean).t3","org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush().b"],"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush(boolean).t3","org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush().b"],"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush(boolean).t3","org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush().b"],"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush(boolean).t3","org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush().b"]},"type":"branch"}]}]}