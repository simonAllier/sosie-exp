{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":159,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":17,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":188,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":104,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":62,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":90,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":128,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":112,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":114,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":36,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":111,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":4,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":124,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":40,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":149,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":109,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":127,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":133,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsOne":186,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":145,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":122,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":181,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":116,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":168,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":92,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":156,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":49,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":53,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":147,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":152,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":25,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":77,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":83,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":171,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":27,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":67,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":91,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":117,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":113,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":180,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":7,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":119,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":9,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":102,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":182,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":183,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":184,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":12,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":14,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":42,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":143,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":78,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":79,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":120,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":115,"org.eclipse.jgit.api.GitConstructionTest.testClose":86,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":8,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":28,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":101,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":21,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":125,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":16,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":142,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":89,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":95,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":18,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":144,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":20,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":13,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":37,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":34,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":19,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":106,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":151,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":165,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":97,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":157,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":138,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":85,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessageWithCRLF":190,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":51,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":38,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":75,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":72,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":10,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":33,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":23,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":140,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":134,"org.eclipse.jgit.api.FetchCommandTest.testFetch":69,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":154,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":169,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":129,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":46,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":82,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":43,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":108,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":172,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":130,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":80,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":6,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":96,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":176,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":137,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":110,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":35,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":141,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":93,"org.eclipse.jgit.api.PushCommandTest.testPush":66,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":153,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":177,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":136,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":60,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":41,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":61,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":59,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":65,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":58,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":47,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":45,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":52,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":175,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":174,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":5,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":131,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":107,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":132,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":150,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches":187,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":100,"org.eclipse.jgit.api.GitConstructionTest.testWrap":88,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":118,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":74,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":160,"org.eclipse.jgit.api.GitConstructionTest.testOpen":87,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":30,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":39,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":84,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":31,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":68,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":99,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":123,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":178,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":71,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":179,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":44,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":146,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":15,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":98,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":121,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":76,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":135,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsMany":185,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":3,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":126,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":167,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":166,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":64,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":81,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":170,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":26,"org.eclipse.jgit.util.RefMapTest.testToString_NoPrefix":192,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":1,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":24,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":57,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":56,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":103,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":55,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":161,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":54,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":163,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":105,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":164,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":32,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":63,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":139,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":155,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":11,"org.eclipse.jgit.api.NameRevCommandTest.ref":189,"org.eclipse.jgit.util.RefMapTest.testToString_WithPrefix":191,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":73,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":158,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":48,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":148,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":173,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":94,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":2,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":22,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":162},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,86,87,87,88,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"tindex":"96359f97-4c71-11e5-8a1c-2704f486743a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:340","type":"CtReturnImpl","sourcecode":"return (int) + ((int ^ (int)) & 1)"},"variableMap":{"minK":"cnt","k":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ByteWindow:102","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.ByteWindow.copy(((int)(long - (long))), byte[], int, int)"},"status":-1},{"failures":[182,183,184],"tindex":"9636ff28-4c71-11e5-8a1c-3f74ed621995","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2402","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = java.lang.Runtime.getRuntime().availableProcessors();\n"},"variableMap":{"threads":"pIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:822","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.blame.BlameGenerator.push(org.eclipse.jgit.blame.Candidate[][int])"},"status":-1},{"failures":[185,186,51],"tindex":"9636ff29-4c71-11e5-8a1c-195531ac7644","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:178","type":"CtReturnImpl","sourcecode":"return (((((long)(int)) << 24) | (int << 16)) | (int << 8)) | int"},"variableMap":{"b2":"position","b3":"position","b0":"position","b1":"position"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:136","type":"CtReturnImpl","sourcecode":"return 1L << int"},"status":-1},{"failures":[],"tindex":"9636ff2a-4c71-11e5-8a1c-65abd5ed0c83","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:247","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.dircache.DirCacheTree org.eclipse.jgit.dircache.DirCacheTree = org.eclipse.jgit.dircache.DirCacheTree.getChild(int)"},"variableMap":{"nextSubtreePos":"nextSubtreePos","tree":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:239","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.dircache.DirCacheTree org.eclipse.jgit.dircache.DirCacheTree = org.eclipse.jgit.dircache.DirCacheTree.getChild(((int) - 1))"},"status":-2},{"failures":[52,59,60,61,62,63],"tindex":"9636ff2b-4c71-11e5-8a1c-b3d843de1258","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:882","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = -(int + 1);\n"},"variableMap":{"eIdx":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:192","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.getDeltaBaseId().copyRawTo(byte[], int)"},"status":-1},{"failures":[51,22,64],"tindex":"9636ff2c-4c71-11e5-8a1c-af740419fdf5","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:199","type":"CtAssignmentImpl","sourcecode":"long = 0"},"variableMap":{"cw":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.NB:130","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 8"},"status":-1},{"failures":[],"tindex":"9637263d-4c71-11e5-8a1c-bd13191547ec","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:579","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[187],"tindex":"9637263e-4c71-11e5-8a1c-b5735a4df936","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.WalkRemoteObjectDatabase:339","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"P \")"},"variableMap":{"w":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.StringUtils:261","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":-1},{"failures":[],"tindex":"9637263f-4c71-11e5-8a1c-9f2381bfbdae","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:543","type":"CtReturnImpl","sourcecode":"return ((org.eclipse.jgit.lib.ObjectId)(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectId:279","type":"CtReturnImpl","sourcecode":"return this"},"status":0},{"failures":[188,189],"tindex":"96372640-4c71-11e5-8a1c-a7d8e9106f11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:144","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue)"},"status":-1},{"failures":[190],"tindex":"96372641-4c71-11e5-8a1c-f37077eeede6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:366","type":"CtAssignmentImpl","sourcecode":"int = int + (org.eclipse.jgit.lib.Constants.int)"},"variableMap":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"i","nextPtr":"i","ptr":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.StringUtils:299","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"96372642-4c71-11e5-8a1c-498f88b2a9bd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:119","type":"CtIfImpl","sourcecode":"if ((java.util.concurrent.atomic.AtomicInteger.decrementAndGet()) == 0)\n    java.util.concurrent.Semaphore.release();\n"},"status":-1},{"failures":[191,192],"tindex":"96372643-4c71-11e5-8a1c-5d6bc26ba23a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:273","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(']')"},"status":-1},{"failures":[],"tindex":"96374c54-4c71-11e5-8a1c-6d6f51112d6a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:142","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheEntry != null) {\n    if (org.eclipse.jgit.dircache.DirCacheEntry.isAssumeValid())\n        return false;\n    \n    if ((org.eclipse.jgit.dircache.DirCacheEntry.getStage()) != 0)\n        return true;\n    \n} "},"variableMap":{"dce":"ourDce"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:594","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.merge.ResolveMerger.(org.eclipse.jgit.merge.ResolveMerger.nonTree(int)) && org.eclipse.jgit.merge.ResolveMerger.(org.eclipse.jgit.merge.ResolveMerger.nonTree(int))) {\n    if (org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry))\n        return false;\n    \n    if (org.eclipse.jgit.merge.ResolveMerger.(org.eclipse.jgit.merge.ResolveMerger.isGitLink(int)) || org.eclipse.jgit.merge.ResolveMerger.(org.eclipse.jgit.merge.ResolveMerger.isGitLink(int))) {\n        org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n        return true;\n    } \n    org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText> org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText> = org.eclipse.jgit.merge.ResolveMerger.contentMerge(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    if (boolean)\n        org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>.setContainsConflicts(false);\n    \n    org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>);\n    if ((org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>.containsConflicts()) && (!boolean))\n        java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n    \n    java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n} else if (int != int) {\n    if (((int != 0) && (!(org.eclipse.jgit.treewalk.NameConflictTreeWalk.idEqual(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.merge.ResolveMerger.int)))) || ((int != 0) && (!(org.eclipse.jgit.treewalk.NameConflictTreeWalk.idEqual(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.merge.ResolveMerger.int))))) {\n        org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        if (int == 0) {\n            if (org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry))\n                return false;\n            \n            if (org.eclipse.jgit.merge.ResolveMerger.org.eclipse.jgit.merge.ResolveMerger.nonTree(int)) {\n                if (org.eclipse.jgit.dircache.DirCacheEntry != null)\n                    java.util.Map<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.dircache.DirCacheEntry);\n                \n            } \n        } \n        java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n        java.util.Map<java.lang.String, org.eclipse.jgit.merge.MergeResult<? extends org.eclipse.jgit.diff.Sequence>>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.merge.ResolveMerger.contentMerge(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser));\n    } \n} "},"status":0},{"failures":[],"tindex":"96374c55-4c71-11e5-8a1c-bbfb41d7678e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1405","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"branch is currently checked out\")"},"variableMap":{"r":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandProgressMonitor:114","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\")\")"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}