{"failureDictionary":{"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":20,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":5,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":56,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":30,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":39,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":6,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":15,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":2,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":13,"org.eclipse.jgit.events.ConfigChangeEventTest.testFileRepository_ChangeEventsOnlyOnSave":88,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":3,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":27,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":24,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":72,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":8,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":34,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":90,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit_IndexChangedEvent":87,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":11,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":46,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":36,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":41,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":47,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":12,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":43,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":22,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":79,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":48,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":66,"org.eclipse.jgit.transport.OpenSshConfigTest.testQuoteParsing":0,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":23,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":59,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":55,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":69,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":1,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":91,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":37,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":77,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":60,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow":86,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":38,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":52,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree":81,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":89,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":31,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":71,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":10,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":18,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":73,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":75,"org.eclipse.jgit.lib.ConfigTest.testReadLong":57,"org.eclipse.jgit.lib.ConfigTest.test008_readSectionNames":65,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":19,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":14,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":61,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":26,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":42,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":51,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":76,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles":83,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":16,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":4,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":28,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":21,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":25,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":74,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":7,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":62,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":64,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":78,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":85,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":9,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":54,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":67,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":32,"org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey":58,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":80,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":53,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":63,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":82,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":33,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":45,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":68,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":29,"org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive":44,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles":84,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":49,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":17,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":35,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":40,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":50,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":70},"transformations":[{"failures":[0],"tindex":"e9b70d63-4c84-11e5-a8a5-5d162904ee82","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1304","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(java.lang.String))\n    return java.lang.String;\n"},"variableMap":{"remotePrefix":"value","refName":"value","remote":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:283","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"\\\"\")) && (java.lang.String.endsWith(\"\\\"\")))\n    return java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"e9b73474-4c84-11e5-a8a5-4b5a9f9e5343","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:381","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    break;\n"},"variableMap":{"r":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1052","type":"CtIfImpl","sourcecode":"if ((';' == char) || ('#' == char)) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String.valueOf(char);\n} else if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null) && (java.lang.Character.isWhitespace(char))) {\n    if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null)\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n} else if ('[' == char) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader);\n    int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if ('\\\"' == int) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"');\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n    } \n    if (']' != int)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n} else if (org.eclipse.jgit.lib.ConfigLine != null) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.Config.StringReader.reset();\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader);\n    if (org.eclipse.jgit.lib.ConfigLine.java.lang.String.endsWith(\"\\n\")) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String.substring(0, ((org.eclipse.jgit.lib.ConfigLine.java.lang.String.length()) - 1));\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.java.lang.String;\n    } else\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, false, -1);\n    \n} else\n    throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-1},{"failures":[80],"tindex":"e9b73475-4c84-11e5-a8a5-85da7ce05f78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation:79","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.long = long"},"status":-2},{"failures":[],"tindex":"e9b73476-4c84-11e5-a8a5-9fefd9772ddf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1:136","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1.writeBitmapEntry(org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.StoredEntry)"},"status":-2},{"failures":[],"tindex":"e9b73477-4c84-11e5-a8a5-8f17265d3b30","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.SystemReader:156","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.SystemReader.init()"},"status":-2},{"failures":[],"tindex":"e9b75b88-4c84-11e5-a8a5-b7ccaee036a9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:320","type":"CtIfImpl","sourcecode":"if ((long) != (-1))\n    long = (java.lang.System.currentTimeMillis()) - (long);\n"},"status":-2},{"failures":[],"tindex":"e9b75b89-4c84-11e5-a8a5-6d8929ecbe17","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Tree:378","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.TreeEntry[] = org.eclipse.jgit.lib.TreeEntry[]"},"variableMap":{"contents":"temp","n":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:525","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.TreeEntry[] = new org.eclipse.jgit.lib.TreeEntry[int]"},"status":-2},{"failures":[81,82,83,84],"tindex":"e9b75b8a-4c84-11e5-a8a5-59f893e0c4fa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:519","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheTree[][int] = null"},"variableMap":{"children":"children","n":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:165","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheTree[][int] = new org.eclipse.jgit.dircache.DirCacheTree(byte[] , org.eclipse.jgit.util.MutableInteger , this)"},"status":-1},{"failures":[],"tindex":"e9b75b8b-4c84-11e5-a8a5-35d9adcff4fd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:280","type":"CtWhileImpl","sourcecode":"while ((int < int) && (int > 0))\n    int <<= 1;"},"variableMap":{"newCapacity":"hash","capacity":"blockHashedCnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:151","type":"CtDoImpl","sourcecode":"do {\n    int int = (byte[][int++]) & 255;\n    if (((boolean && (int == '\\r')) && (int < int)) && ((byte[][int]) == '\\n'))\n        continue;\n    \n    int++;\n    if (int == '\\n')\n        break;\n    \n    int = ((int << 5) + int) + int;\n} while ((int < int) && ((int - int) < 64) )"},"status":-2},{"failures":[85,86,87,88],"tindex":"e9b75b8c-4c84-11e5-a8a5-1d971ba78404","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.events.ListenerList:140","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.events.ListenerHandle>.remove(org.eclipse.jgit.events.ListenerHandle)"},"variableMap":{"handle":"handle","list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.events.ListenerList:134","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.events.ListenerHandle>.add(org.eclipse.jgit.events.ListenerHandle)"},"status":-1},{"failures":[89],"tindex":"e9b7829d-4c84-11e5-a8a5-7b41204c4598","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:626","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{"startCommit":"notesCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RemoveNoteCommand:92","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId())"},"status":-1},{"failures":[90],"tindex":"e9b7829e-4c84-11e5-a8a5-f97be2cc17b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:246","type":"CtWhileImpl","sourcecode":"while ((!(java.util.LinkedList<java.lang.String>.isEmpty())) && (java.util.LinkedList<java.lang.String>.getLast().startsWith(java.lang.String)))\n    java.util.LinkedList<java.lang.String>.removeLast();"},"status":-1},{"failures":[91],"tindex":"e9b7829f-4c84-11e5-a8a5-19a474c6c4c5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:413","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 7"},"variableMap":{"sz":"contextLines"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DiffCommand:235","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[],"tindex":"e9b782a0-4c84-11e5-a8a5-a782b1ed351f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:879","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String[][int]))\n    return org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef;\n"},"status":0},{"failures":[],"tindex":"e9b782a1-4c84-11e5-a8a5-bd9a7b74136d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.URIish:352","type":"CtIfImpl","sourcecode":"if (((((java.lang.String.length()) >= 3) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(2)) == ':')) && ((((java.lang.String.charAt(1)) >= 'A') && ((java.lang.String.charAt(1)) <= 'Z')) || (((java.lang.String.charAt(1)) >= 'a') && ((java.lang.String.charAt(1)) <= 'z'))))\n    return java.lang.String.substring(1);\nelse if ((((java.lang.String != null) && ((java.lang.String.length()) >= 2)) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(1)) == '~'))\n    return java.lang.String.substring(1);\nelse\n    return java.lang.String;\n"},"variableMap":{"p":"remote","s":"remote"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BranchConfig:181","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}