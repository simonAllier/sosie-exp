{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":119,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":42,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig":56,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":89,"org.eclipse.jgit.api.BlameCommandTest.testRename":15,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":83,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":90,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase":70,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":105,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":114,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":98,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":100,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":55,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":97,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":13,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":88,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":125,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":36,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":94,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":35,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":34,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference":27,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":33,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":95,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":123,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":14,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":80,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":6,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":96,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":117,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":45,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":82,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow":62,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":102,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":49,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":63,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName":66,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_16384":134,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":23,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":19,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":20,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":61,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":58,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":30,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase":76,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":57,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":110,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":93,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference":46,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":60,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":48,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":81,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":85,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":109,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":7,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":126,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":12,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":18,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":77,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":115,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":103,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":99,"org.eclipse.jgit.api.TagCommandTest.testTagging":106,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":67,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":127,"org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDevicesOnWindows":129,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":38,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":39,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":8,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":4,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":5,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":9,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":16,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":65,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":0,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":17,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":40,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":21,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":25,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":1,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":111,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":2,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":64,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":3,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":54,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":74,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":44,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":73,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":50,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":72,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":71,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":31,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":121,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":122,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":101,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":120,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":59,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":24,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":52,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":22,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":26,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":84,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":28,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":53,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":11,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":32,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":124,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":113,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":79,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":87,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":69,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":75,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":86,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":107,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":78,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":47,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":116,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":91,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":43,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":112,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":41,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":51,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":118,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":68,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference":37,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":104,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":92,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4096":133,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":10,"org.eclipse.jgit.api.TagCommandTest.testDelete":108,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4095":132,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4094":131,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":128,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4090":130},"transformations":[{"failures":[],"tindex":"2857fd02-4c5e-11e5-a6fe-ad44876aaafe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:565","type":"CtAssignmentImpl","sourcecode":"java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> = java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>"},"variableMap":{"lastPackedRefs":"refList","refsBefore":"refList"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ListTagCommand:83","type":"CtAssignmentImpl","sourcecode":"java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.lib.Repository.getRefDatabase().getRefs(org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"28582413-4c5e-11e5-a6fe-e7bf70360aa1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.InitCommand:94","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.RepositoryBuilder.getGitDir()) == null) {\n    java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getProperty(\"user.dir\");\n    if (java.lang.String == null)\n        java.lang.String = \".\";\n    \n    java.io.File java.io.File = new java.io.File(java.lang.String);\n    if (!(boolean))\n        java.io.File = new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String);\n    \n    org.eclipse.jgit.lib.RepositoryBuilder.setGitDir(java.io.File);\n} else {\n    if (!(boolean)) {\n        java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getProperty(\"user.dir\");\n        if (java.lang.String == null)\n            java.lang.String = \".\";\n        \n        org.eclipse.jgit.lib.RepositoryBuilder.setWorkTree(new java.io.File(java.lang.String));\n    } \n}"},"variableMap":{"org.eclipse.jgit.lib.Constants.DOT_GIT":"org.eclipse.jgit.lib.Constants.DOT_GIT","builder":"builder","bare":"bare"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.InitCommand:86","type":"CtIfImpl","sourcecode":"if ((java.io.File) != null) {\n    if (boolean)\n        org.eclipse.jgit.lib.RepositoryBuilder.setGitDir(java.io.File);\n    else {\n        org.eclipse.jgit.lib.RepositoryBuilder.setWorkTree(java.io.File);\n        if ((java.io.File) == null)\n            org.eclipse.jgit.lib.RepositoryBuilder.setGitDir(new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String));\n        \n    }\n} else if ((org.eclipse.jgit.lib.RepositoryBuilder.getGitDir()) == null) {\n    java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getProperty(\"user.dir\");\n    if (java.lang.String == null)\n        java.lang.String = \".\";\n    \n    java.io.File java.io.File = new java.io.File(java.lang.String);\n    if (!(boolean))\n        java.io.File = new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String);\n    \n    org.eclipse.jgit.lib.RepositoryBuilder.setGitDir(java.io.File);\n} else {\n    if (!(boolean)) {\n        java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getProperty(\"user.dir\");\n        if (java.lang.String == null)\n            java.lang.String = \".\";\n        \n        org.eclipse.jgit.lib.RepositoryBuilder.setWorkTree(new java.io.File(java.lang.String));\n    } \n}"},"status":-2},{"failures":[0],"tindex":"28584b24-4c5e-11e5-a6fe-6948c32d12a9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:132","type":"CtIfImpl","sourcecode":"if ((int) > (byte[].int))\n    return int;\n"},"variableMap":{"len":"ptr","length":"length","binbuf":"org.eclipse.jgit.patch.BinaryHunk.DELTA","binbufcnt":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.BinaryHunk:123","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.BinaryHunk.byte[])) >= 0) {\n    org.eclipse.jgit.patch.BinaryHunk.Type = org.eclipse.jgit.patch.BinaryHunk.Type.org.eclipse.jgit.patch.BinaryHunk.Type;\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.BinaryHunk.byte[].int)), null);\n} else {\n    return -1;\n}"},"status":-1},{"failures":[],"tindex":"28584b25-4c5e-11e5-a6fe-e5f3d2e985fe","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:318","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator = null"},"variableMap":{"dfConflict":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:165","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator"},"status":-2},{"failures":[],"tindex":"28587236-4c5e-11e5-a6fe-a1cf80a6b41a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.LeadingAsteriskMatcher:78","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"28587237-4c5e-11e5-a6fe-818c1be64998","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.DepthGenerator:173","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.DepthWalk.Commit"},"variableMap":{"c":"base"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.Merger:284","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"28587238-4c5e-11e5-a6fe-79f2795746bb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:101","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:122","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit.getParentCount()"},"status":-1},{"failures":[],"tindex":"28587239-4c5e-11e5-a6fe-67e1553af62c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:395","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.FetchProcess.wantTag(org.eclipse.jgit.lib.Ref)"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"2858994a-4c5e-11e5-a6fe-334e447b4ffc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:165","type":"CtInvocationImpl","sourcecode":"java.io.OutputStreamWriter.write(\"object \")"},"status":-1},{"failures":[129],"tindex":"2858994b-4c5e-11e5-a6fe-bf10084d0bc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:653","type":"CtIfImpl","sourcecode":"if (((((int - int) >= 3) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 1)])) == 'r')) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 2)])) == 'n')) && (((int - int) == 3) || ((byte[][(int + 3)]) == '.')))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'PRN\\'\");\n"},"status":-1},{"failures":[],"tindex":"2858994c-4c5e-11e5-a6fe-9315d83ae00d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommit:126","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.revplot.PlotCommit org.eclipse.jgit.revplot.PlotCommit : org.eclipse.jgit.revplot.PlotCommit[])\n    if (org.eclipse.jgit.revplot.PlotCommit.getId().equals(org.eclipse.jgit.revplot.PlotCommit.getId()))\n        return ;\n    "},"variableMap":{"c":"c","children":"dst"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:331","type":"CtWhileImpl","sourcecode":"while (((int) <= int) && (int < (org.eclipse.jgit.revwalk.RevObjectList.int))) {\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.next();\n    if (org.eclipse.jgit.revwalk.RevCommit == null) {\n        org.eclipse.jgit.revwalk.RevWalk = null;\n        return ;\n    } \n    org.eclipse.jgit.revwalk.RevCommitList<E>.enter((int)++, ((E)(org.eclipse.jgit.revwalk.RevCommit)));\n    java.lang.Object[][int++] = org.eclipse.jgit.revwalk.RevCommit;\n}"},"status":-2},{"failures":[],"tindex":"2858c05d-4c5e-11e5-a6fe-99569f4bbc66","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CleanCommand:94","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.TreeSet<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:818","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(((java.lang.String[].int) << 1))"},"status":-2},{"failures":[],"tindex":"2858c05e-4c5e-11e5-a6fe-6925e86ec119","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.DepthGenerator:129","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.DepthWalk.Commit == null)\n    return null;\n"},"variableMap":{"c":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:87","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.parse(new org.eclipse.jgit.revwalk.RevWalk(((org.eclipse.jgit.lib.ObjectReader)(null))), byte[])"},"status":-2},{"failures":[],"tindex":"2858c05f-4c5e-11e5-a6fe-27a1b2198862","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:206","type":"CtOperatorAssignmentImpl","sourcecode":"int &= org.eclipse.jgit.internal.storage.pack.ObjectToPack.int"},"variableMap":{"flags":"nextMode","org.eclipse.jgit.internal.storage.pack.ObjectToPack.NON_DELTA_MASK":"nextMode"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:318","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 3"},"status":0},{"failures":[130,131,132,133,134],"tindex":"2858e770-4c5e-11e5-a6fe-89f98714d600","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:175","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, org.eclipse.jgit.dircache.DirCacheEntry.int)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}