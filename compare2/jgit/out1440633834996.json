{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":114,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":111,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":75,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":39,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":23,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":112,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":46,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":48,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":85,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":124,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2":3,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":29,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1":2,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":58,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":99,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":120,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":43,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":70,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":44,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":107,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":118,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":33,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroOnSameCommit":5,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":45,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":97,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":26,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":100,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":95,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":98,"org.eclipse.jgit.api.PushCommandTest.testPush":127,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":74,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":94,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":93,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile":125,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":21,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":22,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":15,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":20,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":109,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":83,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":19,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":14,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":73,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":72,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":30,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":77,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":89,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":92,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":108,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":88,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":91,"org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits":6,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":55,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":76,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":32,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":81,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":121,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":69,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":103,"org.eclipse.jgit.api.GitConstructionTest.testWrap":38,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":60,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":8,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":52,"org.eclipse.jgit.api.GitConstructionTest.testOpen":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":51,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":47,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":110,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":106,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":34,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":105,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":122,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":53,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":82,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":80,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":7,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":13,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":78,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":59,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":79,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":117,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":49,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":115,"org.eclipse.jgit.api.GitConstructionTest.testClose":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":87,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":128,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":28,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":66,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":101,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":65,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":31,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":54,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":126,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":84,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":119,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":68,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":104,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroWhenMergedInto":4,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":57,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":56,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":18,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":25,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":17,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":61,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":1,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":16,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":63,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":64,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":24,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":90,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":9,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":86,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":129,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":96,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":10,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":35,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":113,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":41,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":71,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":102,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":27,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":123,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":12,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":62},"transformations":[{"failures":[],"tindex":"1b6095ae-4c4f-11e5-bcde-b7ec8c9bbfd4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:316","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:224","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"1b60e3cf-4c4f-11e5-bcde-ebb123373f19","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:141","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.events.ListenerList"},"variableMap":{"myListeners":"org.eclipse.jgit.lib.Repository.globalListeners"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:107","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Repository.org.eclipse.jgit.events.ListenerList"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,36,37,37,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123],"tindex":"1b60e3d0-4c4f-11e5-bcde-633ffbc31d3d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:262","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = null"},"variableMap":{"newHead":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:243","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit[][0]"},"status":-1},{"failures":[],"tindex":"1b610ae1-4c4f-11e5-bcde-2bec24590804","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.QuotedString:348","type":"CtForImpl","sourcecode":"for (int int = 1 ; (int < 3) && (int < int) ; int++) {\n    final byte byte = byte[][int];\n    if (('0' <= byte) && (byte <= '7')) {\n        int <<= 3;\n        int |= byte - '0';\n        int++;\n    } else {\n        break;\n    }\n}"},"variableMap":{"inPtr":"actLen","in":"data","inEnd":"length","cp":"actLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaCache:114","type":"CtIfImpl","sourcecode":"if ((byte[].int) != int) {\n    byte[] byte[] = new byte[int];\n    java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n    byte[] = byte[];\n} "},"status":-2},{"failures":[],"tindex":"1b610ae2-4c4f-11e5-bcde-21cc1c88d32e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:265","type":"CtAssignmentImpl","sourcecode":"long = org.eclipse.jgit.lib.Config.long"},"variableMap":{"mul":"objectCount","org.eclipse.jgit.lib.Config.GiB":"objectCount"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackDescription:203","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.max(0, long)"},"status":0},{"failures":[],"tindex":"1b610ae3-4c4f-11e5-bcde-695fe89c82c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1279","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectReader.release()"},"status":0},{"failures":[37,38,41,44,45,49,50],"tindex":"1b6131f4-4c4f-11e5-bcde-b3f7b71dae01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:214","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref"},"status":-1},{"failures":[124],"tindex":"1b6131f5-4c4f-11e5-bcde-a514ca5f2223","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.LongMap:137","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"variableMap":{"h":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:161","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.util.RawParseUtils.parseHexInt4(byte[][int++])"},"status":-1},{"failures":[],"tindex":"1b6131f6-4c4f-11e5-bcde-95092d9e427a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:1164","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.diff.DiffEntry.java.lang.String"},"variableMap":{"org.eclipse.jgit.diff.DiffEntry.DEV_NULL":"stashRef","oldp":"stashRef"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:119","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-2},{"failures":[125],"tindex":"1b6131f7-4c4f-11e5-bcde-e1e02fe8f0bf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefList:212","type":"CtInvocationImpl","sourcecode":"java.lang.Math.max(16, int)"},"variableMap":{"n":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:241","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"1b615908-4c4f-11e5-bcde-2b9987bacd26","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:533","type":"CtLocalVariableImpl","sourcecode":"final int int = int + 2"},"variableMap":{"ptr":"startOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:208","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[33,126,83,127,128,129,84],"tindex":"1b615909-4c4f-11e5-bcde-b7242fb776e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:323","type":"CtWhileImpl","sourcecode":"while ((java.lang.String = org.eclipse.jgit.transport.PacketLineIn.readString()) != (org.eclipse.jgit.transport.PacketLineIn.java.lang.String)) {\n    boolean boolean = false;\n    int int = -1;\n    if (java.lang.String.startsWith(\"ok \")) {\n        boolean = true;\n        int = java.lang.String.length();\n    } else if (java.lang.String.startsWith(\"ng \")) {\n        boolean = false;\n        int = java.lang.String.indexOf(\" \", 3);\n    } \n    if (int == (-1))\n        throw new org.eclipse.jgit.errors.PackProtocolException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.transport.URIish, java.lang.String));\n    \n    final java.lang.String java.lang.String = java.lang.String.substring(3, int);\n    final java.lang.String java.lang.String = boolean ? null : java.lang.String.substring((int + 1));\n    final org.eclipse.jgit.transport.RemoteRefUpdate org.eclipse.jgit.transport.RemoteRefUpdate = java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.get(java.lang.String);\n    if (org.eclipse.jgit.transport.RemoteRefUpdate == null)\n        throw new org.eclipse.jgit.errors.PackProtocolException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.transport.URIish, java.lang.String));\n    \n    if (boolean) {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n    } else {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        org.eclipse.jgit.transport.RemoteRefUpdate.setMessage(java.lang.String);\n    }\n}"},"status":-1},{"failures":[],"tindex":"1b61590a-4c4f-11e5-bcde-419b04442a5b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileSnapshot:78","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:431","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.pack.PackConfig.getCompressionLevel()"},"status":0},{"failures":[],"tindex":"1b61801b-4c4f-11e5-bcde-672bdd41a64f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:142","type":"CtInvocationImpl","sourcecode":"java.util.HashMap<org.eclipse.jgit.revplot.PlotLane, java.lang.Integer>.put(org.eclipse.jgit.revplot.PlotCommit<L>.org.eclipse.jgit.revplot.PlotLane, java.lang.Integer)"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}