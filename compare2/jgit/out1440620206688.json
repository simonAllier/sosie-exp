{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":40,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":37,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testUnpopAtFront":113,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":99,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":52,"org.eclipse.jgit.api.FetchCommandTest.testFetch":73,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":63,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":1,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":107,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":109,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":22,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":16,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":4,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":106,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":26,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":10,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":47,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":66,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":103,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":104,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":45,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":97,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":105,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":21,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":111,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":62,"org.eclipse.jgit.api.PushCommandTest.testPush":90,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":79,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout":24,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":11,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":19,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags":25,"org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode":32,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":89,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":116,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":17,"org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde":33,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":15,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":69,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":68,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":102,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":42,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":75,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":83,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":48,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":65,"org.eclipse.jgit.api.GitConstructionTest.testWrap":72,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":39,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":54,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":53,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":86,"org.eclipse.jgit.api.GitConstructionTest.testOpen":71,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":112,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":108,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":115,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":9,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort":31,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":49,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":87,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":85,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":82,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":6,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":74,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":77,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":3,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":14,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort":35,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":12,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":81,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":43,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":44,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":41,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":110,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":117,"org.eclipse.jgit.api.GitConstructionTest.testClose":70,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":91,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects":5,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":84,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":61,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort":30,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":60,"org.eclipse.jgit.transport.URIishTest.testGetSet":34,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":88,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":46,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":93,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":64,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":114,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":51,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":96,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":0,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":57,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":58,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":100,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":95,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":2,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":78,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":92,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":7,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":20,"org.eclipse.jgit.transport.URIishTest.testGitWithUserHome":36,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":38,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":18,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":101,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":59,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":67,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":98,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":94,"org.eclipse.jgit.transport.RemoteConfigTest.testCreateOrigin":23,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":50,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags":27,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":8,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":56},"transformations":[{"failures":[],"tindex":"6046e224-4c2f-11e5-b8b3-c77ef990a603","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:239","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return 0;\n"},"variableMap":{"total":"common"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:270","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"6046e225-4c2f-11e5-b8b3-dd2d7fcb7595","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RawTextComparator:79","type":"CtLocalVariableImpl","sourcecode":"int int = 5381"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:176","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"60470936-4c2f-11e5-b8b3-b1f4e353e58d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TagBuilder:221","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"tag \")"},"variableMap":{"r":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.SquashMessageFormatter:79","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Squashed commit of the following:\\n\")"},"status":-1},{"failures":[5],"tindex":"60470937-4c2f-11e5-b8b3-916b29d3410b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:159","type":"CtAssignmentImpl","sourcecode":"int = ((int << 5) + int) + int"},"variableMap":{"c":"newSize","hash":"blockSize"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig:104","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(512, int)"},"status":-1},{"failures":[6],"tindex":"60470938-4c2f-11e5-b8b3-e511f21d9a26","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:750","type":"CtIfImpl","sourcecode":"if ((\".\".equals(java.lang.String)) || (\"..\".equals(java.lang.String)))\n    continue;\n"},"variableMap":{"name":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:631","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.RefSpec.matchSource(java.lang.String)) {\n    org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = org.eclipse.jgit.transport.RefSpec.expandFromSource(java.lang.String);\n    java.lang.String = org.eclipse.jgit.transport.RefSpec.getDestination();\n    break;\n} "},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,70,71,71,72,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"60470939-4c2f-11e5-b8b3-0d624ed86032","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickResult:73","type":"CtReturnImpl","sourcecode":"return \"Failed\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:606","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.URIish.format(true, false)"},"status":-1},{"failures":[],"tindex":"6047093a-4c2f-11e5-b8b3-5d8bc304d8c5","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:212","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:630","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(((\"invalid name \\'COM\" + ((char)(byte[][(int + 3)]))) + \"\\'\"))"},"status":-2},{"failures":[113,67,68,69],"tindex":"6047304b-4c2f-11e5-b8b3-a95f697a74a7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommit:127","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revplot.PlotCommit.getId().equals(org.eclipse.jgit.revplot.PlotCommit.getId()))\n    return ;\n"},"variableMap":{"c":"c","pc":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:98","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.BlockRevQueue.Block.canUnpop()) {\n    org.eclipse.jgit.revwalk.BlockRevQueue.Block.unpop(org.eclipse.jgit.revwalk.RevCommit);\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"6047304c-4c2f-11e5-b8b3-437302a6988e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:287","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"6047304d-4c2f-11e5-b8b3-4349a9949a09","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:710","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.events.IndexChangedListener) != null) && (!(java.util.Arrays.equals(byte[], byte[]))))\n    org.eclipse.jgit.events.IndexChangedListener.onIndexChanged(new org.eclipse.jgit.events.IndexChangedEvent());\n"},"status":-2},{"failures":[],"tindex":"6047304e-4c2f-11e5-b8b3-dbd08fca36d2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:160","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int"},"variableMap":{"org.eclipse.jgit.revwalk.MergeBaseGenerator.MERGE_BASE":"ptr","carry":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:548","type":"CtOperatorAssignmentImpl","sourcecode":"int += (byte[][int++]) - '0'"},"status":-2},{"failures":[],"tindex":"6047304f-4c2f-11e5-b8b3-979c1f8e86f8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RepositoryState:76","type":"CtReturnImpl","sourcecode":"return \"Bare\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleSyncCommand:106","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getLeaf().getName())"},"status":0},{"failures":[114,114,115,115,116,116,117,117],"tindex":"60473050-4c2f-11e5-b8b3-d326bc8360d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:266","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.api.ArchiveCommand.FormatEntry = org.eclipse.jgit.api.ArchiveCommand.java.util.concurrent.ConcurrentMap<java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry>.get(java.lang.String);\n    if (org.eclipse.jgit.api.ArchiveCommand.FormatEntry == null) {\n        org.eclipse.jgit.api.ArchiveCommand.FormatEntry = new org.eclipse.jgit.api.ArchiveCommand.FormatEntry(org.eclipse.jgit.api.ArchiveCommand.Format<?> , 1);\n        continue;\n    } \n    if (!(org.eclipse.jgit.api.ArchiveCommand.FormatEntry.org.eclipse.jgit.api.ArchiveCommand.Format<?>.equals(org.eclipse.jgit.api.ArchiveCommand.Format<?>)))\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n    org.eclipse.jgit.api.ArchiveCommand.FormatEntry = new org.eclipse.jgit.api.ArchiveCommand.FormatEntry(org.eclipse.jgit.api.ArchiveCommand.FormatEntry.org.eclipse.jgit.api.ArchiveCommand.Format<?> , ((org.eclipse.jgit.api.ArchiveCommand.FormatEntry.int) + 1));\n} while (!org.eclipse.jgit.api.ArchiveCommand.(org.eclipse.jgit.api.ArchiveCommand.replace(org.eclipse.jgit.api.ArchiveCommand.java.util.concurrent.ConcurrentMap<java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry>, java.lang.String, org.eclipse.jgit.api.ArchiveCommand.FormatEntry, org.eclipse.jgit.api.ArchiveCommand.FormatEntry)) )"},"status":-1},{"failures":[],"tindex":"60475761-4c2f-11e5-b8b3-3b044c996162","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:169","type":"CtWhileImpl","sourcecode":"while (int < (byte[].int)) {\n    final int int = (byte[][int++]) & 255;\n    if ((int & 128) != 0) {\n        int int = 0;\n        if ((int & 1) != 0)\n            int = (byte[][int++]) & 255;\n        \n        if ((int & 2) != 0)\n            int |= ((byte[][int++]) & 255) << 8;\n        \n        if ((int & 4) != 0)\n            int |= ((byte[][int++]) & 255) << 16;\n        \n        if ((int & 8) != 0)\n            int |= ((byte[][int++]) & 255) << 24;\n        \n        int int = 0;\n        if ((int & 16) != 0)\n            int = (byte[][int++]) & 255;\n        \n        if ((int & 32) != 0)\n            int |= ((byte[][int++]) & 255) << 8;\n        \n        if ((int & 64) != 0)\n            int |= ((byte[][int++]) & 255) << 16;\n        \n        if (int == 0)\n            int = 65536;\n        \n        java.lang.System.arraycopy(byte[], int, byte[], int, int);\n        int += int;\n    } else if (int != 0) {\n        java.lang.System.arraycopy(byte[], int, byte[], int, int);\n        int += int;\n        int += int;\n    } else {\n        throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n}"},"variableMap":{"deltaPtr":"length","result":"r","unsupportedCommand0":"s","delta":"r","length":"length","resultPtr":"length","base":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:555","type":"CtForImpl","sourcecode":"for (int int = (byte[].int) - 1 ; int >= 0 ; int--) {\n    final char char = java.lang.String.charAt(int);\n    if (char > 127)\n        throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n    byte[][int] = ((byte)(char));\n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}