{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":226,"org.eclipse.jgit.transport.RemoteConfigTest.singlePushInsteadOf":108,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidCommitter":50,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":220,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":155,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":189,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart":174,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":19,"org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591":20,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":149,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":18,"org.eclipse.jgit.patch.EditListTest.testTypes":11,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit2Parent":45,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":156,"org.eclipse.jgit.transport.URIishTest.testGitSshProto":131,"org.eclipse.jgit.util.GitDateFormatterTest.DEFAULT":28,"org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification":184,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":53,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":218,"org.eclipse.jgit.transport.URIishTest.testURIEncode_unicode":112,"org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin":103,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":223,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":34,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":6,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testClear":228,"org.eclipse.jgit.transport.RemoteConfigTest.noInsteadOf":111,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":63,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":3,"org.eclipse.jgit.transport.URIishTest.testRelativePath":129,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":213,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew":23,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":172,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":221,"org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort":124,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":143,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":141,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":222,"org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf":106,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":7,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":205,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine":41,"org.eclipse.jgit.patch.EditListTest.testFileHeader":13,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":147,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":227,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":159,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":203,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":202,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":32,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":95,"org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode":122,"org.eclipse.jgit.transport.URIishTest.testURIEncode_0a":117,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":96,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":154,"org.eclipse.jgit.transport.URIishTest.testFileWithNoneUserHomeWithTilde":127,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":17,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserAbsolutePath":134,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":145,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":142,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":200,"org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc":9,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":162,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":72,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles":74,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":210,"org.eclipse.jgit.transport.URIishTest.testFileProtoWindows":140,"org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld":5,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":4,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":80,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":37,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":195,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":211,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitBlankAuthor":47,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile":10,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort":120,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":163,"org.eclipse.jgit.transport.URIishTest.testURIEncode_00":116,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":165,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":168,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":169,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":182,"org.eclipse.jgit.transport.URIishTest.testUNC":114,"org.eclipse.jgit.transport.URIishTest.testSshGitProto":119,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":194,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":85,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1":84,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit1Parent":43,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":144,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort":115,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":59,"org.eclipse.jgit.transport.URIishTest.testGetSet":135,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":60,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter2":49,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":61,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":77,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter1":48,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":180,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":86,"org.eclipse.jgit.transport.URIishTest.testSshProto":133,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":185,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":58,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications":173,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles":73,"org.eclipse.jgit.patch.EditListTest.testHunkHeader":12,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":219,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":152,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":198,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":99,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":199,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":224,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":83,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSeperateModifications":175,"org.eclipse.jgit.util.GitDateFormatterTest.LOCALE":27,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":151,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder":89,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":150,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":2,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":170,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":187,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":206,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber":40,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNormalTime":46,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":208,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter":76,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents":78,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":217,"org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding":130,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTag":44,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":190,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":183,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1Sub":56,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":171,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":158,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":88,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":193,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":16,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":21,"org.eclipse.jgit.util.GitDateFormatterTest.RAW":30,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":153,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort":118,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":216,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":87,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":36,"org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong":26,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":82,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":197,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames":105,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":191,"org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk":22,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNoParent":51,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":204,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":160,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":179,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":157,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":186,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":181,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":176,"org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf":110,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":214,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":161,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":201,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine":42,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":69,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertTie":91,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":68,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":62,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":35,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1":100,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":188,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":225,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":93,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":148,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindows":137,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":192,"org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf":107,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":167,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":8,"org.eclipse.jgit.transport.URIishTest.testWindowsFile":132,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":215,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":212,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":0,"org.eclipse.jgit.util.GitDateFormatterTest.ISO":29,"org.eclipse.jgit.transport.URIishTest.testUnixFile":121,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":178,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":166,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit128Parent":52,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":15,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":97,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort":136,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath":113,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":14,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":98,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":164,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress":38,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":196,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1":54,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld":24,"org.eclipse.jgit.api.ApplyCommandTest.testAddA2":55,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":92,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort":128,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":33,"org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO":90,"org.eclipse.jgit.util.GitDateFormatterTest.RFC":31,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser":126,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":94,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":177,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":207,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree":71,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":57,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames":104,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree":70,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":146,"org.eclipse.jgit.transport.URIishTest.testGitProtoUnix":139,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":39,"org.eclipse.jgit.transport.URIishTest.testFileProtoUnix":123,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":75,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":81,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":65,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":1,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":66,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":79,"org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles":25,"org.eclipse.jgit.transport.URIishTest.testGitWithUserHome":138,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":67,"org.eclipse.jgit.transport.RemoteConfigTest.noPushInsteadOf":109,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":209,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1":101,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2":102,"org.eclipse.jgit.transport.URIishTest.testWindowsFile2":125,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":64},"transformations":[{"failures":[0],"tindex":"9971ba0e-4c2b-11e5-a4a2-1f772eab3858","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:572","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[1,2,3,4],"tindex":"9971e11f-4c2b-11e5-a4a2-830d1c158868","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:373","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-1},{"failures":[],"tindex":"9971e120-4c2b-11e5-a4a2-a59e8a246c3c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:415","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId"},"variableMap":{"tree":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeEntry:197","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"9971e121-4c2b-11e5-a4a2-d758203c483c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:189","type":"CtIfImpl","sourcecode":"if ((int & 32) != 0)\n    int |= ((byte[][int++]) & 255) << 8;\n"},"variableMap":{"deltaPtr":"r","copySize":"r","delta":"org.eclipse.jgit.util.RawParseUtils.digits10","cmd":"sz"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:224","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final byte byte = org.eclipse.jgit.util.RawParseUtils.byte[][byte[][int]];\n    if (byte < 0)\n        break;\n    \n    int = (int * 10) + byte;\n    int++;\n}"},"status":-1},{"failures":[103,104,105],"tindex":"9971e122-4c2b-11e5-a4a2-cf9a95877651","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:814","type":"CtWhileImpl","sourcecode":"while (int < (int)) {\n    final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheEntry[][int];\n    if (!(org.eclipse.jgit.dircache.DirCacheTree.peq(byte[], org.eclipse.jgit.dircache.DirCacheEntry.byte[], int)))\n        break;\n    \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"99720833-4c2b-11e5-a4a2-69716519271c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:601","type":"CtIfImpl","sourcecode":"if ((int == int) || ((byte[][int++]) != ' '))\n    return 0;\n"},"variableMap":{"buf":"name","end":"bPos","ptr":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NonNoteEntry:77","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.NonNoteEntry.org.eclipse.jgit.notes.NonNoteEntry.pathCompare(byte[], 0, byte[].int, org.eclipse.jgit.lib.FileMode, byte[], int, int, org.eclipse.jgit.lib.FileMode)"},"status":-2},{"failures":[106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"tindex":"99720834-4c2b-11e5-a4a2-f73b8085836c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeResult:98","type":"CtReturnImpl","sourcecode":"return \"Already-up-to-date\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:660","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.URIish.format(false, true)"},"status":-1},{"failures":[],"tindex":"99720835-4c2b-11e5-a4a2-95cb10a23575","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.attributes.AttributesNode:103","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    int = int;\nelse if (int == (-1))\n    int = int;\nelse\n    int = java.lang.Math.min(int, int);\n"},"variableMap":{"patternEndTab":"org.eclipse.jgit.lib.FileMode.TYPE_MISSING","patternEnd":"i","patternEndSpace":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:196","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.TreeWalk.getRawMode(int)) != (org.eclipse.jgit.lib.FileMode.int))\n    break;\n"},"status":-2},{"failures":[141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,93,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227],"tindex":"99720836-4c2b-11e5-a4a2-5fd54b5724cf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:333","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int = 1;\n"},"variableMap":{"bits":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:149","type":"CtWhileImpl","sourcecode":"while ((org.eclipse.jgit.diff.Edit != (org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.diff.Edit)) || (org.eclipse.jgit.diff.Edit != (org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.diff.Edit))) {\n    if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        if (int != (org.eclipse.jgit.diff.Edit.getBeginA())) {\n            org.eclipse.jgit.merge.MergeResult<S>.add(0, int, org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        } \n        org.eclipse.jgit.merge.MergeResult<S>.add(1, org.eclipse.jgit.diff.Edit.getBeginB(), org.eclipse.jgit.diff.Edit.getEndB(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        int = org.eclipse.jgit.diff.Edit.getEndA();\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n    } else if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        if (int != (org.eclipse.jgit.diff.Edit.getBeginA())) {\n            org.eclipse.jgit.merge.MergeResult<S>.add(0, int, org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        } \n        org.eclipse.jgit.merge.MergeResult<S>.add(2, org.eclipse.jgit.diff.Edit.getBeginB(), org.eclipse.jgit.diff.Edit.getEndB(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        int = org.eclipse.jgit.diff.Edit.getEndA();\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n    } else {\n        if (((org.eclipse.jgit.diff.Edit.getBeginA()) != int) && ((org.eclipse.jgit.diff.Edit.getBeginA()) != int)) {\n            org.eclipse.jgit.merge.MergeResult<S>.add(0, int, java.lang.Math.min(org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.diff.Edit.getBeginA()), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        } \n        int int = org.eclipse.jgit.diff.Edit.getBeginB();\n        int int = org.eclipse.jgit.diff.Edit.getBeginB();\n        if ((org.eclipse.jgit.diff.Edit.getBeginA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n            int -= (org.eclipse.jgit.diff.Edit.getBeginA()) - (org.eclipse.jgit.diff.Edit.getBeginA());\n        } else {\n            int -= (org.eclipse.jgit.diff.Edit.getBeginA()) - (org.eclipse.jgit.diff.Edit.getBeginA());\n        }\n        org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n        org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n        for ( ;  ; ) {\n            if ((org.eclipse.jgit.diff.Edit.getEndA()) >= (org.eclipse.jgit.diff.Edit.getBeginA())) {\n                org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n                org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n            } else if ((org.eclipse.jgit.diff.Edit.getEndA()) >= (org.eclipse.jgit.diff.Edit.getBeginA())) {\n                org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n                org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n            } else {\n                break;\n            }\n        }\n        int int = org.eclipse.jgit.diff.Edit.getEndB();\n        int int = org.eclipse.jgit.diff.Edit.getEndB();\n        if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getEndA())) {\n            int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n        } else {\n            int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n        }\n        int int = int - int;\n        int int = int - (int - int);\n        if (int > 0)\n            int -= int;\n        \n        int int = 0;\n        while ((int < int) && (org.eclipse.jgit.diff.SequenceComparator<S>.equals(S, (int + int), S, (int + int))))\n            int++;\n        int -= int;\n        int int = 0;\n        while ((int < int) && (org.eclipse.jgit.diff.SequenceComparator<S>.equals(S, ((int - int) - 1), S, ((int - int) - 1))))\n            int++;\n        int -= int;\n        if (int > 0)\n            org.eclipse.jgit.merge.MergeResult<S>.add(1, int, (int + int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        \n        if ((int > 0) || (int != 0)) {\n            org.eclipse.jgit.merge.MergeResult<S>.add(1, (int + int), (int - int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n            org.eclipse.jgit.merge.MergeResult<S>.add(2, (int + int), (int - int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        } \n        if (int > 0)\n            org.eclipse.jgit.merge.MergeResult<S>.add(1, (int - int), int, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        \n        int = java.lang.Math.max(org.eclipse.jgit.diff.Edit.getEndA(), org.eclipse.jgit.diff.Edit.getEndA());\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n    }\n}"},"status":-1},{"failures":[],"tindex":"99722f47-4c2b-11e5-a4a2-d714eb3cf260","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:160","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case org.eclipse.jgit.lib.Constants.int :\n        return org.eclipse.jgit.internal.storage.pack.BaseSearch.int;\n    case org.eclipse.jgit.lib.Constants.int :\n        return org.eclipse.jgit.internal.storage.pack.BaseSearch.int;\n    default :\n        return 0;\n}"},"status":-2},{"failures":[228],"tindex":"99722f48-4c2b-11e5-a4a2-f918b626c1af","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.BlockRevQueue:103","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block"},"variableMap":{"next":"head","b":"head"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.LIFORevQueue:91","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block = null"},"status":-1},{"failures":[],"tindex":"99725659-4c2b-11e5-a4a2-1f9e39e219b8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:363","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in mode\");\n"},"variableMap":{"sz":"pnum","ptr":"pnum"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:466","type":"CtTryImpl","sourcecode":"try {\n    int = java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.NumberFormatException e) {\n    throw new org.eclipse.jgit.errors.RevisionSyntaxException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"9972565a-4c2b-11e5-a4a2-f13b994d76e4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:318","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator = null"},"variableMap":{"dfConflict":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:188","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator"},"status":-2},{"failures":[],"tindex":"9972565b-4c2b-11e5-a4a2-d92f249c608c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.NotIgnoredFilter:72","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))"},"variableMap":{"i":"dfConflict"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:356","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.treewalk.AbstractTreeIterator) != null"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}