{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef":56,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":169,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":76,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":120,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutMergeBranch":45,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":150,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":73,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":105,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":168,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":210,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":158,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":160,"org.eclipse.jgit.transport.URIishTest.testURIEncode_unicode":0,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":60,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":98,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":157,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":124,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef":55,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":115,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":99,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":85,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":155,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare":9,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":25,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testMaybeContains":8,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":216,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":162,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":112,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":199,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":51,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":164,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":27,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":43,"org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode":3,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":64,"org.eclipse.jgit.transport.URIishTest.testURIEncode_0a":2,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":171,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":211,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":92,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":95,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":207,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":78,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":135,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":182,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":19,"org.eclipse.jgit.transport.URIishTest.testPathSeparator":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":141,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":202,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":46,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":121,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":170,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":212,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":163,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":159,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":129,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":217,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":22,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":77,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":179,"org.eclipse.jgit.transport.URIishTest.testURIEncode_00":1,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":86,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":88,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":82,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue":75,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":101,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":136,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":215,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":137,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":161,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":14,"org.eclipse.jgit.api.GitConstructionTest.testClose":172,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":97,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":21,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":178,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":126,"org.eclipse.jgit.transport.URIishTest.testGetSet":5,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":119,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule":103,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":108,"org.eclipse.jgit.lib.ConfigTest.test008_readSectionNames":31,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":104,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":83,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":17,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.emptyRepositoryFormatVersion":54,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec":47,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":167,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":188,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":220,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":148,"org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenExisting":36,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":102,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":58,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":152,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":196,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":190,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":113,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":143,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":114,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef":52,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":109,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":133,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":94,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":130,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":209,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test007_Open":84,"org.eclipse.jgit.api.FetchCommandTest.testFetch":180,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":200,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":90,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet":87,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":214,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":40,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":12,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":13,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":117,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":140,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":37,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":154,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":203,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":96,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":138,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":128,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":189,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":156,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":208,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":219,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":59,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":118,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":166,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":26,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":18,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":48,"org.eclipse.jgit.api.PushCommandTest.testPush":146,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":80,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":93,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":71,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":122,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":89,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":100,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":72,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":70,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet":79,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":145,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnNullWithoutMergeBranchForLocalBranch":49,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":69,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":41,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":39,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":63,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":206,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":62,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":205,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":125,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":183,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":153,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":20,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":33,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":57,"org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey":24,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":127,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":177,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":34,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":107,"org.eclipse.jgit.api.GitConstructionTest.testWrap":174,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":132,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":191,"org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen":35,"org.eclipse.jgit.api.GitConstructionTest.testOpen":173,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":110,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":142,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":213,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":176,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":181,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":50,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":184,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":38,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":53,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":91,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort":6,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":175,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":218,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":134,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":32,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsMany":7,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":147,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":123,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":44,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":61,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":198,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":197,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":144,"org.eclipse.jgit.lib.ConfigTest.testReadLong":23,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":139,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":149,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":201,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":165,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":68,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":67,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet":81,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":111,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":66,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":192,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":65,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":194,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":151,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":195,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":74,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":106,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":187,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":185,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":30,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":131,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":42,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":204,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":186,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":11,"org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive":10,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":15,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":16,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":116,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":193},"transformations":[{"failures":[],"tindex":"85a4ba9d-4c78-11e5-9272-89e15cb091e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:184","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.PlotCommitList<L>.handleBlockedLanes(int, org.eclipse.jgit.revplot.PlotCommit<L>, null)"},"status":0},{"failures":[],"tindex":"85a4ba9e-4c78-11e5-9272-fb060a7eec79","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFInputStream:145","type":"CtIfImpl","sourcecode":"if ((int) < 1)\n    return false;\n"},"variableMap":{"cnt":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:233","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.String java.lang.String = java.lang.String[][int];\n    if ((java.lang.String.length()) == 0)\n        continue;\n    \n    org.eclipse.jgit.fnmatch.FileNameMatcher.append((\"/\" + java.lang.String));\n    if ((org.eclipse.jgit.fnmatch.FileNameMatcher.isMatch()) && org.eclipse.jgit.ignore.IgnoreRule.(doesMatchDirectoryExpectations(boolean, int, java.lang.String[].int)))\n        return true;\n    \n}"},"status":-2},{"failures":[],"tindex":"85a4e1af-4c78-11e5-9272-132887888ece","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.TimeoutInputStream:94","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.TimeoutInputStream.beginRead()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.TimeoutInputStream:128","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.TimeoutInputStream.endRead()"},"status":0},{"failures":[0,1,2,3,4,5,6],"tindex":"85a4e1b0-4c78-11e5-9272-4d7e23850f1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:289","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"85a4e1b1-4c78-11e5-9272-358891597961","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:85","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.PendingGenerator.org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.revwalk.RevCommit(org.eclipse.jgit.lib.ObjectId.zeroId())"},"variableMap":{"org.eclipse.jgit.revwalk.PendingGenerator.INIT_LAST":"commit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:322","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId())"},"status":-2},{"failures":[],"tindex":"85a4e1b2-4c78-11e5-9272-ed51361d0617","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:185","type":"CtForEachImpl","sourcecode":"oldPackLoop : for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>) {\n    java.lang.String java.lang.String = org.eclipse.jgit.internal.storage.file.PackFile.getPackName();\n    for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)\n        if (java.lang.String.equals(org.eclipse.jgit.internal.storage.file.PackFile.getPackName()))\n            continue oldPackLoop;\n        \n    if (!(org.eclipse.jgit.internal.storage.file.PackFile.shouldBeKept())) {\n        org.eclipse.jgit.internal.storage.file.PackFile.close();\n        org.eclipse.jgit.internal.storage.file.GC.prunePack(java.lang.String);\n    } \n}"},"status":0},{"failures":[],"tindex":"85a4e1b3-4c78-11e5-9272-a505a36c70c3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.MergeConfig:179","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:224","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"85a508c4-4c78-11e5-9272-c7eabbde6ed5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:311","type":"CtLocalVariableImpl","sourcecode":"int int = 8192"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:207","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.InputStream.read()"},"status":-2},{"failures":[7,8],"tindex":"85a508c5-4c78-11e5-9272-a52863ba74ce","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.LimitedInputStream:138","type":"CtAssignmentImpl","sourcecode":"long = java.lang.Math.min(long, long)"},"variableMap":{"left":"word","n":"word"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:122","type":"CtAssignmentImpl","sourcecode":"long[][int] = long"},"status":-1},{"failures":[],"tindex":"85a508c6-4c78-11e5-9272-d705a30423ce","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:250","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"eb":"components"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1184","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"85a508c7-4c78-11e5-9272-6b6ec7c3fb61","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Constants:578","type":"CtIfImpl","sourcecode":"if ((byte[].int) == int)\n    return byte[];\n"},"variableMap":{"arr":"dstbuf","len":"sz","length":"sz"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:437","type":"CtTryImpl","sourcecode":"try {\n    byte[] = new byte[int];\n} catch (java.lang.OutOfMemoryError noMemory) {\n    return null;\n}"},"status":-2},{"failures":[],"tindex":"85a508c8-4c78-11e5-9272-49812df8b9d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:378","type":"CtIfImpl","sourcecode":"if ((char[][int]) == 0) {\n    char[][int] = char;\n    break;\n} "},"status":0},{"failures":[9],"tindex":"85a508c9-4c78-11e5-9272-af255c96f4b6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RmCommand:183","type":"CtAssignmentImpl","sourcecode":"java.io.File = java.io.File.getParentFile()"},"variableMap":{"p":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.InitCommand:101","type":"CtAssignmentImpl","sourcecode":"java.io.File = new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-1},{"failures":[],"tindex":"85a508ca-4c78-11e5-9272-afa4bb245245","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.OpenSshConfig:307","type":"CtIfImpl","sourcecode":"if (java.io.File.isAbsolute())\n    return java.io.File;\n"},"variableMap":{"ret":"workTree"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:120","type":"CtIfImpl","sourcecode":"if (java.io.File.isAbsolute())\n    return java.io.File;\nelse\n    return new java.io.File(java.io.File , java.lang.String).getCanonicalFile();\n"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,172,173,173,174,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"85a52fdb-4c78-11e5-9272-eb35033520bd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:243","type":"CtIfImpl","sourcecode":"if ((++(int)) >= (1 << (int)))\n    throw new java.util.NoSuchElementException();\n"},"variableMap":{"dirIdx":"input","bits":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1052","type":"CtIfImpl","sourcecode":"if ((';' == char) || ('#' == char)) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String.valueOf(char);\n} else if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null) && (java.lang.Character.isWhitespace(char))) {\n    if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null)\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n} else if ('[' == char) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader);\n    int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if ('\\\"' == int) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"');\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n    } \n    if (']' != int)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n} else if (org.eclipse.jgit.lib.ConfigLine != null) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.Config.StringReader.reset();\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader);\n    if (org.eclipse.jgit.lib.ConfigLine.java.lang.String.endsWith(\"\\n\")) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String.substring(0, ((org.eclipse.jgit.lib.ConfigLine.java.lang.String.length()) - 1));\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.java.lang.String;\n    } else\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, false, -1);\n    \n} else\n    throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}