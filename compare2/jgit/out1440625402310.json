{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":175,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":241,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":213,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidCommitter":118,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":254,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":289,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":48,"org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591":41,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":47,"org.eclipse.jgit.patch.EditListTest.testTypes":52,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit2Parent":109,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":136,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":180,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":281,"org.eclipse.jgit.util.GitDateFormatterTest.SHORT":7,"org.eclipse.jgit.util.GitDateFormatterTest.DEFAULT":1,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":192,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":69,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":168,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":84,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode":67,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":155,"org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange":66,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":173,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":223,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":268,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":163,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":235,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew":56,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":255,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":301,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooC":68,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":164,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":256,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":291,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":153,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":139,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":156,"org.eclipse.jgit.util.GitDateFormatterTest.LOCALELOCAL":2,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine":124,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":190,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":227,"org.eclipse.jgit.patch.EditListTest.testFileHeader":54,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":242,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":214,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":264,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":152,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":232,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile":51,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":9,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":252,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":90,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":138,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete":105,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":91,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":249,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":103,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":257,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":236,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":130,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add":102,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":46,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":187,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":218,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":233,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incompleteAuthorAndCommitter":80,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":149,"org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc":49,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":186,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":222,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":295,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields":30,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":160,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_SrcFooCNonStandardPrefix":70,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":191,"org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld":61,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":19,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":87,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":161,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":228,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitBlankAuthor":115,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile":50,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooSpLfNulBar":62,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":292,"org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.testParsePersonIdent_fuzzyCases":12,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":176,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":298,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":127,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_IgnoreWhitespace":23,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":185,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":184,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded":32,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":224,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":143,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":178,"org.eclipse.jgit.util.IntListTest.testEmpty_DefaultCapacity":208,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":226,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":36,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":279,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1":35,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded":82,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNegativeContextFails":88,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit1Parent":107,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":59,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":126,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":188,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":135,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":182,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":297,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":246,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":285,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":128,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":260,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":198,"org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.testParsePersonIdent_incompleteCases":10,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":199,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":247,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":14,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter2":117,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":200,"org.eclipse.jgit.patch.GetTextTest.testGetText_NoBinary":40,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter1":116,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_GitLink":101,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":132,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":37,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":197,"org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.testParsePersonIdent_legalCases":11,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":170,"org.eclipse.jgit.patch.EditListTest.testHunkHeader":53,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_UTF8_encoded":76,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":231,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":94,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":146,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":133,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":203,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":237,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":17,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded":29,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":154,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader3":114,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":304,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader1":113,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":299,"org.eclipse.jgit.util.GitDateFormatterTest.LOCALE":0,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder":25,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":174,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":157,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":129,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber":123,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":65,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNormalTime":112,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":134,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":158,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter":13,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents":81,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":73,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":216,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidTag":108,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1Sub":195,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":250,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":150,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":202,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":15,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":225,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_mixed_encoded":75,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":45,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":79,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":283,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":42,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":131,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":99,"org.eclipse.jgit.util.GitDateFormatterTest.RAW":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":220,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":148,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":275,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":167,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":38,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooTabBar":64,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":86,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":221,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":16,"org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong":60,"org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk":215,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":230,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":169,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":303,"org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk":55,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary":104,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_FooSpBar":71,"org.eclipse.jgit.util.GitDateFormatterTest.LOCAL":6,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":142,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNoParent":119,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":266,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_Foo":74,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":286,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":267,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor7":111,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":302,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor6":110,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":240,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":165,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":151,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":293,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":183,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine":125,"org.eclipse.jgit.util.IntListTest.testAdd_LargeGroup":206,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify":98,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":278,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":277,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserWithLF":20,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":201,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":85,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":262,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1":95,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":177,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":238,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":244,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":145,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":147,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple":212,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":141,"org.eclipse.jgit.util.GitDateFormatterTest.RELATIVE":8,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":189,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":269,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":166,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":162,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded":78,"org.eclipse.jgit.util.GitDateFormatterTest.ISO":3,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":294,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode":63,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":288,"org.eclipse.jgit.util.IntListTest.testEmpty_SpecificCapacity":205,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":140,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":172,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit128Parent":120,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":44,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":100,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":204,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":137,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":181,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":248,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2":211,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":92,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1":210,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":43,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":93,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":296,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":171,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":290,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress":121,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":245,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":229,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1":193,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld":57,"org.eclipse.jgit.api.ApplyCommandTest.testAddA2":194,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":259,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":83,"org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO":26,"org.eclipse.jgit.util.GitDateFormatterTest.RFC":5,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserNoLF":21,"org.eclipse.jgit.util.IntListTest.testClear":207,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":89,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":144,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":287,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":273,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded":28,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":258,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":196,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":282,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":274,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":234,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":265,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":219,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":284,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":122,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":217,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":106,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":39,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":27,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":243,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":271,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded":34,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":272,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":261,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":251,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":305,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":18,"org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles":58,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_ManyUsers":24,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":253,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":239,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2":31,"org.eclipse.jgit.util.IntListTest.testAdd_SmallGroup":209,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded2":77,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":280,"org.eclipse.jgit.revwalk.FooterLineTest.testNonDelimtedEmail":22,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":276,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":159,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1":96,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2":97,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":263,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":179,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":300,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":270},"transformations":[{"failures":[],"tindex":"7923f86b-4c3b-11e5-b487-83352c7ea1bd","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:1188","type":"CtReturnImpl","sourcecode":"return int - 1"},"variableMap":{"end":"mid"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:161","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7924468c-4c3b-11e5-b487-a14ac6c57ea1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:110","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.internal.storage.pack.IntSet.add(int)))\n    return ;\n"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],"tindex":"7924468d-4c3b-11e5-b487-1b4847a077bd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.LeafBucket:95","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int;\nelse if (int == 0)\n    return int;\nelse\n    int = int + 1;\n"},"variableMap":{"high":"ptr","low":"ptr","cmp":"ptr","mid":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:451","type":"CtIfImpl","sourcecode":"if ((byte == char) || (byte == '\\n'))\n    return int;\n"},"status":-1},{"failures":[],"tindex":"7924468e-4c3b-11e5-b487-39b428646a82","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:413","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 7"},"variableMap":{"sz":"smudge_ns"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:652","type":"CtAssignmentImpl","sourcecode":"int = ((int)(((org.eclipse.jgit.internal.storage.file.FileSnapshot.lastModified()) % 1000))) * 1000000"},"status":-2},{"failures":[],"tindex":"792494af-4c3b-11e5-b487-13dd44cad5a6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:134","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.dircache.DirCache>.checkCallable()"},"status":-2},{"failures":[],"tindex":"792494b0-4c3b-11e5-b487-011eadf3cc0c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.RecursiveMerger:268","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = new org.eclipse.jgit.treewalk.TreeWalk(org.eclipse.jgit.lib.ObjectReader)"},"variableMap":{"reader":"reader"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheBuilder:167","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = new org.eclipse.jgit.treewalk.TreeWalk(org.eclipse.jgit.lib.ObjectReader)"},"status":0},{"failures":[],"tindex":"792494b1-4c3b-11e5-b487-a144dce9658c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:105","type":"CtIfImpl","sourcecode":"if (\"NAK\".equals(java.lang.String))\n    return org.eclipse.jgit.transport.PacketLineIn.AckNackResult.org.eclipse.jgit.transport.PacketLineIn.AckNackResult;\n"},"variableMap":{"org.eclipse.jgit.transport.PacketLineIn.AckNackResult.NAK":"org.eclipse.jgit.transport.PacketLineIn.AckNackResult.ACK","line":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineIn:109","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 44)\n    return org.eclipse.jgit.transport.PacketLineIn.AckNackResult.org.eclipse.jgit.transport.PacketLineIn.AckNackResult;\n"},"status":-2},{"failures":[],"tindex":"792494b2-4c3b-11e5-b487-a5ce42d06f41","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:209","type":"CtIfImpl","sourcecode":"if (int < 2)\n    int = 2;\n"},"variableMap":{"sz":"startLine"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:193","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.EditList) == null) {\n    org.eclipse.jgit.diff.EditList = new org.eclipse.jgit.diff.EditList();\n    final byte[] byte[] = org.eclipse.jgit.patch.FileHeader.byte[];\n    int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);\n    int int = org.eclipse.jgit.patch.HunkHeader.OldImage.int;\n    int int = int;\n    org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = null;\n    SCAN : for ( ; int < (int) ; int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int)) {\n        switch (byte[][int]) {\n            case ' ' :\n            case '\\n' :\n                org.eclipse.jgit.diff.Edit = null;\n                int++;\n                int++;\n                continue;\n            case '-' :\n                if (org.eclipse.jgit.diff.Edit == null) {\n                    org.eclipse.jgit.diff.Edit = new org.eclipse.jgit.diff.Edit((int - 1) , (int - 1));\n                    org.eclipse.jgit.diff.EditList.add(org.eclipse.jgit.diff.Edit);\n                } \n                int++;\n                org.eclipse.jgit.diff.Edit.extendA();\n                continue;\n            case '+' :\n                if (org.eclipse.jgit.diff.Edit == null) {\n                    org.eclipse.jgit.diff.Edit = new org.eclipse.jgit.diff.Edit((int - 1) , (int - 1));\n                    org.eclipse.jgit.diff.EditList.add(org.eclipse.jgit.diff.Edit);\n                } \n                int++;\n                org.eclipse.jgit.diff.Edit.extendB();\n                continue;\n            case '\\\\' :\n                continue;\n            default :\n                break SCAN;\n        }\n    }\n} "},"status":-2},{"failures":[205,206,207,208,209],"tindex":"7924bbc3-4c3b-11e5-b487-316f4b90ec09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IntList:81","type":"CtIfImpl","sourcecode":"if ((int) <= int)\n    throw new java.lang.ArrayIndexOutOfBoundsException(int);\n"},"status":-1},{"failures":[210,211,212,213,214,215,216,217,218,219,86,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,131,244,245,246,142,247,248,249,250,251,252,253,254,255,256,257,258,176,259,260,261,145,262,263,152,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,204,298],"tindex":"7924bbc4-4c3b-11e5-b487-d98b68f1d0cb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:1174","type":"CtIfImpl","sourcecode":"if ((' ' == int) || ('\\t' == int))\n    continue;\n"},"variableMap":{"c":"carry"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:199","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.MergeBaseGenerator.carryOntoOne(org.eclipse.jgit.revwalk.RevCommit, int))\n    break;\n"},"status":-1},{"failures":[],"tindex":"7924bbc5-4c3b-11e5-b487-0ba0543cfc1f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:555","type":"CtInvocationImpl","sourcecode":"java.util.Collections.reverse(java.util.ArrayList<org.eclipse.jgit.revwalk.FooterLine>)"},"status":-2},{"failures":[],"tindex":"7924bbc6-4c3b-11e5-b487-73dfa8c4d0ea","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:254","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.filter.CommitTimeRevFilter:139","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"7924bbc7-4c3b-11e5-b487-798100b258ce","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:131","type":"CtSwitchImpl","sourcecode":"switch (int >> 2) {\n    case 0 :\n        int = int;\n        break;\n    case 1 :\n        int = int;\n        break;\n    case 2 :\n        int = int;\n        break;\n    case 3 :\n        int = int;\n        break;\n    case 4 :\n        int = int;\n        break;\n    default :\n        throw new java.lang.ArrayIndexOutOfBoundsException(int);\n}"},"variableMap":{"w":"length","index":"length","w1":"length","w2":"length","w3":"length","w4":"length","w5":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:684","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.get();\n    final org.eclipse.jgit.internal.storage.file.PackFile[] org.eclipse.jgit.internal.storage.file.PackFile[] = org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[];\n    final int int = org.eclipse.jgit.internal.storage.file.ObjectDirectory.org.eclipse.jgit.internal.storage.file.ObjectDirectory.indexOf(org.eclipse.jgit.internal.storage.file.PackFile[], org.eclipse.jgit.internal.storage.file.PackFile);\n    if (int < 0)\n        break;\n    \n    final org.eclipse.jgit.internal.storage.file.PackFile[] org.eclipse.jgit.internal.storage.file.PackFile[] = new org.eclipse.jgit.internal.storage.file.PackFile[(org.eclipse.jgit.internal.storage.file.PackFile[].int) - 1];\n    java.lang.System.arraycopy(org.eclipse.jgit.internal.storage.file.PackFile[], 0, org.eclipse.jgit.internal.storage.file.PackFile[], 0, int);\n    java.lang.System.arraycopy(org.eclipse.jgit.internal.storage.file.PackFile[], (int + 1), org.eclipse.jgit.internal.storage.file.PackFile[], int, ((org.eclipse.jgit.internal.storage.file.PackFile[].int) - int));\n    org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = new org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.FileSnapshot , org.eclipse.jgit.internal.storage.file.PackFile[]);\n} while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.compareAndSet(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList, org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)) )"},"status":-2},{"failures":[],"tindex":"7924e2d8-4c3b-11e5-b487-1bbae769b324","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:130","type":"CtAssertImpl","sourcecode":"assert org.eclipse.jgit.lib.ThreadSafeProgressMonitor.isMainThread()"},"variableMap":{"this":"monitor"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:171","type":"CtIfImpl","sourcecode":"if ((long) <= (long += org.eclipse.jgit.internal.storage.pack.ObjectToPack.getWeight())) {\n    int int = ((int)((long) / (long)));\n    org.eclipse.jgit.lib.ProgressMonitor.update(int);\n    long -= int * (long);\n} "},"status":-2},{"failures":[299,300,301,302,303,304,305],"tindex":"7924e2d9-4c3b-11e5-b487-8feb1404dbed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:618","type":"CtTryImpl","sourcecode":"try {\n    final org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList = org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs();\n    org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs();\n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>);\n        if (org.eclipse.jgit.lib.Ref.isSymbolic())\n            continue;\n        \n        int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.find(java.lang.String);\n        if (int >= 0)\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.set(int, org.eclipse.jgit.internal.storage.file.RefDirectory.peeledPackedRef(org.eclipse.jgit.lib.Ref));\n        else\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.add(int, org.eclipse.jgit.internal.storage.file.RefDirectory.peeledPackedRef(org.eclipse.jgit.lib.Ref));\n        \n    }\n    org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList);\n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        java.io.File java.io.File = org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String);\n        if (!(org.eclipse.jgit.util.FS.exists(java.io.File)))\n            continue;\n        \n        org.eclipse.jgit.internal.storage.file.LockFile org.eclipse.jgit.internal.storage.file.LockFile = new org.eclipse.jgit.internal.storage.file.LockFile(java.io.File , org.eclipse.jgit.internal.storage.file.FileRepository.getFS());\n        if (!(org.eclipse.jgit.internal.storage.file.LockFile.lock()))\n            continue;\n        \n        try {\n            org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(null, java.lang.String);\n            if ((org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef == null) || (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.isSymbolic()))\n                continue;\n            \n            org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String);\n            org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.getObjectId();\n            if ((org.eclipse.jgit.lib.ObjectId != null) && (org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.Ref.getObjectId()))) {\n                org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n                org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n                do {\n                    org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.get();\n                    int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(java.lang.String);\n                    if (int < 0)\n                        break;\n                    \n                    org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.remove(int);\n                } while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>)) );\n                int int = org.eclipse.jgit.internal.storage.file.RefDirectory.(org.eclipse.jgit.internal.storage.file.RefDirectory.levelsIn(java.lang.String)) - 2;\n                org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String), int);\n            } \n        } finally {\n            org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n        }\n    }\n} finally {\n    org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}