{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":41,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":52,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":18,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":61,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":12,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":77,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":79,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":4,"org.eclipse.jgit.lib.IndexDiffTest.testModified":112,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":24,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":13,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":62,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":34,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":26,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":63,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":111,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":36,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":31,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":60,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":106,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":99,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":67,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":69,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":14,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":35,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":20,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":103,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":84,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":50,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":78,"org.eclipse.jgit.revwalk.FooterLineTest.testFilterFootersIgnoreCase":85,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":91,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":49,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":2,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":42,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":93,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":109,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":25,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":9,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":47,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":88,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":108,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":40,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":105,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":58,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":46,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":32,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":71,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":45,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":11,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":38,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":75,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":76,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":43,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":3,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":15,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":28,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":22,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":94,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":102,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":54,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":59,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":56,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":55,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":65,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":110,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":98,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":83,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":87,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":21,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":30,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":96,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":73,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues":80,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":29,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":100,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":107,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":89,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":7,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":64,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":66,"org.eclipse.jgit.lib.ConfigTest.test007_readUserConfig":86,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":104,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":101,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue":81,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":90,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":97,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":23,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":70,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":51,"org.eclipse.jgit.util.RefListTest.testToString":1,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":72,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":92,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":17,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":16,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":68,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":44,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":37,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":95,"org.eclipse.jgit.util.RefListTest.testBuilder_ToString":0,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":6,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":5,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":39,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":113,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":33,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":10,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":82,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":53,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":74},"transformations":[{"failures":[0,1],"tindex":"55975591-4c4a-11e5-b620-cfe60652cfda","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:877","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", sizeOfLooseObjects=\")"},"variableMap":{"b":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefList:309","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"status":-1},{"failures":[],"tindex":"55977ca2-4c4a-11e5-b620-31714f68b23b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1047","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"jgit receive-pack\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BranchConfig:104","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.lib.BranchConfig.getRemoteOrDefault()"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"55977ca3-4c4a-11e5-b620-972cb9226165","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.StashApplyCommand:224","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"stashed HEAD\" , \"HEAD\" , \"untracked files\" })"},"variableMap":{"untrackedMerger":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:611","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.updateIndex(org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>)"},"status":-1},{"failures":[73,74,75,76],"tindex":"55977ca4-4c4a-11e5-b620-2da1bc0a613b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:194","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[77,63,64,78,65,66,67,68,41],"tindex":"55977ca5-4c4a-11e5-b620-3172e376434b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.RecursiveMerger:241","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.CommitBuilder.setCommitter(org.eclipse.jgit.lib.CommitBuilder.getAuthor())"},"status":-1},{"failures":[79,80,81,82],"tindex":"55977ca6-4c4a-11e5-b620-d7f45224a77d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RenameBranchCommand:148","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n    final org.eclipse.jgit.lib.StoredConfig org.eclipse.jgit.lib.StoredConfig = org.eclipse.jgit.lib.Repository.getConfig();\n    for (java.lang.String java.lang.String : org.eclipse.jgit.lib.StoredConfig.getNames(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String)) {\n        java.lang.String[] java.lang.String[] = org.eclipse.jgit.lib.StoredConfig.getStringList(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, java.lang.String);\n        if ((java.lang.String[].int) == 0)\n            continue;\n        \n        java.lang.String[] java.lang.String[] = org.eclipse.jgit.lib.StoredConfig.getStringList(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, java.lang.String);\n        if ((java.lang.String[].int) > 0) {\n            java.lang.String[] java.lang.String[] = new java.lang.String[(java.lang.String[].int) + (java.lang.String[].int)];\n            java.lang.System.arraycopy(java.lang.String[], 0, java.lang.String[], 0, java.lang.String[].int);\n            java.lang.System.arraycopy(java.lang.String[], 0, java.lang.String[], java.lang.String[].int, java.lang.String[].int);\n            java.lang.String[] = java.lang.String[];\n        } \n        org.eclipse.jgit.lib.StoredConfig.setStringList(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, java.lang.String, java.util.Arrays.asList(java.lang.String[]));\n    }\n    org.eclipse.jgit.lib.StoredConfig.unsetSection(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n    org.eclipse.jgit.lib.StoredConfig.save();\n} "},"status":-1},{"failures":[],"tindex":"5597a3b7-4c4a-11e5-b620-938453a071a2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_Win32:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"HOMEPATH\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:171","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (\"Revert \\\"\" + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage())) + \"\\\"\""},"status":-2},{"failures":[83,84,68],"tindex":"5597a3b8-4c4a-11e5-b620-8956979752a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:458","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.isPeeled()) || ((org.eclipse.jgit.lib.Ref.getObjectId()) == null))\n    return org.eclipse.jgit.lib.Ref;\n"},"status":-1},{"failures":[],"tindex":"5597a3b9-4c4a-11e5-b620-0dd55e5132d7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:126","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheIterator.parseEntry()"},"variableMap":{"this":"treeMatch"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:288","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator : org.eclipse.jgit.treewalk.AbstractTreeIterator[])\n    if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator)\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    "},"status":-2},{"failures":[],"tindex":"5597a3ba-4c4a-11e5-b620-2f68245ea571","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteMap:223","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.Note == null ? null : org.eclipse.jgit.notes.Note.getData()"},"variableMap":{"n":"baseCommitId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ThreeWayMerger:119","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectId"},"status":-2},{"failures":[85],"tindex":"5597a3bb-4c4a-11e5-b620-83e85328444d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:590","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.revwalk.FooterLine org.eclipse.jgit.revwalk.FooterLine : java.util.List<org.eclipse.jgit.revwalk.FooterLine>) {\n    if (org.eclipse.jgit.revwalk.FooterLine.matches(org.eclipse.jgit.revwalk.FooterKey))\n        java.util.ArrayList<java.lang.String>.add(org.eclipse.jgit.revwalk.FooterLine.getValue());\n    \n}"},"status":-1},{"failures":[],"tindex":"5597cacc-4c4a-11e5-b620-89d259e90f63","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:616","type":"CtIfImpl","sourcecode":"if ((boolean) & boolean)\n    break SEND_HAVES;\n"},"variableMap":{"receivedReady":"capableOfsDelta","noDone":"capableOfsDelta"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:303","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.setDeltaBaseAsOffset(boolean)"},"status":-2},{"failures":[86],"tindex":"5597cacd-4c4a-11e5-b620-21988629fb97","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.UserConfig:204","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.lib.UserConfig.org.eclipse.jgit.lib.UserConfig.system().getenv(java.lang.String)"},"variableMap":{"this":"this","envKey":"authorEmail","email":"authorEmail"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.UserConfig:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.lib.UserConfig.org.eclipse.jgit.lib.UserConfig.getDefaultEmail()"},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,71,113],"tindex":"5597cace-4c4a-11e5-b620-1bf8a24c899c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:330","type":"CtIfImpl","sourcecode":"if ((int + 1) == int)\n    return false;\n"},"variableMap":{"nextNamePos":"dm","nextPtr":"dm"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:217","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((int == (int)) || (int == (int)))\n        continue;\n    \n    if (((org.eclipse.jgit.treewalk.TreeWalk.getRawMode(int)) != int) || (!(org.eclipse.jgit.treewalk.TreeWalk.idEqual(int, int))))\n        return true;\n    \n}"},"status":-1},{"failures":[],"tindex":"5597cacf-4c4a-11e5-b620-d5ad1153f532","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:204","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}