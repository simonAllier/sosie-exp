{"failureDictionary":{"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":95,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":35,"org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects":89,"org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths":79,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore":82,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":72,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":21,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":50,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":62,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":73,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles":88,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":45,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":94,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":1,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":78,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":2,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":42,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":39,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":7,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":70,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":57,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":11,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":76,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":12,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":51,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":59,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":77,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":53,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":37,"org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SimiliarBy75":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":65,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":13,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":31,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly":84,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":83,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":38,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":24,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":20,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":4,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":0,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent":87,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":92,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":60,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":69,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":25,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes":86,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":17,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":61,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":6,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":54,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":8,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":48,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":67,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":75,"org.eclipse.jgit.lib.ConfigTest.testReadLong":22,"org.eclipse.jgit.lib.ConfigTest.test008_readSectionNames":30,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":34,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":44,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":26,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":16,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":41,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":52,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":68,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":93,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":46,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":3,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired":81,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":43,"org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles":90,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":36,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":40,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":66,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":74,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":27,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":64,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":19,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":32,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":71,"org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey":23,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":55,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":18,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":28,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair":85,"org.eclipse.jgit.lib.ObjectIdTest.testSetByte":91,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":10,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":56,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":33,"org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive":9,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":49,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":14,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":5,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":15,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":47,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":58,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":63},"transformations":[{"failures":[],"tindex":"ec11c6ea-4c84-11e5-9afb-33d8c4928526","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS_Win32_Cygwin:102","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.System.getProperty(\"jgit.usecygpath\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.NameMatcher:90","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"ec11edfb-4c84-11e5-9afb-f754ef36650a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TreeFormatter:252","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.FileMode.copyToLength()"},"variableMap":{"mode":"org.eclipse.jgit.lib.FileMode.TREE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:366","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.TreeFormatter.org.eclipse.jgit.lib.TreeFormatter.entrySize(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.dircache.DirCacheTree.nameLength())"},"status":-2},{"failures":[],"tindex":"ec11edfc-4c84-11e5-9afb-f7055c2cc4f9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:472","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(46)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:232","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"ec12150d-4c84-11e5-9afb-85a2a8751cc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1032","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if ((-1) == int) {\n        if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null)\n            java.util.List<org.eclipse.jgit.lib.ConfigLine>.add(org.eclipse.jgit.lib.ConfigLine);\n        \n        break;\n    } \n    final char char = ((char)(int));\n    if ('\\n' == char) {\n        java.util.List<org.eclipse.jgit.lib.ConfigLine>.add(org.eclipse.jgit.lib.ConfigLine);\n        if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null)\n            org.eclipse.jgit.lib.ConfigLine = org.eclipse.jgit.lib.ConfigLine;\n        \n        org.eclipse.jgit.lib.ConfigLine = new org.eclipse.jgit.lib.ConfigLine();\n    } else if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n    } else if ((';' == char) || ('#' == char)) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String.valueOf(char);\n    } else if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null) && (java.lang.Character.isWhitespace(char))) {\n        if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null)\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n        \n        org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n    } else if ('[' == char) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader);\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n        if ('\\\"' == int) {\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"');\n            int = org.eclipse.jgit.lib.Config.StringReader.read();\n        } \n        if (']' != int)\n            throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n    } else if (org.eclipse.jgit.lib.ConfigLine != null) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n        org.eclipse.jgit.lib.Config.StringReader.reset();\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader);\n        if (org.eclipse.jgit.lib.ConfigLine.java.lang.String.endsWith(\"\\n\")) {\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String.substring(0, ((org.eclipse.jgit.lib.ConfigLine.java.lang.String.length()) - 1));\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.java.lang.String;\n        } else\n            org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, false, -1);\n        \n    } else\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n}"},"status":-1},{"failures":[],"tindex":"ec123c1e-4c84-11e5-9afb-e7f4c2bfb68c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BranchConfig:169","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = org.eclipse.jgit.transport.RefSpec.expandFromSource(java.lang.String)"},"variableMap":{"mergeRef":"obj","refSpec":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:480","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = ((org.eclipse.jgit.transport.RefSpec)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"ec123c1f-4c84-11e5-9afb-ef7b4da68e21","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:689","type":"CtIfImpl","sourcecode":"if (int < 0)\n    break;\n"},"variableMap":{"j":"flags"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevBlob:75","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevWalk.org.eclipse.jgit.lib.ObjectReader.has(this))\n    int |= org.eclipse.jgit.revwalk.RevObject.int;\nelse\n    throw new org.eclipse.jgit.errors.MissingObjectException(this , org.eclipse.jgit.revwalk.RevBlob.getType());\n"},"status":-2},{"failures":[],"tindex":"ec123c20-4c84-11e5-9afb-87c4d9c89e64","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:621","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:319","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.lib.Repository)"},"status":-2},{"failures":[],"tindex":"ec123c21-4c84-11e5-9afb-aff327703feb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:452","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType"},"status":0},{"failures":[79],"tindex":"ec126332-4c84-11e5-9afb-4faeef5556c7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:198","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.InvalidPathException.getCause()) != null)\n    org.eclipse.jgit.errors.CorruptObjectException.initCause(org.eclipse.jgit.dircache.InvalidPathException.getCause());\n"},"status":-1},{"failures":[],"tindex":"ec126333-4c84-11e5-9afb-374d7c10515c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:618","type":"CtTryImpl","sourcecode":"try {\n    final org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList = org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs();\n    org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs();\n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>);\n        if (org.eclipse.jgit.lib.Ref.isSymbolic())\n            continue;\n        \n        int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.find(java.lang.String);\n        if (int >= 0)\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.set(int, org.eclipse.jgit.internal.storage.file.RefDirectory.peeledPackedRef(org.eclipse.jgit.lib.Ref));\n        else\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.add(int, org.eclipse.jgit.internal.storage.file.RefDirectory.peeledPackedRef(org.eclipse.jgit.lib.Ref));\n        \n    }\n    org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList);\n    for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n        java.io.File java.io.File = org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String);\n        if (!(org.eclipse.jgit.util.FS.exists(java.io.File)))\n            continue;\n        \n        org.eclipse.jgit.internal.storage.file.LockFile org.eclipse.jgit.internal.storage.file.LockFile = new org.eclipse.jgit.internal.storage.file.LockFile(java.io.File , org.eclipse.jgit.internal.storage.file.FileRepository.getFS());\n        if (!(org.eclipse.jgit.internal.storage.file.LockFile.lock()))\n            continue;\n        \n        try {\n            org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(null, java.lang.String);\n            if ((org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef == null) || (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.isSymbolic()))\n                continue;\n            \n            org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String);\n            org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.getObjectId();\n            if ((org.eclipse.jgit.lib.ObjectId != null) && (org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.Ref.getObjectId()))) {\n                org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n                org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n                do {\n                    org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.get();\n                    int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(java.lang.String);\n                    if (int < 0)\n                        break;\n                    \n                    org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.remove(int);\n                } while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>)) );\n                int int = org.eclipse.jgit.internal.storage.file.RefDirectory.(org.eclipse.jgit.internal.storage.file.RefDirectory.levelsIn(java.lang.String)) - 2;\n                org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String), int);\n            } \n        } finally {\n            org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n        }\n    }\n} finally {\n    org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n}"},"status":-2},{"failures":[80,81,82,83,84,85,86,87,88,89,90],"tindex":"ec128a44-4c84-11e5-9afb-c5bc139eaf47","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:368","type":"CtLocalVariableImpl","sourcecode":"long long = long - long"},"variableMap":{"leftCost":"hashedCnt","rightCost":"hashedCnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:216","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.max(long, org.eclipse.jgit.diff.SimilarityIndex.long)"},"status":-1},{"failures":[],"tindex":"ec128a45-4c84-11e5-9afb-ed23fafb0f93","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:416","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<org.eclipse.jgit.internal.storage.file.PackIndex> = null"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:214","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<org.eclipse.jgit.internal.storage.file.PackIndex> = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.put(org.eclipse.jgit.internal.storage.dfs.DfsPackKey, org.eclipse.jgit.internal.storage.dfs.DfsPackFile.long, int, org.eclipse.jgit.internal.storage.file.PackIndex)"},"status":0},{"failures":[],"tindex":"ec128a46-4c84-11e5-9afb-3742b01a07f7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:727","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheEntry.isExtended())\n    return (org.eclipse.jgit.util.NB.decodeUInt16(byte[], ((int) + (org.eclipse.jgit.dircache.DirCacheEntry.int)))) << 16;\nelse\n    return 0;\n"},"status":-2},{"failures":[91,92],"tindex":"ec12b157-4c84-11e5-9afb-f3131b0f1ad3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:958","type":"CtOperatorAssignmentImpl","sourcecode":"int += 7"},"variableMap":{"shift":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.MutableObjectId:107","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.lib.MutableObjectId.org.eclipse.jgit.lib.MutableObjectId.set(int, (int & 3), int)"},"status":-1},{"failures":[93,94,95],"tindex":"ec12b158-4c84-11e5-9afb-c58f4a96499f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.RefAdvertiser:185","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Ref.getObjectId()) == null)\n    continue;\n"},"variableMap":{"ref":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LsRemoteCommand:209","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec : java.util.Collection<org.eclipse.jgit.transport.RefSpec>)\n    if (org.eclipse.jgit.transport.RefSpec.matchSource(org.eclipse.jgit.lib.Ref)) {\n        java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.put(org.eclipse.jgit.lib.Ref.getName(), org.eclipse.jgit.lib.Ref);\n        break;\n    } "},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}