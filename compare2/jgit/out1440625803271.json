{"failureDictionary":{"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":5,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":8,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":14,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":11,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testUnpopAtFront":0,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testIndexSize":2,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":4,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":13,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":18,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":12,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":17,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":3,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":7,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":9,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":1,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":6,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":15,"org.eclipse.jgit.api.RevertCommandTest.testRevert":16},"transformations":[{"failures":[0],"tindex":"681c6c75-4c3c-11e5-86c2-3b0a3d827521","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.BlockRevQueue:97","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.BlockRevQueue.Block"},"variableMap":{"next":"b","b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:103","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.BlockFreeList.newBlock()"},"status":-1},{"failures":[],"tindex":"681e8f56-4c3c-11e5-86c2-93857e900289","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:111","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>.add(org.eclipse.jgit.util.TemporaryBuffer.Block)"},"status":0},{"failures":[],"tindex":"681e8f57-4c3c-11e5-86c2-794ceec2a3c7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:470","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.RawParseUtils.decode(java.nio.charset.Charset, byte[], int, int)"},"variableMap":{"msgB":"lf","msgE":"lf","raw":"b","enc":"org.eclipse.jgit.lib.Constants.CHARSET"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:670","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(org.eclipse.jgit.lib.Constants.java.nio.charset.Charset, byte[], int, (int - 1))"},"status":-2},{"failures":[],"tindex":"681e8f58-4c3c-11e5-86c2-ff8c6abf96d6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:491","type":"CtInvocationImpl","sourcecode":"java.io.File.deleteOnExit()"},"variableMap":{"finalPack":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:524","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.RepositoryCache.FileKey.isGitRepository(java.io.File, org.eclipse.jgit.util.FS)) {\n    org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setGitDir(java.io.File);\n    break;\n} "},"status":0},{"failures":[],"tindex":"681eb669-4c3c-11e5-86c2-f3baa4b5e80a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:1026","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.newDelta(this, long, (long - int), long)"},"variableMap":{"p":"org.eclipse.jgit.lib.Constants.OBJ_BLOB","len":"len","pos":"len","ofs":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:1009","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n    case org.eclipse.jgit.lib.Constants.int :\n        return org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.newWhole(this, long, (long - int));\n    case org.eclipse.jgit.lib.Constants.int :\n        {\n            int = (byte[][int++]) & 255;\n            long long = int & 127;\n            while ((int & 128) != 0) {\n                long += 1;\n                int = (byte[][int++]) & 255;\n                long <<= 7;\n                long += int & 127;\n            }\n            long = long - long;\n            return org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.newDelta(this, long, (long - int), long);\n        }\n    case org.eclipse.jgit.lib.Constants.int :\n        {\n            long -= int;\n            long -= org.eclipse.jgit.lib.Constants.int;\n            org.eclipse.jgit.internal.storage.file.PackFile.readFully((long + int), byte[], 0, 20, org.eclipse.jgit.internal.storage.file.WindowCursor);\n            org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromRaw(byte[]);\n            return org.eclipse.jgit.internal.storage.file.LocalObjectRepresentation.newDelta(this, long, long, org.eclipse.jgit.lib.ObjectId);\n        }\n    default :\n        throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.valueOf(int)));\n}"},"status":-2},{"failures":[],"tindex":"681eb66a-4c3c-11e5-86c2-81f98b9e6b37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:482","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.eclipse.jgit.dircache.DirCacheTree.int"},"status":-2},{"failures":[],"tindex":"681eb66b-4c3c-11e5-86c2-a95c33fa9dd3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1153","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\".lock\"))\n    return false;\n"},"variableMap":{"refName":"refName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1158","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.util.SystemReader.getInstance().checkPath(java.lang.String);\n} catch (org.eclipse.jgit.errors.CorruptObjectException e) {\n    return false;\n}"},"status":0},{"failures":[1,2],"tindex":"681eb66c-4c3c-11e5-86c2-45544f877f5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:209","type":"CtOperatorAssignmentImpl","sourcecode":"long += 4 * 4"},"status":-1},{"failures":[],"tindex":"681edd7d-4c3c-11e5-86c2-e54ab1800f18","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.fnmatch.AbstractHead:70","type":"CtAssignmentImpl","sourcecode":"this.java.util.List<org.eclipse.jgit.fnmatch.Head> = java.util.List<org.eclipse.jgit.fnmatch.Head>"},"variableMap":{"newHeads":"newHeads"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:333","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.Head> = java.util.List<org.eclipse.jgit.fnmatch.Head>"},"status":-2},{"failures":[3,4,5,6,7,8,9],"tindex":"681edd7e-4c3c-11e5-86c2-59d6f31c9dc4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:283","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 32"},"variableMap":{"cmd":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:188","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.internal.storage.pack.PackOutputStream.org.eclipse.jgit.internal.storage.pack.PackOutputStream.ofsDelta(((long) - (org.eclipse.jgit.internal.storage.pack.ObjectToPack.getOffset())), byte[], int)"},"status":-1},{"failures":[],"tindex":"681edd7f-4c3c-11e5-86c2-25fc7fae913a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:220","type":"CtIfImpl","sourcecode":"if ((boolean) && (!boolean))\n    return false;\n"},"variableMap":{"dirOnly":"fastForward","assumeDirectory":"fastForward"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteRefUpdate:432","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18],"tindex":"681edd80-4c3c-11e5-86c2-bbdaf30edf79","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.DepthGenerator:129","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.DepthWalk.Commit == null)\n    return null;\n"},"variableMap":{"c":"headCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:142","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.List<org.eclipse.jgit.lib.Ref>) {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getPeeledObjectId();\n    if (org.eclipse.jgit.lib.ObjectId == null)\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n    \n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n    if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) != 1)\n        throw new org.eclipse.jgit.api.errors.MultipleParentsNotAllowedException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.revwalk.RevCommit.name(), java.lang.Integer.valueOf(org.eclipse.jgit.revwalk.RevCommit.getParentCount())));\n    \n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n    org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevCommit);\n    java.lang.String java.lang.String = org.eclipse.jgit.api.RevertCommand.calculateOurName(org.eclipse.jgit.lib.Ref);\n    java.lang.String java.lang.String = ((org.eclipse.jgit.revwalk.RevCommit.getId().abbreviate(7).name()) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n    org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)));\n    org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository));\n    org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.revwalk.RevCommit.getTree());\n    org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"BASE\" , java.lang.String , java.lang.String });\n    java.lang.String java.lang.String = (\"Revert \\\"\" + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage())) + \"\\\"\";\n    java.lang.String java.lang.String = (((java.lang.String + \"\\n\\n\") + \"This reverts commit \") + (org.eclipse.jgit.revwalk.RevCommit.getId().getName())) + \".\\n\";\n    if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)) {\n        if (org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.revwalk.RevCommit.getTree().getId(), org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()))\n            continue;\n        \n        org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.revwalk.RevCommit.getTree() , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n        org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n        org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n        org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.revwalk.RevCommit>.getRepository()).commit().setMessage(java.lang.String).setReflogComment((\"revert: \" + java.lang.String)).call();\n        java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n        org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit;\n    } else {\n        java.util.List<java.lang.String> = org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths();\n        java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> = org.eclipse.jgit.merge.ResolveMerger.getFailingPaths();\n        if (java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> != null)\n            org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n        else\n            org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n        \n        if ((!(org.eclipse.jgit.merge.ResolveMerger.failed())) && (!(java.util.List<java.lang.String>.isEmpty()))) {\n            java.lang.String java.lang.String = new org.eclipse.jgit.merge.MergeMessageFormatter().formatWithConflicts(java.lang.String, org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths());\n            org.eclipse.jgit.lib.Repository.writeRevertHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n            org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String);\n        } \n        return null;\n    }\n}"},"status":-1},{"failures":[],"tindex":"681f0491-4c3c-11e5-86c2-65b074706ef2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.MutableObjectId:240","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.parseHexInt32(byte[], (int + 8))"},"variableMap":{"p":"w1","bs":"bs","w2":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.MutableObjectId:175","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.NB.decodeInt32(byte[], int)"},"status":-2},{"failures":[],"tindex":"681f0492-4c3c-11e5-86c2-c19179166006","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1219","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDoNotDelta()"},"variableMap":{"otp":"oe"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriterV2:79","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PackedObjectInfo.copyRawTo(java.security.DigestOutputStream)"},"status":-2},{"failures":[],"tindex":"681f2ba3-4c3c-11e5-86c2-856328d07c22","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:983","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = java.io.File.createTempFile(\"renamed_\", \"_ref\", java.io.File)"},"variableMap":{"refsDir":"objdir"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:870","type":"CtLocalVariableImpl","sourcecode":"final java.io.File java.io.File = java.io.File.getParentFile()"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}