{"failureDictionary":{"org.eclipse.jgit.api.GitConstructionTest.testWrap":61,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":79,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":35,"org.eclipse.jgit.api.GitConstructionTest.testOpen":60,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":58,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_DuplicateAButCommonUniqueInB":72,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":46,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":41,"org.eclipse.jgit.api.RebaseCommandTest.testOnlyCommentRebaseTodo":38,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":40,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":50,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_MoveBlock":71,"org.eclipse.jgit.api.RebaseCommandTest.testLeadingSpacesRebaseTodo":47,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":85,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_UniqueCommonLargerThanMatchPoint":73,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":8,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":6,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":51,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":19,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":57,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":56,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":69,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonGrowsPrefixAndSuffix":75,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":65,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":29,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":68,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":84,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":53,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":16,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":9,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":54,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":82,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":49,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InvertBlocks":74,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":77,"org.eclipse.jgit.api.GitConstructionTest.testClose":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":10,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":55,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":81,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":78,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":44,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":11,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":24,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":34,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":27,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":80,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile":28,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout":63,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":22,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":39,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":88,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":86,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":76,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags":64,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":87,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":45,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":20,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":30,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":1,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":2,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":5,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":4,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":14,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":13,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":17,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":52,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":43,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":12,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":15,"org.eclipse.jgit.api.RebaseCommandTest.testParseRewordCommand":21,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":3,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LcsContainsUnique":70,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":83,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":32,"org.eclipse.jgit.transport.RemoteConfigTest.testCreateOrigin":62,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":7,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags":66,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":0,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":67},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"302d6339-4c55-11e5-8106-fd6c157c883c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ReflogReaderImpl:121","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:121","type":"CtReturnImpl","sourcecode":"return java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,59,60,60,61,61],"tindex":"302db15a-4c55-11e5-8106-691c38d73661","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:223","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Repository.readSquashCommitMsg()) != null)\n    org.eclipse.jgit.lib.Repository.writeSquashCommitMsg(null);\n"},"variableMap":{"repo":"clonedRepo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:308","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.ConfigConstants.java.lang.String.equals(java.lang.String)) || (org.eclipse.jgit.lib.ConfigConstants.java.lang.String.equals(java.lang.String)))\n    org.eclipse.jgit.lib.Repository.getConfig().setBoolean(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, true);\n"},"status":-1},{"failures":[],"tindex":"302db15b-4c55-11e5-8106-81d11845735e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:175","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.transport.BasePackConnection.readAdvertisedRefsImpl();\n} catch (org.eclipse.jgit.errors.TransportException err) {\n    org.eclipse.jgit.transport.BasePackConnection.close();\n    throw org.eclipse.jgit.errors.TransportException;\n} catch (java.io.IOException err) {\n    org.eclipse.jgit.transport.BasePackConnection.close();\n    throw new org.eclipse.jgit.errors.TransportException(java.io.IOException.getMessage() , java.io.IOException);\n} catch (java.lang.RuntimeException err) {\n    org.eclipse.jgit.transport.BasePackConnection.close();\n    throw new org.eclipse.jgit.errors.TransportException(java.lang.RuntimeException.getMessage() , java.lang.RuntimeException);\n}"},"status":-2},{"failures":[],"tindex":"302db15c-4c55-11e5-8106-93a447a6f983","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:865","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject.int |= org.eclipse.jgit.revwalk.RevWalk.int"},"status":0},{"failures":[62,63,64,65,66,67,68],"tindex":"302dd86d-4c55-11e5-8106-ab975e3ccfe6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:153","type":"CtInvocationImpl","sourcecode":"java.util.Collections.sort(java.util.List<java.lang.String>)"},"variableMap":{"only":"vlst"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:223","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.clear()"},"status":-1},{"failures":[],"tindex":"302dd86e-4c55-11e5-8106-1d28d4dfde6a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:310","type":"CtUnaryOperatorImpl","sourcecode":"~((int & (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) << (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int))"},"variableMap":{"org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_SHIFT":"len","flag":"len","org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_MASK":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineIn:142","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 4"},"status":-2},{"failures":[],"tindex":"302dd86f-4c55-11e5-8106-77d2f2a2c603","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.ChangeIdUtil:69","type":"CtInvocationImpl","sourcecode":"java.lang.String.replaceAll(\"(?i)(?m)^Signed-off-by:.*$\\n?\", \"\").replaceAll(\"(?m)^#.*$\\n?\", \"\").replaceAll(\"(?m)\\n\\n\\n+\", \"\\\\\\n\")"},"variableMap":{"msg":"hostName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:146","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = java.lang.String"},"status":0},{"failures":[69],"tindex":"302dd870-4c55-11e5-8106-67de85d010cc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:145","type":"CtSwitchImpl","sourcecode":"switch (byte[][int]) {\n    case ' ' :\n    case '-' :\n    case '+' :\n        break;\n    default :\n        break SCAN;\n}"},"variableMap":{"buf":"buf","c":"eol"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:339","type":"CtSwitchImpl","sourcecode":"switch (byte[][int]) {\n    case ' ' :\n    case '\\n' :\n    case '\\\\' :\n        java.io.OutputStream[][0].write(byte[], int, (int - int));\n        java.io.OutputStream[][1].write(byte[], int, (int - int));\n        break;\n    case '-' :\n        java.io.OutputStream[][0].write(byte[], int, (int - int));\n        break;\n    case '+' :\n        java.io.OutputStream[][1].write(byte[], int, (int - int));\n        break;\n    default :\n        break SCAN;\n}"},"status":-1},{"failures":[70,71,72,73,74,75,76,31,77,78,79],"tindex":"302dff81-4c55-11e5-8106-1da311aed058","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:219","type":"CtIfImpl","sourcecode":"if (int == (long[].int)) {\n    int int = java.lang.Math.min(((long[].int) << 1), (1 + (org.eclipse.jgit.diff.Edit.getLengthA())));\n    long[] long[] = new long[int];\n    java.lang.System.arraycopy(long[], 0, long[], 0, long[].int);\n    long[] = long[];\n} "},"status":-1},{"failures":[],"tindex":"302dff82-4c55-11e5-8106-a7320f208528","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:491","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.dfs.DfsBlock != null)\n    return org.eclipse.jgit.internal.storage.dfs.DfsBlock;\n"},"variableMap":{"b":"v"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:321","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.dfs.DfsBlock"},"status":-2},{"failures":[],"tindex":"302dff83-4c55-11e5-8106-f35acb84e7d0","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.URIish:357","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(1)"},"variableMap":{"p":"daysAgo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RelativeDateFormatter:102","type":"CtReturnImpl","sourcecode":"return java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.util.RelativeDateFormatter.org.eclipse.jgit.util.RelativeDateFormatter.round(long, org.eclipse.jgit.util.RelativeDateFormatter.long))"},"status":-2},{"failures":[80],"tindex":"302dff84-4c55-11e5-8106-f5e13f87af4e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.SquashMessageFormatter:100","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Date:   \")"},"variableMap":{"a":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:150","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\\\\\\\\")"},"status":-1},{"failures":[81,82,83,84,85,86,87,88],"tindex":"302e2695-4c55-11e5-8106-33f3aa99482d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:316","type":"CtAssignmentImpl","sourcecode":"long = -1"},"variableMap":{"expireAgeMillis":"origRemaining"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:380","type":"CtOperatorAssignmentImpl","sourcecode":"long -= 12"},"status":-1},{"failures":[],"tindex":"302e2696-4c55-11e5-8106-f7b61d5cf18f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:873","type":"CtIfImpl","sourcecode":"if (long == 0)\n    long = long - long;\nelse if (long == 0)\n    long = long - long;\n"},"variableMap":{"cacheMillis":"maxOffset","fileLastModified":"maxOffset","lastModifiedMillis":"maxOffset","cacheLastModified":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:113","type":"CtIfImpl","sourcecode":"if (long > long)\n    long = long;\n"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}