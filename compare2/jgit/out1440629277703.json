{"failureDictionary":{"org.eclipse.jgit.merge.MergeAlgorithmTest.testEmptyTexts":20,"org.eclipse.jgit.notes.LeafBucketTest.testRemoveMakesEmpty":43,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":47,"org.eclipse.jgit.notes.LeafBucketTest.testRemoveFirst":38,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":0,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDelete":55,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart":22,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":7,"org.eclipse.jgit.notes.LeafBucketTest.testSetFive_MixedOrder":39,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":3,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":56,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":1,"org.eclipse.jgit.notes.LeafBucketTest.testSet_Replace":44,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":24,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":28,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":51,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":10,"org.eclipse.jgit.notes.LeafBucketTest.testRemoveLast":41,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":5,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":19,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardUnknownObject":62,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":13,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUpToDate":59,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":29,"org.eclipse.jgit.notes.LeafBucketTest.testSetFive_InOrder":42,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemoteVsForce":57,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":49,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDeleteNonExisting":64,"org.eclipse.jgit.notes.NoteMapTest.testCreateFromEmpty":34,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":27,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":18,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":60,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":21,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":67,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":45,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":71,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":14,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":50,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":36,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemote":53,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":17,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":6,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":32,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":68,"org.eclipse.jgit.api.PushCommandTest.testPush":70,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":25,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":46,"org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases":52,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":26,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":48,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":73,"org.eclipse.jgit.notes.LeafBucketTest.testRemoveMiddle":40,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":65,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":23,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":4,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":69,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":9,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":58,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward":63,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":35,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":16,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":72,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":61,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":15,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject":54,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":8,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":2,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":12,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":33,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":30,"org.eclipse.jgit.transport.PushProcessTest.testUpdateCreateRef":66,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":11,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":31,"org.eclipse.jgit.notes.LeafBucketTest.testSetFive_ReverseOrder":37},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"7f03f180-4c44-11e5-bbf4-0b4d4249a8e1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:288","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)))\n    continue;\n"},"variableMap":{"org.eclipse.jgit.lib.Constants.R_HEADS":"charsetName","n":"charsetName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeFormatter:97","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.merge.MergeChunk.getConflictState()) == (org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState)) {\n    java.lang.String = java.util.List<java.lang.String>.get(org.eclipse.jgit.merge.MergeChunk.getSequenceIndex());\n    java.io.OutputStream.write((boolean ? \"=======\\n\" : (\"======= \" + java.lang.String) + \"\\n\").getBytes(java.lang.String));\n} "},"status":-1},{"failures":[],"tindex":"7f041891-4c44-11e5-bbf4-4ff60963b96c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:157","type":"CtIfImpl","sourcecode":"if (int == '\\n')\n    break;\n"},"variableMap":{"c":"org.eclipse.jgit.internal.storage.file.ObjectDirectory.RESOLVE_ABBREV_LIMIT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:329","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile.resolve(java.util.Set<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.AbbreviatedObjectId, org.eclipse.jgit.internal.storage.file.ObjectDirectory.int)"},"status":-2},{"failures":[],"tindex":"7f041892-4c44-11e5-bbf4-75e2a34f54c6","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:592","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.IndexDiff.StageState != null)\n    byte |= org.eclipse.jgit.lib.IndexDiff.StageState.getStageMask();\n"},"status":0},{"failures":[],"tindex":"7f041893-4c44-11e5-bbf4-a99d0e155f28","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:178","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 10"},"variableMap":{"value":"flag"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:125","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.int |= int"},"status":-2},{"failures":[],"tindex":"7f041894-4c44-11e5-bbf4-41636a5adeed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:936","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString(byte[], 0);\n    if (((org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef != null) && (!(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.isSymbolic()))) && (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.getTarget().getObjectId().equals(org.eclipse.jgit.lib.ObjectId))) {\n        org.eclipse.jgit.internal.storage.file.FileSnapshot.setClean(org.eclipse.jgit.internal.storage.file.FileSnapshot);\n        return org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef;\n    } \n} catch (java.lang.IllegalArgumentException notRef) {\n    while ((0 < int) && (java.lang.Character.isWhitespace(byte[][(int - 1)])))\n        int--;\n    java.lang.String java.lang.String = org.eclipse.jgit.util.RawParseUtils.decode(byte[], 0, int);\n    java.io.IOException java.io.IOException = new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String, java.lang.String));\n    java.io.IOException.initCause(java.lang.IllegalArgumentException);\n    throw java.io.IOException;\n}"},"status":-2},{"failures":[],"tindex":"7f041895-4c44-11e5-bbf4-d3db14fba295","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.errors.RepositoryNotFoundException:62","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.errors.RepositoryNotFoundException.this(java.io.File.getPath())"},"status":-2},{"failures":[30],"tindex":"7f041896-4c44-11e5-bbf4-9ba26cae1ba4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:206","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.DateRevQueue.Entry = org.eclipse.jgit.revwalk.DateRevQueue.Entry.org.eclipse.jgit.revwalk.DateRevQueue.Entry"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"7f043fa7-4c44-11e5-bbf4-e30cd6713739","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.StartGenerator:132","type":"CtOperatorAssignmentImpl","sourcecode":"int |= (org.eclipse.jgit.revwalk.Generator.int) | (org.eclipse.jgit.revwalk.Generator.int)"},"variableMap":{"pendingOutputType":"cnt","org.eclipse.jgit.revwalk.Generator.NEEDS_REWRITE":"cnt","org.eclipse.jgit.revwalk.Generator.HAS_REWRITE":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:170","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"7f043fa8-4c44-11e5-bbf4-6d6bd1cbc4b9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.SystemReader:76","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.SystemReader.init()"},"status":-2},{"failures":[],"tindex":"7f043fa9-4c44-11e5-bbf4-477bfc69e023","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:388","type":"CtReturnImpl","sourcecode":"return int != 0 ? int : -1"},"variableMap":{"cnt":"org.eclipse.jgit.lib.Constants.OBJ_BLOB"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevBlob:69","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Constants.int"},"status":-2},{"failures":[],"tindex":"7f074cea-4c44-11e5-bbf4-2b2d95e0e740","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:816","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.doClose()"},"status":-2},{"failures":[1,10,11,16,18,19],"tindex":"7f074ceb-4c44-11e5-bbf4-91c84fc6b6c6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RepositoryState:76","type":"CtReturnImpl","sourcecode":"return \"Bare\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:329","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"7f074cec-4c44-11e5-bbf4-b7c4e9066ae1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:360","type":"CtOperatorAssignmentImpl","sourcecode":"long += int"},"status":0},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"7f074ced-4c44-11e5-bbf4-59c8613f9ded","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:996","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.getObjectReader().setAvoidUnreachableObjects(false)"},"variableMap":{"walk":"walker"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:186","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.RemoteRefUpdate org.eclipse.jgit.transport.RemoteRefUpdate : java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.values()) {\n    final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.transport.PushConnection.getRef(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName());\n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref == null ? org.eclipse.jgit.lib.ObjectId.zeroId() : org.eclipse.jgit.lib.Ref.getObjectId();\n    if (org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId().equals(org.eclipse.jgit.lib.ObjectId)) {\n        if (org.eclipse.jgit.transport.RemoteRefUpdate.isDelete()) {\n            org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        } else {\n            org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        }\n        continue;\n    } \n    if ((org.eclipse.jgit.transport.RemoteRefUpdate.isExpectingOldObjectId()) && (!(org.eclipse.jgit.transport.RemoteRefUpdate.getExpectedOldObjectId().equals(org.eclipse.jgit.lib.ObjectId)))) {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n        continue;\n    } \n    if ((org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.ObjectId.zeroId())) || (org.eclipse.jgit.transport.RemoteRefUpdate.isDelete())) {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setFastForward(true);\n        java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.put(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName(), org.eclipse.jgit.transport.RemoteRefUpdate);\n        continue;\n    } \n    boolean boolean = true;\n    try {\n        org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.ObjectId);\n        final org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId());\n        if (((!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit)) || (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit))) || (!(org.eclipse.jgit.revwalk.RevWalk.isMergedInto(((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)), ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject))))))\n            boolean = false;\n        \n    } catch (org.eclipse.jgit.errors.MissingObjectException x) {\n        boolean = false;\n    } catch (java.lang.Exception x) {\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.getURI() , java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Exception.getMessage()) , java.lang.Exception);\n    }\n    org.eclipse.jgit.transport.RemoteRefUpdate.setFastForward(boolean);\n    if ((!boolean) && (!(org.eclipse.jgit.transport.RemoteRefUpdate.isForceUpdate())))\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n    else\n        java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>.put(org.eclipse.jgit.transport.RemoteRefUpdate.getRemoteName(), org.eclipse.jgit.transport.RemoteRefUpdate);\n    \n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}