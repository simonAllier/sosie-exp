{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":70,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":69,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":71,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":75,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":68,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":76,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":32,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":74,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles2":36,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles1":35,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles4":38,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_PreferredAuthentications":30,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles3":37,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":73,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegationAllExceptJavaInSrcAndExceptChildDirInSrc":39,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":46,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":10,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications":31,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":52,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":72,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":14,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":2,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":12,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":60,"org.eclipse.jgit.ignore.IgnoreNodeTest.testWithSlashDoesNotMatchInSubDirectory":41,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":57,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":77,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":3,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":65,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":11,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRules":33,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":8,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttempts":24,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":21,"org.eclipse.jgit.ignore.IgnoreNodeTest.testToString":34,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":59,"org.eclipse.jgit.transport.OpenSshConfigTest.testQuoteParsing":27,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsKeywordCaseInsensitive":29,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":54,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":48,"org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile":64,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":9,"org.eclipse.jgit.api.CleanCommandTest.testClean":58,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":19,"org.eclipse.jgit.ignore.IgnoreNodeTest.testSlashOnlyMatchesDirectory":43,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":78,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":51,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":50,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":66,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":6,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":18,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit":25,"org.eclipse.jgit.transport.OpenSshConfigTest.testSeparatorParsing":28,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":55,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegateAllExceptJavaInSrc":40,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":7,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegation":44,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":49,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":17,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":45,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegation":42,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":47,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":53,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":56,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":0,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":15,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsSet":22,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":13,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritBatchMode":23,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_BatchModeYes":26,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":4,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":62,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":63,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":16,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":20,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":61,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":67,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":5},"transformations":[{"failures":[],"tindex":"c46e0f9d-4c2b-11e5-9ee4-13124ac630a4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:135","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue CHECK_BASE;\n"},"variableMap":{"cmp":"eol"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:167","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.patch.CombinedFileHeader.parseNewFileMode(int, int)"},"status":-2},{"failures":[0,1],"tindex":"c46e36ae-4c2b-11e5-9ee4-5f5534952cc9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:241","type":"CtReturnImpl","sourcecode":"return (long * 100) / long"},"variableMap":{"hits":"sz","total":"sz"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:967","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"c46e5dbf-4c2b-11e5-9ee4-bf735a61b435","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:312","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry = org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry"},"variableMap":{"bestBase":"res","src":"prev"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry:115","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry = org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry"},"status":-2},{"failures":[],"tindex":"c46e5dc0-4c2b-11e5-9ee4-259ed0f47773","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:164","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.RemoteConfig.addURI(org.eclipse.jgit.transport.URIish)"},"status":-2},{"failures":[],"tindex":"c46e5dc1-4c2b-11e5-9ee4-b1d5364548eb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:476","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit) != null)\n    return org.eclipse.jgit.revwalk.RevCommit.getId();\n"},"variableMap":{"startCommit":"org.eclipse.jgit.lib.ObjectId.ZEROID"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectId:77","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"c46e5dc2-4c2b-11e5-9ee4-c3a8a56c0f58","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RepositoryCache:323","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.file.FileRepository(java.io.File)"},"variableMap":{"path":"workTree"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:232","type":"CtTryImpl","sourcecode":"try {\n    return new org.eclipse.jgit.lib.RepositoryBuilder().setMustExist(true).setFS(org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS).setWorkTree(java.io.File).build();\n} catch (org.eclipse.jgit.errors.RepositoryNotFoundException e) {\n    return null;\n}"},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30,31],"tindex":"c46e84d3-4c2b-11e5-9ee4-5751e74ac842","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.OpenSshConfig:168","type":"CtAssignmentImpl","sourcecode":"java.util.Map<java.lang.String, org.eclipse.jgit.transport.OpenSshConfig.Host> = java.util.Collections.emptyMap()"},"variableMap":{"hosts":"hosts"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:163","type":"CtAssignmentImpl","sourcecode":"java.util.Map<java.lang.String, org.eclipse.jgit.transport.OpenSshConfig.Host> = org.eclipse.jgit.transport.OpenSshConfig.parse(java.io.FileInputStream)"},"status":-1},{"failures":[],"tindex":"c46e84d4-4c2b-11e5-9ee4-8f3f2775dbc5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:860","type":"CtReturnImpl","sourcecode":"return int < 0 ? null : org.eclipse.jgit.dircache.DirCacheEntry[][int]"},"variableMap":{"sortedEntries":"sortedEntries","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:848","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCacheEntry[][int]"},"status":0},{"failures":[],"tindex":"c46e84d5-4c2b-11e5-9ee4-2fadb9d7f4b8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:390","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.reset(((~(int)) & (org.eclipse.jgit.revwalk.RevWalk.int)))"},"variableMap":{"org.eclipse.jgit.revwalk.RevWalk.APP_FLAGS":"org.eclipse.jgit.revwalk.MergeBaseGenerator.POPPED","this":"walker","freeFlags":"recarryMask"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:94","type":"CtTryImpl","sourcecode":"try {\n    for ( ;  ; ) {\n        final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.AbstractRevQueue.next();\n        if (org.eclipse.jgit.revwalk.RevCommit == null)\n            break;\n        \n        org.eclipse.jgit.revwalk.MergeBaseGenerator.add(org.eclipse.jgit.revwalk.RevCommit);\n    }\n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.freeFlag(int);\n    int = (int) | (org.eclipse.jgit.revwalk.MergeBaseGenerator.int);\n    int = ((int) | (org.eclipse.jgit.revwalk.MergeBaseGenerator.int)) | (org.eclipse.jgit.revwalk.MergeBaseGenerator.int);\n}"},"status":-2},{"failures":[],"tindex":"c46eabe6-4c2b-11e5-9ee4-f79abf45f339","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.AddCommand:155","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:402","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String[][int]"},"status":-2},{"failures":[],"tindex":"c46eabe7-4c2b-11e5-9ee4-0b62cded1041","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:169","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.WindowCache.int"},"variableMap":{"org.eclipse.jgit.internal.storage.file.WindowCache.streamFileThreshold":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:479","type":"CtSwitchImpl","sourcecode":"switch (byte[][int]) {\n    case 'b' :\n        if (((((byte[][(int + 1)]) != 'l') || ((byte[][(int + 2)]) != 'o')) || ((byte[][(int + 3)]) != 'b')) || ((byte[][(int + 4)]) != byte))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.util.MutableInteger.int = int + 5;\n        return org.eclipse.jgit.lib.Constants.int;\n    case 'c' :\n        if (((((((byte[][(int + 1)]) != 'o') || ((byte[][(int + 2)]) != 'm')) || ((byte[][(int + 3)]) != 'm')) || ((byte[][(int + 4)]) != 'i')) || ((byte[][(int + 5)]) != 't')) || ((byte[][(int + 6)]) != byte))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.util.MutableInteger.int = int + 7;\n        return org.eclipse.jgit.lib.Constants.int;\n    case 't' :\n        switch (byte[][(int + 1)]) {\n            case 'a' :\n                if (((byte[][(int + 2)]) != 'g') || ((byte[][(int + 3)]) != byte))\n                    throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n                \n                org.eclipse.jgit.util.MutableInteger.int = int + 4;\n                return org.eclipse.jgit.lib.Constants.int;\n            case 'r' :\n                if ((((byte[][(int + 2)]) != 'e') || ((byte[][(int + 3)]) != 'e')) || ((byte[][(int + 4)]) != byte))\n                    throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n                \n                org.eclipse.jgit.util.MutableInteger.int = int + 5;\n                return org.eclipse.jgit.lib.Constants.int;\n            default :\n                throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        }\n    default :\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n}"},"status":-2},{"failures":[32],"tindex":"c46ed2f8-4c2b-11e5-9ee4-830b65dcdcb0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:677","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Checking out ours/theirs is only possible when checking out index, \" + \"not when switching branches.\"))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:689","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.PackMismatchException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.valueOf(long), java.lang.Long.valueOf(org.eclipse.jgit.internal.storage.file.PackIndex.getObjectCount()), org.eclipse.jgit.internal.storage.file.PackFile.getPackFile()))"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"c46ed2f9-4c2b-11e5-9ee4-43beb837e6f8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:173","type":"CtIfImpl","sourcecode":"if (boolean)\n    java.lang.String = \"branch: Reset start-point to tag \" + java.lang.String;\nelse\n    java.lang.String = \"branch: Created from tag \" + java.lang.String;\n"},"variableMap":{"refLogMessage":"pattern","startPointFullName":"pattern","exists":"dirOnly"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:103","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.String = org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.stripTrailing(java.lang.String, org.eclipse.jgit.ignore.FastIgnoreRule.char);\n    if ((java.lang.String.length()) == 0) {\n        this.org.eclipse.jgit.ignore.internal.IMatcher = org.eclipse.jgit.ignore.internal.IMatcher.org.eclipse.jgit.ignore.internal.IMatcher;\n        return ;\n    } \n} "},"status":-1},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"c46ed2fa-4c2b-11e5-9ee4-df07852a1d05","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ReflogReaderImpl:121","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:145","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<java.lang.String>"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}