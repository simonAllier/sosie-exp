{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":50,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":13,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":24,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":19,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":41,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":8,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":39,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":7,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":20,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode":11,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":28,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":35,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":17,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":49,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":4,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":5,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode":15,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":33,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":10,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":37,"org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange":14,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":3,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":43,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":27,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":23,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":31,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":45,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":9,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":42,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":38,"org.eclipse.jgit.api.CleanCommandTest.testClean":30,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":47,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":54,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary":2,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":12,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameModeChange":0,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":40,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":55,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":56,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":32,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":44,"org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus":29,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeaderForRenameWithoutContentChange":1,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":18,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":52,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":26,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":46,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":48,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":21,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":36,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":6,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":25,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":51,"org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles":57,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":22,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":34,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":53,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":16},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"47d167bd-4c3d-11e5-9a08-b725452e6f4c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.attributes.AttributesRule:136","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\"))) {\n    java.lang.String = \"/\" + java.lang.String;\n} "},"variableMap":{"pattern":"newPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:419","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-1},{"failures":[20,21,22,23,24,25],"tindex":"47d1dcee-4c3d-11e5-9a08-8156c97fa452","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:238","type":"CtAssignmentImpl","sourcecode":"java.io.File = new java.io.File(((java.io.File.getPath()) + \".keep\"))"},"variableMap":{"packFile":"gitDir","keepFile":"gitDir"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:373","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-1},{"failures":[],"tindex":"47d1dcef-4c3d-11e5-9a08-15db09211a9e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:1014","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.NameConflictTreeWalk.addTree(org.eclipse.jgit.treewalk.WorkingTreeIterator)"},"variableMap":{"tw":"walk","workingTreeIterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:504","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)"},"status":0},{"failures":[],"tindex":"47d1dcf0-4c3d-11e5-9a08-1d6329ef33b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:734","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.Candidate.create(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.treewalk.filter.PathFilter)"},"status":-2},{"failures":[],"tindex":"47d1dcf1-4c3d-11e5-9a08-451a11403678","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:280","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.parseHeaders(this)"},"variableMap":{"c":"commit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleUpdateCommand:180","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ConfigConstants.java.lang.String.equals(java.lang.String)) {\n    org.eclipse.jgit.api.MergeCommand org.eclipse.jgit.api.MergeCommand = new org.eclipse.jgit.api.MergeCommand(org.eclipse.jgit.lib.Repository);\n    org.eclipse.jgit.api.MergeCommand.include(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.api.MergeCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy);\n    org.eclipse.jgit.api.MergeCommand.call();\n} else if (org.eclipse.jgit.lib.ConfigConstants.java.lang.String.equals(java.lang.String)) {\n    org.eclipse.jgit.api.RebaseCommand org.eclipse.jgit.api.RebaseCommand = new org.eclipse.jgit.api.RebaseCommand(org.eclipse.jgit.lib.Repository);\n    org.eclipse.jgit.api.RebaseCommand.setUpstream(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.api.RebaseCommand.setStrategy(org.eclipse.jgit.merge.MergeStrategy);\n    org.eclipse.jgit.api.RebaseCommand.call();\n} else {\n    org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.revwalk.RevCommit.getTree());\n    org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n    org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n    org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.Repository.updateRef(org.eclipse.jgit.lib.Constants.java.lang.String, true);\n    org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.revwalk.RevCommit);\n    org.eclipse.jgit.lib.RefUpdate.forceUpdate();\n}"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"47d20402-4c3d-11e5-9a08-7f78ddb1a327","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportSftp:106","type":"CtReturnImpl","sourcecode":"return java.util.Collections.singleton(\"sftp\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:640","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>"},"status":-1},{"failures":[],"tindex":"47d20403-4c3d-11e5-9a08-ed43640e0802","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:761","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.DefaultNoteMerger:86","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.Constants.int, ((org.eclipse.jgit.lib.ObjectLoader.getSize()) + (org.eclipse.jgit.lib.ObjectLoader.getSize())), org.eclipse.jgit.util.io.UnionInputStream)"},"status":-2},{"failures":[],"tindex":"47d22b14-4c3d-11e5-9a08-6db7e90f8737","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:790","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[]) {\n    if (org.eclipse.jgit.internal.storage.file.PackFile.invalid()) {\n        org.eclipse.jgit.internal.storage.file.PackFile.close();\n        continue;\n    } \n    final org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile = java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.PackFile>.put(org.eclipse.jgit.internal.storage.file.PackFile.getPackFile().getName(), org.eclipse.jgit.internal.storage.file.PackFile);\n    if (org.eclipse.jgit.internal.storage.file.PackFile != null) {\n        java.util.Map<java.lang.String, org.eclipse.jgit.internal.storage.file.PackFile>.put(org.eclipse.jgit.internal.storage.file.PackFile.getPackFile().getName(), org.eclipse.jgit.internal.storage.file.PackFile);\n        org.eclipse.jgit.internal.storage.file.PackFile.close();\n    } \n}"},"status":-2},{"failures":[55,56,6,7],"tindex":"47d22b15-4c3d-11e5-9a08-b125e35cddb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:249","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.patch.HunkHeader.OldImage.int = 1"},"status":-1},{"failures":[],"tindex":"47d22b16-4c3d-11e5-9a08-c99b18f68a06","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotWalk:171","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit)\n    return ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)).getCommitTime();\n"},"variableMap":{"o":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:517","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.UnpackedObject.getSize(java.io.FileInputStream, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor)"},"status":-2},{"failures":[],"tindex":"47d25227-4c3d-11e5-9a08-abab486be8a9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.InitCommand:95","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getProperty(\"user.dir\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:591","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"status":-2},{"failures":[57],"tindex":"47d25228-4c3d-11e5-9a08-8b12575a7bba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:299","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.Patch.byte[])) < 0)\n    org.eclipse.jgit.patch.Patch.warn(byte[], int, org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-1},{"failures":[],"tindex":"47d25229-4c3d-11e5-9a08-15fe8d8b70f3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:261","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.lib.AbbreviatedObjectId.prefixCompare(this)) == 0"},"status":-2},{"failures":[],"tindex":"47d2522a-4c3d-11e5-9a08-4ba848825003","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:345","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:688","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.revwalk.RevWalk.getObjectReader(), new java.lang.String(char[] , (int + 1) , (((char[].int) - int) - 1)), org.eclipse.jgit.revwalk.RevTree)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}