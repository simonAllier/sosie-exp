{"failureDictionary":{"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder":14,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":156,"org.eclipse.jgit.attributes.AttributesMatcherTest.testGetters":64,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":162,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":124,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":52,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree":16,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":170,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":172,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":90,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":169,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":66,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree":15,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":75,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":167,"org.eclipse.jgit.attributes.AttributeNodeTest.testBasic":61,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly":80,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":79,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":174,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":139,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":153,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":182,"org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode":4,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":50,"org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree":11,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":12,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":23,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":149,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":188,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":37,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":194,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":42,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":142,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":101,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":120,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":125,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":175,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":93,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":171,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":71,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort":3,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":130,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":38,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":26,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":46,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":47,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":25,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":92,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":77,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":189,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":190,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":173,"org.eclipse.jgit.api.GitConstructionTest.testClose":117,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":97,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":102,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":129,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort":2,"org.eclipse.jgit.attributes.AttributeNodeTest.testTabSeparator":60,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":68,"org.eclipse.jgit.transport.URIishTest.testGetSet":5,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":57,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":58,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":59,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":56,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":123,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":159,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":98,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":30,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":17,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":115,"org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles":87,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":74,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":91,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":88,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":110,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":164,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":40,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":136,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":161,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive":10,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":196,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":72,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":186,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":183,"org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects":85,"org.eclipse.jgit.api.BlameCommandTest.testRename":45,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles":84,"org.eclipse.jgit.api.FetchCommandTest.testFetch":147,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":140,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":179,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":43,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":103,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyValueKey":63,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyLine":62,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":193,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":176,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":143,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":166,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":191,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":44,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":70,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":160,"org.eclipse.jgit.util.RawSubStringPatternTest.testBoundary":0,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":36,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":168,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":89,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":99,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":154,"org.eclipse.jgit.api.PushCommandTest.testPush":113,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":76,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":49,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":22,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":112,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":180,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":178,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":146,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":145,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired":78,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":95,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":67,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":150,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":165,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset":7,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair":81,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":69,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":128,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":48,"org.eclipse.jgit.api.GitConstructionTest.testWrap":119,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":185,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":131,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":105,"org.eclipse.jgit.api.GitConstructionTest.testOpen":118,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":155,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":104,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":73,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":195,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":21,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":121,"org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile2":86,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":127,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":109,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":34,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":100,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":35,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":39,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":148,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":51,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":31,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":151,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":29,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":32,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":33,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":177,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort":6,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":20,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":94,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":126,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":187,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1":53,"org.eclipse.jgit.api.ApplyCommandTest.testAddA2":54,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath":9,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":96,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":114,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":65,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent":83,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":28,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":138,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":137,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes":82,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":41,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":111,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":55,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree":8,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":192,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":141,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":27,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":19,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":132,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":134,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":135,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":163,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":158,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":107,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":152,"org.eclipse.jgit.util.RawSubStringPatternTest.testNoMatches":1,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":108,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":122,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":184,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":18,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":181,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":144,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":157,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":106,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":133},"transformations":[{"failures":[0,1],"tindex":"5949bbaf-4c5a-11e5-b606-91a1f4a38785","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:824","type":"CtIfImpl","sourcecode":"if (byte == ':')\n    return int;\n"},"variableMap":{"c":"first","ptr":"matchPos"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawSubStringPattern:99","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawSubStringPattern.org.eclipse.jgit.util.RawSubStringPattern.neq(byte, byte[][int])) {\n    while (((++int) <= int) && org.eclipse.jgit.util.RawSubStringPattern.(org.eclipse.jgit.util.RawSubStringPattern.neq(byte, byte[][int]))) {\n    }\n    if (int > int)\n        return -1;\n    \n} "},"status":-1},{"failures":[],"tindex":"5949e2c0-4c5a-11e5-b606-a1d92ba402d1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:427","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameResult:85","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.blame.BlameGenerator.getResultPath()"},"status":-2},{"failures":[],"tindex":"5949e2c1-4c5a-11e5-b606-bfa52557eda8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileSnapshot:217","type":"CtReturnImpl","sourcecode":"return \"DIRTY\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1545","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.RawParseUtils.decode(org.eclipse.jgit.util.IO.readFully(java.io.File))"},"status":-2},{"failures":[],"tindex":"5949e2c2-4c5a-11e5-b606-7b89a908966a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:300","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null)\n    return java.lang.String;\nelse\n    return org.eclipse.jgit.lib.Constants.java.lang.String;\n"},"variableMap":{"ref":"remote","org.eclipse.jgit.lib.Constants.HEAD":"remote"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BranchConfig:162","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.transport.RemoteConfig = new org.eclipse.jgit.transport.RemoteConfig(org.eclipse.jgit.lib.Config , java.lang.String);\n} catch (java.net.URISyntaxException e) {\n    return null;\n}"},"status":-2},{"failures":[2,3,4,5,6],"tindex":"5949e2c3-4c5a-11e5-b606-bf057f85557d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.Candidate:335","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" @ \")"},"variableMap":{"r":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:624","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.transport.URIish.org.eclipse.jgit.transport.URIish.escape(org.eclipse.jgit.transport.URIish.getPass(), true, boolean))"},"status":-1},{"failures":[],"tindex":"5949e2c4-4c5a-11e5-b606-8b8c858ca981","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:135","type":"CtIfImpl","sourcecode":"if (int > 0)\n    continue CHECK_BASE;\n"},"status":0},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"5949e2c5-4c5a-11e5-b606-138f3be9e1b7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:97","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; ++int) {\n    if ((byte[][int]) != (byte[][int]))\n        return false;\n    \n}"},"variableMap":{"storedObj":"b","length":"aLen","toFind":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:523","type":"CtIfImpl","sourcecode":"if ((byte[].int) < int)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"5949e2c6-4c5a-11e5-b606-65cdacd3e9a8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommit:107","type":"CtIfImpl","sourcecode":"if (int == 1)\n    org.eclipse.jgit.revplot.PlotLane[] = new org.eclipse.jgit.revplot.PlotLane[]{ org.eclipse.jgit.revplot.PlotLane[][0] , org.eclipse.jgit.revplot.PlotLane };\nelse {\n    final org.eclipse.jgit.revplot.PlotLane[] org.eclipse.jgit.revplot.PlotLane[] = new org.eclipse.jgit.revplot.PlotLane[int + 1];\n    java.lang.System.arraycopy(org.eclipse.jgit.revplot.PlotLane[], 0, org.eclipse.jgit.revplot.PlotLane[], 0, int);\n    org.eclipse.jgit.revplot.PlotLane[][int] = org.eclipse.jgit.revplot.PlotLane;\n    org.eclipse.jgit.revplot.PlotLane[] = org.eclipse.jgit.revplot.PlotLane[];\n}"},"status":0},{"failures":[],"tindex":"594a09d7-4c5a-11e5-b606-f552ee12bc1d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:104","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor.startWorkers(1)"},"variableMap":{"this":"pm"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:170","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor.update(1)"},"status":-2},{"failures":[],"tindex":"594a09d8-4c5a-11e5-b606-df8d90b6417c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.IndexDiff:409","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.addTree(new org.eclipse.jgit.treewalk.EmptyTreeIterator())"},"variableMap":{"treeWalk":"walk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:518","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.lib.AnyObjectId)"},"status":0},{"failures":[],"tindex":"594a09d9-4c5a-11e5-b606-bd763d222efb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:214","type":"CtSwitchImpl","sourcecode":"switch (byte[][int]) {\n    case '-' :\n        int = -1;\n        int++;\n        break;\n    case '+' :\n        int++;\n        break;\n}"},"variableMap":{"b":"org.eclipse.jgit.patch.FileHeader.SIMILARITY_INDEX","sign":"eol","ptr":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:406","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.patch.FileHeader.(org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)) >= 1) {\n    break;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"594a30ea-4c5a-11e5-b606-619530351844","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:177","type":"CtIfImpl","sourcecode":"if (boolean)\n    org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.blame.ReverseWalk(org.eclipse.jgit.blame.BlameGenerator.getRepository());\nelse\n    org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.blame.BlameGenerator.getRepository());\n"},"status":-1},{"failures":[52,53,54,55,56,57,58,59],"tindex":"594a30eb-4c5a-11e5-b606-97adeba599a6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.SkipWorkTreeFilter:95","type":"CtReturnImpl","sourcecode":"return (\"SkipWorkTree(\" + (int)) + \")\""},"variableMap":{"treeIdx":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawText:190","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.diff.RawText.decode(int, int)"},"status":-1},{"failures":[60,61,62,63,64],"tindex":"594a30ec-4c5a-11e5-b606-fb49985fb6a0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RenameBranchCommand:128","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    java.lang.String = (org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String);\nelse {\n    java.lang.String = (org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String);\n}"},"variableMap":{"fullNewName":"attribute","newName":"attribute","org.eclipse.jgit.lib.Constants.R_HEADS":"attribute","org.eclipse.jgit.lib.Constants.R_REMOTES":"attribute","fullOldName":"attribute"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesRule:88","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    java.util.ArrayList<org.eclipse.jgit.attributes.Attribute>.add(new org.eclipse.jgit.attributes.Attribute(java.lang.String , org.eclipse.jgit.attributes.Attribute.State.org.eclipse.jgit.attributes.Attribute.State));\nelse {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    if ((java.lang.String.length()) > 0) {\n        java.lang.String java.lang.String = java.lang.String.substring((int + 1));\n        java.util.ArrayList<org.eclipse.jgit.attributes.Attribute>.add(new org.eclipse.jgit.attributes.Attribute(java.lang.String , java.lang.String));\n    } \n}"},"status":-1},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,117,118,118,119,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196],"tindex":"594a30ed-4c5a-11e5-b606-e7d8214b9995","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:197","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.buffer(java.io.InputStream)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}