{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":317,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":364,"org.eclipse.jgit.api.RmCommandTest.testRemove":698,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchNone":1003,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":381,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":12,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":836,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":596,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":77,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_Negate_ALL":972,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":129,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":619,"org.eclipse.jgit.api.TagCommandTest.testEmptyTagName":560,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":45,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":587,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":878,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testClear":944,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice":746,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":268,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":936,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":357,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":671,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":905,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":68,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":190,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":28,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":212,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":15,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":904,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":719,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":377,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":868,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testClear":968,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":169,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":706,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":378,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":88,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile":748,"org.eclipse.jgit.notes.DefaultNoteMergerTest.testEditEdit":13,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":681,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":754,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":74,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":363,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":115,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":593,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":85,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":213,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":358,"org.eclipse.jgit.revwalk.RevObjectTest.testEquals":1044,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":23,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath":199,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix":179,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":850,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":117,"org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit":570,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":832,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout":181,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":823,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches":1043,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":203,"org.eclipse.jgit.transport.RefSpecTest.testSetDestination_SourceNull":9,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":75,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":629,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":697,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":243,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":281,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":528,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":529,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":530,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":429,"org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames":559,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":577,"org.eclipse.jgit.revwalk.DateRevQueueTest.testClear":960,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":526,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":101,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":527,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":606,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":81,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":663,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":59,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":270,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":1018,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":1019,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":107,"org.eclipse.jgit.api.GitConstructionTest.testClose":552,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":783,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":777,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_CorruptZLibStream":300,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":870,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":802,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":887,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile":207,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":108,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test3":1026,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test4":1027,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":1024,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test2":1025,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":1030,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":230,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test5":1028,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":1029,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_LargeObject":298,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":750,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":833,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":130,"org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo":755,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":180,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":431,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1":200,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":275,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":893,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":963,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":384,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":497,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_MY_ALL":978,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":316,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":496,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":499,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":498,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":500,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":700,"org.eclipse.jgit.transport.RefSpecTest.testSplitLastColon":10,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":449,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":712,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":17,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":370,"org.eclipse.jgit.transport.RefSpecTest.testCreateEmpty":1,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TrailingGarbage":293,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":883,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":216,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":714,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":549,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":941,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":548,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":550,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2":184,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1":183,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":547,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":546,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":43,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":848,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix":188,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":269,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":87,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":696,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":598,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":220,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":670,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference":302,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NoHeader":290,"org.eclipse.jgit.transport.RefSpecTest.testMaster":8,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":428,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":73,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":390,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":656,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":807,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":421,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":448,"org.eclipse.jgit.util.RawParseUtils_HexParseTest.testInt16":1051,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":157,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":934,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":733,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":97,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":389,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":855,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":937,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":416,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":818,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":224,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject":287,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":222,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_Default":946,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired":248,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":487,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":486,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":18,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":489,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":488,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":669,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":490,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":621,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":932,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":647,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":456,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted":99,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix":204,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair":252,"org.eclipse.jgit.transport.RefSpecTest.testSetForceUpdate":6,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC":947,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkForNormalCase":1045,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":742,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":189,"org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates":205,"org.eclipse.jgit.api.GitConstructionTest.testWrap":554,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit":759,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":33,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":398,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":159,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":884,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":411,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":1020,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":103,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":313,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":805,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_GarbageAfterSize":294,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":741,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":477,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":27,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":476,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":315,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":113,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":233,"org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging":567,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":221,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile":753,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2":986,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1":985,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":325,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":645,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter0":1022,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":146,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":368,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":273,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":334,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":42,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":729,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testNonRecursiveFiltering":62,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes":253,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":285,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":632,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":766,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":215,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":37,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF1":765,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":228,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":849,"org.eclipse.jgit.api.TagCommandTest.testDeleteBadName":566,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":227,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":915,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":373,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":26,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":825,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":457,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchAll":1006,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":458,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":459,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":460,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":461,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":872,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":479,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":478,"org.eclipse.jgit.api.NameRevCommandTest.ref":685,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":480,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":400,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case":176,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":343,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference":312,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":701,"org.eclipse.jgit.api.AddCommandTest.testAddFolder":758,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":796,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":924,"org.eclipse.jgit.transport.RefSpecTest.testSetDestination":2,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":277,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":757,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":126,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":125,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":128,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":127,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_3":122,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":121,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_NONE":970,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":124,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":123,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":721,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore":249,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":808,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":414,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_EmptyTree":994,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":56,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":19,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":716,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":218,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":467,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a":466,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":469,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":764,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":468,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":70,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":150,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":29,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":156,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":673,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":365,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":359,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":142,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":105,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":111,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":64,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":250,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":355,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":93,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":388,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":152,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":89,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":164,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":933,"org.eclipse.jgit.api.CleanCommandTest.testClean":432,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":263,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":916,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":271,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":786,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":678,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":262,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":812,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":155,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":434,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":737,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":80,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":922,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":718,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":856,"org.eclipse.jgit.revwalk.ObjectWalkTest.testMarkUninterestingPropagation":1009,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows":202,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":654,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":752,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob":54,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk":163,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":175,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":574,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":597,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add":234,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":726,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":154,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":162,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":470,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":882,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":32,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":898,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":437,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":689,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":92,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":96,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":404,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":441,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":109,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":120,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":170,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":628,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":410,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":633,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":926,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE":971,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":838,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":984,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":272,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":1008,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon":166,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":865,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":745,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":314,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":242,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":637,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":638,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":583,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":329,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":422,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":594,"org.eclipse.jgit.transport.RefSpecTest.testSetSourceDestination":3,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":406,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":792,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":912,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":863,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":918,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":63,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":280,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":66,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":147,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":143,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":692,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithoutCommonAncestor":1048,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":11,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":859,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":652,"org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags":557,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":580,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":738,"org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster":5,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakAll":258,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":393,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit":1042,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":148,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":772,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth1":965,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth2":966,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":817,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth3":967,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":907,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":392,"org.eclipse.jgit.lib.ReflogResolveTest.resolveDate":219,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":286,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":326,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder":957,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":144,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":668,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":168,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":283,"org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog":569,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":423,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NegativeSize":292,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":191,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":655,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":76,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":614,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TruncatedZLibStream":291,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":402,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":789,"org.eclipse.jgit.api.BlameCommandTest.testRename":636,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":588,"org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":119,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles":255,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase":345,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":899,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":809,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":38,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":161,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":603,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":311,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":310,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":579,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":309,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":308,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix":174,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":407,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":49,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":635,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":705,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":627,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":453,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":209,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":394,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":642,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations":640,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":732,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk":1040,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":427,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":602,"org.eclipse.jgit.api.PushCommandTest.testPush":417,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":607,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":879,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":881,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":375,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":106,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":544,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":145,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":545,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":943,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":541,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":542,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertTie":959,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":543,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":582,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase":351,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":834,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":383,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":771,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":332,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":919,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":641,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":894,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":192,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple":989,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":361,"org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits":953,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":48,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":873,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir":751,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix":167,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":639,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":401,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":276,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":139,"org.eclipse.jgit.api.GitConstructionTest.testOpen":553,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":140,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":861,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":141,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":938,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":135,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":136,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":137,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":138,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":604,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_10":132,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":819,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":133,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":592,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":134,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":625,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":626,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":440,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":622,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":623,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":624,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":827,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":435,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":776,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon":193,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":445,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_Or_NONE":974,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":740,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":403,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":608,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":723,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":687,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":211,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":1021,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":888,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":804,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_InvalidType":288,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":415,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":241,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":307,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":686,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":420,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1":185,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":798,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroWhenMergedInto":1046,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":897,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":653,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":1007,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":724,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":247,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":840,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":699,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":954,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":842,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":843,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":278,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit":239,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":39,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":225,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":436,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":704,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":995,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":749,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":997,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":996,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":831,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits":1041,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":841,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":21,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.concurrentOnlyOneWritesPackedRefs":391,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":837,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":266,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":265,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":794,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":659,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":871,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":666,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":775,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":797,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":676,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":1012,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":238,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":330,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":426,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2":956,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1":955,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":79,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":454,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":911,"org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting":558,"org.eclipse.jgit.api.TagCommandTest.testInvalidTagName":564,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":100,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":78,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr":165,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly":251,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":730,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_And_NONE":982,"org.eclipse.jgit.merge.CherryPickTest.testRevert":261,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":585,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":86,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":847,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":30,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":651,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":1039,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":902,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":901,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":575,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_NoMatch":1004,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":785,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":58,"org.eclipse.jgit.api.BranchCommandTest.testDelete":711,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":616,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":235,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":568,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":524,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":525,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":182,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":284,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":521,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":522,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":523,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":83,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":589,"org.eclipse.jgit.transport.RefSpecTest.testMasterMaster":4,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1":194,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference":321,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":195,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":264,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":821,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testRecursiveFiltering":61,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":352,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":395,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":679,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":380,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":50,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":342,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":928,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":455,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":584,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":610,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TrailingGarbage":295,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":246,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":267,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":1032,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":998,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":1031,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":780,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":779,"org.eclipse.jgit.notes.DefaultNoteMergerTest.testAddAdd":14,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":446,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues":790,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":885,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":501,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":503,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":502,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":505,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":504,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":677,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":820,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_MY_ALL":980,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":1010,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":1011,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_REVERSE":952,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TruncatedZLibStream":289,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testNone":987,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":715,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":826,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":396,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":743,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":160,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":47,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":34,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTagsNoResult":684,"org.eclipse.jgit.transport.RefSpecTest.testSetSource":7,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":707,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":927,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":1016,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":344,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":694,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":709,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":646,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":532,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":533,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":720,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":534,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":535,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":366,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":419,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":531,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":657,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels":187,"org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch":217,"org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles":259,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":877,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":208,"org.eclipse.jgit.api.StashDropCommandTest.dropNegativeRef":661,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testHasFlags":969,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":844,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":116,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":917,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":214,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":412,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject":301,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":178,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":903,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter":993,"org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects":257,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig":331,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree":1014,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":728,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":555,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":1023,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":800,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":649,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":634,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":397,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":491,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":851,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":702,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":493,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":0,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":492,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":495,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":703,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":494,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":951,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":433,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":710,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":664,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":672,"org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk":991,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":274,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":40,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":430,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary":236,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow":337,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":920,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":906,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":590,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":816,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":563,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":803,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":1038,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter0":992,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":481,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":67,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":999,"org.eclipse.jgit.api.NameRevCommandTest.nameExact":690,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":900,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":778,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":35,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify":231,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":1015,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":305,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":736,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":46,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":892,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":367,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":438,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":891,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":869,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":693,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":244,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":793,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testSimple1":1005,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":650,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_SmallObject":299,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":784,"org.eclipse.jgit.api.TagCommandTest.testTagging":556,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":806,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":1013,"org.eclipse.jgit.revwalk.DateRevQueueTest.testHasFlags":961,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":691,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":1037,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead":600,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":630,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":229,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":857,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":177,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":443,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":114,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile":762,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":867,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":374,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":910,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":51,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory":206,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":483,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":382,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":482,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":810,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":306,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":485,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":484,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":36,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":82,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":914,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":506,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":572,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":508,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":507,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":510,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":112,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":509,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":571,"org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO":958,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":618,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":110,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":240,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":846,"org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream":930,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":104,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":860,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":57,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":471,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":473,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":890,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":472,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":354,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":353,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":913,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":660,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":22,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":667,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":889,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":708,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_CorruptZLibStream":297,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":852,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":895,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":98,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL":983,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":376,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":990,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":118,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":683,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":451,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":739,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":171,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2":172,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3":173,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":942,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":674,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":210,"org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned":379,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":94,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":304,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":475,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":474,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":931,"org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository":562,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":727,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":828,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroOnSameCommit":1050,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":605,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues":788,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout":198,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":69,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":813,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":320,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":811,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":576,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":1036,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithZeroAsEnd":1049,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":1034,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":1035,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":463,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b":462,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":465,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":226,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":464,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete":237,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":72,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":90,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":153,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":1002,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":761,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_And_NONE":981,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":782,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":756,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":734,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":335,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":323,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2":197,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1":196,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":822,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":356,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":781,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":573,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":858,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":617,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":925,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":787,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":866,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":586,"org.eclipse.jgit.api.StashDropCommandTest.dropWithNoStashedCommits":662,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":675,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":151,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":815,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":744,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":829,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":340,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":688,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds":387,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":665,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":349,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":516,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":348,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":347,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":385,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":346,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":520,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":773,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":149,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":519,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":880,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":518,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":517,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":405,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":949,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1":948,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":830,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":935,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":658,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue":791,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderUntracked":95,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":362,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":611,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":282,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":768,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":769,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":770,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":447,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":950,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":767,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":835,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":695,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":350,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":644,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":725,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":876,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":875,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":371,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":631,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":52,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified":71,"org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes":31,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommitted":65,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":923,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":399,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":578,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":245,"org.eclipse.jgit.lib.IndexDiffTest.testModified":158,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":372,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":41,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":452,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":511,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":512,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":513,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":514,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":515,"org.eclipse.jgit.api.FetchCommandTest.testFetch":439,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":540,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":223,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":536,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":537,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":232,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":538,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":186,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":539,"org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes":16,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":409,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":896,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":940,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":962,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit":1017,"org.eclipse.jgit.api.NameRevCommandTest.prefix":682,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":908,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_Or_NONE":976,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":643,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":763,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":909,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":324,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":939,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":747,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":338,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName":341,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_ALL":973,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot":964,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":336,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":713,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":862,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_ALL":975,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":609,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix":201,"org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob":55,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":333,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":854,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":853,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":425,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":442,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":615,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":864,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testEdgeCases":60,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":450,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":795,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":424,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":591,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":839,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":413,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit":620,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":929,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":814,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":601,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testHasFlags":945,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":648,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":131,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":386,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":551,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":613,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":339,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithMerges":1047,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":717,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":1001,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":53,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":319,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":824,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":24,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":102,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":595,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":886,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":360,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":1000,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":418,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":44,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":327,"org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile":760,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":599,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent":254,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_DeltaNotAllowed":296,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":921,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":845,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":84,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":303,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":328,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":581,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":408,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":799,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_DontBreakAboveScore":256,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":801,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testDisallowTreeFilter":988,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testNoRename":1033,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":561,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":612,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":322,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":318,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":444,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":977,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":279,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":731,"org.eclipse.jgit.merge.CherryPickTest.testPick":260,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_ALL":979,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":369,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":735,"org.eclipse.jgit.api.TagCommandTest.testDelete":565,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":680,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":91,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":722,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":774,"org.eclipse.jgit.api.RevertCommandTest.testRevert":874},"transformations":[{"failures":[],"tindex":"7e3204ea-4c50-11e5-a228-4d5a159431df","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:350","type":"CtIfImpl","sourcecode":"if (int > 0)\n    throw new org.eclipse.jgit.errors.InvalidPatternException(\"Not closed bracket?\" , java.lang.String);\n"},"variableMap":{"in_brackets":"entryIndex","pattern":"subsection"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:905","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ConfigLine.match(java.lang.String, java.lang.String, java.lang.String))\n    java.util.List<org.eclipse.jgit.lib.ConfigLine>.remove(--int);\n"},"status":-2},{"failures":[],"tindex":"7e322bfb-4c50-11e5-a228-95d6366d0bc9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:625","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref.isSymbolic())\n    continue;\n"},"variableMap":{"ref":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:168","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(org.eclipse.jgit.lib.Ref.getName())))\n    throw new java.lang.IllegalArgumentException();\n"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"7e322bfc-4c50-11e5-a228-6f06b85b7a07","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:953","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:170","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,552,553,553,554,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050],"tindex":"7e322bfd-4c50-11e5-a228-958c0c7dac79","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:437","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.FileInputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor)"},"variableMap":{"path":"path","in":"in","id":"id","curs":"wc"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:110","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.isStandardFormat(byte[])) {\n    java.io.InputStream.reset();\n    java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.internal.storage.file.WindowCursor.inflater();\n    java.io.InputStream java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, java.util.zip.Inflater);\n    int int = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(java.io.InputStream, byte[], 0, 64);\n    if (int < 5)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    final org.eclipse.jgit.util.MutableInteger org.eclipse.jgit.util.MutableInteger = new org.eclipse.jgit.util.MutableInteger();\n    int int = org.eclipse.jgit.lib.Constants.decodeTypeString(org.eclipse.jgit.lib.AnyObjectId, byte[], ((byte)(' ')), org.eclipse.jgit.util.MutableInteger);\n    long long = org.eclipse.jgit.util.RawParseUtils.parseLongBase10(byte[], org.eclipse.jgit.util.MutableInteger.int, org.eclipse.jgit.util.MutableInteger);\n    if (long < 0)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    if ((byte[][(org.eclipse.jgit.util.MutableInteger.int)++]) != 0)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    if ((java.io.File == null) && ((java.lang.Integer.int) < long)) {\n        org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n        org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit = new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit();\n        org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit.setObjectId(org.eclipse.jgit.lib.AnyObjectId);\n        throw org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n    } \n    if ((long < (org.eclipse.jgit.internal.storage.file.WindowCursor.getStreamFileThreshold())) || (java.io.File == null)) {\n        byte[] byte[] = new byte[((int)(long))];\n        int int = int - (org.eclipse.jgit.util.MutableInteger.int);\n        if (int > 0)\n            java.lang.System.arraycopy(byte[], org.eclipse.jgit.util.MutableInteger.int, byte[], 0, int);\n        \n        org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], int, ((byte[].int) - int));\n        org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.checkValidEndOfStream(java.io.InputStream, java.util.zip.Inflater, org.eclipse.jgit.lib.AnyObjectId, byte[]);\n        return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n    } \n    return new org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject(int , long , java.io.File , org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.storage.file.WindowCursor.org.eclipse.jgit.internal.storage.file.FileObjectDatabase);\n} else {\n    org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(java.io.InputStream, byte[], 2, 18);\n    int int = (byte[][0]) & 255;\n    int int = (int >> 4) & 7;\n    long long = int & 15;\n    int int = 4;\n    int int = 1;\n    while ((int & 128) != 0) {\n        int = (byte[][int++]) & 255;\n        long += ((long)((int & 127))) << int;\n        int += 7;\n    }\n    switch (int) {\n        case org.eclipse.jgit.lib.Constants.int :\n        case org.eclipse.jgit.lib.Constants.int :\n        case org.eclipse.jgit.lib.Constants.int :\n        case org.eclipse.jgit.lib.Constants.int :\n            break;\n        default :\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n    if ((java.io.File == null) && ((java.lang.Integer.int) < long)) {\n        org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n        org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit = new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit();\n        org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit.setObjectId(org.eclipse.jgit.lib.AnyObjectId);\n        throw org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n    } \n    if ((long < (org.eclipse.jgit.internal.storage.file.WindowCursor.getStreamFileThreshold())) || (java.io.File == null)) {\n        java.io.InputStream.reset();\n        org.eclipse.jgit.util.IO.skipFully(java.io.InputStream, int);\n        java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.internal.storage.file.WindowCursor.inflater();\n        java.io.InputStream java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, java.util.zip.Inflater);\n        byte[] byte[] = new byte[((int)(long))];\n        org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, byte[].int);\n        org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.checkValidEndOfStream(java.io.InputStream, java.util.zip.Inflater, org.eclipse.jgit.lib.AnyObjectId, byte[]);\n        return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n    } \n    return new org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject(int , long , java.io.File , org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.storage.file.WindowCursor.org.eclipse.jgit.internal.storage.file.FileObjectDatabase);\n}"},"status":-1},{"failures":[],"tindex":"7e327a1e-4c50-11e5-a228-058668d486c5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:191","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = new org.eclipse.jgit.transport.RefSpec()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:480","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = ((org.eclipse.jgit.transport.RefSpec)(java.lang.Object))"},"status":-2},{"failures":[368,370,373,602,800,810],"tindex":"7e327a1f-4c50-11e5-a228-1f1518b884e3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:394","type":"CtLocalVariableImpl","sourcecode":"final int int = int % 100"},"variableMap":{"v":"org.eclipse.jgit.merge.ResolveMerger.T_FILE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:692","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawMode(org.eclipse.jgit.merge.ResolveMerger.int)"},"status":-1},{"failures":[],"tindex":"7e32a130-4c50-11e5-a228-13cbf237d849","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.resolver.FileResolver:247","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(\"/../\"))\n    return true;\n"},"variableMap":{"name":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.StringUtils:112","type":"CtIfImpl","sourcecode":"if (java.lang.String == java.lang.String)\n    return true;\n"},"status":0},{"failures":[668,671],"tindex":"7e32a131-4c50-11e5-a228-854cf8fc46c1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:179","type":"CtIfImpl","sourcecode":"if ((int & 2) != 0)\n    int |= ((byte[][int++]) & 255) << 8;\n"},"variableMap":{"deltaPtr":"actLen","delta":"data","cmd":"actLen","copyOffset":"actLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaCache:116","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"7e32a132-4c50-11e5-a228-db795298b9e5","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.IO:80","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.IO.readFully(java.io.File, java.lang.Integer.int)"},"variableMap":{"path":"path","java.lang.Integer.MAX_VALUE":"max"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:141","type":"CtTryImpl","sourcecode":"try {\n    long long = java.lang.Math.max(java.io.File.length(), 1);\n    if (long > int)\n        throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File));\n    \n    byte[] byte[] = new byte[((int)(long))];\n    int int = 0;\n    for ( ;  ; ) {\n        if ((byte[].int) == int) {\n            if ((byte[].int) == int) {\n                int int = java.io.FileInputStream.read();\n                if (int < 0)\n                    break;\n                \n                throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File));\n            } \n            byte[] byte[] = new byte[java.lang.Math.min(((byte[].int) * 2), int)];\n            java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n            byte[] = byte[];\n        } \n        int int = java.io.FileInputStream.read(byte[], int, ((byte[].int) - int));\n        if (int < 0)\n            break;\n        \n        int += int;\n    }\n    if (int < (byte[].int)) {\n        byte[] byte[] = new byte[int];\n        java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n        byte[] = byte[];\n    } \n    return byte[];\n} finally {\n    try {\n        java.io.FileInputStream.close();\n    } catch (java.io.IOException ignored) {\n    }\n}"},"status":-2},{"failures":[],"tindex":"7e32a133-4c50-11e5-a228-eb618a7b3dd2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:221","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaWindow.keepInWindow()"},"status":-2},{"failures":[1051],"tindex":"7e32a134-4c50-11e5-a228-cf47f3121c40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:319","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException()"},"status":-1},{"failures":[],"tindex":"7e32a135-4c50-11e5-a228-c78d65340149","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.StashListCommand:85","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:213","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<org.eclipse.jgit.internal.storage.file.PackLock>emptyList()"},"status":-2},{"failures":[],"tindex":"7e32c846-4c50-11e5-a228-330ac8d4916c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TreeEntry:233","type":"CtReturnImpl","sourcecode":"return '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:132","type":"CtReturnImpl","sourcecode":"return 0"},"status":0},{"failures":[],"tindex":"7e32c847-4c50-11e5-a228-ffd3c901a4c6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.OpenSshConfig:93","type":"CtIfImpl","sourcecode":"if (java.io.File == null)\n    java.io.File = new java.io.File(\".\").getAbsoluteFile();\n"},"variableMap":{"home":"keepFile"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:237","type":"CtIfImpl","sourcecode":"if ((java.io.File) == null)\n    java.io.File = new java.io.File(((java.io.File.getPath()) + \".keep\"));\n"},"status":0},{"failures":[15,44,45,46,49,50,247,284,269,270,271,272,273,274,275,357,376,427,450,451,452,456,629,637,638,596,597,598,599,601,602,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,621,643,645,646,648,649,680,681,687,688,689,692,693,694,695,696,741,742,773,774,775,776,777,778,779,780,781,782,783,784,786,787,864,868,875,797,809,817,818,821,824,827,829,954,956,948,949,950,951,957,958,959,977,984,962,963,990,991,993,1024,1023,1039,1047,841,842,843,845,849,851,852,853,854,885,886,887,888,891,892,893,894,896,898,899,900,901,902,904,906,907,911,916,917,923,924,926,928,929,931,932,933,937,938,940,942],"tindex":"7e32c848-4c50-11e5-a228-278a2b3ccefd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:275","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write('\\n')"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}