{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":91,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":1024,"org.eclipse.jgit.api.RmCommandTest.testRemove":413,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchNone":909,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":5,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":455,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":421,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":350,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_Negate_ALL":734,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":281,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":449,"org.eclipse.jgit.api.TagCommandTest.testEmptyTagName":463,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":993,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.UtestMaliciousGitPathEndSpaceWindows":262,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":764,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":894,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testClear":929,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice":672,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":984,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":1022,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":23,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":663,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":953,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":341,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":240,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":164,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":61,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.filtestMultipleHeads_SameBase2":827,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":209,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":952,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":627,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":520,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testClear":931,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":1037,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":219,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":503,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":30,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":361,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile":674,"org.eclipse.jgit.notes.DefaultNoteMergerTest.testEditEdit":159,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":566,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":680,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":347,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":1023,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":267,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":770,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":24,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":62,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":358,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":187,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix":229,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":1039,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":269,"org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit":308,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":616,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout":231,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":607,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches":723,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":348,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":375,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":412,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":72,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":33,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":863,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":864,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":865,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":636,"org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames":462,"org.eclipse.jgit.revwalk.DateRevQueueTest.testClear":730,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":754,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":861,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":65,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":436,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":862,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":354,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":649,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":161,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":890,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":1003,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":891,"org.eclipse.jgit.api.GitConstructionTest.testClose":493,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":325,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":319,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_CorruptZLibStream":51,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":522,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":586,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":935,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile":331,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test3":717,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test4":718,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":714,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test2":716,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":721,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":152,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.javtestMaliciousAbsoluteWindowsPath1OnUnix":264,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test5":719,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":720,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_LargeObject":49,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":617,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":676,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":282,"org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo":681,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":230,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":638,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1":255,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":1008,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":941,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":653,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":21,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_MY_ALL":740,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":90,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":834,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":835,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":497,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":509,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":546,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":181,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":1030,"org.eclipse.jgit.revwalk.RevObjectTest.attestEquals":753,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TrailingGarbage":44,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":897,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":155,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":622,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":884,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":989,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":883,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":885,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2":234,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1":233,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":882,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":881,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":179,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":419,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix":238,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":1002,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":360,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":643,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":428,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":132,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":662,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference":76,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":1041,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NoHeader":41,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":635,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":346,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":17,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":540,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":591,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":545,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":628,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":200,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":982,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":558,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":388,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":16,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.otestMaliciousAbsolutePathIsOkSecondCheckout":252,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":619,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":985,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":301,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":602,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject":38,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":136,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":134,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_Default":690,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired":139,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":816,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":815,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":182,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":818,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":817,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":661,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":451,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":819,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":980,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":478,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":557,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted":390,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair":143,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC":691,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkForNormalCase":780,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":311,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":239,"org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates":131,"org.eclipse.jgit.api.GitConstructionTest.testWrap":495,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit":685,"org.eclipse.jgit.lib.DirCacheCheckoutTest.UnpackedObjecttestDirtyFileModeEqualHeadMerge":245,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":169,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":11,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":205,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":898,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":925,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":892,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":87,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":589,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_GarbageAfterSize":45,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":310,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":806,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":805,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":89,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":58,"org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging":470,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":1043,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":133,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile":679,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":99,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":476,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter0":773,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":298,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":1028,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":1006,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":108,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testContainsMany":1045,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":178,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":489,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testNonRecursiveFiltering":203,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes":144,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":37,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":378,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":513,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":154,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":173,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF1":512,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.filetestForbiddenNamesOnWindowsEgConDotSuffix":258,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":420,"org.eclipse.jgit.api.TagCommandTest.testDeleteBadName":469,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":54,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":963,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":1033,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":190,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":609,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":786,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchAll":912,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":787,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":788,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":789,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":790,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":524,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":808,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":807,"org.eclipse.jgit.api.NameRevCommandTest.ref":570,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":809,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":914,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":117,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case":226,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference":86,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":498,"org.eclipse.jgit.api.AddCommandTest.testAddFolder":684,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":580,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":972,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":27,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":683,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":278,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":277,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef":1048,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":280,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":279,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_3":274,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":273,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_NONE":732,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":276,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":275,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":481,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore":140,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":592,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":453,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_EmptyTree":900,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":1014,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":183,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":624,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":157,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":796,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a":795,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":511,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":798,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":797,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":193,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":343,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":165,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":199,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":665,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":1025,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":294,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":261,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":337,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":129,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":141,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":366,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":15,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":195,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":214,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":362,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":981,"org.eclipse.jgit.api.CleanCommandTest.testClean":398,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":964,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":1017,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":328,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":1004,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":670,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":1016,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":596,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":198,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":400,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":562,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":353,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":970,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":620,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":626,"org.eclipse.jgit.revwalk.ObjectWalkTest.testMarkUninterestingPropagation":706,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":538,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":678,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk":213,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob":1012,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":225,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":750,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":427,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add":59,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":486,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":197,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":208,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":799,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":928,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":168,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":946,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":403,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":574,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":365,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":387,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":394,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":918,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":220,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":257,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":272,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":374,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":924,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":379,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":974,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE":733,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":457,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":746,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":1005,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":705,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon":216,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":406,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":212,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":88,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":71,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":383,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":384,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":760,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":103,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":629,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":771,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":576,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":920,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":960,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":532,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":966,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":336,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":32,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":339,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":299,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":295,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":639,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithoutCommonAncestor":783,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":211,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":536,"org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags":460,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":563,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":757,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakAll":149,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":0,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit":722,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":191,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":314,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth1":655,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth2":656,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":601,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth3":657,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":955,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":19,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":2,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":100,"org.eclipse.jgit.lib.ReflogResolveTest.resolveDate":158,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder":727,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":296,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":660,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":35,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":218,"org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog":307,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":630,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NegativeSize":43,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":241,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":539,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":349,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":444,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TruncatedZLibStream":42,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":916,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":549,"org.eclipse.jgit.api.BlameCommandTest.testRename":382,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":765,"org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes":184,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":271,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles":146,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase":119,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":947,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":593,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":174,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":207,"org.eclipse.jgit.lib.DirCacheCheckoutTest.UntestCheckoutUncachedChanges":251,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":433,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":85,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":84,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":756,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":83,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":82,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix":224,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":921,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":381,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":997,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":502,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":373,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":554,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":1,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":333,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":473,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations":471,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":492,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk":713,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":634,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":432,"org.eclipse.jgit.api.PushCommandTest.testPush":302,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":437,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":895,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":927,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":1035,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":879,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":297,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":880,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":991,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":876,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertTie":729,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":877,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":759,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":878,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase":125,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":618,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":7,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":518,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":106,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":967,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":472,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":942,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":242,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple":832,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":13,"org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits":726,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":996,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":525,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir":677,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix":217,"org.eclipse.jgit.lib.DirCacheCheckoutTest.UnpackedObjecttestResetHard":247,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":385,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":915,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":26,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":291,"org.eclipse.jgit.api.GitConstructionTest.testOpen":494,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":292,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":530,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":293,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":986,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":287,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":288,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":289,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":290,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":434,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_10":284,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":603,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":285,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":769,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":286,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":371,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":372,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":393,"org.eclipse.jgit.api.CommitOnlyTest.intetestOnlyOption_f1_8_b":828,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":369,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":370,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":611,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":318,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":401,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":1050,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon":243,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":542,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_Or_NONE":736,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":309,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":917,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":438,"org.eclipse.jgit.lib.DirCacheCheckoutTest.UnpackedObjetestFileModeChangeAndContentChangeNoConflict":253,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":483,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":572,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":335,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":893,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":936,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":588,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_InvalidType":39,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":300,"org.eclipse.jgit.api.ArchiveCommandTest.UnpackarchiveByIdSpecificFile":528,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":70,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":81,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":571,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":305,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1":235,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":582,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroWhenMergedInto":781,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":945,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":537,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":704,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":484,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":1001,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":409,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":496,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":697,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":411,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":414,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":28,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit":68,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":175,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":137,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":402,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":501,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":901,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":675,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":903,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":902,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":615,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits":715,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":410,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":185,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.concurrentOnlyOneWritesPackedRefs":18,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":456,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":1020,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":1019,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":578,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":645,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":523,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":317,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":581,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":658,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":668,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":709,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":67,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":104,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":633,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2":699,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1":698,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":352,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":555,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":959,"org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting":461,"org.eclipse.jgit.api.TagCommandTest.testInvalidTagName":467,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":391,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":351,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr":215,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly":142,"org.eclipse.jgit.notes.NoteMapMergerTest.jgitestBaseEqualsTheirs":163,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":490,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.filetestMaliciousAbsolutePath":254,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_And_NONE":744,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":762,"org.eclipse.jgit.merge.CherryPickTest.testRevert":1000,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.UnpacktestMaliciousAbsoluteCurDrivePathWindows":260,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":359,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":418,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":166,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":535,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":712,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":950,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":949,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":751,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_NoMatch":910,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":327,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":162,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.fitestMultipleHeads_SameBase1":825,"org.eclipse.jgit.api.BranchCommandTest.testDelete":508,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":446,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":60,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":306,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":859,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":860,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":36,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":232,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":856,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":857,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":858,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":356,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":766,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference":95,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1":244,"org.eclipse.jgit.lib.DirCacheCheckoutTest.UntestUntrackedConflicts":265,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":605,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":1018,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testRecursiveFiltering":202,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":8,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":126,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":671,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":4,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":1044,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":116,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":976,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":998,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":556,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":761,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":440,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TrailingGarbage":46,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":75,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":702,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":1021,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":701,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":904,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":322,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":321,"org.eclipse.jgit.notes.DefaultNoteMergerTest.testAddAdd":160,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":543,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues":550,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":933,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":836,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":838,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":837,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":840,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":669,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":839,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":604,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":707,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_MY_ALL":742,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":708,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_REVERSE":696,"org.eclipse.jgit.api.BlameCommandTest.UnptestCoreAutoCrlf1":368,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TruncatedZLibStream":40,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":623,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":610,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":9,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":312,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":206,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":995,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":170,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTagsNoResult":569,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":504,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":975,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":888,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":118,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":506,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":641,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":477,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":867,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":480,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":868,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":869,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":870,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":304,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":541,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":866,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":1026,"org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles":150,"org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch":156,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels":237,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":899,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":332,"org.eclipse.jgit.api.StashDropCommandTest.dropNegativeRef":647,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testHasFlags":932,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":415,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":268,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":965,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":153,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":926,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject":52,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":228,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":951,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter":725,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig":105,"org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects":148,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree":711,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":488,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":458,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":774,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":584,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":533,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":380,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":10,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":820,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":1040,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":499,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":822,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":821,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":500,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":824,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":695,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":823,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":399,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":507,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":650,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":664,"org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk":700,"org.eclipse.jgit.api.RevertCommandTest.jgittestRevertkConflictReset":529,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":1007,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":176,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":637,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary":63,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow":111,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":968,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":954,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":600,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":767,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":466,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":587,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":779,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":1042,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter0":724,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":810,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":340,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":905,"org.eclipse.jgit.api.NameRevCommandTest.nameExact":575,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":948,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":320,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify":56,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":171,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":887,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":79,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":561,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":994,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":940,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":404,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":1027,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":939,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":521,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":640,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":73,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":577,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testSimple1":911,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":534,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_SmallObject":50,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":326,"org.eclipse.jgit.api.TagCommandTest.testTagging":459,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":590,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":710,"org.eclipse.jgit.api.PullCommandTest.jtestPullWithMergeConfig":423,"org.eclipse.jgit.revwalk.DateRevQueueTest.testHasFlags":731,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":53,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":778,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":376,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead":430,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":151,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":621,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":227,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":396,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":266,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile":688,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":519,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":1034,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":958,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory":330,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":812,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":1009,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":6,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":594,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":811,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":80,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":814,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":813,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":172,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":355,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":962,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":748,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":841,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":843,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":842,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":845,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":747,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":844,"org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO":728,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":448,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":189,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":69,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":259,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":417,"org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream":978,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":1038,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":1015,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":800,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":802,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":938,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":801,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":128,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":127,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":961,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":646,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":186,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":659,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":937,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":505,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_CorruptZLibStream":48,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":424,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":943,"org.eclipse.jgit.api.PullCommandTest.storagetestPullMergeProgrammaticConfiguration":422,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":389,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL":745,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":1036,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":833,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":270,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":568,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":552,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.UnpackedObtestMaliciousAbsoluteWindowsPath1":248,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":564,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":221,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2":222,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3":223,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":990,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":666,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":334,"org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned":31,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.eclitestNone":830,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":367,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef":1047,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":78,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":804,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":803,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":979,"org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository":465,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":487,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":612,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroOnSameCommit":785,"org.eclipse.jgit.internal.storage.file.InflatingBitSetTest.testMaybeContains":1046,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":435,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues":548,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":342,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":597,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":94,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":595,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":752,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":777,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithZeroAsEnd":784,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":775,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":776,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":792,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b":791,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":794,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":138,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":793,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete":64,"org.eclipse.jgit.lib.DirCacheCheckoutTest.UntestRules1thru3_NoIndexEntry":249,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":345,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":363,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":196,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":908,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":687,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_And_NONE":743,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":324,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":682,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":559,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":109,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":97,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2":250,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":606,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":130,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":323,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":749,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":210,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":447,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":973,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":329,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":407,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":763,"org.eclipse.jgit.api.StashDropCommandTest.dropWithNoStashedCommits":648,"org.eclipse.jgit.lib.DirCacheCheckoutTest.itestDirectoryFileSimple":256,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":667,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":194,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":599,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":313,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":613,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":114,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":573,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds":14,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":651,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":1049,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":123,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":851,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":122,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":22,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":121,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":120,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":315,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":855,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":192,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":854,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":896,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":853,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":852,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":919,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":693,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1":692,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":614,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":983,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":644,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue":551,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderUntracked":386,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":3,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":441,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":34,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":515,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":516,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":517,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":544,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":694,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":514,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":454,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":642,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":124,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":475,"org.eclipse.jgit.api.CommitOnlyTest.UnpackedObtestOnlyOption_f1_8_c":829,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":485,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":527,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":377,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":1031,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified":344,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":1010,"org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes":167,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":1051,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommitted":338,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":971,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":913,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":755,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":74,"org.eclipse.jgit.lib.IndexDiffTest.testModified":204,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":1032,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":177,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":553,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":846,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":847,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":848,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":849,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":850,"org.eclipse.jgit.api.FetchCommandTest.testFetch":392,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":875,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":135,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":871,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":872,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":57,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":873,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":236,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":874,"org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes":180,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":923,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":944,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":988,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":652,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit":889,"org.eclipse.jgit.api.NameRevCommandTest.prefix":567,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":956,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_Or_NONE":738,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":474,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":689,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":957,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":98,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":987,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":673,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":112,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName":115,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_ALL":735,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot":654,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":110,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":510,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":531,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_ALL":737,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":439,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":107,"org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob":1013,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":426,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":425,"org.eclipse.jgit.api.CommitOnlyTest.inttestOnlyOption_f1_8_a":826,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":632,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":395,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":445,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":405,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testEdgeCases":201,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":547,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":579,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":631,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":768,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":408,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":452,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit":450,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":977,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":598,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":431,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testHasFlags":930,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":479,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":283,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":20,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":443,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":886,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":113,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithMerges":782,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":625,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":907,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":93,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":1011,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":608,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":188,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":66,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":772,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":934,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":12,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":906,"org.eclipse.jgit.lib.DirCacheCheckoutTest.UnpacktestInitialCheckout":263,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":303,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":992,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":101,"org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile":686,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":429,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent":145,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_DeltaNotAllowed":47,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":969,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":416,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":77,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":102,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":357,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":758,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":583,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":922,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_DontBreakAboveScore":147,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":585,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testNoRename":703,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testDisallowTreeFilter":831,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":464,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":442,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":96,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":92,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.UnpackedObjetestMaliciousGitPath2":246,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":397,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":739,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":29,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":491,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_ALL":741,"org.eclipse.jgit.merge.CherryPickTest.testPick":999,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":1029,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":560,"org.eclipse.jgit.api.TagCommandTest.testDelete":468,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":565,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":364,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":482,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":316,"org.eclipse.jgit.api.RevertCommandTest.testRevert":526},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,493,494,494,495,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037],"tindex":"ba999263-4c41-11e5-9fdc-433c4853ff30","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:437","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.UnpackedObject.open(java.io.FileInputStream, java.io.File, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor)"},"variableMap":{"path":"path","in":"in","id":"id","curs":"wc"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:104","type":"CtTryImpl","sourcecode":"try {\n    java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.buffer(java.io.InputStream);\n    java.io.InputStream.mark(20);\n    final byte[] byte[] = new byte[64];\n    org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, 2);\n    if (org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.isStandardFormat(byte[])) {\n        java.io.InputStream.reset();\n        java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.internal.storage.file.WindowCursor.inflater();\n        java.io.InputStream java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, java.util.zip.Inflater);\n        int int = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(java.io.InputStream, byte[], 0, 64);\n        if (int < 5)\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        final org.eclipse.jgit.util.MutableInteger org.eclipse.jgit.util.MutableInteger = new org.eclipse.jgit.util.MutableInteger();\n        int int = org.eclipse.jgit.lib.Constants.decodeTypeString(org.eclipse.jgit.lib.AnyObjectId, byte[], ((byte)(' ')), org.eclipse.jgit.util.MutableInteger);\n        long long = org.eclipse.jgit.util.RawParseUtils.parseLongBase10(byte[], org.eclipse.jgit.util.MutableInteger.int, org.eclipse.jgit.util.MutableInteger);\n        if (long < 0)\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        if ((byte[][(org.eclipse.jgit.util.MutableInteger.int)++]) != 0)\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        if ((java.io.File == null) && ((java.lang.Integer.int) < long)) {\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit = new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit();\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit.setObjectId(org.eclipse.jgit.lib.AnyObjectId);\n            throw org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n        } \n        if ((long < (org.eclipse.jgit.internal.storage.file.WindowCursor.getStreamFileThreshold())) || (java.io.File == null)) {\n            byte[] byte[] = new byte[((int)(long))];\n            int int = int - (org.eclipse.jgit.util.MutableInteger.int);\n            if (int > 0)\n                java.lang.System.arraycopy(byte[], org.eclipse.jgit.util.MutableInteger.int, byte[], 0, int);\n            \n            org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], int, ((byte[].int) - int));\n            org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.checkValidEndOfStream(java.io.InputStream, java.util.zip.Inflater, org.eclipse.jgit.lib.AnyObjectId, byte[]);\n            return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n        } \n        return new org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject(int , long , java.io.File , org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.storage.file.WindowCursor.org.eclipse.jgit.internal.storage.file.FileObjectDatabase);\n    } else {\n        org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(java.io.InputStream, byte[], 2, 18);\n        int int = (byte[][0]) & 255;\n        int int = (int >> 4) & 7;\n        long long = int & 15;\n        int int = 4;\n        int int = 1;\n        while ((int & 128) != 0) {\n            int = (byte[][int++]) & 255;\n            long += ((long)((int & 127))) << int;\n            int += 7;\n        }\n        switch (int) {\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n                break;\n            default :\n                throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        }\n        if ((java.io.File == null) && ((java.lang.Integer.int) < long)) {\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit = new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit();\n            org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit.setObjectId(org.eclipse.jgit.lib.AnyObjectId);\n            throw org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit;\n        } \n        if ((long < (org.eclipse.jgit.internal.storage.file.WindowCursor.getStreamFileThreshold())) || (java.io.File == null)) {\n            java.io.InputStream.reset();\n            org.eclipse.jgit.util.IO.skipFully(java.io.InputStream, int);\n            java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.internal.storage.file.WindowCursor.inflater();\n            java.io.InputStream java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, java.util.zip.Inflater);\n            byte[] byte[] = new byte[((int)(long))];\n            org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, byte[].int);\n            org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.checkValidEndOfStream(java.io.InputStream, java.util.zip.Inflater, org.eclipse.jgit.lib.AnyObjectId, byte[]);\n            return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n        } \n        return new org.eclipse.jgit.internal.storage.file.UnpackedObject.LargeObject(int , long , java.io.File , org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.storage.file.WindowCursor.org.eclipse.jgit.internal.storage.file.FileObjectDatabase);\n    }\n} catch (java.util.zip.ZipException badStream) {\n    throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"ba9cc6b4-4c41-11e5-9fdc-b9c39695efdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:320","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.atomic.AtomicLong.incrementAndGet()"},"status":0},{"failures":[],"tindex":"ba9cedc5-4c41-11e5-9fdc-ff7f7755c70d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:174","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevWalk) != null)\n    org.eclipse.jgit.revwalk.RevWalk.release();\n"},"variableMap":{"revPool":"revWalk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:635","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.dispose()"},"status":0},{"failures":[],"tindex":"ba9cedc6-4c41-11e5-9fdc-eb642aa9578b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndex:131","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:508","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[((int)(long))]"},"status":-2},{"failures":[23,1038,195,198,206,208,209,362,314,312,375,383,384,409,410,411,414,415,416,417,419,420,1039,1040,424,425,426,547,639,640,641,642,576,577,578,579,581,582,584,587,588,589,590,591,593,594,596,597,598,600,601,602,603,604,605,607,608,609,610,613,614,615,616,617,618,480,481,487,490,1002,1003,1004,1005,1006,1007,1008,1016,1017,1041,1042,1018,1019,1020,1021,1043,1044,1022,934,939,940,949,950,963,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037],"tindex":"ba9cedc7-4c41-11e5-9fdc-615d3d87ef1e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:249","type":"CtIfImpl","sourcecode":"if (int < 4)\n    int = 4;\n"},"variableMap":{"eb":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.Merger:191","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.revwalk.RevCommit[][int] = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject[][int]);\n} catch (org.eclipse.jgit.errors.IncorrectObjectTypeException err) {\n    org.eclipse.jgit.revwalk.RevCommit[][int] = null;\n}"},"status":-1},{"failures":[400,402,403],"tindex":"ba9d62f8-4c41-11e5-9fdc-53a31a329ad0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:104","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.boolean = false"},"variableMap":{"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.IS_SUPPORTED":"dirs"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:206","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":-1},{"failures":[],"tindex":"ba9d62f9-4c41-11e5-9fdc-f93716a74f8e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:282","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.mkdir(new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , \"branches\"))"},"status":0},{"failures":[],"tindex":"ba9d62fa-4c41-11e5-9fdc-a749c1eab83f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1304","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(java.lang.String))\n    return java.lang.String;\n"},"variableMap":{"remotePrefix":"weeksAgo","refName":"weeksAgo","remote":"weeksAgo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RelativeDateFormatter:107","type":"CtReturnImpl","sourcecode":"return java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.util.RelativeDateFormatter.org.eclipse.jgit.util.RelativeDateFormatter.round(long, org.eclipse.jgit.util.RelativeDateFormatter.long))"},"status":-2},{"failures":[],"tindex":"ba9d62fb-4c41-11e5-9fdc-a9efdea025f3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.PullCommand:218","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n"},"variableMap":{"org.eclipse.jgit.lib.Constants.DEFAULT_REMOTE_NAME":"characterClass","remote":"characterClass"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:98","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:print:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(' ' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.format(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-2},{"failures":[427,428,429,431,432,435,436,437,438,439,441,442,443,444,445,447,448,449,170,578,1002,1003,1004,1005,1006,1007,1008,935,980,1031,1036],"tindex":"ba9dff3c-4c41-11e5-9fdc-8d3ed673b23f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.MergeConfig:146","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:673","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[1045,1046],"tindex":"ba9dff3d-4c41-11e5-9fdc-c35157022d4f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.LeafBucket:166","type":"CtAssignmentImpl","sourcecode":"int = -(int + 1)"},"variableMap":{"p":"nextPosition"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:91","type":"CtAssignmentImpl","sourcecode":"int = com.googlecode.javaewah.IntIterator.next()"},"status":-1},{"failures":[1047,1048,899,1049,1050,660,663],"tindex":"ba9e264e-4c41-11e5-9fdc-1f6054084162","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:709","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setBare()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:604","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.setGitDir(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.org.eclipse.jgit.lib.BaseRepositoryBuilder.getSymRef(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getWorkTree(), java.io.File, org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.safeFS()))"},"status":-1},{"failures":[],"tindex":"ba9e264f-4c41-11e5-9fdc-a14df836f824","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:974","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.copyMetaData(org.eclipse.jgit.dircache.DirCacheEntry, true)"},"variableMap":{"entry":"e","e":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:669","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.smudgeRacilyClean()"},"status":0},{"failures":[],"tindex":"ba9e2650-4c41-11e5-9fdc-9f499e18ee9e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:257","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int - int)"},"variableMap":{"theirsBeginB":"key","theirsEndB":"key","minBSize":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:303","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.diff.SimilarityIndex.slot(int)"},"status":-2},{"failures":[1051,209,559,424,425,426,693,694,695,739,746,714,774,939,940],"tindex":"ba9e2651-4c41-11e5-9fdc-0d626f263229","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:145","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.PendingGenerator.int)) != 0)\n    continue;\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}