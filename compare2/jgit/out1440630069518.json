{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":3,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":31,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":0,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":32,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":1,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":21,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":9,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":8,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":7,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":22,"org.eclipse.jgit.api.BranchCommandTest.testDelete":27,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":19,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":30,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":14,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":5,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":33,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":11,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":16,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":2,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":20,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":6,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":26,"org.eclipse.jgit.api.TagCommandTest.testDelete":23,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":28,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":25,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":4,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":17,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":15,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":10,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":29,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":18,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":12},"transformations":[{"failures":[],"tindex":"56f9c7aa-4c46-11e5-92ad-ed062080e39a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameResult:317","type":"CtIfImpl","sourcecode":"if ((int <= int) && (int < int))\n    int = int;\n"},"variableMap":{"resEnd":"worstCaseBlockCnt","start":"worstCaseBlockCnt","resLine":"sz"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:126","type":"CtIfImpl","sourcecode":"if (int < int)\n    int <<= 1;\n"},"status":-2},{"failures":[],"tindex":"56f9eebb-4c46-11e5-92ad-fd9a4c8cc936","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:108","type":"CtIfImpl","sourcecode":"if ((S.size()) != 0) {\n    org.eclipse.jgit.diff.EditList org.eclipse.jgit.diff.EditList = org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<S>, S, S);\n    if (!(org.eclipse.jgit.diff.EditList.isEmpty())) {\n        org.eclipse.jgit.merge.MergeResult<S>.add(1, 0, 0, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        org.eclipse.jgit.merge.MergeResult<S>.add(2, 0, S.size(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    } else\n        org.eclipse.jgit.merge.MergeResult<S>.add(1, 0, 0, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    \n} else\n    org.eclipse.jgit.merge.MergeResult<S>.add(1, 0, 0, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n"},"status":-2},{"failures":[],"tindex":"56f9eebc-4c46-11e5-92ad-79b0a0cda309","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileSnapshot:78","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:212","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackOutputStream.org.eclipse.jgit.internal.storage.pack.PackOutputStream.ofsDeltaVarIntLength(long)"},"status":0},{"failures":[0,1,2,3,4,5],"tindex":"56fa15cd-4c46-11e5-92ad-e9608e948d80","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:810","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.ObjectIdRef"},"variableMap":{"cur":"r","last":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LsRemoteCommand:206","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.put(org.eclipse.jgit.lib.Ref.getName(), org.eclipse.jgit.lib.Ref)"},"status":-1},{"failures":[6,7,8,9,10,11,12],"tindex":"56fa15ce-4c46-11e5-92ad-770a0c86a955","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GitDateParser:278","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\"\\\\.| \")"},"variableMap":{"dateStr":"message"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeMessageFormatter:138","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\"\\n\")"},"status":-1},{"failures":[],"tindex":"56fa15cf-4c46-11e5-92ad-adfd8d9c2dff","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:144","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.dircache.DirCache(null , null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:195","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCache"},"status":-2},{"failures":[],"tindex":"56fa15d0-4c46-11e5-92ad-79747135de13","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.SystemReader:117","type":"CtTryImpl","sourcecode":"try {\n    java.net.InetAddress java.net.InetAddress = java.net.InetAddress.getLocalHost();\n    java.lang.String = java.net.InetAddress.getCanonicalHostName();\n} catch (java.net.UnknownHostException e) {\n    java.lang.String = \"localhost\";\n}"},"variableMap":{"hostname":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:634","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode)"},"status":0},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"56fa15d1-4c46-11e5-92ad-39e5a6dbdfac","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:426","type":"CtIfImpl","sourcecode":"if ((int) <= int)\n    int = 0;\n"},"variableMap":{"tableSize":"levels","ptr":"levels"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:589","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String), int)"},"status":-1},{"failures":[],"tindex":"56fa15d2-4c46-11e5-92ad-dd760318bcd5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:168","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-2},{"failures":[],"tindex":"56fa15d3-4c46-11e5-92ad-8d62ba568aa7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:606","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.lib.Repository.isValidRefName((\"x/\" + java.lang.String))))\n    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n"},"variableMap":{"revstr":"tip","name":"tip"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:155","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getParentCount()) ; int++) {\n    org.eclipse.jgit.api.NameRevCommand.NameRevCommit org.eclipse.jgit.api.NameRevCommand.NameRevCommit = ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit)(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.getParent(int))));\n    long long = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long) + (int > 0 ? int : 1);\n    if (((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String) == null) || (org.eclipse.jgit.api.NameRevCommand.(compare(org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String, long, org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String, org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long)) < 0)) {\n        if (int > 0) {\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String = org.eclipse.jgit.api.NameRevCommand.NameRevCommit.format().append('^').append((int + 1)).toString();\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = 0;\n        } else {\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String = org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String;\n            org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int) + 1;\n        }\n        org.eclipse.jgit.api.NameRevCommand.NameRevCommit.long = long;\n        org.eclipse.jgit.revwalk.FIFORevQueue.add(org.eclipse.jgit.api.NameRevCommand.NameRevCommit);\n    } \n}"},"status":-2},{"failures":[],"tindex":"56fa3ce4-4c46-11e5-92ad-fbf489806a74","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:214","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.AnyObjectId == null)\n    return this;\n"},"variableMap":{"noteData":"noteData"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:160","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.AnyObjectId != null) {\n    if (org.eclipse.jgit.notes.LeafBucket.shouldSplit()) {\n        return org.eclipse.jgit.notes.LeafBucket.split().set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader);\n    } else {\n        org.eclipse.jgit.notes.LeafBucket.growIfFull();\n        int = -(int + 1);\n        if (int < (int))\n            java.lang.System.arraycopy(org.eclipse.jgit.notes.Note[], int, org.eclipse.jgit.notes.Note[], (int + 1), ((int) - int));\n        \n        org.eclipse.jgit.notes.Note[][int] = new org.eclipse.jgit.notes.Note(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.lib.AnyObjectId.copy());\n        (int)++;\n        return this;\n    }\n} else {\n    return this;\n}"},"status":-2},{"failures":[31,32,33],"tindex":"56fa3ce5-4c46-11e5-92ad-d9b860772d85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:481","type":"CtIfImpl","sourcecode":"if (int == int) {\n    org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    return true;\n} else {\n    int int = org.eclipse.jgit.merge.ResolveMerger.mergeFileModes(int, int, int);\n    if (int != (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.getBits())) {\n        if (int == int)\n            org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n        else {\n            if (org.eclipse.jgit.merge.ResolveMerger.isWorktreeDirty(org.eclipse.jgit.treewalk.WorkingTreeIterator, org.eclipse.jgit.dircache.DirCacheEntry))\n                return false;\n            \n            org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n            java.util.Map<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.dircache.DirCacheEntry);\n        }\n        return true;\n    } else {\n        org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0);\n        java.util.List<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n        java.util.Map<java.lang.String, org.eclipse.jgit.merge.MergeResult<? extends org.eclipse.jgit.diff.Sequence>>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), new org.eclipse.jgit.merge.MergeResult<org.eclipse.jgit.diff.RawText>(java.util.Collections.<org.eclipse.jgit.diff.RawText>emptyList()));\n    }\n    return true;\n}"},"status":-1},{"failures":[],"tindex":"56fa3ce6-4c46-11e5-92ad-634b24581ce2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:291","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref"},"variableMap":{"r":"res","foundBranch":"res"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:198","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String)"},"status":0},{"failures":[],"tindex":"56fa63f7-4c46-11e5-92ad-2fcb50533762","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor:104","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor.startWorkers(1)"},"variableMap":{"this":"monitor"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:188","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.FetchProcess.fetchObjects(org.eclipse.jgit.lib.ProgressMonitor)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}