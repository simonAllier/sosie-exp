{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":62,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":109,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":171,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":59,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig":29,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":105,"org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects":129,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":183,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":139,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":73,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":79,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles":128,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":140,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase":43,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":99,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":108,"org.eclipse.jgit.api.FetchCommandTest.testFetch":93,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":184,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":87,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":89,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":28,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":86,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":142,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":78,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":2,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":167,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":69,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":9,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":83,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":8,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":7,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference":0,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":6,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":84,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":177,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":182,"org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SameFiles_CR_canonicalization":119,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":67,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly":124,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":53,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":123,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":85,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":165,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":141,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":106,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":179,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":162,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":113,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow":35,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":168,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":91,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":163,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":102,"org.eclipse.jgit.api.PushCommandTest.testPush":104,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":166,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":22,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":136,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":161,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":160,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName":39,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":58,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":180,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":159,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":34,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":31,"org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScoreLargeObject_SameFiles_CR_canonicalization":121,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":150,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":149,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":3,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase":49,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired":122,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":30,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":96,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":82,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":155,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":158,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":138,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":178,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":154,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference":19,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":33,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":21,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":157,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":144,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":54,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":64,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":75,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":95,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair":125,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":132,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":70,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":173,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":50,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":61,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":110,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":92,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":88,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":181,"org.eclipse.jgit.api.TagCommandTest.testTagging":100,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":176,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":40,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":175,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":71,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":143,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":11,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":133,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":12,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":131,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":38,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":13,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":94,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":56,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":97,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":37,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":27,"org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SameFiles":116,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":47,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":17,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":46,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":134,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":23,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":45,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":44,"org.eclipse.jgit.revwalk.RevObjectTest.testRevObjectTypes":114,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":151,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":4,"org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SimiliarBy75":117,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":65,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":66,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":63,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":90,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":32,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":152,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":25,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":55,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":115,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent":127,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":153,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":170,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":57,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes":126,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":74,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":1,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":26,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":5,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":68,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":135,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":174,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":107,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":52,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":77,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":42,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":48,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":76,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":101,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":51,"org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_TotallyDifferentFiles":120,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":20,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":112,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":146,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":80,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":147,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":156,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":16,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":98,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":164,"org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles":130,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":14,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":60,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":41,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference":10,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":111,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":81,"org.eclipse.jgit.api.TagCommandTest.testDelete":103,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":137,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":148,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":172,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":169,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":72,"org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_EmptyFiles":118,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":145},"transformations":[{"failures":[],"tindex":"ac6bd74d-4c88-11e5-8d55-5d458fd66510","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:395","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaIndex.getSourceSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:212","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.sizeOf(long[])"},"status":0},{"failures":[],"tindex":"ac6bfe5e-4c88-11e5-8d55-a164f2f207e3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:400","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.api.ArchiveCommand.Format<?> = org.eclipse.jgit.api.ArchiveCommand.org.eclipse.jgit.api.ArchiveCommand.formatBySuffix(java.lang.String)"},"variableMap":{"this":"this","fmt":"fmt","suffix":"format"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:402","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.api.ArchiveCommand.Format<?> = org.eclipse.jgit.api.ArchiveCommand.org.eclipse.jgit.api.ArchiveCommand.lookupFormat(java.lang.String)"},"status":-2},{"failures":[],"tindex":"ac6bfe5f-4c88-11e5-8d55-411712fd60a6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.Candidate:204","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Region"},"variableMap":{"next":"outRegion","r":"outRegion"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:482","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Region = null"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"ac6bfe60-4c88-11e5-8d55-ad03cd3ae183","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:249","type":"CtInvocationImpl","sourcecode":"java.io.FileWriter.close()"},"variableMap":{"fw":"w"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:166","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.TagBuilder.getObjectId().copyTo(java.io.OutputStreamWriter)"},"status":-1},{"failures":[],"tindex":"ac6c2571-4c88-11e5-8d55-5f9be482299e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:251","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId()"},"variableMap":{"head":"src"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:420","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId()"},"status":-2},{"failures":[],"tindex":"ac6c2572-4c88-11e5-8d55-351e0a74da28","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectLoader:255","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.io.EOFException();\n"},"variableMap":{"n":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:189","type":"CtIfImpl","sourcecode":"if (((boolean && (int == '\\r')) && (int < int)) && ((byte[][int]) == '\\n'))\n    continue;\n"},"status":0},{"failures":[],"tindex":"ac6c2573-4c88-11e5-8d55-ef6da73544cf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:476","type":"CtIfImpl","sourcecode":"if (0 <= long)\n    return long;\n"},"variableMap":{"len":"sz"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:967","type":"CtReturnImpl","sourcecode":"return long"},"status":0},{"failures":[],"tindex":"ac6c2574-4c88-11e5-8d55-cb049f299a7c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1505","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.markWantWrite()"},"variableMap":{"otp":"oid"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:289","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository.hasObject(org.eclipse.jgit.lib.ObjectId))\n    java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId);\n"},"status":-2},{"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"ac6c2575-4c88-11e5-8d55-9beb48153531","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:224","type":"CtReturnImpl","sourcecode":"return java.lang.System.currentTimeMillis()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:223","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.common(this, org.eclipse.jgit.diff.SimilarityIndex)"},"status":-1},{"failures":[],"tindex":"ac6c4c86-4c88-11e5-8d55-5b59a8bdbaaa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:888","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[18]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:196","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = org.eclipse.jgit.lib.ObjectLoader.getCachedBytes(java.lang.Integer.int)"},"status":-2},{"failures":[],"tindex":"ac6c4c87-4c88-11e5-8d55-9f651d122e85","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectInserter:265","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.io.EOFException(\"Unexpected end of input\");\n"},"variableMap":{"n":"origflags"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:698","type":"CtIfImpl","sourcecode":"if (boolean)\n    int = int & int;\nelse\n    int = int & int;\n"},"status":-2},{"failures":[],"tindex":"ac6c4c88-4c88-11e5-8d55-2119d26078aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:238","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.RemoteConfig.set(org.eclipse.jgit.lib.Config, org.eclipse.jgit.transport.RemoteConfig.java.lang.String, org.eclipse.jgit.transport.RemoteConfig.getUploadPack(), org.eclipse.jgit.transport.RemoteConfig.java.lang.String)"},"status":0},{"failures":[],"tindex":"ac6c4c89-4c88-11e5-8d55-a1a9a861337c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:214","type":"CtIfImpl","sourcecode":"if (!(java.io.File.delete()))\n    org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(java.io.File, ((org.eclipse.jgit.util.FileUtils.int) | (org.eclipse.jgit.util.FileUtils.int)));\n"},"status":-2},{"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184],"tindex":"ac6c4c8a-4c88-11e5-8d55-95bc03e9b4dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:127","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(org.eclipse.jgit.lib.Constants.java.lang.String);\n    if (org.eclipse.jgit.lib.Ref == null)\n        throw new org.eclipse.jgit.api.errors.NoHeadException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId());\n    for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.List<org.eclipse.jgit.lib.Ref>) {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getPeeledObjectId();\n        if (org.eclipse.jgit.lib.ObjectId == null)\n            org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n        \n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n        final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.api.CherryPickCommand.getParentCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk);\n        java.lang.String java.lang.String = org.eclipse.jgit.api.CherryPickCommand.calculateOurName(org.eclipse.jgit.lib.Ref);\n        java.lang.String java.lang.String = ((org.eclipse.jgit.revwalk.RevCommit.getId().abbreviate(7).name()) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n        org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)));\n        org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository));\n        org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.revwalk.RevCommit.getTree());\n        org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"BASE\" , java.lang.String , java.lang.String });\n        if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)) {\n            if (org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.revwalk.RevCommit.getTree().getId(), org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()))\n                continue;\n            \n            org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.revwalk.RevCommit.getTree() , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n            org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n            org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n            if (!(boolean))\n                org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.api.CherryPickResult>.getRepository()).commit().setMessage(org.eclipse.jgit.revwalk.RevCommit.getFullMessage()).setReflogComment((((java.lang.String) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage()))).setAuthor(org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent()).call();\n            \n            java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n        } else {\n            if (org.eclipse.jgit.merge.ResolveMerger.failed())\n                return new org.eclipse.jgit.api.CherryPickResult(org.eclipse.jgit.merge.ResolveMerger.getFailingPaths());\n            \n            java.lang.String java.lang.String = new org.eclipse.jgit.merge.MergeMessageFormatter().formatWithConflicts(org.eclipse.jgit.revwalk.RevCommit.getFullMessage(), org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths());\n            if (!(boolean))\n                org.eclipse.jgit.lib.Repository.writeCherryPickHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n            \n            org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String);\n            return org.eclipse.jgit.api.CherryPickResult.org.eclipse.jgit.api.CherryPickResult;\n        }\n    }\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.IOException) , java.io.IOException);\n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}