{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":55,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":121,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":37,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":135,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":15,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":18,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":27,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":74,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":149,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":49,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":40,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":34,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":81,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":16,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":150,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":86,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":19,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":127,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":116,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":70,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":142,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":148,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":154,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":12,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":75,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":125,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":3,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":76,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":88,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":144,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":122,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":130,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":133,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":123,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":38,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":126,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":83,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":120,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":145,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":4,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":119,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":45,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":77,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":151,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":146,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":92,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":118,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":21,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":73,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":72,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":44,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":105,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":6,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":78,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":112,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":13,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":117,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":30,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":62,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":143,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":111,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":51,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":80,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":114,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":0,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":96,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":95,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":43,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":17,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":24,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":138,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":137,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":14,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":64,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":103,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":147,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":141,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":85,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":140,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":89,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":93,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":7,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":90,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":63,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":25,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":23,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":52,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":101,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":53,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":54,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":155,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":100,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":152,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":46,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":36,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":97,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":106,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":87,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":59,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":56,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":79,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":132,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":128,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":94,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":107,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":42,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":99,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":109,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":5,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":39,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":11,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":84,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":134,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":68,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":108,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":10,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":2,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":48,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":57,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":60,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":69,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":8,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":139,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":47,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":129,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":35,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":82,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":104,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":98,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":66,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":67,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":58,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":110,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":41,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":113,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":29,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":91,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":124,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":31,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":20,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":153,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":33,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":61,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":71,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":136,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":131,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":1,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":32,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":115,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":102,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":65},"transformations":[{"failures":[],"tindex":"80d6c00a-4c6a-11e5-95a6-1b15314f22ec","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.TemporaryBuffer:588","type":"CtReturnImpl","sourcecode":"return 0 < int ? int : -1"},"variableMap":{"copied":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:319","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"80d6e71b-4c6a-11e5-95a6-7d6b53f062d1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:663","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.submodule.SubmoduleWalk.lazyLoadModulesConfig()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"80d6e71c-4c6a-11e5-95a6-ed3b45622986","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.StashCreateCommand:207","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    return ;\n"},"variableMap":{"ref":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:814","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    } else {\n        if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n                if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n                    return ;\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    }\n} else {\n    if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    else if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n        if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        }\n    } else {\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n}"},"status":-1},{"failures":[],"tindex":"80d70e2d-4c6a-11e5-95a6-517ba2236357","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.TreeFilter:109","type":"CtReturnImpl","sourcecode":"return \"ALL\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:856","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.treewalk.filter.PathFilter.getPath()"},"status":-2},{"failures":[151,152,153,154],"tindex":"80d70e2e-4c6a-11e5-95a6-6576acf11f81","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:292","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int))"},"variableMap":{"buf":"buf","cmdPtr":"p","cmd":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:262","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = byte"},"status":-1},{"failures":[],"tindex":"80d70e2f-4c6a-11e5-95a6-a990cae948f4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:302","type":"CtLocalVariableImpl","sourcecode":"V V"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:300","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"status":-2},{"failures":[],"tindex":"80d70e30-4c6a-11e5-95a6-6b39ec238714","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:138","type":"CtForEachImpl","sourcecode":"for (java.io.File java.io.File : java.io.File[])\n    if (java.io.File.isFile())\n        java.util.List<java.io.File>.add(java.io.File);\n    else\n        java.util.List<java.io.File>.add(java.io.File);\n    "},"status":-2},{"failures":[],"tindex":"80d70e31-4c6a-11e5-95a6-e7644d96eb3f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:178","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\" \"))\n    java.lang.String = java.lang.String.substring(1);\n"},"variableMap":{"opt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:72","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"tag\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"remote branch\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else {\n    java.lang.String = \"\";\n    java.lang.String = java.lang.String;\n}"},"status":-2},{"failures":[155],"tindex":"80d73542-4c6a-11e5-95a6-450cecbcef88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:388","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[],"tindex":"80d73543-4c6a-11e5-95a6-adcdd8e8efab","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:465","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"80d73544-4c6a-11e5-95a6-5b61c3e6022b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:278","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>.add(new org.eclipse.jgit.util.TemporaryBuffer.Block())"},"status":0},{"failures":[],"tindex":"80d73545-4c6a-11e5-95a6-33c9240b9d9a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:463","type":"CtIfImpl","sourcecode":"if (int >= 0)\n    return int;\n"},"variableMap":{"position":"low"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:102","type":"CtReturnImpl","sourcecode":"return -(int + 1)"},"status":-2},{"failures":[],"tindex":"80d73546-4c6a-11e5-95a6-c7608d9bf89e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ConfigSnapshot:94","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String> == null)\n    return java.util.Collections.emptySet();\n"},"variableMap":{"r":"ignoredNotInIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:145","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.TreeSet<java.lang.String>(java.util.Set<java.lang.String>);\n    for (java.lang.String java.lang.String : java.util.Set<java.lang.String>)\n        for (java.lang.String java.lang.String : java.util.Set<java.lang.String>)\n            if ((boolean && (java.lang.String.equals(java.lang.String))) || ((!boolean) && (java.lang.String.startsWith(java.lang.String)))) {\n                java.util.Set<java.lang.String>.remove(java.lang.String);\n                break;\n            } \n    return java.util.Set<java.lang.String>;\n} "},"status":0},{"failures":[],"tindex":"80d73547-4c6a-11e5-95a6-dbd4cbf2a22b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:386","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    return java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n"},"variableMap":{"org.eclipse.jgit.lib.Constants.R_HEADS":"authorName","refName":"authorName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.UserConfig:106","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"80d73548-4c6a-11e5-95a6-bfa132ee320d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:863","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId.toObjectId()"},"variableMap":{"resultTree":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:323","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.AnyObjectId.toObjectId()"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}