{"failureDictionary":{"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":43,"org.eclipse.jgit.api.BlameCommandTest.testRename":91,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":40,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":99,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":22,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":64,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":100,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":70,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":58,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":89,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":47,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":95,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":54,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":25,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":110,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":0,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":8,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":90,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":72,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":66,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":82,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":98,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":46,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":104,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":69,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":5,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":102,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":1,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":73,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":38,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":6,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":67,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":39,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":60,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":32,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":63,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":74,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":75,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":65,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":71,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":37,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":57,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":31,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":27,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":29,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":101,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":48,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":12,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":61,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":62,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree2":13,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":49,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":103,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":53,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":10,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":83,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":24,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":88,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":94,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":52,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":4,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":44,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":97,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":11,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":9,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":84,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":80,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":81,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":85,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":92,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":2,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":93,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":76,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":77,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":78,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":3,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":79,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":56,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":14,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":7,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":15,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":45,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":106,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":21,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":20,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":68,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":87,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":23,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":36,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":35,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":42,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":16,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":34,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":33,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":18,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":19,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":108,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":41,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":112,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":107,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":51,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":105,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":111,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":59,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":109,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":86,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":26,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":30,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":50,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":96,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":17},"transformations":[{"failures":[],"tindex":"a3871dfa-4c6f-11e5-afbe-397ee9bdb9a0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:223","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.Merger:203","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = org.eclipse.jgit.merge.Merger.mergeImpl()"},"status":-2},{"failures":[],"tindex":"a387450b-4c6f-11e5-afbe-3b03b0206c52","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashCreateCommand:340","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheBuilder.finish()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"a387450c-4c6f-11e5-afbe-536ea7b53098","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:282","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle : org.eclipse.jgit.internal.storage.file.ObjectDirectory.myAlternates()) {\n    if (org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle.org.eclipse.jgit.internal.storage.file.ObjectDirectory.hasPackedInSelfOrAlternate(org.eclipse.jgit.lib.AnyObjectId))\n        return true;\n    \n}"},"variableMap":{"this":"this","db":"this","objectId":"objectId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:301","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.get();\n    for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[]) {\n        try {\n            if (org.eclipse.jgit.internal.storage.file.PackFile.hasObject(org.eclipse.jgit.lib.AnyObjectId))\n                return true;\n            \n        } catch (java.io.IOException e) {\n            org.eclipse.jgit.internal.storage.file.ObjectDirectory.removePack(org.eclipse.jgit.internal.storage.file.PackFile);\n        }\n    }\n} while (org.eclipse.jgit.internal.storage.file.ObjectDirectory.searchPacksAgain(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList) )"},"status":-1},{"failures":[],"tindex":"a3876c1d-4c6f-11e5-afbe-5bbfac16b428","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.FetchProcess:349","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.ObjectWalk.release()"},"variableMap":{"ow":"walker"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker:126","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.ObjectWalk.reset()"},"status":0},{"failures":[],"tindex":"a3876c1e-4c6f-11e5-afbe-a1df16d2ef38","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheBuildIterator:123","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheIterator.next(1)"},"status":-2},{"failures":[],"tindex":"a3876c1f-4c6f-11e5-afbe-d10a8bfada2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleStatusCommand:135","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.lib.Constants.java.lang.String);\n} finally {\n    org.eclipse.jgit.lib.Repository.close();\n}"},"status":-2},{"failures":[],"tindex":"a3876c20-4c6f-11e5-afbe-959c301d04cf","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:327","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.NameRevCommand.addRef(org.eclipse.jgit.lib.Ref, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>, org.eclipse.jgit.revwalk.FIFORevQueue)"},"status":-2},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"a3876c21-4c6f-11e5-afbe-bf9f1c4f604c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:194","type":"CtIfImpl","sourcecode":"if ((int == (int)) || (int == (int)))\n    continue;\n"},"status":-1},{"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"a3876c22-4c6f-11e5-afbe-6dfc77dff8c0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:996","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.getObjectReader()"},"variableMap":{"walk":"revPool"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:184","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectReader = org.eclipse.jgit.revwalk.RevWalk.getObjectReader()"},"status":-1},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"a3879333-4c6f-11e5-afbe-2fad15d773a6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:285","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"r":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:980","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.lib.ConfigLine.java.lang.String)"},"status":-1},{"failures":[],"tindex":"a3879334-4c6f-11e5-afbe-df85fa283f9e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:199","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.api.CherryPickResult(org.eclipse.jgit.revwalk.RevCommit , java.util.List<org.eclipse.jgit.lib.Ref>)"},"variableMap":{"newHead":"newHead","cherryPickedRefs":"cherryPickedRefs"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:138","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.List<org.eclipse.jgit.lib.Ref>) {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getPeeledObjectId();\n    if (org.eclipse.jgit.lib.ObjectId == null)\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n    \n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n    final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.api.CherryPickCommand.getParentCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk);\n    java.lang.String java.lang.String = org.eclipse.jgit.api.CherryPickCommand.calculateOurName(org.eclipse.jgit.lib.Ref);\n    java.lang.String java.lang.String = ((org.eclipse.jgit.revwalk.RevCommit.getId().abbreviate(7).name()) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n    org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)));\n    org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository));\n    org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.revwalk.RevCommit.getTree());\n    org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"BASE\" , java.lang.String , java.lang.String });\n    if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)) {\n        if (org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.revwalk.RevCommit.getTree().getId(), org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()))\n            continue;\n        \n        org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.revwalk.RevCommit.getTree() , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n        org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n        org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n        if (!(boolean))\n            org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.api.CherryPickResult>.getRepository()).commit().setMessage(org.eclipse.jgit.revwalk.RevCommit.getFullMessage()).setReflogComment((((java.lang.String) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage()))).setAuthor(org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent()).call();\n        \n        java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n    } else {\n        if (org.eclipse.jgit.merge.ResolveMerger.failed())\n            return new org.eclipse.jgit.api.CherryPickResult(org.eclipse.jgit.merge.ResolveMerger.getFailingPaths());\n        \n        java.lang.String java.lang.String = new org.eclipse.jgit.merge.MergeMessageFormatter().formatWithConflicts(org.eclipse.jgit.revwalk.RevCommit.getFullMessage(), org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths());\n        if (!(boolean))\n            org.eclipse.jgit.lib.Repository.writeCherryPickHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n        \n        org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String);\n        return org.eclipse.jgit.api.CherryPickResult.org.eclipse.jgit.api.CherryPickResult;\n    }\n}"},"status":-2},{"failures":[],"tindex":"a3879335-4c6f-11e5-afbe-7d3d0bdacab9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:826","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ConfigSnapshot = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.lib.ConfigSnapshot>.get()"},"status":-2},{"failures":[107,108,109,110],"tindex":"a387ba46-4c6f-11e5-afbe-d79bc4ea9bb6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:644","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LockFile org.eclipse.jgit.internal.storage.file.LockFile = new org.eclipse.jgit.internal.storage.file.LockFile(java.io.File , org.eclipse.jgit.internal.storage.file.FileRepository.getFS())"},"variableMap":{"refFile":"workTree","parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:339","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.LockFile org.eclipse.jgit.internal.storage.file.LockFile = new org.eclipse.jgit.internal.storage.file.LockFile(new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String) , org.eclipse.jgit.lib.Repository.getFS())"},"status":-1},{"failures":[],"tindex":"a387ba47-4c6f-11e5-afbe-ebd30838a55d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:349","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.io.EOFException();\n"},"variableMap":{"n":"pendingOutputType"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:141","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevWalk) instanceof org.eclipse.jgit.revwalk.DepthWalk) {\n    org.eclipse.jgit.revwalk.DepthWalk org.eclipse.jgit.revwalk.DepthWalk = ((org.eclipse.jgit.revwalk.DepthWalk)(org.eclipse.jgit.revwalk.RevWalk));\n    org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.DepthGenerator(org.eclipse.jgit.revwalk.DepthWalk , org.eclipse.jgit.revwalk.DateRevQueue);\n} else {\n    org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.PendingGenerator(org.eclipse.jgit.revwalk.RevWalk , org.eclipse.jgit.revwalk.DateRevQueue , org.eclipse.jgit.revwalk.filter.RevFilter , int);\n    if (boolean) {\n        ((org.eclipse.jgit.revwalk.PendingGenerator)(org.eclipse.jgit.revwalk.Generator)).boolean = false;\n    } \n}"},"status":-2},{"failures":[111,112,30,50],"tindex":"a387ba48-4c6f-11e5-afbe-3fd62a708c1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:203","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.internal.storage.file.PackFile.getPackFile().getName()"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}