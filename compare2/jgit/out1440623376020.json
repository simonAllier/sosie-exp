{"failureDictionary":{"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":20,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":44,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":23,"org.eclipse.jgit.api.BlameCommandTest.testRename":17,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":56,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":24,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":51,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":10,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":33,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":29,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":6,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":34,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":7,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":11,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":18,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":42,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":19,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":48,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":2,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":3,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":4,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":5,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":15,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":30,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":27,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":57,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":28,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":59,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":46,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":40,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":16,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":47,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":8,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":32,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":60,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":38,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":13,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":21,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":26,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":36,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":54,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":43,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":50,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":37,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":58,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":0,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":1,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":22,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":52,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":35,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":61,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":45,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":49,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":41,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":25,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":39,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":12,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":31,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":9,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":14,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":55,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":53},"transformations":[{"failures":[],"tindex":"c156e31d-4c36-11e5-9874-35119505a734","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:902","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) != 2)\n    continue;\n"},"status":0},{"failures":[],"tindex":"c1570a2e-4c36-11e5-9874-c1fce9a8c9cc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:473","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n    if (int > (org.eclipse.jgit.revwalk.RevCommit.getParentCount()))\n        org.eclipse.jgit.revwalk.RevObject = null;\n    else\n        org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent((int - 1));\n    \n} "},"variableMap":{"pnum":"w2","rev":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:469","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.AnyObjectId.org.eclipse.jgit.lib.AnyObjectId.formatHexChar(char[], 8, int)"},"status":-2},{"failures":[],"tindex":"c1570a2f-4c36-11e5-9874-f57d46f8d0b3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitAnon:163","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"host=\")"},"variableMap":{"cmd":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:232","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.lib.RebaseTodoLine.getShortMessage().trim())"},"status":0},{"failures":[],"tindex":"c1573140-4c36-11e5-9874-01139acff635","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase:319","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList = org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacks(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList)"},"variableMap":{"this":"this","o":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase:348","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList = org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.scanPacksImpl(org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList)"},"status":-2},{"failures":[],"tindex":"c1573141-4c36-11e5-9874-67d121338ecb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:349","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.io.EOFException();\n"},"variableMap":{"n":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1305","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectChecker.checkPathSegment(org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryPathBuffer(), int, int)"},"status":-2},{"failures":[],"tindex":"c1573142-4c36-11e5-9874-a1206e18d7fd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:326","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator) {\n    if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.int) == 0)\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.skip();\n    else {\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.back(org.eclipse.jgit.treewalk.AbstractTreeIterator.int);\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.int = 0;\n    }\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = null;\n} "},"variableMap":{"matchShift":"length","t":"ch","ch":"matches","matches":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:304","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.eclipse.jgit.treewalk.AbstractTreeIterator[].int) ; int++) {\n    final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator[][int];\n    if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator) == org.eclipse.jgit.treewalk.AbstractTreeIterator) {\n        if ((org.eclipse.jgit.treewalk.AbstractTreeIterator.int) == 0)\n            org.eclipse.jgit.treewalk.AbstractTreeIterator.next(1);\n        else {\n            org.eclipse.jgit.treewalk.AbstractTreeIterator.back(org.eclipse.jgit.treewalk.AbstractTreeIterator.int);\n            org.eclipse.jgit.treewalk.AbstractTreeIterator.int = 0;\n        }\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = null;\n    } \n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"c1573143-4c36-11e5-9874-ddf382d2c0ec","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:490","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    org.eclipse.jgit.blame.Candidate org.eclipse.jgit.blame.Candidate = org.eclipse.jgit.blame.BlameGenerator.pop();\n    if (org.eclipse.jgit.blame.Candidate == null)\n        return org.eclipse.jgit.blame.BlameGenerator.done();\n    \n    int int = org.eclipse.jgit.blame.Candidate.getParentCount();\n    if (int == 1) {\n        if (org.eclipse.jgit.blame.BlameGenerator.processOne(org.eclipse.jgit.blame.Candidate))\n            return true;\n        \n    } else if (1 < int) {\n        if (org.eclipse.jgit.blame.BlameGenerator.processMerge(org.eclipse.jgit.blame.Candidate))\n            return true;\n        \n    } else if (org.eclipse.jgit.blame.Candidate instanceof org.eclipse.jgit.blame.Candidate.ReverseCandidate) {\n    } else {\n        return org.eclipse.jgit.blame.BlameGenerator.result(org.eclipse.jgit.blame.Candidate);\n    }\n}"},"status":-1},{"failures":[],"tindex":"c1575854-4c36-11e5-9874-793f5ea982fb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:330","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.diff.EditList.addAll(org.eclipse.jgit.patch.HunkHeader.toEditList())"},"status":-2},{"failures":[],"tindex":"c1575855-4c36-11e5-9874-7dca6d409b34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:229","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.diff.SimilarityRenameDetector.(org.eclipse.jgit.diff.SimilarityRenameDetector.isFile(org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.FileMode))) {\n    org.eclipse.jgit.lib.ProgressMonitor.update(java.util.List<org.eclipse.jgit.diff.DiffEntry>.size());\n    continue;\n} "},"status":0},{"failures":[21],"tindex":"c1575856-4c36-11e5-9874-1f5ba3f62ae3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RemoveNoteCommand:91","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref != null) {\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId());\n    org.eclipse.jgit.notes.NoteMap = org.eclipse.jgit.notes.NoteMap.read(org.eclipse.jgit.revwalk.RevWalk.getObjectReader(), org.eclipse.jgit.revwalk.RevCommit);\n} "},"status":-1},{"failures":[],"tindex":"c1575857-4c36-11e5-9874-eb64c9bfda45","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandOutputStream:127","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.SideBandOutputStream.writeBuffer()"},"variableMap":{"this":"output"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.ReceivePack:159","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BaseReceivePack.init(java.io.InputStream, java.io.OutputStream, java.io.OutputStream)"},"status":-2},{"failures":[22],"tindex":"c1577f68-4c36-11e5-9874-49614662e705","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:230","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"public-read\""},"variableMap":{"acl":"fullNewName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RenameBranchCommand:129","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String)"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"c1577f69-4c36-11e5-9874-b98568b102e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.file.FileBasedConfig:143","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = org.eclipse.jgit.util.IO.readFully(org.eclipse.jgit.storage.file.FileBasedConfig.getFile());\n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.storage.file.FileBasedConfig.org.eclipse.jgit.storage.file.FileBasedConfig.hash(byte[]);\n    if (org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.ObjectId)) {\n        if (org.eclipse.jgit.internal.storage.file.FileSnapshot.equals(org.eclipse.jgit.internal.storage.file.FileSnapshot))\n            org.eclipse.jgit.internal.storage.file.FileSnapshot.setClean(org.eclipse.jgit.internal.storage.file.FileSnapshot);\n        else\n            org.eclipse.jgit.internal.storage.file.FileSnapshot = org.eclipse.jgit.internal.storage.file.FileSnapshot;\n        \n    } else {\n        final java.lang.String java.lang.String;\n        if (((((byte[].int) >= 3) && ((byte[][0]) == ((byte)(239)))) && ((byte[][1]) == ((byte)(187)))) && ((byte[][2]) == ((byte)(191)))) {\n            java.lang.String = org.eclipse.jgit.util.RawParseUtils.decode(org.eclipse.jgit.util.RawParseUtils.java.nio.charset.Charset, byte[], 3, byte[].int);\n            boolean = true;\n        } else {\n            java.lang.String = org.eclipse.jgit.util.RawParseUtils.decode(byte[]);\n        }\n        org.eclipse.jgit.lib.Config.fromText(java.lang.String);\n        org.eclipse.jgit.internal.storage.file.FileSnapshot = org.eclipse.jgit.internal.storage.file.FileSnapshot;\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId;\n    }\n} catch (java.io.FileNotFoundException noFile) {\n    org.eclipse.jgit.storage.file.FileBasedConfig.clear();\n    org.eclipse.jgit.internal.storage.file.FileSnapshot = org.eclipse.jgit.internal.storage.file.FileSnapshot;\n} catch (java.io.IOException e) {\n    final java.io.IOException java.io.IOException = new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.storage.file.FileBasedConfig.getFile()));\n    java.io.IOException.initCause(java.io.IOException);\n    throw java.io.IOException;\n} catch (org.eclipse.jgit.errors.ConfigInvalidException e) {\n    throw new org.eclipse.jgit.errors.ConfigInvalidException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.storage.file.FileBasedConfig.getFile()) , org.eclipse.jgit.errors.ConfigInvalidException);\n}"},"status":-1},{"failures":[],"tindex":"c1577f6a-4c36-11e5-9874-952f8568c050","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:298","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int;\n} else\n    int = int + 1;\n"},"variableMap":{"low":"end","cmp":"pos","mid":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:337","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.AbstractTreeIterator.pathCompare(byte[], int, int, int, 0)"},"status":-2},{"failures":[60,61],"tindex":"c157a67b-4c36-11e5-9874-4142be5db847","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:143","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheEntry.isAssumeValid())\n    return false;\n"},"variableMap":{"dce":"dce"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:146","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheEntry.getStage()) != 0)\n    return true;\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}