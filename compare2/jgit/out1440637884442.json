{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":117,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":116,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":52,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":35,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":115,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":26,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":114,"org.eclipse.jgit.lib.IndexDiffTest.testModified":105,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":32,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":45,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":47,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":51,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":93,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":89,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":97,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":73,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":17,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":36,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":103,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":63,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":15,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":127,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":111,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":84,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":31,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":10,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":87,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":4,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":61,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":48,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":23,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":33,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":88,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":64,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":22,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":62,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":11,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":60,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":75,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":59,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":57,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":58,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":102,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":94,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":82,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot":6,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":20,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":86,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":98,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":16,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":90,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":30,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":50,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":96,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":38,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":80,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":100,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":101,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":12,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":78,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":54,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":109,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testRecursiveFiltering":83,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":113,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":43,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":125,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":126,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":13,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":122,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":123,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":124,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":106,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":77,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":120,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":121,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":91,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":19,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":119,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":46,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":70,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":112,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":72,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":21,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":42,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":79,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":76,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":55,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":129,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":81,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":44,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":95,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":65,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":66,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":71,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":85,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":24,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":56,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":130,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":110,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":128,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":108,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":18,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":107,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":41,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":74,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":118,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":28,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":53,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":25,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":104,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth1":7,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth2":8,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth3":9,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":37,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":5,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels":131,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":29,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":34,"org.eclipse.jgit.util.NBTest.testEncodeInt64":1,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":40,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":49,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":99,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":27,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":39,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":67,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":69,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":2,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":68,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":3,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":92},"transformations":[{"failures":[],"tindex":"89083ede-4c58-11e5-8a69-7d4ffa9217ab","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:915","type":"CtIfImpl","sourcecode":"if (!(boolean))\n    return false;\n"},"variableMap":{"biDirectionalPipe":"fsyncRefFiles"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WriteConfig:79","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[0,1,2,3],"tindex":"890865ef-4c58-11e5-8a69-e9f8dbfb1c12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.NB:239","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 8"},"status":-1},{"failures":[],"tindex":"890865f0-4c58-11e5-8a69-03c700e1b059","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:323","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Config.java.lang.String) == java.lang.String)\n    return true;\n"},"variableMap":{"org.eclipse.jgit.lib.Config.MAGIC_EMPTY_VALUE":"line","n":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:255","type":"CtReturnImpl","sourcecode":"return (java.lang.String.trim().length()) == 0"},"status":-2},{"failures":[4,5,6,7,8,9],"tindex":"890865f1-4c58-11e5-8a69-a345766161b4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:646","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String))"},"status":-1},{"failures":[],"tindex":"89088d02-4c58-11e5-8a69-63b1588a5e7e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.OpenSshConfig:307","type":"CtIfImpl","sourcecode":"if (java.io.File.isAbsolute())\n    return java.io.File;\n"},"variableMap":{"ret":"dir"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS:312","type":"CtReturnImpl","sourcecode":"return new java.io.File(java.io.File , java.lang.String)"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"89088d03-4c58-11e5-8a69-a3addf28dae1","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1061","type":"CtOperatorAssignmentImpl","sourcecode":"int &= ~int"},"variableMap":{"freeFlags":"tmp","m":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:353","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"89088d04-4c58-11e5-8a69-d1afe4ddba21","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:103","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    throw new org.eclipse.jgit.errors.PackProtocolException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"variableMap":{"expectedACKNAKFoundEOF":"initFailedNonBareRepoSameDirs","line":"initFailedNonBareRepoSameDirs"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:483","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((java.io.File != null) && (!(java.io.File.equals(java.io.File))))\n        throw new java.lang.IllegalStateException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File, java.io.File));\n    \n} else {\n    if ((java.io.File != null) && (java.io.File.equals(java.io.File)))\n        throw new java.lang.IllegalStateException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File, java.io.File));\n    \n}"},"status":-2},{"failures":[],"tindex":"89088d05-4c58-11e5-8a69-efbc60d09dbc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:284","type":"CtIfImpl","sourcecode":"if (int == int)\n    continue;\n"},"variableMap":{"lastIdx":"cnt","i":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.BaseDirCacheEditor:145","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache.toArray(int, org.eclipse.jgit.dircache.DirCacheEntry[], int, int)"},"status":-2},{"failures":[],"tindex":"8908b416-4c58-11e5-8a69-5fb7bce6c16a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:711","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    break;\n"},"variableMap":{"line":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesRule:136","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\"))) {\n    java.lang.String = \"/\" + java.lang.String;\n} "},"status":-2},{"failures":[],"tindex":"8908b417-4c58-11e5-8a69-c7eb56a9e33a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:888","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[18]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:132","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[1024]"},"status":-2},{"failures":[],"tindex":"8908b418-4c58-11e5-8a69-4d00656aeeda","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.gitrepo.RepoCommand:674","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.lib.PersonIdent = org.eclipse.jgit.lib.PersonIdent"},"variableMap":{"author":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:91","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.PersonIdent.this(org.eclipse.jgit.lib.PersonIdent.getName(), org.eclipse.jgit.lib.PersonIdent.getEmailAddress())"},"status":-2},{"failures":[],"tindex":"8908b419-4c58-11e5-8a69-436d91514a0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:672","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.InflaterCache.release(java.util.zip.Inflater)"},"status":0},{"failures":[],"tindex":"8908b41a-4c58-11e5-8a69-25b5c5f2712a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:377","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.locks.ReentrantLock.lock()"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}