{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":101,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":41,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":174,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":157,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":62,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":187,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":58,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":125,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":144,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":91,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":134,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":133,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":61,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":151,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":180,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":67,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":87,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":56,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":182,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":115,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":152,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":166,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":169,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":168,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":186,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":98,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":109,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":24,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":89,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":94,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":153,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":185,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":191,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":179,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":123,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":189,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":3,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":161,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":165,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":16,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":38,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":34,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":164,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":114,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":53,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":2,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":43,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":148,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":163,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":167,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":146,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":117,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":85,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":54,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":156,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":170,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":172,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":42,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":127,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":135,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":35,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":48,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":59,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":40,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":84,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":45,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":86,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":147,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":184,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":47,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":178,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":150,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":11,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":93,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":137,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":99,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":80,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":22,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testKeyIsPrefixOfFilter":190,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":154,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":44,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":51,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":139,"org.eclipse.jgit.lib.IndexDiffTest.testModified":188,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":181,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":121,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":82,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":68,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":96,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":14,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":63,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":106,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":36,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":103,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":17,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":64,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":149,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":110,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":126,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":79,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":145,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":46,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":83,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":155,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":173,"org.eclipse.jgit.api.PushCommandTest.testPush":6,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":95,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":111,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":158,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":141,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":70,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":31,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":116,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":32,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":30,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":5,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":160,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":29,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":107,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":105,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":23,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":19,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":21,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":74,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":143,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":65,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree2":39,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":66,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":92,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":142,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":1,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":52,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":75,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":37,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":159,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":71,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":128,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":0,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":50,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":129,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":57,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":112,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":113,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":104,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":88,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":162,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":73,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":55,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":118,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":171,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":69,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":60,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":176,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":12,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":4,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":15,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":124,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":130,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":132,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":131,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":119,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":177,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":192,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":28,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":122,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":27,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":102,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":7,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":26,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":25,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":9,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":33,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":136,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":77,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":81,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":97,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":78,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":183,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":100,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":138,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":108,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":90,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":18,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":120,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":175,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":76,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":140,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":8},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"e7006f9d-4c78-11e5-ae96-eb43af3b2da4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:381","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    break;\n"},"variableMap":{"r":"extensions"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:742","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String>.contains((java.lang.String + (org.eclipse.jgit.internal.storage.pack.PackExt.getExtension()))))\n    int |= org.eclipse.jgit.internal.storage.pack.PackExt.getBit();\n"},"status":-1},{"failures":[],"tindex":"e70096ae-4c78-11e5-ae96-53bb5a7492a5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_Win32_Cygwin:98","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.util.FS_Win32_Cygwin(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:730","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.(getFS()) != null ? org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getFS() : org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS"},"status":-2},{"failures":[127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"e700bdbf-4c78-11e5-ae96-1fb33a128e89","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:784","type":"CtIfImpl","sourcecode":"if (java.io.File == null)\n    throw new java.lang.UnsupportedOperationException();\n"},"variableMap":{"workTree":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RmCommand:182","type":"CtWhileImpl","sourcecode":"while (((java.io.File != null) && (!(java.io.File.equals(org.eclipse.jgit.lib.Repository.getWorkTree())))) && (java.io.File.delete()))\n    java.io.File = java.io.File.getParentFile();"},"status":-1},{"failures":[120],"tindex":"e700bdc0-4c78-11e5-ae96-f17ca8c3327e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:711","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    break;\n"},"variableMap":{"line":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:139","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(0)) == '-') {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String.substring(1, 41));\n    java.lang.String java.lang.String = null;\n    if ((java.lang.String.length()) > 42)\n        java.lang.String = java.lang.String.substring(42);\n    \n    java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, java.lang.String);\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"e700bdc1-4c78-11e5-ae96-a763132375d9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.TransportCommand:123","type":"CtReturnImpl","sourcecode":"return ((C)(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.TransportCommand:117","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.TransportCommand<C, T>.self()"},"status":0},{"failures":[],"tindex":"e700bdc2-4c78-11e5-ae96-8165aac2688a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:592","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile.doClose()"},"status":0},{"failures":[],"tindex":"e700bdc3-4c78-11e5-ae96-69ca282b6d28","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.attributes.AttributesNode:105","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    int = int;\nelse\n    int = java.lang.Math.min(int, int);\n"},"variableMap":{"patternEndTab":"end","patternEnd":"end","patternEndSpace":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.BinaryHunk:140","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final boolean boolean = (byte[][int]) == '\\n';\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);\n    if (boolean)\n        break;\n    \n}"},"status":-2},{"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,135,163,164,165,166,167,136,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,104,105,106,107,108,109,184,185,186,187,188,189,116,117,190,191,138],"tindex":"e700bdc4-4c78-11e5-ae96-0b91b070113e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:189","type":"CtAssignmentImpl","sourcecode":"byte[][][int] = byte[]"},"status":-1},{"failures":[192],"tindex":"e700e4d5-4c78-11e5-ae96-d7cd38a30d8f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NonNoteEntry:84","type":"CtWhileImpl","sourcecode":"while ((int < int) && (int < int)) {\n    int int = ((byte[][int++]) & 255) - ((byte[][int++]) & 255);\n    if (int != 0)\n        return int;\n    \n}"},"status":-1},{"failures":[],"tindex":"e700e4d6-4c78-11e5-ae96-cd402d252ce9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.SystemReader:117","type":"CtTryImpl","sourcecode":"try {\n    java.net.InetAddress java.net.InetAddress = java.net.InetAddress.getLocalHost();\n    java.lang.String = java.net.InetAddress.getCanonicalHostName();\n} catch (java.net.UnknownHostException e) {\n    java.lang.String = \"localhost\";\n}"},"variableMap":{"hostname":"failureUpdatingTrackingRef"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:200","type":"CtTryImpl","sourcecode":"try {\n    if (org.eclipse.jgit.lib.ProgressMonitor instanceof org.eclipse.jgit.lib.BatchingProgressMonitor) {\n        ((org.eclipse.jgit.lib.BatchingProgressMonitor)(org.eclipse.jgit.lib.ProgressMonitor)).setDelayStart(250, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit);\n    } \n    if (org.eclipse.jgit.transport.Transport.isRemoveDeletedRefs())\n        org.eclipse.jgit.transport.FetchProcess.deleteStaleTrackingRefs(org.eclipse.jgit.transport.FetchResult, org.eclipse.jgit.lib.BatchRefUpdate);\n    \n    for (org.eclipse.jgit.transport.TrackingRefUpdate org.eclipse.jgit.transport.TrackingRefUpdate : java.util.ArrayList<org.eclipse.jgit.transport.TrackingRefUpdate>) {\n        org.eclipse.jgit.transport.FetchResult.add(org.eclipse.jgit.transport.TrackingRefUpdate);\n        org.eclipse.jgit.lib.BatchRefUpdate.addCommand(org.eclipse.jgit.transport.TrackingRefUpdate.asReceiveCommand());\n    }\n    for (org.eclipse.jgit.transport.ReceiveCommand org.eclipse.jgit.transport.ReceiveCommand : org.eclipse.jgit.lib.BatchRefUpdate.getCommands()) {\n        org.eclipse.jgit.transport.ReceiveCommand.updateType(org.eclipse.jgit.revwalk.RevWalk);\n        if ((((org.eclipse.jgit.transport.ReceiveCommand.getType()) == (org.eclipse.jgit.transport.ReceiveCommand.Type.org.eclipse.jgit.transport.ReceiveCommand.Type)) && (org.eclipse.jgit.transport.ReceiveCommand instanceof org.eclipse.jgit.transport.TrackingRefUpdate.Command)) && (!(((org.eclipse.jgit.transport.TrackingRefUpdate.Command)(org.eclipse.jgit.transport.ReceiveCommand)).canForceUpdate())))\n            org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result.org.eclipse.jgit.transport.ReceiveCommand.Result);\n        \n    }\n    if (org.eclipse.jgit.transport.Transport.isDryRun()) {\n        for (org.eclipse.jgit.transport.ReceiveCommand org.eclipse.jgit.transport.ReceiveCommand : org.eclipse.jgit.lib.BatchRefUpdate.getCommands()) {\n            if ((org.eclipse.jgit.transport.ReceiveCommand.getResult()) == (org.eclipse.jgit.transport.ReceiveCommand.Result.org.eclipse.jgit.transport.ReceiveCommand.Result))\n                org.eclipse.jgit.transport.ReceiveCommand.setResult(org.eclipse.jgit.transport.ReceiveCommand.Result.org.eclipse.jgit.transport.ReceiveCommand.Result);\n            \n        }\n    } else\n        org.eclipse.jgit.lib.BatchRefUpdate.execute(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.ProgressMonitor);\n    \n} catch (java.io.IOException err) {\n    throw new org.eclipse.jgit.errors.TransportException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.transport.FetchProcess.org.eclipse.jgit.transport.FetchProcess.getFirstFailedRefName(org.eclipse.jgit.lib.BatchRefUpdate), java.io.IOException.getMessage()) , java.io.IOException);\n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-2},{"failures":[],"tindex":"e700e4d7-4c78-11e5-ae96-c9f765c11b57","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:283","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.mkdir(new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , \"hooks\"))"},"variableMap":{"this":"repo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StatusCommand:138","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.WorkingTreeIterator) == null)\n    org.eclipse.jgit.treewalk.WorkingTreeIterator = new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository);\n"},"status":-2},{"failures":[],"tindex":"e7010be8-4c78-11e5-ae96-c1ca05caa443","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1240","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.reset()"},"status":0},{"failures":[],"tindex":"e7010be9-4c78-11e5-ae96-53a4816523ff","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:110","type":"CtAssignmentImpl","sourcecode":"int = '\\r'"},"variableMap":{"buf":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:1052","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int)"},"status":-2},{"failures":[],"tindex":"e7010bea-4c78-11e5-ae96-513d3a886073","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:442","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry[] = org.eclipse.jgit.dircache.DirCache.org.eclipse.jgit.dircache.DirCacheEntry[]"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}