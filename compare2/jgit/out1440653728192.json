{"failureDictionary":{"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":14,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":87,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":74,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":62,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_PreferredAuthentications":85,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":0,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":110,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":8,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":65,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":115,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":119,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":66,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":5,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications":86,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":18,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":57,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":89,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":31,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":26,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":32,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":59,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":90,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":72,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":16,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":82,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":96,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":44,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":64,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":60,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":79,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":45,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":37,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":23,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":54,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":25,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":70,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":77,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":13,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":93,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":46,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":108,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":117,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":4,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":27,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":109,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":101,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":107,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":114,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":106,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":100,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":98,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":67,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":6,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":15,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":80,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":76,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":47,"org.eclipse.jgit.util.RefMapTest.testPut_WithPrefix":84,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":39,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":52,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":69,"org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey":43,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":38,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":53,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":10,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":22,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":63,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":92,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":41,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":20,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":75,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":73,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":24,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":88,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":68,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":113,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":71,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":97,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":28,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":112,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":1,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":33,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":51,"org.eclipse.jgit.transport.PackParserTest.test1":95,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyOk":118,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":17,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":40,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12":94,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":21,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":91,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":61,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":11,"org.eclipse.jgit.lib.ConfigTest.testReadLong":42,"org.eclipse.jgit.lib.ConfigTest.test008_readSectionNames":50,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":7,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":36,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":78,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":2,"org.eclipse.jgit.util.RefMapTest.testPut_NoPrefix":83,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":105,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":104,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":103,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":102,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":111,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":9,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":116,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":12,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":49,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":81,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":3,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":55,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":48,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":30,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":56,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":99,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":19,"org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive":29,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":34,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":35,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":58},"transformations":[{"failures":[],"tindex":"6ca47bd0-4c7d-11e5-822b-3d9e966eb5de","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.WalkPushConnection:387","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(((org.eclipse.jgit.lib.Constants.java.lang.String) + (org.eclipse.jgit.lib.Constants.java.lang.String))))\n    return java.lang.String;\n"},"variableMap":{"org.eclipse.jgit.lib.Constants.MASTER":"s","org.eclipse.jgit.lib.Constants.R_HEADS":"s","n":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:352","type":"CtIfImpl","sourcecode":"if (((((java.lang.String.length()) >= 3) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(2)) == ':')) && ((((java.lang.String.charAt(1)) >= 'A') && ((java.lang.String.charAt(1)) <= 'Z')) || (((java.lang.String.charAt(1)) >= 'a') && ((java.lang.String.charAt(1)) <= 'z'))))\n    return java.lang.String.substring(1);\nelse if ((((java.lang.String != null) && ((java.lang.String.length()) >= 2)) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(1)) == '~'))\n    return java.lang.String.substring(1);\nelse\n    return java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"6ca4a2e1-4c7d-11e5-822b-ed2a4c83f015","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:247","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.eclipse.jgit.revwalk.RevCommit>.add(org.eclipse.jgit.revwalk.RevCommit)"},"status":0},{"failures":[],"tindex":"6ca4a2e2-4c7d-11e5-822b-b9ea08231ecc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:415","type":"CtDoImpl","sourcecode":"do {\n    if ((byte[][int]) != (byte[][int]))\n        break;\n    \n    int--;\n    int--;\n} while ((0 <= int) && (0 < (--int)) )"},"variableMap":{"res":"raw","resPtr":"org.eclipse.jgit.lib.Constants.OBJ_TREE","src":"raw","srcPtr":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT","limit":"objType"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:171","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.lib.ObjectChecker.checkCommit(byte[]);\n        break;\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.lib.ObjectChecker.checkTag(byte[]);\n        break;\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.lib.ObjectChecker.checkTree(byte[]);\n        break;\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.lib.ObjectChecker.checkBlob(byte[]);\n        break;\n    default :\n        throw new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.valueOf(int)));\n}"},"status":-2},{"failures":[0],"tindex":"6ca4c9f3-4c7d-11e5-822b-ad8f43519e03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DiffCommand:203","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator"},"status":-1},{"failures":[1,2,3],"tindex":"6ca4c9f4-4c7d-11e5-822b-c73b1321d1f7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TagBuilder:186","type":"CtInvocationImpl","sourcecode":"java.io.OutputStreamWriter.close()"},"variableMap":{"w":"w"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleWriter:227","type":"CtInvocationImpl","sourcecode":"java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId>.getValue().copyTo(char[], java.io.Writer)"},"status":-1},{"failures":[],"tindex":"6ca4c9f5-4c7d-11e5-822b-bd20e38a46ad","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:196","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry : java.util.List<org.eclipse.jgit.diff.DiffEntry>) {\n    if ((org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.diff.DiffEntry.ChangeType) == (org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType))\n        java.util.ArrayList<org.eclipse.jgit.diff.DiffEntry>.add(org.eclipse.jgit.diff.DiffEntry);\n    \n}"},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"6ca4c9f6-4c7d-11e5-822b-cbde18bb251a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:166","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    continue;\n"},"variableMap":{"available":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1062","type":"CtIfImpl","sourcecode":"if ('[' == char) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader);\n    int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if ('\\\"' == int) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"');\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n    } \n    if (']' != int)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n} else if (org.eclipse.jgit.lib.ConfigLine != null) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.Config.StringReader.reset();\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader);\n    if (org.eclipse.jgit.lib.ConfigLine.java.lang.String.endsWith(\"\\n\")) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String.substring(0, ((org.eclipse.jgit.lib.ConfigLine.java.lang.String.length()) - 1));\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.java.lang.String;\n    } else\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, false, -1);\n    \n} else\n    throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-1},{"failures":[],"tindex":"6ca4f107-4c7d-11e5-822b-8d218b8a5332","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:223","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:299","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"6ca4f108-4c7d-11e5-822b-db876d9e62b6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:336","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Tree.ensureLoaded()"},"status":-2},{"failures":[],"tindex":"6ca4f109-4c7d-11e5-822b-c17e89b440f9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:173","type":"CtIfImpl","sourcecode":"if ((byte[][((int) - 1)]) != '/')\n    byte[][(int)++] = '/';\n"},"status":-2},{"failures":[83,84],"tindex":"6ca4f10a-4c7d-11e5-822b-d11c3c4d8de1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:1026","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.RefList.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:182","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.set(int, org.eclipse.jgit.lib.Ref)"},"status":-1},{"failures":[85,86],"tindex":"6ca4f10b-4c7d-11e5-822b-91c5a9a81215","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:243","type":"CtIfImpl","sourcecode":"if ((++(int)) >= (1 << (int)))\n    throw new java.util.NoSuchElementException();\n"},"variableMap":{"dirIdx":"i","bits":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:291","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isSpaceChar(java.lang.String.charAt(int))))\n    java.lang.StringBuilder.append(java.lang.String.charAt(int));\n"},"status":-1},{"failures":[],"tindex":"6ca4f10c-4c7d-11e5-822b-77316326fa79","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.HunkHeader:199","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:224","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>)"},"status":-2},{"failures":[87,88,3,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,82],"tindex":"6ca4f10d-4c7d-11e5-822b-f5a2bd3bc178","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:209","type":"CtWhileImpl","sourcecode":"while ((int < int) && ((byte[][int]) == ' '))\n    int++;"},"variableMap":{"b":"delta","sz":"resultPtr","ptr":"resultPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:171","type":"CtIfImpl","sourcecode":"if ((int & 128) != 0) {\n    int int = 0;\n    if ((int & 1) != 0)\n        int = (byte[][int++]) & 255;\n    \n    if ((int & 2) != 0)\n        int |= ((byte[][int++]) & 255) << 8;\n    \n    if ((int & 4) != 0)\n        int |= ((byte[][int++]) & 255) << 16;\n    \n    if ((int & 8) != 0)\n        int |= ((byte[][int++]) & 255) << 24;\n    \n    int int = 0;\n    if ((int & 16) != 0)\n        int = (byte[][int++]) & 255;\n    \n    if ((int & 32) != 0)\n        int |= ((byte[][int++]) & 255) << 8;\n    \n    if ((int & 64) != 0)\n        int |= ((byte[][int++]) & 255) << 16;\n    \n    if (int == 0)\n        int = 65536;\n    \n    java.lang.System.arraycopy(byte[], int, byte[], int, int);\n    int += int;\n} else if (int != 0) {\n    java.lang.System.arraycopy(byte[], int, byte[], int, int);\n    int += int;\n    int += int;\n} else {\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n}"},"status":-1},{"failures":[118,119,90,91,92,93],"tindex":"6ca5181e-4c7d-11e5-822b-abae6dc7cd5e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:173","type":"CtWhileImpl","sourcecode":"while ((int < int) && ((byte[][int]) != '/'))\n    int++;"},"variableMap":{"end":"deltaPtr","pathBuf":"delta","ptr":"copyOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:269","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0)\n    int = (byte[][int++]) & 255;\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}