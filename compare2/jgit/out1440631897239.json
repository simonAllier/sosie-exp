{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":79,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":74,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":10,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":81,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":5,"org.eclipse.jgit.util.FileUtilTest.testDeleteRecursiveEmpty":18,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":37,"org.eclipse.jgit.internal.storage.file.FileSnapshotTest.testNewFileNoWait":29,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":39,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":40,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":58,"org.eclipse.jgit.util.FileUtilTest.testDeleteEmptyTreeOk":13,"org.eclipse.jgit.util.FileUtilTest.testDeleteNotEmptyTreeNotOk":14,"org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned":9,"org.eclipse.jgit.util.FileUtilTest.testCreateSymlink":11,"org.eclipse.jgit.util.FileUtilTest.testRenameOverNonExistingFile":17,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":67,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":34,"org.eclipse.jgit.util.FileUtilTest.testMkdir":12,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":48,"org.eclipse.jgit.util.FileUtilTest.testCreateNewFile":22,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":75,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":80,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":3,"org.eclipse.jgit.util.FileUtilTest.testDeleteRecursive":23,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":4,"org.eclipse.jgit.util.FileUtilTest.testDeleteRecursiveEmptyNeedsToCheckFilesFirst":25,"org.eclipse.jgit.api.GitConstructionTest.testClose":35,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":49,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":65,"org.eclipse.jgit.util.FileUtilTest.testRenameOverExistingNonEmptyDirectory":15,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":38,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":0,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":77,"org.eclipse.jgit.util.FileUtilTest.testRenameOverExistingFile":21,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":6,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":51,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":62,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":70,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":50,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":68,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":63,"org.eclipse.jgit.util.FileUtilTest.testDeleteRecursiveEmptyDirectoriesOnlyButIsFile":16,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":66,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":61,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":60,"org.eclipse.jgit.util.FileUtilTest.testRenameOverExistingEmptyDirectory":24,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":32,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":73,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":2,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":8,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":31,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":78,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":59,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":82,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":43,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":1,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":47,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":46,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":41,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":54,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":64,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":33,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":76,"org.eclipse.jgit.util.FileUtilTest.testMkdirs":20,"org.eclipse.jgit.internal.storage.file.FileSnapshotTest.testOldFile":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":52,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":55,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":45,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":71,"org.eclipse.jgit.internal.storage.file.FileSnapshotTest.testNewFileWithWait":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":69,"org.eclipse.jgit.util.FileUtilTest.testDeleteFile":19,"org.eclipse.jgit.internal.storage.file.FileSnapshotTest.testActuallyIsModifiedTrivial":28,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":72,"org.eclipse.jgit.util.FileUtilTest.testDeleteNotEmptyTreeNotOkButIgnoreFail":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":42},"transformations":[{"failures":[],"tindex":"986206f4-4c4a-11e5-ba58-1f2af256692c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:234","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    throw new org.eclipse.jgit.errors.MissingObjectException(org.eclipse.jgit.lib.AnyObjectId.copy() , \"unknown\");\n"},"variableMap":{"objId":"id","levelTwo":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeFormatter:196","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.TreeFormatter.fmtBuf(byte[], int, int, org.eclipse.jgit.lib.FileMode)) {\n    org.eclipse.jgit.lib.AnyObjectId.copyRawTo(byte[], int);\n    int += org.eclipse.jgit.lib.Constants.int;\n} else {\n    try {\n        org.eclipse.jgit.lib.TreeFormatter.fmtOverflowBuffer(byte[], int, int, org.eclipse.jgit.lib.FileMode);\n        org.eclipse.jgit.lib.AnyObjectId.copyRawTo(org.eclipse.jgit.util.TemporaryBuffer.Heap);\n    } catch (java.io.IOException badBuffer) {\n        throw new java.lang.RuntimeException(java.io.IOException);\n    }\n}"},"status":-2},{"failures":[],"tindex":"98622e05-4c4a-11e5-ba58-47506d6d77bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:74","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length())"},"status":-2},{"failures":[],"tindex":"98622e06-4c4a-11e5-ba58-55ea8f1b2528","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:238","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:239","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.diff.Edit.getEndB()"},"status":-2},{"failures":[],"tindex":"98622e07-4c4a-11e5-ba58-a397a528cd4b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:158","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"98622e08-4c4a-11e5-ba58-835af719cb0d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:285","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:513","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(java.lang.String, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)"},"status":-2},{"failures":[],"tindex":"98625519-4c4a-11e5-ba58-2ba1add96b2d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:636","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.NB.encodeInt32(byte[], 4, (boolean ? 3 : 2))"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"9862551a-4c4a-11e5-ba58-b791c588f025","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:1387","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk = org.eclipse.jgit.revwalk.ObjectWalk"},"variableMap":{"rw":"walker","ow":"walker"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:268","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk = org.eclipse.jgit.revwalk.RevWalk"},"status":-1},{"failures":[],"tindex":"9862551b-4c4a-11e5-ba58-73137c142d69","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:161","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null)\n    continue;\n"},"variableMap":{"p":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:126","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.DateRevQueue.add(org.eclipse.jgit.revwalk.RevCommit)"},"status":-2},{"failures":[],"tindex":"9862551c-4c4a-11e5-ba58-4d8bfc978916","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.ChangeIdUtil:69","type":"CtInvocationImpl","sourcecode":"java.lang.String.replaceAll(\"(?i)(?m)^Signed-off-by:.*$\\n?\", \"\").replaceAll(\"(?m)^#.*$\\n?\", \"\")"},"variableMap":{"msg":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesRule:139","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"/\" + java.lang.String"},"status":0},{"failures":[],"tindex":"9862551d-4c4a-11e5-ba58-8da12e76f49c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:272","type":"CtInvocationImpl","sourcecode":"java.util.LinkedList<org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice>.add(org.eclipse.jgit.internal.storage.pack.DeltaTask.Slice)"},"status":0},{"failures":[7,8,9,10],"tindex":"9862551e-4c4a-11e5-ba58-cdf1294a7bea","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:366","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.isEmpty())\n    return ;\n"},"variableMap":{"deletionCandidates":"id2File"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:460","type":"CtIfImpl","sourcecode":"if ((java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.remove(org.eclipse.jgit.revwalk.RevObject.getId())) != null)\n    if (java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.isEmpty())\n        return ;\n    \n"},"status":-1},{"failures":[],"tindex":"98627c2f-4c4a-11e5-ba58-27974d54dee3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.filter.RevFilter:152","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.revwalk.RevCommit.getParentCount()) < 2"},"variableMap":{"c":"objectId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:303","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[]) {\n    try {\n        if (org.eclipse.jgit.internal.storage.file.PackFile.hasObject(org.eclipse.jgit.lib.AnyObjectId))\n            return true;\n        \n    } catch (java.io.IOException e) {\n        org.eclipse.jgit.internal.storage.file.ObjectDirectory.removePack(org.eclipse.jgit.internal.storage.file.PackFile);\n    }\n}"},"status":-2},{"failures":[11,12,13,13,14,14,15,15,16,17,18,18,19,20,20,21,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"98627c30-4c4a-11e5-ba58-07506b2e2ca1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:297","type":"CtIfImpl","sourcecode":"if (int != 0)\n    throw new java.lang.ArrayIndexOutOfBoundsException(int);\n"},"variableMap":{"delta":"options"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:135","type":"CtIfImpl","sourcecode":"if (java.io.File[] != null) {\n    java.util.List<java.io.File> java.util.List<java.io.File> = new java.util.ArrayList<java.io.File>();\n    java.util.List<java.io.File> java.util.List<java.io.File> = new java.util.ArrayList<java.io.File>();\n    for (java.io.File java.io.File : java.io.File[])\n        if (java.io.File.isFile())\n            java.util.List<java.io.File>.add(java.io.File);\n        else\n            java.util.List<java.io.File>.add(java.io.File);\n        \n    for (java.io.File java.io.File : java.util.List<java.io.File>)\n        org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(java.io.File, int);\n    for (java.io.File java.io.File : java.util.List<java.io.File>)\n        org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.delete(java.io.File, int);\n} "},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}