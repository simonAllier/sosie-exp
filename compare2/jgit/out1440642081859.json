{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":84,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":115,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":81,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":121,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":127,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":126,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":67,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":20,"org.eclipse.jgit.api.FetchCommandTest.testFetch":25,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":119,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1Sub":130,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":75,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":77,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":110,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":104,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":124,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":6,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":74,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":13,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode":117,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyValueKey":4,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":98,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":112,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyLine":2,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":91,"org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange":116,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":101,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":45,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":71,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":72,"org.eclipse.jgit.attributes.AttributeNodeTest.testBasic":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":89,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":17,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":57,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":73,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":8,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":109,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":114,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":32,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":79,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":41,"org.eclipse.jgit.api.PushCommandTest.testPush":61,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":31,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":7,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":99,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":107,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":60,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":120,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsSet":9,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":105,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":103,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":48,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":47,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":125,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":131,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":14,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":28,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":70,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":27,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":86,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":16,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":51,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":92,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":44,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":118,"org.eclipse.jgit.api.GitConstructionTest.testWrap":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":83,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":33,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":21,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":65,"org.eclipse.jgit.api.GitConstructionTest.testOpen":23,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":76,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":18,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":96,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":93,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":66,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":53,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode":113,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":50,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":26,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":123,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":29,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":102,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":122,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":100,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":49,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":87,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":88,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":78,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":85,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1":128,"org.eclipse.jgit.api.GitConstructionTest.testClose":22,"org.eclipse.jgit.api.ApplyCommandTest.testAddA2":129,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsKeywordCaseInsensitive":11,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":62,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":12,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":111,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":52,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":40,"org.eclipse.jgit.attributes.AttributeNodeTest.testTabSeparator":0,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":39,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":15,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":59,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit":10,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":64,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":90,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":43,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":19,"org.eclipse.jgit.attributes.AttributeNodeTest.testEmptyNegativeAttributeKey":3,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":56,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":5,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":34,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":37,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":68,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":55,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":30,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":63,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":97,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":108,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":82,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":69,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":106,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":38,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":46,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":58,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":54,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":94,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":95,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":35},"transformations":[{"failures":[],"tindex":"4ee3b511-4c62-11e5-bba9-bd8368762ada","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:222","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.fnmatch.FileNameMatcher.reset()"},"status":-2},{"failures":[],"tindex":"4ee3dc22-4c62-11e5-bba9-19999422202f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:207","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.clearBitmaps()"},"status":0},{"failures":[],"tindex":"4ee3dc23-4c62-11e5-bba9-d9543dc6d7ab","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:315","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.atomic.AtomicInteger.decrementAndGet()"},"variableMap":{"openFiles":"useCnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:810","type":"CtInvocationImpl","sourcecode":"java.util.concurrent.atomic.AtomicInteger.incrementAndGet()"},"status":0},{"failures":[0,1,2,3,4],"tindex":"4ee3dc24-4c62-11e5-bba9-bfdbd4c669fe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:238","type":"CtIfImpl","sourcecode":"if (\"always\".equals(java.lang.String)) {\n    boolean = true;\n} else {\n    boolean = java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String);\n}"},"variableMap":{"org.eclipse.jgit.lib.Constants.R_REMOTES":"entryPath","doConfigure":"isDirectory","baseBranch":"entryPath","autosetupflag":"entryPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesNode:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<org.eclipse.jgit.attributes.AttributesRule>.hasPrevious()) {\n    org.eclipse.jgit.attributes.AttributesRule org.eclipse.jgit.attributes.AttributesRule = java.util.ListIterator<org.eclipse.jgit.attributes.AttributesRule>.previous();\n    if (org.eclipse.jgit.attributes.AttributesRule.isMatch(java.lang.String, boolean)) {\n        java.util.ListIterator<org.eclipse.jgit.attributes.Attribute> java.util.ListIterator<org.eclipse.jgit.attributes.Attribute> = org.eclipse.jgit.attributes.AttributesRule.getAttributes().listIterator(org.eclipse.jgit.attributes.AttributesRule.getAttributes().size());\n        while (java.util.ListIterator<org.eclipse.jgit.attributes.Attribute>.hasPrevious()) {\n            org.eclipse.jgit.attributes.Attribute org.eclipse.jgit.attributes.Attribute = java.util.ListIterator<org.eclipse.jgit.attributes.Attribute>.previous();\n            if (!(java.util.Map<java.lang.String, org.eclipse.jgit.attributes.Attribute>.containsKey(org.eclipse.jgit.attributes.Attribute.getKey())))\n                java.util.Map<java.lang.String, org.eclipse.jgit.attributes.Attribute>.put(org.eclipse.jgit.attributes.Attribute.getKey(), org.eclipse.jgit.attributes.Attribute);\n            \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"4ee40335-4c62-11e5-bba9-c9de77c07261","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RawTextComparator:79","type":"CtLocalVariableImpl","sourcecode":"int int = 5381"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEditor:130","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.dircache.DirCache.getEntryCount()"},"status":-2},{"failures":[],"tindex":"4ee40336-4c62-11e5-bba9-bb91fe776543","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:225","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    org.eclipse.jgit.revwalk.RevCommit[] org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[];\n    if ((org.eclipse.jgit.revwalk.RevCommit[] == null) || ((org.eclipse.jgit.revwalk.RevCommit[].int) == 0))\n        return null;\n    \n    if ((org.eclipse.jgit.revwalk.RevCommit[].int) != 1) {\n        if (int == (org.eclipse.jgit.revwalk.RevCommit.int))\n            return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.RevCommit);\n        \n        for (int int = 1 ; int < (org.eclipse.jgit.revwalk.RevCommit[].int) ; int++) {\n            org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit[][int];\n            if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == int)\n                continue;\n            \n            org.eclipse.jgit.revwalk.RevCommit.int |= int;\n            org.eclipse.jgit.revwalk.FIFORevQueue org.eclipse.jgit.revwalk.FIFORevQueue = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.carryFlags1(org.eclipse.jgit.revwalk.RevCommit, int, (int + 1));\n            if (org.eclipse.jgit.revwalk.FIFORevQueue != null)\n                return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.FIFORevQueue, int, org.eclipse.jgit.revwalk.RevCommit[], (int + 1));\n            \n        }\n    } \n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit[][0];\n    if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == int)\n        return null;\n    \n    org.eclipse.jgit.revwalk.RevCommit.int |= int;\n}"},"status":-2},{"failures":[5,6],"tindex":"4ee40337-4c62-11e5-bba9-db8f365dd6a9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:237","type":"CtOperatorAssignmentImpl","sourcecode":"int &= ~(org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)"},"variableMap":{"flags":"end","org.eclipse.jgit.internal.storage.pack.ObjectToPack.REUSE_AS_IS":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:395","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[7,8],"tindex":"4ee42a48-4c62-11e5-bba9-a5712d016bd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1455","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.writeHeadsFile(java.util.List<org.eclipse.jgit.lib.ObjectId>, org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-1},{"failures":[9,10,11],"tindex":"4ee42a49-4c62-11e5-bba9-27434dd8e38a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:79","type":"CtReturnImpl","sourcecode":"return java.io.File.getParentFile()"},"variableMap":{"parentFile":"home"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:309","type":"CtReturnImpl","sourcecode":"return new java.io.File(java.io.File , java.lang.String)"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,22,23,23,24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"4ee42a4a-4c62-11e5-bba9-617effca2ab3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:347","type":"CtIfImpl","sourcecode":"if (!boolean)\n    break;\n"},"variableMap":{"tracked":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:141","type":"CtIfImpl","sourcecode":"if (boolean)\n    break;\n"},"status":-1},{"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"4ee4515b-4c62-11e5-bba9-ebf3a47a5bb3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:162","type":"CtWhileImpl","sourcecode":"while ((int <= int) && ((((byte[][int]) == ' ') || ((byte[][int]) == '\\t')) || ((byte[][int]) == '\\r')))\n    int++;"},"variableMap":{"buf":"buf","tokenBegin":"score","lineEnd":"eol"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:410","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"4ee4786c-4c62-11e5-bba9-0f73eda19933","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:386","type":"CtInvocationImpl","sourcecode":"java.util.TreeSet<java.lang.Integer>.remove(java.lang.Integer)"},"status":0},{"failures":[],"tindex":"4ee4786d-4c62-11e5-bba9-79ec0f811609","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:515","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n    org.eclipse.jgit.revwalk.RevObject = null;\nelse\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n"},"status":0},{"failures":[],"tindex":"4ee4786e-4c62-11e5-bba9-a565357d0468","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.TemporaryBuffer:418","type":"CtAssignmentImpl","sourcecode":"java.io.File = java.io.File.createTempFile(\"jgit_\", \".buf\", java.io.File)"},"variableMap":{"onDiskFile":"workTree","directory":"workTree"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:318","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}