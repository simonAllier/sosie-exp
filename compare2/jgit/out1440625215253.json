{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":50,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":100,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":13,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":70,"org.eclipse.jgit.api.FetchCommandTest.testFetch":72,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":85,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":108,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":110,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":68,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":33,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":107,"org.eclipse.jgit.util.RawParseUtilsTest.testParseEncoding_Accept_Latin_One_AsISO8859_1":122,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":26,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":40,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":60,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":30,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":88,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":104,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":105,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":58,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":28,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":48,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime":119,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":117,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":106,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":23,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":67,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":65,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":112,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":84,"org.eclipse.jgit.api.PushCommandTest.testPush":99,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":64,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testNotIgnoreNonExistingObjects":11,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":10,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":41,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":12,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":36,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":4,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":9,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":98,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":8,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":34,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":32,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":3,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":91,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":1,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":90,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":20,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":27,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":74,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":103,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":55,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":73,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":94,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":61,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":87,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo":118,"org.eclipse.jgit.api.GitConstructionTest.testWrap":45,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":52,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":76,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":15,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":71,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":114,"org.eclipse.jgit.api.GitConstructionTest.testOpen":44,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":113,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":109,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":29,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":38,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":62,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":124,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":115,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":96,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":93,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":24,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":2,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":75,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":31,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName":120,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":19,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":42,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":92,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":56,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":57,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":111,"org.eclipse.jgit.api.GitConstructionTest.testClose":43,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":25,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":95,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":83,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":82,"org.eclipse.jgit.util.Base64Test.testDecode":125,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":97,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo":121,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":59,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":86,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":123,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":69,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":47,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":7,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":22,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":6,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":77,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":5,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":79,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":101,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":14,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":17,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":39,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":18,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":66,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":51,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":35,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":102,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":81,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":49,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":89,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":46,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":21,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":63,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseTodoLineSetComment":116,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":16,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":78},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,43,44,44,45,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"099b6b57-4c3b-11e5-afc7-734a0a9867ba","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:922","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.add(T)"},"status":-1},{"failures":[],"tindex":"099b9268-4c3b-11e5-afc7-9b882055550d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:178","type":"CtReturnImpl","sourcecode":"return (((((long)(int)) << 24) | (int << 16)) | (int << 8)) | int"},"variableMap":{"b2":"value","b3":"value","b0":"value","b1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:196","type":"CtTryImpl","sourcecode":"try {\n    java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.buffer(java.io.InputStream);\n    java.io.InputStream.mark(20);\n    final byte[] byte[] = new byte[64];\n    org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, 2);\n    if (org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.isStandardFormat(byte[])) {\n        java.io.InputStream.reset();\n        java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.internal.storage.file.WindowCursor.inflater();\n        java.io.InputStream java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, java.util.zip.Inflater);\n        int int = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(java.io.InputStream, byte[], 0, 64);\n        if (int < 5)\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        final org.eclipse.jgit.util.MutableInteger org.eclipse.jgit.util.MutableInteger = new org.eclipse.jgit.util.MutableInteger();\n        org.eclipse.jgit.lib.Constants.decodeTypeString(org.eclipse.jgit.lib.AnyObjectId, byte[], ((byte)(' ')), org.eclipse.jgit.util.MutableInteger);\n        long long = org.eclipse.jgit.util.RawParseUtils.parseLongBase10(byte[], org.eclipse.jgit.util.MutableInteger.int, org.eclipse.jgit.util.MutableInteger);\n        if (long < 0)\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        return long;\n    } else {\n        org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(java.io.InputStream, byte[], 2, 18);\n        int int = (byte[][0]) & 255;\n        long long = int & 15;\n        int int = 4;\n        int int = 1;\n        while ((int & 128) != 0) {\n            int = (byte[][int++]) & 255;\n            long += ((long)((int & 127))) << int;\n            int += 7;\n        }\n        return long;\n    }\n} catch (java.util.zip.ZipException badStream) {\n    throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n}"},"status":-2},{"failures":[116],"tindex":"099b9269-4c3b-11e5-afc7-e11fc84250eb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.InitCommand:98","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \".\""},"variableMap":{"dStr":"comment"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoLine:210","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = null"},"status":-1},{"failures":[],"tindex":"099b926a-4c3b-11e5-afc7-4df62146d2a8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:223","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Repository.readSquashCommitMsg()) != null)\n    org.eclipse.jgit.lib.Repository.writeSquashCommitMsg(null);\n"},"variableMap":{"repo":"repo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:332","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.treewalk.TreeWalk.addTree(org.eclipse.jgit.revwalk.RevTree);\n    org.eclipse.jgit.treewalk.TreeWalk.addTree(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository));\n    org.eclipse.jgit.treewalk.TreeWalk.setRecursive(true);\n    final org.eclipse.jgit.lib.ObjectReader org.eclipse.jgit.lib.ObjectReader = org.eclipse.jgit.treewalk.TreeWalk.getObjectReader();\n    while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n        final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator);\n        if (org.eclipse.jgit.treewalk.AbstractTreeIterator == null)\n            continue;\n        \n        final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.TreeWalk.getRawPath());\n        org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode());\n        org.eclipse.jgit.dircache.DirCacheEntry.setObjectIdFromRaw(org.eclipse.jgit.treewalk.AbstractTreeIterator.idBuffer(), org.eclipse.jgit.treewalk.AbstractTreeIterator.idOffset());\n        org.eclipse.jgit.treewalk.FileTreeIterator org.eclipse.jgit.treewalk.FileTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(1, org.eclipse.jgit.treewalk.FileTreeIterator.org.eclipse.jgit.treewalk.FileTreeIterator);\n        if (org.eclipse.jgit.treewalk.FileTreeIterator != null) {\n            if (org.eclipse.jgit.treewalk.FileTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, org.eclipse.jgit.lib.ObjectReader)) {\n                throw new org.eclipse.jgit.errors.CheckoutConflictException(org.eclipse.jgit.dircache.DirCacheEntry.getPathString());\n            } \n        } \n        org.eclipse.jgit.api.StashApplyCommand.checkoutPath(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader);\n    }\n} finally {\n    org.eclipse.jgit.treewalk.TreeWalk.release();\n}"},"status":0},{"failures":[],"tindex":"099bb97b-4c3b-11e5-afc7-b14d84b23db5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:678","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(0)"},"status":0},{"failures":[],"tindex":"099bb97c-4c3b-11e5-afc7-9f933cde9463","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:146","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:296","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.util.LinkedList<java.lang.String>.getLast()"},"status":-2},{"failures":[117],"tindex":"099bb97d-4c3b-11e5-afc7-dd13ae117281","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:180","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"nParents":"dirScoreLtr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:341","type":"CtAssignmentImpl","sourcecode":"int = (int * 100) / int"},"status":-1},{"failures":[],"tindex":"099bb97e-4c3b-11e5-afc7-1399197e974a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.NoteParser:125","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.treewalk.AbstractTreeIterator.(getNameLength()) == 2) && org.eclipse.jgit.notes.NoteParser.(isHex())) && org.eclipse.jgit.notes.NoteParser.(isTree()))\n    return org.eclipse.jgit.notes.NoteParser.parseFanoutTree();\nelse\n    org.eclipse.jgit.notes.NoteParser.storeNonNote();\n"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteParser:123","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.NoteParser.parseLeafTree()"},"status":-2},{"failures":[118,119,120,121],"tindex":"099bb97f-4c3b-11e5-afc7-d7b239dcc0db","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.PathFilterGroup:218","type":"CtIfImpl","sourcecode":"if (((byte[][int]) & 255) < '/')\n    byte[][int] = '/';\nelse\n    byte[][int] = byte[][int];\n"},"variableMap":{"max":"raw","i":"ptr","newMax":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:329","type":"CtWhileImpl","sourcecode":"while ((byte[][int]) != 0)\n    int++;"},"status":-1},{"failures":[122],"tindex":"099be090-4c3b-11e5-afc7-6fe4ae36a06a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:85","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.RawParseUtils.java.util.Map<java.lang.String, java.nio.charset.Charset>.put(\"latin-1\", java.nio.charset.Charset.forName(\"ISO-8859-1\"))"},"status":-1},{"failures":[123,124],"tindex":"099be091-4c3b-11e5-afc7-97b979bc81df","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:491","type":"CtInvocationImpl","sourcecode":"java.io.File.deleteOnExit()"},"variableMap":{"finalPack":"file"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:446","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.removeEmptyParents(java.io.File)"},"status":-1},{"failures":[125],"tindex":"099be092-4c3b-11e5-afc7-07a02ed884ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:76","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.Base64.byte[][' '] = org.eclipse.jgit.util.Base64.byte"},"status":-1},{"failures":[30,31,32,33,35,36,41,42],"tindex":"099be093-4c3b-11e5-afc7-f529f44ea4c2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:467","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.fireEvent(new org.eclipse.jgit.events.IndexChangedEvent())"},"variableMap":{"this":"subRepo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:544","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.IndexDiff == null) {\n    org.eclipse.jgit.lib.IndexDiff = new org.eclipse.jgit.lib.IndexDiff(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId() , org.eclipse.jgit.lib.IndexDiff.WorkingTreeIteratorFactory.getWorkingTreeIterator(org.eclipse.jgit.lib.Repository));\n    java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.put(org.eclipse.jgit.submodule.SubmoduleWalk.getPath(), org.eclipse.jgit.lib.IndexDiff);\n} "},"status":-1},{"failures":[],"tindex":"099be094-4c3b-11e5-afc7-25a128a09c45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:608","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache.requireLocked(org.eclipse.jgit.internal.storage.file.LockFile)"},"status":0},{"failures":[],"tindex":"099be095-4c3b-11e5-afc7-bbb8e5772842","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:164","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1:161","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.PackIndex.getObjectId(int)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}