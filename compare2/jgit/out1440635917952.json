{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":105,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":89,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":102,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig":29,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":79,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":59,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":92,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":128,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase":43,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":88,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":93,"org.eclipse.jgit.api.FetchCommandTest.testFetch":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":69,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":28,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":66,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":78,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":2,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":112,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":9,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":63,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":8,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":7,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference":0,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":6,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":64,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":110,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":53,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":65,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":86,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":18,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":73,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow":35,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":71,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":96,"org.eclipse.jgit.api.PushCommandTest.testPush":101,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":22,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":36,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":117,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName":39,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":126,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":55,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":127,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":120,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":125,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":34,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":31,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":119,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":118,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":3,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase":49,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":30,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":83,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":62,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference":19,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":33,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":21,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":54,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":75,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":82,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":107,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":113,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":50,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":104,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":90,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":72,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":68,"org.eclipse.jgit.api.TagCommandTest.testTagging":94,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":40,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":114,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":11,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":12,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":38,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":13,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":81,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":57,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":84,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":37,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":27,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":47,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":17,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":46,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":23,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":45,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":44,"org.eclipse.jgit.revwalk.RevObjectTest.testRevObjectTypes":100,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":108,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":109,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":106,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":32,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":25,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":56,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":98,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":58,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":74,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":1,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":26,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":5,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":111,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":87,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":130,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":52,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":77,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":42,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":48,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":76,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":95,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":124,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":123,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":51,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":122,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":121,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":20,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":91,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":60,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":129,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":16,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":85,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":14,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":103,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":41,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference":10,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":99,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":61,"org.eclipse.jgit.api.TagCommandTest.testDelete":97,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":115},"transformations":[{"failures":[],"tindex":"f4e960f7-4c53-11e5-88a6-f9aff9e6f99d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:315","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = int;\n"},"variableMap":{"bs":"grow","wantSize":"grow"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdSubclassMap:131","type":"CtIfImpl","sourcecode":"if ((++(int)) == (int))\n    org.eclipse.jgit.lib.ObjectIdSubclassMap<V>.grow();\n"},"status":0},{"failures":[],"tindex":"f4e98808-4c53-11e5-88a6-83d6e30a614c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.AddNoteCommand:148","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.Repository.updateRef(java.lang.String)"},"variableMap":{"repo":"clonedRepo","notesRef":"org.eclipse.jgit.lib.Constants.HEAD"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:228","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.RefUpdate org.eclipse.jgit.lib.RefUpdate = org.eclipse.jgit.lib.Repository.updateRef(org.eclipse.jgit.lib.Constants.java.lang.String)"},"status":-2},{"failures":[],"tindex":"f4e98809-4c53-11e5-88a6-6571928c2ec8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:381","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":-2},{"failures":[],"tindex":"f4e9880a-4c53-11e5-88a6-09ce0fbf2186","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:114","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 0)\n    java.lang.String = (java.lang.String + \": \") + java.lang.String;\nelse\n    java.lang.String = java.lang.String;\n"},"variableMap":{"msg":"org.eclipse.jgit.lib.ConfigConstants.CONFIG_CORE_SECTION","strResult":"org.eclipse.jgit.lib.Constants.GITDIR"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:335","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.lib.Repository.getDirectory().getParentFile().equals(java.io.File))) {\n    org.eclipse.jgit.storage.file.FileBasedConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, null, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, org.eclipse.jgit.lib.Repository.getWorkTree().getAbsolutePath());\n    org.eclipse.jgit.internal.storage.file.LockFile org.eclipse.jgit.internal.storage.file.LockFile = new org.eclipse.jgit.internal.storage.file.LockFile(new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String) , org.eclipse.jgit.lib.Repository.getFS());\n    try {\n        if (org.eclipse.jgit.internal.storage.file.LockFile.lock()) {\n            org.eclipse.jgit.internal.storage.file.LockFile.write(org.eclipse.jgit.lib.Constants.encode(((org.eclipse.jgit.lib.Constants.java.lang.String) + (org.eclipse.jgit.lib.Repository.getDirectory().getAbsolutePath()))));\n            org.eclipse.jgit.internal.storage.file.LockFile.commit();\n        } \n    } finally {\n        org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n    }\n} "},"status":-2},{"failures":[],"tindex":"f4e9af1b-4c53-11e5-88a6-cdc15c6012c6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:289","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevTag:108","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = org.eclipse.jgit.revwalk.RevWalk.isRetainBody()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"f4e9af1c-4c53-11e5-88a6-778712e38669","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:94","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.AnyObjectId.copy()"},"status":-1},{"failures":[116],"tindex":"f4e9af1d-4c53-11e5-88a6-d5f7ded05cfa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:165","type":"CtAssignmentImpl","sourcecode":"int = int == (int) ? org.eclipse.jgit.internal.storage.file.PackBitmapIndex.int : 0"},"variableMap":{"nextIn":"headerCnt","maxCommits":"c","nextFlg":"c","org.eclipse.jgit.internal.storage.file.PackBitmapIndex.FLAG_REUSE":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:386","type":"CtAssignmentImpl","sourcecode":"int = (byte[][int++]) & 255"},"status":-2},{"failures":[],"tindex":"f4e9af1e-4c53-11e5-88a6-890ff6ba8c8d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.blame.BlameResult:336","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.PersonIdent org.eclipse.jgit.lib.PersonIdent = org.eclipse.jgit.blame.BlameGenerator.getSourceCommitter()"},"variableMap":{"gen":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:242","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.PersonIdent org.eclipse.jgit.lib.PersonIdent = ((org.eclipse.jgit.lib.PersonIdent)(java.lang.Object))"},"status":-2},{"failures":[117],"tindex":"f4e9af1f-4c53-11e5-88a6-b76fd782bb46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:621","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath(), org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.dircache.DirCacheEntry.int, 0, 0)"},"status":-1},{"failures":[],"tindex":"f4e9d630-4c53-11e5-88a6-eb926cb76a6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:378","type":"CtForImpl","sourcecode":"for (java.util.Iterator<java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.Ref>> java.util.Iterator<java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.Ref>> = org.eclipse.jgit.internal.storage.file.GC.getAllRefs().entrySet().iterator() ; java.util.Iterator<java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.Ref>>.hasNext() ; ) {\n    java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.Ref> java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.Ref> = java.util.Iterator<java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.Ref>>.next();\n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.get(java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.Ref>.getKey());\n    if (!org.eclipse.jgit.internal.storage.file.GC.(org.eclipse.jgit.internal.storage.file.GC.equals(java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.Ref>.getValue(), org.eclipse.jgit.lib.Ref)))\n        java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.put(java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.Ref>.getKey(), java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.Ref>.getValue());\n    \n}"},"status":0},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,116],"tindex":"f4e9d631-4c53-11e5-88a6-7d8c709b2e6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:502","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ByteArrayWindow.write(org.eclipse.jgit.internal.storage.pack.PackOutputStream, long, ((int)(long)), null)"},"status":-1},{"failures":[],"tindex":"f4e9d632-4c53-11e5-88a6-0fbcd4cb7d9a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:995","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.diff.DiffFormatter.byte[]"},"variableMap":{"org.eclipse.jgit.diff.DiffFormatter.EMPTY":"org.eclipse.jgit.lib.Constants.ENCODED_TYPE_COMMIT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:441","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Constants.byte[]"},"status":-2},{"failures":[],"tindex":"f4e9d633-4c53-11e5-88a6-e794413f7242","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:203","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}