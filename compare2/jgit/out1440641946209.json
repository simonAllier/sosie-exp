{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":112,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":113,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":85,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":70,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":88,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder":40,"org.eclipse.jgit.lib.IndexDiffTest.testModified":118,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":91,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":4,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree":42,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":10,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":92,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":120,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":61,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":100,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":34,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":55,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree":41,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTrailingSlash":26,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":108,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":45,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict":59,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":28,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":89,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":47,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":12,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":101,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":6,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":81,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule":104,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":79,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":48,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":90,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":122,"org.eclipse.jgit.api.CleanCommandTest.testClean":27,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":9,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":78,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":93,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":13,"org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0004":35,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegateAllExceptJavaInSrc":20,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127":62,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":7,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegation":23,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":3,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":84,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":96,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":5,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":33,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":117,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":49,"org.eclipse.jgit.attributes.AttributesMatcherTest.testParentDirectoryGitAttributes":24,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion":67,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset":63,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":31,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":32,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":72,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":115,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":54,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":56,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":97,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":111,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles":69,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":110,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":114,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles2":16,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles1":15,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":95,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles4":18,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid":44,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRepeatedNegationInDifferentFiles3":17,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":50,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap":57,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":99,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":83,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegationAllExceptJavaInSrcAndExceptChildDirInSrc":19,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly":43,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":39,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":109,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":86,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":29,"org.eclipse.jgit.attributes.AttributesMatcherTest.testBasic":25,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":102,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":77,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":98,"org.eclipse.jgit.ignore.IgnoreNodeTest.testRules":14,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":94,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":119,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":73,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":121,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":0,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":52,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath":66,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive":64,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":60,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":46,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap":58,"org.eclipse.jgit.ignore.IgnoreNodeTest.testSlashOnlyMatchesDirectory":22,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":107,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":106,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree":65,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":38,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":105,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":37,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":76,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test30_stripWorkDir":36,"org.eclipse.jgit.ignore.IgnoreNodeTest.testNegation":21,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":103,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":87,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":116,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":71,"org.eclipse.jgit.attributes.AttributesMatcherTest.testNameOnlyMatches":2,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":75,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":82,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":30,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":123,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":53,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":74,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive":68,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":80,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":51},"transformations":[{"failures":[0,1,2],"tindex":"fe095062-4c61-11e5-a889-e95a35cb0a11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:152","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.ignore.internal.Strings.org.eclipse.jgit.ignore.internal.Strings.isComplexWildcard(java.lang.String))\n    return org.eclipse.jgit.ignore.internal.Strings.PatternState.org.eclipse.jgit.ignore.internal.Strings.PatternState;\n"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,0,25,1,2,26,27,28,29,30,31,32,33,34],"tindex":"fe099e83-4c61-11e5-a889-334cbaa68168","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.fnmatch.GroupHead:77","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(2)"},"variableMap":{"characterClass":"segment"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.NameMatcher:95","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.String.charAt((int + int))"},"status":-1},{"failures":[35],"tindex":"fe099e84-4c61-11e5-a889-cfdee8186060","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickResult:73","type":"CtReturnImpl","sourcecode":"return \"Failed\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineIn:144","type":"CtReturnImpl","sourcecode":"return \"\""},"status":-1},{"failures":[36],"tindex":"fe09c595-4c61-11e5-a889-61cf2a0dbce7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1213","type":"CtIfImpl","sourcecode":"if ((((java.lang.String.length()) <= (java.lang.String.length())) || ((java.lang.String.charAt(java.lang.String.length())) != (java.io.File.char))) || (!(java.lang.String.startsWith(java.lang.String)))) {\n    java.io.File java.io.File = java.io.File.isAbsolute() ? java.io.File : java.io.File.getAbsoluteFile();\n    java.io.File java.io.File = java.io.File.isAbsolute() ? java.io.File : java.io.File.getAbsoluteFile();\n    if ((java.io.File == java.io.File) && (java.io.File == java.io.File))\n        return \"\";\n    \n    return org.eclipse.jgit.lib.Repository.org.eclipse.jgit.lib.Repository.stripWorkDir(java.io.File, java.io.File);\n} "},"status":-1},{"failures":[],"tindex":"fe09c596-4c61-11e5-a889-0506912899ed","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:356","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheEntry.getStage()) != 0)\n    throw new org.eclipse.jgit.errors.UnmergedPathException(org.eclipse.jgit.dircache.DirCacheEntry);\n"},"variableMap":{"e":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:994","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))))\n    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n"},"status":-2},{"failures":[],"tindex":"fe09c597-4c61-11e5-a889-1f1b6a492a6a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.NoteMap:392","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.AbbreviatedObjectId org.eclipse.jgit.lib.AbbreviatedObjectId = org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(\"\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectReader:128","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.AbbreviatedObjectId org.eclipse.jgit.lib.AbbreviatedObjectId = org.eclipse.jgit.lib.AnyObjectId.abbreviate(int)"},"status":-2},{"failures":[],"tindex":"fe09eca8-4c61-11e5-a889-e1c0ad308c02","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:136","type":"CtLocalVariableImpl","sourcecode":"final int int = int - 1"},"variableMap":{"vi":"tIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:104","type":"CtLocalVariableImpl","sourcecode":"final int int = int[][int]"},"status":-2},{"failures":[],"tindex":"fe09eca9-4c61-11e5-a889-a1b8a0fb2340","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.FileTreeEntry:81","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.FileMode"},"variableMap":{"mode":"org.eclipse.jgit.lib.FileMode.EXECUTABLE_FILE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.FileMode:155","type":"CtIfImpl","sourcecode":"if ((int & 73) != 0)\n    return org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n"},"status":-2},{"failures":[],"tindex":"fe09ecaa-4c61-11e5-a889-93f577edae48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:152","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[37,38,39,40,41,42,43,44,45,46,3,47,48,49,50,51,52,10,11,53,54,55,56,13,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,34],"tindex":"fe09ecab-4c61-11e5-a889-d9d8bd5125fc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.LongMap:137","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"variableMap":{"h":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:208","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.eclipse.jgit.dircache.DirCacheTree.getEntrySpan()"},"status":-1},{"failures":[119],"tindex":"fe0a13bc-4c61-11e5-a889-0161a82ee9af","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1237","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == 0)\n    continue;\n"},"variableMap":{"c":"rev","clearFlags":"done","flags":"done"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:445","type":"CtIfImpl","sourcecode":"if ((int + 1) < (char[].int)) {\n    switch (char[][(int + 1)]) {\n        case '0' :\n        case '1' :\n        case '2' :\n        case '3' :\n        case '4' :\n        case '5' :\n        case '6' :\n        case '7' :\n        case '8' :\n        case '9' :\n            int int;\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n            for (int = int + 1 ; int < (char[].int) ; ++int) {\n                if (!(java.lang.Character.isDigit(char[][int])))\n                    break;\n                \n            }\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + 1) , ((int - int) - 1));\n            int int;\n            try {\n                int = java.lang.Integer.parseInt(java.lang.String);\n            } catch (java.lang.NumberFormatException e) {\n                throw new org.eclipse.jgit.errors.RevisionSyntaxException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.String);\n            }\n            if (int != 0) {\n                org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                if (int > (org.eclipse.jgit.revwalk.RevCommit.getParentCount()))\n                    org.eclipse.jgit.revwalk.RevObject = null;\n                else\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent((int - 1));\n                \n            } \n            int = int - 1;\n            int = int;\n            break;\n        case '{' :\n            int int;\n            java.lang.String java.lang.String = null;\n            for (int = int + 2 ; int < (char[].int) ; ++int) {\n                if ((char[][int]) == '}') {\n                    java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n                    break;\n                } \n            }\n            int = int;\n            if (java.lang.String != null)\n                if (java.lang.String.equals(\"tree\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject);\n                } else if (java.lang.String.equals(\"commit\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n                } else if (java.lang.String.equals(\"blob\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                    if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevBlob))\n                        throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n                    \n                } else if (java.lang.String.equals(\"\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                } else\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                \n            else\n                throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n            \n            int = int;\n            break;\n        default :\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n            if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n                org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n                    org.eclipse.jgit.revwalk.RevObject = null;\n                else\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n                \n            } else\n                throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n            \n    }\n} else {\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n    if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n        if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n            org.eclipse.jgit.revwalk.RevObject = null;\n        else\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n        \n    } else\n        throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n    \n}"},"status":-1},{"failures":[120],"tindex":"fe0a3acd-4c61-11e5-a889-571624bff5c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:376","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.patch.HunkHeader.copyLine(java.lang.StringBuilder, java.lang.String[], int[], 0)"},"status":-1},{"failures":[],"tindex":"fe0a3ace-4c61-11e5-a889-d14f07d52058","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:164","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectIdOwnerMap<V>.grow()"},"status":0},{"failures":[121,122],"tindex":"fe0a3acf-4c61-11e5-a889-9dfa29e46717","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:333","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null) {\n    org.eclipse.jgit.revwalk.RevWalk = null;\n    return ;\n} "},"status":-1},{"failures":[123],"tindex":"fe0a3ad0-4c61-11e5-a889-fd221557202c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:897","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackLock = null"},"variableMap":{"packLock":"packLock"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:192","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackLock = org.eclipse.jgit.transport.PackParser.parse(org.eclipse.jgit.lib.NullProgressMonitor.org.eclipse.jgit.lib.NullProgressMonitor)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}