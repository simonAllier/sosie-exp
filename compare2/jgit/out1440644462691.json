{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef":257,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":8,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":179,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":12,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":250,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":126,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":172,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":207,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":171,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutMergeBranch":230,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":63,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":154,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":87,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":194,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":176,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":71,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":73,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":36,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":192,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":70,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":112,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":202,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef":256,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":92,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":245,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":23,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":68,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":222,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":2,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":75,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":58,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":199,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":27,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":37,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":236,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":18,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile":166,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":223,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":138,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":144,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":253,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1":140,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob":123,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":177,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2":141,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":170,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":185,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":189,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":180,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":252,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":224,"org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc":164,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":41,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":100,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":217,"org.eclipse.jgit.transport.PackParserTest.testNonMarkingInputStream":129,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":106,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":61,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":208,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":231,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":88,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":109,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":76,"org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld":161,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":72,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":28,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":3,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":117,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":220,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile":165,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":251,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":49,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":246,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjects":152,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":181,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":156,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":242,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":25,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":94,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue":249,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":101,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":102,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":74,"org.eclipse.jgit.transport.PackParserTest.test1":119,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":212,"org.eclipse.jgit.api.GitConstructionTest.testClose":77,"org.eclipse.jgit.transport.PackParserTest.test2":120,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":191,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead":127,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":219,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":163,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":48,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":114,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":206,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule":186,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":197,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":7,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":193,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":243,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":215,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.emptyRepositoryFormatVersion":255,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":86,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec":232,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":31,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":6,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":84,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":160,"org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenExisting":238,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":89,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":65,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":55,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":33,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":121,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":200,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":22,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":225,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":108,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":142,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":201,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef":254,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":90,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":98,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":188,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":95,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":175,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test007_Open":244,"org.eclipse.jgit.api.FetchCommandTest.testFetch":39,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":59,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":159,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":183,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet":247,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":135,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":169,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":158,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":173,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":210,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":204,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":211,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":105,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":132,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":62,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":67,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":190,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":103,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":32,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":116,"org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage":124,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":69,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":5,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":174,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":35,"org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk":162,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":38,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":205,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":216,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":20,"org.eclipse.jgit.api.PushCommandTest.testPush":82,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":233,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":240,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":26,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":187,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":151,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":248,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":93,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":182,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":153,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":150,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet":239,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":81,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnNullWithoutMergeBranchForLocalBranch":234,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":149,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":136,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":134,"org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob":125,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":143,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":10,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":139,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":113,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":15,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":66,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":14,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":218,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":227,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":258,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":115,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":47,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":228,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":196,"org.eclipse.jgit.api.GitConstructionTest.testWrap":79,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":97,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":50,"org.eclipse.jgit.api.GitConstructionTest.testOpen":78,"org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen":237,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":91,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":107,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":110,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":46,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":40,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":168,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":235,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":43,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":13,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":133,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":184,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":122,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":167,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":118,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":45,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":99,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":83,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":111,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":229,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":57,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":56,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":80,"org.eclipse.jgit.lib.ConfigTest.testReadLong":221,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":85,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":104,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":60,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":21,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":128,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":178,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":130,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":148,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":147,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":157,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":198,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet":241,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":51,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":146,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":145,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":53,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":64,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":155,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":195,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":30,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":44,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":96,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":226,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":137,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":9,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":29,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":131,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":16,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":209,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":213,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":52,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":203,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":214},"transformations":[{"failures":[],"tindex":"d9f91451-4c67-11e5-98cc-8bec25fee8e4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:481","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.submodule.SubmoduleWalk.loadModulesConfig()"},"variableMap":{"this":"generator"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:123","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.submodule.SubmoduleWalk.setTree(new org.eclipse.jgit.dircache.DirCacheIterator(org.eclipse.jgit.dircache.DirCache))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"d9f93b62-4c67-11e5-98cc-4d495a42359f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:451","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"curIdx":"retainFlags"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1253","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.int &= int"},"status":-1},{"failures":[],"tindex":"d9f93b63-4c67-11e5-98cc-d305705cddd3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:322","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"d9f93b64-4c67-11e5-98cc-edb15248eaf0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:272","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(\"pack-\"))) || (!(java.lang.String.endsWith(\".pack\"))))\n    continue;\n"},"variableMap":{"n":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:616","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d9f93b65-4c67-11e5-98cc-cb026be22faa","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RefMap:278","type":"CtIfImpl","sourcecode":"if (0 < (java.lang.String.length()))\n    java.lang.String = (java.lang.String) + java.lang.String;\n"},"variableMap":{"prefix":"packetSizeMustBeAtMost","name":"packetSizeMustBeAtMost"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandOutputStream:114","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.transport.SideBandOutputStream.int) < int)\n    throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(org.eclipse.jgit.transport.SideBandOutputStream.int)));\n"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,9,10,11,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,77,78,78,79,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156],"tindex":"d9f96276-4c67-11e5-98cc-2994109f8f4e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:1020","type":"CtAssignmentImpl","sourcecode":"java.io.File = java.io.File.getParentFile()"},"variableMap":{"dir":"tmpIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:190","type":"CtAssignmentImpl","sourcecode":"java.io.File = new java.io.File(org.eclipse.jgit.internal.storage.file.FileObjectDatabase.getDirectory() , (org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.(org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser.baseName(java.io.File)) + \".idx\"))"},"status":-1},{"failures":[],"tindex":"d9f96277-4c67-11e5-98cc-f1e25c97e63b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:590","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = (--(int)) == 0"},"variableMap":{"activeWindows":"org.eclipse.jgit.revwalk.RevWalk.UNINTERESTING"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:105","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.eclipse.jgit.revwalk.AbstractRevQueue.anybodyHasFlag(org.eclipse.jgit.revwalk.RevWalk.int)"},"status":-2},{"failures":[],"tindex":"d9f96278-4c67-11e5-98cc-15def6801275","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RefMap:278","type":"CtIfImpl","sourcecode":"if (0 < (java.lang.String.length()))\n    java.lang.String = (java.lang.String) + java.lang.String;\n"},"variableMap":{"prefix":"characterClassIsNotSupported","name":"characterClass"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:92","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:graph:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('!' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:lower:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LowerPattern.org.eclipse.jgit.fnmatch.GroupHead.LowerPattern);\n} else if (java.lang.String.equals(\"[:print:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(' ' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.format(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"d9f98989-4c67-11e5-98cc-059e1cdede33","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.BitSet:71","type":"CtAssignmentImpl","sourcecode":"long[] = long[]"},"variableMap":{"buf":"entries","words":"entries"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:75","type":"CtAssignmentImpl","sourcecode":"long[] = new long[]{  }"},"status":-2},{"failures":[157,158,159,160,13],"tindex":"d9f9898a-4c67-11e5-98cc-a93167349254","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.SquashMessageFormatter:79","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Squashed commit of the following:\\n\")"},"status":-1},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172],"tindex":"d9f9898b-4c67-11e5-98cc-7f23dde0099b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV1:133","type":"CtAssignmentImpl","sourcecode":"int = -(int + 1)"},"variableMap":{"levelOne":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:219","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"d9f9898c-4c67-11e5-98cc-c3bfe1a751cc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.Git:157","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.api.CloneCommand()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:374","type":"CtReturnImpl","sourcecode":"return this"},"status":0},{"failures":[],"tindex":"d9f9b09d-4c67-11e5-98cc-db7ad65fd684","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:206","type":"CtOperatorAssignmentImpl","sourcecode":"int &= org.eclipse.jgit.internal.storage.pack.ObjectToPack.int"},"variableMap":{"flags":"length","org.eclipse.jgit.internal.storage.pack.ObjectToPack.NON_DELTA_MASK":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:472","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.eclipse.jgit.blame.Region.int"},"status":-2},{"failures":[173],"tindex":"d9f9b09e-4c67-11e5-98cc-b52b9de20ce7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:220","type":"CtForImpl","sourcecode":"for (int int = 'a' ; int <= 'z' ; int++)\n    org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[][int] = 0;"},"variableMap":{"org.eclipse.jgit.util.QuotedString.GitPathStyle.quote":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:347","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream[][0].write(byte[], int, (int - int))"},"status":-1},{"failures":[0,1,2,3,4,5,6,174,175,176,177,29,30,31,32,33,34,35,36,39,40,41,42,43,44,37,178,38,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,9,10,11,77,77,78,78,79,79,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,82,83,84,85,86,87,179,88,180,181,182,183,184,185,89,186,187,188,189,190,191,192,193,194,195,196,197,90,91,92,93,94,109,110,95,96,97,98,99,100,101,102,103,104,105,106,107,108,198,199,200,201,202,203,204,205,206,207,208,111,112,113,114,115,116,117,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,132,133,134,135,136,137,138,139,143,144,145,146,147,148,149,150,151,153,154,155,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"tindex":"d9f9b09f-4c67-11e5-98cc-13e04109ced9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1200","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if (int < 0) {\n        if ((java.lang.StringBuilder.length()) == 0)\n            throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        break;\n    } \n    if ('\\n' == int) {\n        if (boolean)\n            throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.lib.Config.StringReader.reset();\n        break;\n    } \n    if (int == int)\n        break;\n    \n    if (!boolean) {\n        if (java.lang.Character.isWhitespace(((char)(int)))) {\n            boolean = true;\n            continue;\n        } \n        if ((';' == int) || ('#' == int)) {\n            org.eclipse.jgit.lib.Config.StringReader.reset();\n            break;\n        } \n    } \n    if (boolean) {\n        if ((java.lang.StringBuilder.length()) > 0)\n            java.lang.StringBuilder.append(' ');\n        \n        boolean = false;\n    } \n    if ('\\\\' == int) {\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n        switch (int) {\n            case -1 :\n                throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            case '\\n' :\n                continue;\n            case 't' :\n                java.lang.StringBuilder.append('\\t');\n                continue;\n            case 'b' :\n                java.lang.StringBuilder.append('\\b');\n                continue;\n            case 'n' :\n                java.lang.StringBuilder.append('\\n');\n                continue;\n            case '\\\\' :\n                java.lang.StringBuilder.append('\\\\');\n                continue;\n            case '\\\"' :\n                java.lang.StringBuilder.append('\\\"');\n                continue;\n            default :\n                throw new org.eclipse.jgit.errors.ConfigInvalidException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Character.valueOf(((char)(int)))));\n        }\n    } \n    if ('\\\"' == int) {\n        boolean = !boolean;\n        continue;\n    } \n    java.lang.StringBuilder.append(((char)(int)));\n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}