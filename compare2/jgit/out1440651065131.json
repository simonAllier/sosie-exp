{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":158,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":157,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":160,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":198,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":50,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":159,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_3":154,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":208,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":153,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":207,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":266,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":156,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":155,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":282,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder":140,"org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail":121,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":71,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":197,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":295,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":315,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":319,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":49,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testLongPaths":187,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":237,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":224,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree":142,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":220,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":79,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":81,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":16,"org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid1":94,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":78,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":122,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":267,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":97,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":254,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":232,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree":141,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":173,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":7,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":211,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":76,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":147,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict":137,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":215,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":288,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":218,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":244,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":317,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":219,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":291,"org.eclipse.jgit.api.CleanCommandTest.testClean":259,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":203,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":83,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":60,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":235,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":85,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":202,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":278,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":301,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":261,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":299,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":300,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127":125,"org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0001":90,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":225,"org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0003":92,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":6,"org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0002":91,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":280,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":229,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":193,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":118,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":249,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":221,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":311,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":238,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":242,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":287,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":227,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":264,"org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree":132,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":246,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":231,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":233,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":30,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":39,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":206,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":326,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":200,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":145,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":152,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":236,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":45,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":63,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":151,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testRecursiveFiltering":189,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":51,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":103,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":84,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":80,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":210,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":102,"org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths":134,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testExact":185,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":312,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":192,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid":180,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":247,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":21,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":222,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":124,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":328,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":209,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":307,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":252,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testJustCommonPrefixIsNotMatch":182,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":256,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":9,"org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree":131,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":40,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":177,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":41,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":82,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":214,"org.eclipse.jgit.api.GitConstructionTest.testClose":68,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":313,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":314,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead":114,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive":127,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":216,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":176,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":174,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":99,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":144,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":48,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":161,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":107,"org.eclipse.jgit.transport.PacketLineInTest.testReadString_End":89,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testNoMatchButClose":186,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":241,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":258,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":191,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":281,"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_Copy":112,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":26,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":268,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":13,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":286,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":14,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testHasFlags":115,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":73,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":57,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":273,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":298,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":109,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":150,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":272,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":47,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive":130,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testKeyIsPrefixOfFilter":188,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":10,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":245,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":223,"org.eclipse.jgit.transport.PacketLineInTest.testReadString_LenHELO":93,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":240,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":37,"org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw4":88,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":294,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":34,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":279,"org.eclipse.jgit.lib.IndexDiffTest.testModified":194,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":274,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":289,"org.eclipse.jgit.api.FetchCommandTest.testFetch":28,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":61,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":228,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":3,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":320,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":139,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":116,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":195,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":44,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":0,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":64,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":75,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":250,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":42,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":260,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":101,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":108,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":204,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":255,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule":190,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":297,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":77,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":15,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":257,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":86,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":293,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":316,"org.eclipse.jgit.api.PushCommandTest.testPush":24,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":205,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":303,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":322,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":251,"org.eclipse.jgit.util.RawParseUtils_HexParseTest.testInt16":12,"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_BulkWrite":110,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":234,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":8,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":217,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":308,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":23,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":325,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":4,"org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree":133,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":2,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":67,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":66,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":253,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion":129,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":98,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":196,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":31,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":74,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset":126,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":265,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":269,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":330,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent":181,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":100,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":19,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":243,"org.eclipse.jgit.api.GitConstructionTest.testWrap":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":36,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":52,"org.eclipse.jgit.api.GitConstructionTest.testOpen":69,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":170,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":171,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":213,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":172,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":166,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":167,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":168,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":169,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":46,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_10":163,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":324,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":104,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":164,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":165,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":18,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap":135,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":162,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":329,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":302,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly":178,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":29,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":117,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":148,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":32,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":239,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":149,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":1,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":296,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":262,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":310,"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_SingleWrite":111,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":276,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":327,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":113,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":323,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":175,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":201,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":270,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":38,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":226,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":277,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath":128,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":309,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":25,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":96,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":284,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":138,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap":136,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":318,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":290,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":59,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":146,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":58,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":22,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":123,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":27,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":43,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":120,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":62,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame":179,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":143,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":212,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":119,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":275,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":321,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":285,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":87,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":53,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":55,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":199,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":72,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":106,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":33,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testFilterIsPrefixOfKey":184,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":292,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":35,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":271,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":5,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":65,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":105,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testStopWalk":183,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":263,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":230,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":283,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":304,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":248,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":306,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":305,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":54,"org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw_End":95},"transformations":[{"failures":[],"tindex":"39557890-4c77-11e5-b335-39bbdd7e8161","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:205","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[])\n    org.eclipse.jgit.internal.storage.file.PackFile.close();"},"status":-1},{"failures":[],"tindex":"39559fa1-4c77-11e5-b335-957854050382","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.RecursiveMerger:211","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache = org.eclipse.jgit.dircache.DirCache"},"variableMap":{"dircache":"dircache","oldDircache":"dircache"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:282","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache = org.eclipse.jgit.dircache.DirCache.newInCore()"},"status":0},{"failures":[],"tindex":"39559fa2-4c77-11e5-b335-ff25703dc3f5","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:311","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommitList<E>.enter(int, ((E)(org.eclipse.jgit.revwalk.RevCommit)))"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,68,69,69,70,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"39559fa3-4c77-11e5-b335-a9ab0bdb95d4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:249","type":"CtIfImpl","sourcecode":"if (int < 4)\n    int = 4;\n"},"variableMap":{"eb":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:318","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"status":-1},{"failures":[],"tindex":"39559fa4-4c77-11e5-b335-45c1d6d18e88","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:969","type":"CtLocalVariableImpl","sourcecode":"final java.nio.charset.Charset java.nio.charset.Charset = java.nio.charset.Charset.defaultCharset()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:468","type":"CtLocalVariableImpl","sourcecode":"final java.nio.charset.Charset java.nio.charset.Charset = org.eclipse.jgit.util.RawParseUtils.parseEncoding(byte[])"},"status":-2},{"failures":[110,111,112,113,114],"tindex":"39559fa5-4c77-11e5-b335-837c01211bdd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:280","type":"CtAssignmentImpl","sourcecode":"int = int / 60"},"variableMap":{"offset":"outPtr","offsetHours":"outPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:222","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.eclipse.jgit.util.TemporaryBuffer.Block.int"},"status":-1},{"failures":[],"tindex":"39559fa6-4c77-11e5-b335-d592ea8d0b31","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:151","type":"CtIfImpl","sourcecode":"if ((int) <= (int))\n    break;\n"},"variableMap":{"cur":"minCommits","end":"minCommits"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:134","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder : org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.WalkResult.java.util.List<org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder>) {\n    int int = org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.cardinality();\n    java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>> java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>> = new java.util.ArrayList<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>();\n    int int = -1;\n    int int = org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.nextSelectionDistance(0, int);\n    int int = int == (int) ? org.eclipse.jgit.internal.storage.file.PackBitmapIndex.int : 0;\n    boolean boolean = int == 0;\n    for (org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.WalkResult) {\n        if (!(org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.contains(org.eclipse.jgit.revwalk.RevCommit)))\n            continue;\n        \n        int++;\n        int--;\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        if (org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.WalkResult.java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>.remove(org.eclipse.jgit.revwalk.RevCommit)) {\n            if (int > 0)\n                int = 0;\n            \n        } else if ((!boolean) && ((int > 0) || (((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) <= 1) && (int > (-(int)))))) {\n            continue;\n        } \n        int int = int;\n        int = org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.nextSelectionDistance(int, int);\n        int = int == (int) ? org.eclipse.jgit.internal.storage.file.PackBitmapIndex.int : 0;\n        boolean = int == 0;\n        org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder = org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.newBitmapBuilder();\n        org.eclipse.jgit.revwalk.RevWalk.reset();\n        org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommit);\n        for (org.eclipse.jgit.lib.AnyObjectId org.eclipse.jgit.lib.AnyObjectId : org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.WalkResult.java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>)\n            org.eclipse.jgit.revwalk.RevWalk.markUninteresting(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.AnyObjectId));\n        org.eclipse.jgit.revwalk.RevWalk.setRevFilter(org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.newRevFilter(null, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder));\n        while ((org.eclipse.jgit.revwalk.RevWalk.next()) != null) {\n        }\n        java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>> java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>> = new java.util.ArrayList<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>();\n        for (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> : java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>) {\n            org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit = java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.get(((java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()) - 1));\n            if (org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.contains(org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit))\n                java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.add(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>);\n            \n        }\n        java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>;\n        if (java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.isEmpty()) {\n            java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = new java.util.ArrayList<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>();\n            java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.add(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>);\n        } else {\n            java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.get(0);\n            for (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> : java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>) {\n                if ((java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()) > (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()))\n                    java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>;\n                \n            }\n        }\n        java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.add(new org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit(org.eclipse.jgit.revwalk.RevCommit , !(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.isEmpty()) , int));\n        org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.addBitmap(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, 0);\n    }\n    for (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> : java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>)\n        org.eclipse.jgit.util.BlockList<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.addAll(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>);\n}"},"status":-2},{"failures":[],"tindex":"3955c6b7-4c77-11e5-b335-95be744a4f37","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:463","type":"CtWhileImpl","sourcecode":"while ((int < (java.lang.String.length())) && (java.lang.Character.isWhitespace(java.lang.String.charAt(int)))) {\n    int++;\n}"},"variableMap":{"next":"org.eclipse.jgit.lib.Constants.OBJ_BLOB","auth":"noteData"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMap:345","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    byte[] byte[] = org.eclipse.jgit.lib.Constants.encode(java.lang.String);\n    org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.Constants.int, byte[]);\n} else {\n    org.eclipse.jgit.lib.ObjectId = null;\n}"},"status":-2},{"failures":[115],"tindex":"3955c6b8-4c77-11e5-b335-5d4415f1e0c6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:335","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return false;\nelse if (int == 0)\n    return true;\n"},"variableMap":{"cmp":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:143","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.RevCommit[][int].int) & int) != 0)\n    return true;\n"},"status":-1},{"failures":[],"tindex":"3955edc9-4c77-11e5-b335-e7eb7fc6f1bc","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.DepthGenerator:129","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.DepthWalk.Commit == null)\n    return null;\n"},"variableMap":{"c":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FixUninterestingGenerator:78","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null)\n    return null;\n"},"status":0},{"failures":[10,11,13,8,9,14,15,16,1,3,4,5,6,37,38,40,41,42,43,44,45,46,47,85,86,71,72,73,76,77,78,79,84],"tindex":"3955edca-4c77-11e5-b335-598bd0ff4681","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:356","type":"CtAssignmentImpl","sourcecode":"this.java.io.File = java.io.File"},"status":-1},{"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,14,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330],"tindex":"3955edcb-4c77-11e5-b335-6b2c2afa8347","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TreeEntry:235","type":"CtReturnImpl","sourcecode":"return '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:552","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"3955edcc-4c77-11e5-b335-c7f576db084a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.FileMode:195","type":"CtAssignmentImpl","sourcecode":"byte[] = new byte[]{ '0' }"},"variableMap":{"octalBytes":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PacketLineIn:177","type":"CtAssignmentImpl","sourcecode":"byte[] = byte[]"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}