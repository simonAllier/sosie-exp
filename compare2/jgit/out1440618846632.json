{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":46,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":47,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TruncatedZLibStream":63,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":19,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":36,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":58,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":44,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":59,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":25,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":5,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":18,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TrailingGarbage":65,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":32,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":33,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":13,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":40,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":31,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":38,"org.eclipse.jgit.api.InitCommandTest.testInitWithExplicitGitDir":21,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":8,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":54,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":37,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":10,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":29,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":50,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare":20,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":51,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":52,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":34,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":48,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":30,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TruncatedZLibStream":62,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":12,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":14,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":68,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":16,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":35,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":60,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":7,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":53,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":9,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule":2,"org.eclipse.jgit.api.InitCommandTest.testInitRepository":24,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":43,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":41,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":39,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":26,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":70,"org.eclipse.jgit.api.InitCommandTest.testInitNonEmptyRepository":23,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":66,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":1,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":71,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":11,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":45,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":67,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":27,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":42,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":61,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":49,"org.eclipse.jgit.api.InitCommandTest.testInitWithOnlyExplicitGitDir":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":57,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":55,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TrailingGarbage":64,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":69,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":3,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":0,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":6},"transformations":[{"failures":[0],"tindex":"359cd284-4c2c-11e5-8a20-9718342ebf71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefWriter:131","type":"CtInvocationImpl","sourcecode":"java.io.StringWriter.write(\"^{}\\n\")"},"status":-1},{"failures":[],"tindex":"359cf995-4c2c-11e5-8a20-8d4ebc664fd1","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:549","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.LIFORevQueue:101","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"359cf996-4c2c-11e5-8a20-032659ffd97c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:583","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(0, (int - 16))"},"variableMap":{"nameEnd":"d","ptr":"sourceStart"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:255","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Region.int -= int"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"359cf997-4c2c-11e5-8a20-bf2ab1b53b89","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.InitCommand:80","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RepositoryBuilder.setBare()"},"variableMap":{"builder":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.InitCommand:81","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RepositoryBuilder.readEnvironment()"},"status":-1},{"failures":[],"tindex":"359d20a8-4c2c-11e5-8a20-bfee5869602b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:411","type":"CtLocalVariableImpl","sourcecode":"final long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:239","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[58,59,0,60],"tindex":"359d20a9-4c2c-11e5-8a20-4dc8ca2e81e2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:185","type":"CtReturnImpl","sourcecode":"return new java.util.Properties()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:176","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.GarbageCollectCommand.org.eclipse.jgit.api.GarbageCollectCommand.toProperties(org.eclipse.jgit.internal.storage.file.GC.getStatistics())"},"status":-1},{"failures":[],"tindex":"359d20aa-4c2c-11e5-8a20-b763ad677017","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:840","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"This is a combination of (.*) commits\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:162","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = ((org.eclipse.jgit.revwalk.RevCommit.getId().abbreviate(7).name()) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage())"},"status":-2},{"failures":[],"tindex":"359d20ab-4c2c-11e5-8a20-f5be4116c052","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.FileMode:185","type":"CtWhileImpl","sourcecode":"while (int != 0) {\n    byte[][--int] = ((byte)('0' + (int & 7)));\n    int >>= 3;\n}"},"variableMap":{"mode":"length","p":"score","tmp":"org.eclipse.jgit.patch.FileHeader.SIMILARITY_INDEX"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:454","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"359d20ac-4c2c-11e5-8a20-b3c0e9f1da46","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:279","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 16"},"variableMap":{"cmd":"distance"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:164","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int) + 1"},"status":-2},{"failures":[],"tindex":"359d20ad-4c2c-11e5-8a20-a7e32aa9475a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:143","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.TemporaryBuffer.copy(java.io.InputStream)"},"status":-2},{"failures":[61],"tindex":"359d47be-4c2c-11e5-8a20-594c853ca4e9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryRename:104","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate.disableRefLog()"},"variableMap":{"tmp":"refUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashCreateCommand:212","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.setRefLogIdent(org.eclipse.jgit.lib.PersonIdent)"},"status":-1},{"failures":[],"tindex":"359d47bf-4c2c-11e5-8a20-45bbbf598b8a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:519","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.currentTimeMillis()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:267","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Math.min(long, long)"},"status":-2},{"failures":[],"tindex":"359d47c0-4c2c-11e5-8a20-df922909f54f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.attributes.AttributesNode:105","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    int = int;\nelse\n    int = java.lang.Math.min(int, int);\n"},"variableMap":{"patternEndTab":"nParents","patternEnd":"length","patternEndSpace":"nParents"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:176","type":"CtIfImpl","sourcecode":"if (int == 0)\n    org.eclipse.jgit.revwalk.RevCommit[][int++] = org.eclipse.jgit.revwalk.RevCommit;\nelse if (int == 1) {\n    org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[]{ org.eclipse.jgit.revwalk.RevCommit[][0] , org.eclipse.jgit.revwalk.RevCommit };\n    int = 2;\n} else {\n    if ((org.eclipse.jgit.revwalk.RevCommit[].int) <= int) {\n        org.eclipse.jgit.revwalk.RevCommit[] org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit[];\n        org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[(org.eclipse.jgit.revwalk.RevCommit[].int) + 32];\n        java.lang.System.arraycopy(org.eclipse.jgit.revwalk.RevCommit[], 0, org.eclipse.jgit.revwalk.RevCommit[], 0, int);\n    } \n    org.eclipse.jgit.revwalk.RevCommit[][int++] = org.eclipse.jgit.revwalk.RevCommit;\n}"},"status":-2},{"failures":[62,63,64,65],"tindex":"359d47c1-4c2c-11e5-8a20-dbe95d5f54c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:241","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int;\n    try {\n        int = java.util.zip.Inflater.inflate(byte[]);\n    } catch (java.util.zip.DataFormatException e) {\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n    if (int != 0)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    if (java.util.zip.Inflater.finished()) {\n        if (((java.util.zip.Inflater.getRemaining()) != 0) || ((java.io.InputStream.read()) != (-1)))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        break;\n    } \n    if (!(java.util.zip.Inflater.needsInput()))\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    int = java.io.InputStream.read(byte[]);\n    if (int <= 0)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    java.util.zip.Inflater.setInput(byte[], 0, int);\n}"},"status":-1},{"failures":[0,66,67,68,69,70,71],"tindex":"359d47c2-4c2c-11e5-8a20-d1b123390067","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:280","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.delete(org.eclipse.jgit.internal.storage.file.ObjectDirectory.fileFor(org.eclipse.jgit.lib.ObjectId), (((org.eclipse.jgit.util.FileUtils.int) | (org.eclipse.jgit.util.FileUtils.int)) | (org.eclipse.jgit.util.FileUtils.int)))"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}