{"failureDictionary":{"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":59,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNormalTime":88,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":107,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidCommitter":92,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":17,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":28,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":41,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart":1,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":38,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":42,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit2Parent":80,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":29,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":9,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":68,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":33,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":43,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":69,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree4":74,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree3":73,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree2":72,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":20,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree1":71,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":96,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":64,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":67,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":0,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":18,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":98,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":10,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":70,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":13,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":30,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":19,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":108,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNameOnlyMatches":103,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":57,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitNoParent":93,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":56,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":22,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":36,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":45,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":5,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":27,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":44,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":55,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":7,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":54,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent1":76,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor3":83,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent2":77,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor2":82,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent3":78,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor5":85,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent4":79,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor4":84,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor7":87,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor6":86,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":2,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":65,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":46,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":53,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":25,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor1":81,"org.eclipse.jgit.util.ReadLinesTest.testReadLines_mixed":114,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":101,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":12,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":97,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":49,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":26,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":52,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":106,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":50,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":37,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":31,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":24,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":100,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":61,"org.eclipse.jgit.util.ReadLinesTest.testReadLines_endCRLF":113,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":66,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":63,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":62,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":99,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommitBlankAuthor":89,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":47,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":105,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":110,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":4,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":23,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":48,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":34,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit128Parent":94,"org.eclipse.jgit.util.ReadLinesTest.testReadLines_CRLF":115,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":35,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":8,"org.eclipse.jgit.lib.ObjectCheckerTest.testValidCommit1Parent":75,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":95,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":3,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":112,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":11,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":109,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter2":91,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":6,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter1":90,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":14,"org.eclipse.jgit.treewalk.filter.NotTreeFilterTest.testCloneIsSparseWhenPossible":104,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":111,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":16,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":15,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":51,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":102,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":40,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":39,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":32,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":60,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":58},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"a678fae9-4c27-11e5-aca0-8b29b5cbb088","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.BlockList:317","type":"CtIfImpl","sourcecode":"if ((int) <= (int))\n    throw new java.util.NoSuchElementException();\n"},"variableMap":{"size":"oursEndB","index":"oursEndB"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:240","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getEndA())) {\n    int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n} else {\n    int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n}"},"status":-1},{"failures":[],"tindex":"a67921fa-4c27-11e5-aca0-51554c77b2cb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:379","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevCommit.getId()"},"variableMap":{"newHeadId":"srcObjectId","headCommit":"srcObjectId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:147","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId()"},"status":-2},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"a67921fb-4c27-11e5-aca0-657a1388328d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RawTextComparator:292","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && ((byte[][int]) == (byte[][int]))) {\n    int++;\n    int++;\n}"},"variableMap":{"aPtr":"ptr","bPtr":"ptr","bEnd":"ptr","aEnd":"ptr","aRaw":"raw","bRaw":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:237","type":"CtIfImpl","sourcecode":"if (((int = org.eclipse.jgit.lib.ObjectChecker.id(byte[], int)) < 0) || ((byte[][int++]) != '\\n'))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid tree\");\n"},"status":-1},{"failures":[],"tindex":"a67921fc-4c27-11e5-aca0-ff8036c1bf8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:378","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommitList<E>.enter(int, ((E)(org.eclipse.jgit.revwalk.RevCommit)))"},"status":0},{"failures":[],"tindex":"a67921fd-4c27-11e5-aca0-3f79d1ccb98c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:182","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectChecker.checkBlob(byte[])"},"status":-2},{"failures":[],"tindex":"a67921fe-4c27-11e5-aca0-ebdeedeb0e37","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1182","type":"CtIfImpl","sourcecode":"if (char == '/')\n    return false;\n"},"variableMap":{"p":"expectedCharacter"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.CharacterHead:57","type":"CtReturnImpl","sourcecode":"return char == (char)"},"status":-2},{"failures":[100,101,102,103],"tindex":"a679490f-4c27-11e5-aca0-c52f299555c1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.RestrictedWildCardHead:57","type":"CtReturnImpl","sourcecode":"return char != (char)"},"status":-1},{"failures":[],"tindex":"a6794910-4c27-11e5-aca0-f7de3b7ee26a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NoteMapMerger:157","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket org.eclipse.jgit.notes.InMemoryNoteBucket"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:207","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.notes.InMemoryNoteBucket org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.merge((int + 1), org.eclipse.jgit.notes.FanoutBucket.loadIfLazy(org.eclipse.jgit.notes.NoteBucket, org.eclipse.jgit.lib.MutableObjectId, org.eclipse.jgit.lib.ObjectReader), org.eclipse.jgit.notes.FanoutBucket.loadIfLazy(org.eclipse.jgit.notes.NoteBucket, org.eclipse.jgit.lib.MutableObjectId, org.eclipse.jgit.lib.ObjectReader), org.eclipse.jgit.notes.FanoutBucket.loadIfLazy(org.eclipse.jgit.notes.NoteBucket, org.eclipse.jgit.lib.MutableObjectId, org.eclipse.jgit.lib.ObjectReader))"},"status":-2},{"failures":[],"tindex":"a6794911-4c27-11e5-aca0-f17bf6607bf1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:96","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.internal.storage.file.PackFile.int) - (org.eclipse.jgit.internal.storage.file.PackFile.int)"},"variableMap":{"a":"pack","b":"pack","packLastModified":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:702","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.internal.storage.file.PackFile[][int]) == org.eclipse.jgit.internal.storage.file.PackFile)\n    return int;\n"},"status":0},{"failures":[104],"tindex":"a6794912-4c27-11e5-aca0-79c0bfb153c3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.OrTreeFilter:75","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.filter.TreeFilter.org.eclipse.jgit.treewalk.filter.TreeFilter"},"variableMap":{"org.eclipse.jgit.treewalk.filter.TreeFilter.ALL":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.NotTreeFilter:92","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.filter.TreeFilter == (org.eclipse.jgit.treewalk.filter.TreeFilter) ? this : new org.eclipse.jgit.treewalk.filter.NotTreeFilter(org.eclipse.jgit.treewalk.filter.TreeFilter)"},"status":-1},{"failures":[],"tindex":"a6797023-4c27-11e5-aca0-37cdac6df572","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1115","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit)\n    org.eclipse.jgit.revwalk.RevObject = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)).getTree();\n"},"variableMap":{"o":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.BlockObjQueue:62","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockObjQueue.Block.add(org.eclipse.jgit.revwalk.RevObject)"},"status":-2},{"failures":[105,106,107,108,109,110],"tindex":"a6797024-4c27-11e5-aca0-0bce5d0496e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:296","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getFS().setExecute(java.io.File, false)"},"status":-1},{"failures":[],"tindex":"a6797025-4c27-11e5-aca0-0f4b12ab7c8d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder:282","type":"CtAssignmentImpl","sourcecode":"com.googlecode.javaewah.EWAHCompressedBitmap = com.googlecode.javaewah.EWAHCompressedBitmap"},"variableMap":{"bestBitmap":"bitmap","bitmap":"bitmap"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexRemapper:192","type":"CtAssignmentImpl","sourcecode":"com.googlecode.javaewah.EWAHCompressedBitmap = org.eclipse.jgit.internal.storage.file.BitSet.toEWAHCompressedBitmap()"},"status":0},{"failures":[111,112],"tindex":"a6797026-4c27-11e5-aca0-a19a3c9c64be","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:402","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in object id\");\n"},"variableMap":{"sz":"index","ptr":"org.eclipse.jgit.revwalk.RevObjectList.BLOCK_SHIFT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:389","type":"CtWhileImpl","sourcecode":"while ((org.eclipse.jgit.revwalk.RevObjectList.Block.int) > 0) {\n    final int int = int >> (org.eclipse.jgit.revwalk.RevObjectList.Block.int);\n    int -= int << (org.eclipse.jgit.revwalk.RevObjectList.Block.int);\n    if ((org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int]) == null)\n        org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int] = new org.eclipse.jgit.revwalk.RevObjectList.Block(((org.eclipse.jgit.revwalk.RevObjectList.Block.int) - (org.eclipse.jgit.revwalk.RevObjectList.int)));\n    \n    org.eclipse.jgit.revwalk.RevObjectList.Block = ((org.eclipse.jgit.revwalk.RevObjectList.Block)(org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int]));\n}"},"status":-1},{"failures":[113,114,115],"tindex":"a6797027-4c27-11e5-aca0-69067b3d461c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:116","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(\"-c\")"},"variableMap":{"argv":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:358","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(java.lang.StringBuilder.toString())"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}