{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":629,"org.eclipse.jgit.api.RmCommandTest.testRemove":329,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":834,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":182,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":969,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":446,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":605,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":469,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":720,"org.eclipse.jgit.api.TagCommandTest.testEmptyTagName":906,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting":868,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":1002,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":111,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":348,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice":188,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":409,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":28,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":882,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":379,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":596,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":771,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":737,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":852,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.idOffset":651,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":953,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":378,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":943,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":445,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":952,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":65,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":642,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":752,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster":938,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":560,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":880,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile":190,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":614,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":196,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":602,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":628,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":706,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":354,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":612,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":738,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":883,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath":779,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix":762,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":217,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":708,"org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit":359,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":168,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine":94,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout":958,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":163,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches":829,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":783,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned":838,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":603,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":423,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":328,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUpToDate":992,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":790,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":38,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":296,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":297,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":298,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":986,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":550,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":338,"org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames":905,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":294,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":295,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":456,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":608,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":519,"org.eclipse.jgit.util.ChangeIdUtilTest.testKernelStyleFooter":86,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":644,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":821,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":822,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":699,"org.eclipse.jgit.api.GitConstructionTest.testClose":222,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12":5,"org.eclipse.jgit.api.RebaseCommandTest.testAuthorScriptConverter":72,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":509,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":504,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithSignedOffBy":92,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":322,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":889,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":362,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile":652,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":700,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":695,"org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus":914,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":169,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":192,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":721,"org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo":197,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":552,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":763,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1":780,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":649,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":71,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":265,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":1011,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":264,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":267,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":266,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":268,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":554,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":566,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":574,"org.eclipse.jgit.api.DescribeCommandTest.noTargetSet":885,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":635,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":115,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":440,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":690,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":124,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents":34,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":29,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":317,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":414,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule":122,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":316,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":318,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2":766,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1":765,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":315,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":314,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":846,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardUnknownObject":996,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":215,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix":769,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBug_NonFooterLineAndSob":101,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":643,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":613,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":57,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":448,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":739,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":583,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":126,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":993,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":948,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":549,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule":117,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":601,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":528,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":867,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommit":98,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":151,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":540,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":573,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":407,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":682,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":472,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":621,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":18,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":16,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":185,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":410,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":61,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":625,"org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode":546,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":743,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":741,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":255,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":254,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":257,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":974,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":256,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":582,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":258,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":471,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":405,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":899,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":77,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":860,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted":931,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix":784,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair":814,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":59,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":770,"org.eclipse.jgit.api.GitConstructionTest.testWrap":224,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":962,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit":201,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":843,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugEmptyLineAndSob":104,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":1010,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":671,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":823,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":696,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":149,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":982,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":58,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":245,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":244,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":704,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":795,"org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging":913,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":27,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":740,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile":195,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":897,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":965,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":633,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":735,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":647,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessages":97,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":978,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":495,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes":815,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":43,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":426,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":531,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":689,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF1":530,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":798,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":216,"org.eclipse.jgit.api.TagCommandTest.testDeleteBadName":912,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":389,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":797,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":638,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":46,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":981,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":164,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe":970,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward":997,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":225,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":226,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":227,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":131,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":228,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":229,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":324,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":247,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":246,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":248,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":660,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case":759,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":871,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject":988,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":555,"org.eclipse.jgit.api.AddCommandTest.testAddFolder":200,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":887,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":398,"org.eclipse.jgit.transport.PushProcessTest.testUpdateCreateRef":999,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":874,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":199,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":717,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":716,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":719,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":718,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_3":713,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":712,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":715,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":487,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":714,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":890,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":538,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NoBodySobAndBug":103,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":442,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":692,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":235,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a":234,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":237,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":529,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":236,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":598,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":675,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":585,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":681,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":630,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":810,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":884,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":731,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":703,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":593,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":812,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":929,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":139,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":677,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":615,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":747,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":966,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":406,"org.eclipse.jgit.api.CleanCommandTest.testClean":479,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":390,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":512,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":645,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":590,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":154,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":680,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":481,"org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule":112,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":476,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":396,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":607,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":186,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":444,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows":782,"org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail":923,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":526,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":865,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement":105,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":194,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk":746,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":335,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":758,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":447,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":492,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":238,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":679,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":687,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":372,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":484,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":618,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":620,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":954,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":664,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":919,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":422,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":701,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":711,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":753,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":670,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":400,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":427,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":184,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":646,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":932,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":539,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":172,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon":749,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":434,"org.eclipse.jgit.util.ChangeIdUtilTest.testFirstParentAltersId":87,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":789,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":431,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":432,"org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules":120,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":344,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":542,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":355,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit":945,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":6,"org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree":806,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":21,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":141,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":386,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":666,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":177,"org.eclipse.jgit.transport.PackParserTest.test1":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":392,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":592,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":37,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":933,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":594,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":736,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":732,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":53,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":569,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule":136,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":134,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":69,"org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags":903,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":341,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":477,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":849,"org.eclipse.jgit.util.ChangeIdUtilTest.testATwoLines":81,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":832,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit":828,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":854,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":673,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":499,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":159,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":381,"org.eclipse.jgit.lib.ReflogResolveTest.resolveDate":693,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":872,"org.eclipse.jgit.util.ChangeIdUtilTest.testOneliner":80,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":581,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":733,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4096":802,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":51,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit":809,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4095":801,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4094":800,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":41,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":751,"org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog":358,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch":541,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4090":799,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber":47,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":543,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":527,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":772,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":604,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":464,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":662,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef":924,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":437,"org.eclipse.jgit.api.BlameCommandTest.testRename":430,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":349,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":710,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles":817,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":24,"org.eclipse.jgit.util.ChangeIdUtilTest.testDirCacheAltersId":107,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":373,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":152,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":686,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":453,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":340,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":435,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":972,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugLineWithASpaceAndSob":90,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithBug_SubButNoBody":106,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":667,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix":757,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":32,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":429,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":559,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":421,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":576,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":331,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":655,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":833,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":863,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":847,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":498,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations":895,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk":826,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":548,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":452,"org.eclipse.jgit.api.PushCommandTest.testPush":915,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":4,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":457,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":979,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":113,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":640,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine":49,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":312,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":698,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":313,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":734,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":415,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":309,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":310,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":311,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":343,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":170,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":836,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":536,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":393,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":330,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":368,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":773,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":140,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":1005,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":325,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir":193,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":433,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix":750,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":661,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":3,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":873,"org.eclipse.jgit.api.GitConstructionTest.testOpen":223,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":730,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":175,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":411,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":726,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":727,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule":133,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":728,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":454,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":729,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":160,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_10":723,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":353,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":724,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":725,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":983,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":419,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":420,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom":861,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":918,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":416,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":417,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":166,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":418,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":482,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":503,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":121,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked":830,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon":774,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":570,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":178,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":663,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId":93,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":458,"org.eclipse.jgit.lib.RefTest.testReadLooseRef":957,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":489,"org.eclipse.jgit.lib.T0001_PersonIdentTest.test002_NewIdent":108,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":658,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":824,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":363,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":148,"org.eclipse.jgit.util.ChangeIdUtilTest.testNoteInMiddle":100,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":624,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":788,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":916,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":144,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1":767,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":371,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":525,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":490,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":947,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":207,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":553,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":209,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":210,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":877,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit":786,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":744,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":858,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":483,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":558,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":191,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":167,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits":827,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":208,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":52,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":183,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":831,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":142,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":515,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":323,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":60,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":502,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":579,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":19,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":130,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":588,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":785,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":547,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_FinishWriteCommit":807,"org.eclipse.jgit.lib.T0001_PersonIdentTest.test001_NewIdent":110,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":927,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":577,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":385,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":859,"org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting":904,"org.eclipse.jgit.api.TagCommandTest.testInvalidTagName":910,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster":940,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":623,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":968,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":606,"org.eclipse.jgit.lib.IndexDiffTest.testStageState":684,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr":748,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly":813,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":855,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":496,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":346,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":928,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine":48,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":214,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":524,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":825,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":376,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":375,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":336,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":26,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":85,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":511,"org.eclipse.jgit.api.BranchCommandTest.testDelete":565,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":23,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NonFooterAndBugAndSob":99,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":466,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":357,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":796,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":292,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":293,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":42,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":764,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":289,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":290,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":291,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":610,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":350,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1":775,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":776,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":62,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields":35,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":1007,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":591,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":138,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":951,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":402,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":1006,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":345,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":578,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":460,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":793,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":507,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit_IndexChangedEvent":808,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":506,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":571,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues":438,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":360,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":269,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":271,"org.eclipse.jgit.ignore.IgnoreNodeTest.testToString":811,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":270,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":273,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":964,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":272,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":589,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":161,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch":946,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":441,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":165,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":1008,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":179,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":864,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":685,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":1004,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":561,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":129,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":401,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":819,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":55,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":563,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":898,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":300,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":301,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":486,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":302,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":303,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":70,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":299,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":627,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":631,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":866,"org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch":691,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels":959,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":135,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":653,"org.eclipse.jgit.api.StashDropCommandTest.dropNegativeRef":517,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":211,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":707,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":391,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":688,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":844,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":672,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":761,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":377,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom":848,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches":942,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage":79,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":494,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":901,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":119,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":33,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":145,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":522,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":428,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag":934,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":1009,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":218,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":259,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":556,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":261,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":260,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":984,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":263,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":557,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":262,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":480,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":564,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":842,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":520,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":584,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":648,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":551,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAfterBugOrIssue":88,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":394,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":380,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":158,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":351,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":909,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":147,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":949,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_16384":803,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":17,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":249,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":595,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":374,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":505,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":15,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":818,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":7,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":475,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":1003,"org.eclipse.jgit.api.ResetCommandTest.testResetToNonexistingHEAD":925,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":367,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":485,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":632,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":366,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":321,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":975,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":54,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches":939,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":791,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":886,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLineNoLineBreak":95,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":523,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":132,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD":862,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":510,"org.eclipse.jgit.api.TagCommandTest.testTagging":902,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":150,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":1013,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":424,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead":450,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":694,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":187,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":760,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":921,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile":204,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":705,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":320,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":22,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":639,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":384,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":251,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory":650,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":153,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":250,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":835,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":253,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress":45,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":252,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement":89,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":388,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":609,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":274,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":333,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":276,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":275,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":278,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":277,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":332,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":980,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":468,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackRepoWithNoRefs":876,"org.eclipse.jgit.transport.PushProcessTest.testPushResult":995,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":985,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":213,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":702,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":787,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateLooseBlob":850,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":2,"org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream":404,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom":857,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":174,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":697,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommitWithSob_ButNoBody":83,"org.eclipse.jgit.lib.T0001_PersonIdentTest.testToExternalStringTrimsNameAndEmail":109,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":239,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":998,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":241,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":365,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned":840,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":240,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":387,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":516,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":580,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":20,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":956,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":364,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri":935,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":562,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_existing":973,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":219,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":30,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":369,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":622,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":641,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":709,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":75,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":478,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":754,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2":755,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":74,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3":756,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":586,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":656,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":128,"org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned":881,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":619,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":243,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":242,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":73,"org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository":908,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":493,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":892,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":976,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues":436,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":455,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout":960,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":155,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":597,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":891,"org.eclipse.jgit.util.ChangeIdUtilTest.testTimeAltersId":84,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":337,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_a":894,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":231,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b":230,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithInitializedSubmodule":137,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":233,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":232,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":745,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":10,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":600,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":616,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":678,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":203,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":508,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":994,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":125,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":198,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testDirCacheMatchingId":654,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":473,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2":778,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugBrackersAndSob":78,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1":777,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":162,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":68,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":334,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":568,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":805,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":467,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":399,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":851,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":513,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":173,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":347,"org.eclipse.jgit.api.StashDropCommandTest.dropWithNoStashedCommits":518,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":587,"org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths":804,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":963,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":676,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":157,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":870,"org.eclipse.jgit.util.ChangeIdUtilTest.testWithEndingURL":96,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":180,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":64,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":118,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":521,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":284,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":1012,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":288,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":500,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":114,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":287,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":674,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":286,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":285,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":936,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":665,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":127,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":893,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":408,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":514,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue":439,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderUntracked":930,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":461,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":879,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":39,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":533,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":534,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":535,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":572,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":532,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed":937,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":181,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":56,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":896,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":856,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":491,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":327,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":66,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessagesWithSignedOffBy":91,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":425,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":636,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified":599,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":869,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":8,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommitted":926,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":397,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":659,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":339,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled":1000,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_nonexisting":961,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":792,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":637,"org.eclipse.jgit.lib.IndexDiffTest.testModified":683,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists":841,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":989,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":76,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":279,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":280,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":281,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":282,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":283,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":977,"org.eclipse.jgit.api.FetchCommandTest.testFetch":917,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":971,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":308,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":742,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":304,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemoteVsForce":990,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":305,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":306,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":794,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":0,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":307,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":768,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":669,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":370,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":413,"org.eclipse.jgit.internal.storage.file.ReflogWriterTest.shouldFilterLineFeedFromMessage":44,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit":820,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":382,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":67,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":205,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.repackEmptyRepo_noPackCreated":875,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":383,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":412,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":189,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":123,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":567,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":176,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":459,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix":781,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":9,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":221,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":220,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithoutFooter":102,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":545,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":920,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":465,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":171,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":575,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":143,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":544,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":352,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedFileSmudged":657,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":206,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":537,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit":470,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":403,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":156,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii":40,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":451,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":955,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":900,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":722,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":319,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":463,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":839,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":950,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":443,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":63,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned":837,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":1014,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":356,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":361,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":853,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":626,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster":944,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":1001,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":967,"org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile":202,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":449,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":36,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent":816,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":395,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":212,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemote":987,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":611,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":342,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":668,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":888,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":146,"org.eclipse.jgit.util.ChangeIdUtilTest.testOnelinerFollowedByBlank":82,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":907,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":14,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":991,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":13,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":12,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":462,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":11,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":25,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":845,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":922,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch":941,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":497,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":878,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":634,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":474,"org.eclipse.jgit.api.TagCommandTest.testDelete":911,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":617,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":488,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":501,"org.eclipse.jgit.api.RevertCommandTest.testRevert":326},"transformations":[{"failures":[],"tindex":"c41439d6-4c2c-11e5-a1f3-6762860f70b4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:436","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.setFilter(org.eclipse.jgit.treewalk.filter.PathFilter)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"c41460e7-4c2c-11e5-a1f3-436a0e521f2c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:280","type":"CtWhileImpl","sourcecode":"while ((int < int) && (int > 0))\n    int <<= 1;"},"variableMap":{"newCapacity":"deltaPtr","capacity":"resultPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:169","type":"CtWhileImpl","sourcecode":"while (int < (byte[].int)) {\n    final int int = (byte[][int++]) & 255;\n    if ((int & 128) != 0) {\n        int int = 0;\n        if ((int & 1) != 0)\n            int = (byte[][int++]) & 255;\n        \n        if ((int & 2) != 0)\n            int |= ((byte[][int++]) & 255) << 8;\n        \n        if ((int & 4) != 0)\n            int |= ((byte[][int++]) & 255) << 16;\n        \n        if ((int & 8) != 0)\n            int |= ((byte[][int++]) & 255) << 24;\n        \n        int int = 0;\n        if ((int & 16) != 0)\n            int = (byte[][int++]) & 255;\n        \n        if ((int & 32) != 0)\n            int |= ((byte[][int++]) & 255) << 8;\n        \n        if ((int & 64) != 0)\n            int |= ((byte[][int++]) & 255) << 16;\n        \n        if (int == 0)\n            int = 65536;\n        \n        java.lang.System.arraycopy(byte[], int, byte[], int, int);\n        int += int;\n    } else if (int != 0) {\n        java.lang.System.arraycopy(byte[], int, byte[], int, int);\n        int += int;\n        int += int;\n    } else {\n        throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n}"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"c41460e8-4c2c-11e5-a1f3-3defcd493306","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:215","type":"CtReturnImpl","sourcecode":"return \"JGit/\" + java.lang.String"},"variableMap":{"version":"emailAddress"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:205","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,60,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,61,160,161,62,162,163,63,164,165,166,64,167,168,169,170,171,172,173,174,175,176,177,178,58,59,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,222,223,223,224,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,65,321,322,323,324,325,326,66,327,328,329,330,331,67,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,71,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,73,405,406,407,408,409,410,411,412,413,414,74,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,68,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,69,525,526,527,528,70,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,75,76,576,577,578,77,579,580,581,582,583,28,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809],"tindex":"c41487f9-4c2c-11e5-a1f3-054c69790d54","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:855","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(',')"},"variableMap":{"out":"os"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:308","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(org.eclipse.jgit.dircache.DirCacheEntry.byte[], 0, (int - int))"},"status":-1},{"failures":[],"tindex":"c414af0a-4c2c-11e5-a1f3-37260997848d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:403","type":"CtOperatorAssignmentImpl","sourcecode":"int += 20"},"variableMap":{"headerCnt":"mask"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdSubclassMap:239","type":"CtAssignmentImpl","sourcecode":"int = int - 1"},"status":-2},{"failures":[],"tindex":"c414af0b-4c2c-11e5-a1f3-89a3ab14394d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:338","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevTag.getObject()"},"status":-2},{"failures":[],"tindex":"c414af0c-4c2c-11e5-a1f3-bb87f08d80a5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:130","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(int)"},"variableMap":{"x":"s","k":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.TrailingAsteriskMatcher:74","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.String.charAt(int)"},"status":0},{"failures":[810,660,661,664,669],"tindex":"c414af0d-4c2c-11e5-a1f3-e50eb0f318ae","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:476","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject = null"},"variableMap":{"rev":"rev"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:679","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)"},"status":-1},{"failures":[811],"tindex":"c414af0e-4c2c-11e5-a1f3-05a8592bb490","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeResult:201","type":"CtReturnImpl","sourcecode":"return \"Not-yet-supported\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreNode:196","type":"CtReturnImpl","sourcecode":"return java.util.List<org.eclipse.jgit.ignore.FastIgnoreRule>.toString()"},"status":-1},{"failures":[],"tindex":"c414af0f-4c2c-11e5-a1f3-17ddc59bc063","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.RefSpec:452","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"/\"))\n    return false;\n"},"variableMap":{"s":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:273","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.fnmatch.FileNameMatcher = new org.eclipse.jgit.fnmatch.FileNameMatcher(java.lang.String , null);\n} catch (org.eclipse.jgit.errors.InvalidPatternException e) {\n    return false;\n}"},"status":0},{"failures":[812,813,814,815,816,817],"tindex":"c414d620-4c2c-11e5-a1f3-a902e9b02665","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:126","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int)(long))"},"variableMap":{"nameLen":"ent"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:146","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.diff.SimilarityRenameDetector.org.eclipse.jgit.diff.SimilarityRenameDetector.srcFile(long)"},"status":-1},{"failures":[],"tindex":"c414d621-4c2c-11e5-a1f3-876970bec4c0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:131","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.dfs.DfsInserter.Reader()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase:148","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.dfs.DfsReader(this)"},"status":-2},{"failures":[818,819,820,821,822,823,824,115,116,825,826,827,828,829,111,113,114,135,118,121,122,130,132,134,830,831,832,833,138,834,835,836,837,838,839,840,841,842,843,844,50,845,846,847,848,849,850,21,851,852,853,854,855,856,22,23,857,858,859,860,861,862,51,863,864,865,866,867,24,868,25,26,869,870,871,52,872,873,874,875,876,877,878,139,879,140,880,881,882,883,884,171,172,173,174,175,176,177,178,58,59,179,180,8,181,182,183,184,185,186,187,53,54,55,885,56,57,191,194,195,196,198,201,141,886,142,143,887,60,144,888,145,146,889,147,148,149,150,151,890,152,153,891,154,155,156,157,158,159,61,160,161,62,162,163,63,164,165,166,892,64,893,167,168,169,170,222,222,223,223,224,224,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,320,65,321,322,323,324,325,326,66,327,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,225,226,227,228,229,894,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,328,329,895,330,331,67,896,897,898,899,900,357,358,359,901,902,903,904,905,906,907,908,909,910,911,912,913,360,361,362,363,364,365,366,367,71,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,73,405,406,407,408,409,410,411,412,413,414,74,415,434,914,435,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,472,473,474,475,476,477,478,440,441,442,443,444,436,437,438,439,624,625,915,626,627,916,486,487,488,489,490,491,492,493,494,495,496,497,498,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,499,500,501,502,503,504,505,506,507,68,508,509,510,511,512,513,514,515,516,517,518,519,520,521,479,480,481,482,483,484,485,917,918,919,920,921,922,529,530,531,532,533,534,535,536,537,538,522,523,524,69,525,526,527,528,923,70,568,569,539,540,541,542,543,544,545,546,924,547,548,549,925,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,570,571,572,573,574,575,75,76,576,577,578,77,579,580,581,582,583,28,584,585,586,587,588,589,590,591,592,593,926,594,595,596,597,598,599,600,601,602,603,604,605,606,927,607,608,609,610,611,612,928,613,614,615,616,617,618,929,619,930,620,621,622,931,623,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,643,644,645,646,647,648,649,948,949,950,27,951,952,953,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,650,652,653,655,656,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,674,677,678,679,680,681,682,684,685,686,687,688,689,690,691,692,693,954,955,956,957,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,958,764,765,766,767,768,959,769,770,771,772,773,774,775,776,777,778,960,779,780,781,782,783,784,961,962,963,964,965,966,694,810,695,967,968,969,970,971,972,973,974,975,976,977,978,979,737,738,29,739,740,741,742,743,744,745,696,697,699,980,706,707,709,733,734,981,30,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,785,786,787,788,789,790,791,792,793,794,795,796,797,798,1001,1002,1003,1004,1005,32,1006],"tindex":"c414d622-4c2c-11e5-a1f3-f350a762bacd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:686","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevTree.copy()"},"variableMap":{"tree":"rev"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:430","type":"CtSwitchImpl","sourcecode":"switch (char[][int]) {\n    case '^' :\n        if (org.eclipse.jgit.revwalk.RevObject == null) {\n            if (java.lang.String == null)\n                if (int == 0)\n                    java.lang.String = new java.lang.String(char[] , int , int);\n                else {\n                    int = int + 1;\n                    break;\n                }\n            \n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String);\n            java.lang.String = null;\n            if (org.eclipse.jgit.revwalk.RevObject == null)\n                return null;\n            \n        } \n        if ((int + 1) < (char[].int)) {\n            switch (char[][(int + 1)]) {\n                case '0' :\n                case '1' :\n                case '2' :\n                case '3' :\n                case '4' :\n                case '5' :\n                case '6' :\n                case '7' :\n                case '8' :\n                case '9' :\n                    int int;\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n                    for (int = int + 1 ; int < (char[].int) ; ++int) {\n                        if (!(java.lang.Character.isDigit(char[][int])))\n                            break;\n                        \n                    }\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + 1) , ((int - int) - 1));\n                    int int;\n                    try {\n                        int = java.lang.Integer.parseInt(java.lang.String);\n                    } catch (java.lang.NumberFormatException e) {\n                        throw new org.eclipse.jgit.errors.RevisionSyntaxException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.String);\n                    }\n                    if (int != 0) {\n                        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                        if (int > (org.eclipse.jgit.revwalk.RevCommit.getParentCount()))\n                            org.eclipse.jgit.revwalk.RevObject = null;\n                        else\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent((int - 1));\n                        \n                    } \n                    int = int - 1;\n                    int = int;\n                    break;\n                case '{' :\n                    int int;\n                    java.lang.String java.lang.String = null;\n                    for (int = int + 2 ; int < (char[].int) ; ++int) {\n                        if ((char[][int]) == '}') {\n                            java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n                            break;\n                        } \n                    }\n                    int = int;\n                    if (java.lang.String != null)\n                        if (java.lang.String.equals(\"tree\")) {\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject);\n                        } else if (java.lang.String.equals(\"commit\")) {\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n                        } else if (java.lang.String.equals(\"blob\")) {\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                            if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevBlob))\n                                throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n                            \n                        } else if (java.lang.String.equals(\"\")) {\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                        } else\n                            throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                        \n                    else\n                        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                    \n                    int = int;\n                    break;\n                default :\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                    if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n                        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                        if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n                            org.eclipse.jgit.revwalk.RevObject = null;\n                        else\n                            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n                        \n                    } else\n                        throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n                    \n            }\n        } else {\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n            if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n                org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n                    org.eclipse.jgit.revwalk.RevObject = null;\n                else\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n                \n            } else\n                throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n            \n        }\n        int = int + 1;\n        break;\n    case '~' :\n        if (org.eclipse.jgit.revwalk.RevObject == null) {\n            if (java.lang.String == null)\n                if (int == 0)\n                    java.lang.String = new java.lang.String(char[] , int , int);\n                else {\n                    int = int + 1;\n                    break;\n                }\n            \n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String);\n            java.lang.String = null;\n            if (org.eclipse.jgit.revwalk.RevObject == null)\n                return null;\n            \n        } \n        org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n        if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit))\n            throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n        \n        int int;\n        for (int = int + 1 ; int < (char[].int) ; ++int) {\n            if (!(java.lang.Character.isDigit(char[][int])))\n                break;\n            \n        }\n        int int;\n        if ((int - int) > 1) {\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + 1) , ((int - int) - 1));\n            try {\n                int = java.lang.Integer.parseInt(java.lang.String);\n            } catch (java.lang.NumberFormatException e) {\n                throw new org.eclipse.jgit.errors.RevisionSyntaxException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.String);\n            }\n        } else\n            int = 1;\n        \n        while (int > 0) {\n            org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n            if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0) {\n                org.eclipse.jgit.revwalk.RevObject = null;\n                break;\n            } \n            org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n            org.eclipse.jgit.revwalk.RevWalk.parseHeaders(org.eclipse.jgit.revwalk.RevCommit);\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit;\n            --int;\n        }\n        int = int - 1;\n        int = int;\n        break;\n    case '@' :\n        if (org.eclipse.jgit.revwalk.RevObject != null)\n            throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n        \n        if (((int + 1) < (char[].int)) && ((char[][(int + 1)]) != '{'))\n            continue;\n        \n        int int;\n        java.lang.String java.lang.String = null;\n        for (int = int + 2 ; int < (char[].int) ; ++int) {\n            if ((char[][int]) == '}') {\n                java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n                break;\n            } \n        }\n        if (java.lang.String != null) {\n            if (java.lang.String.equals(\"upstream\")) {\n                if (java.lang.String == null)\n                    java.lang.String = new java.lang.String(char[] , int , int);\n                \n                if (java.lang.String.equals(\"\"))\n                    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n                \n                if (!(org.eclipse.jgit.lib.Repository.isValidRefName((\"x/\" + java.lang.String))))\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                \n                org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n                java.lang.String = null;\n                if (org.eclipse.jgit.lib.Ref == null)\n                    return null;\n                \n                if (org.eclipse.jgit.lib.Ref.isSymbolic())\n                    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getLeaf();\n                \n                java.lang.String = org.eclipse.jgit.lib.Ref.getName();\n                org.eclipse.jgit.transport.RemoteConfig org.eclipse.jgit.transport.RemoteConfig;\n                try {\n                    org.eclipse.jgit.transport.RemoteConfig = new org.eclipse.jgit.transport.RemoteConfig(org.eclipse.jgit.lib.Repository.getConfig() , \"origin\");\n                } catch (java.net.URISyntaxException e) {\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                }\n                java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.getConfig().getString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()), org.eclipse.jgit.lib.ConfigConstants.java.lang.String);\n                java.util.List<org.eclipse.jgit.transport.RefSpec> java.util.List<org.eclipse.jgit.transport.RefSpec> = org.eclipse.jgit.transport.RemoteConfig.getFetchRefSpecs();\n                for (org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec : java.util.List<org.eclipse.jgit.transport.RefSpec>) {\n                    if (org.eclipse.jgit.transport.RefSpec.matchSource(java.lang.String)) {\n                        org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = org.eclipse.jgit.transport.RefSpec.expandFromSource(java.lang.String);\n                        java.lang.String = org.eclipse.jgit.transport.RefSpec.getDestination();\n                        break;\n                    } \n                }\n                if (java.lang.String == null)\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                \n            } else if (java.lang.String.matches(\"^-\\\\d+$\")) {\n                if (java.lang.String != null)\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                else {\n                    java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.resolveReflogCheckout(-(java.lang.Integer.parseInt(java.lang.String)));\n                    if (org.eclipse.jgit.lib.ObjectId.isId(java.lang.String))\n                        org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String);\n                    else\n                        java.lang.String = java.lang.String;\n                    \n                }\n            } else {\n                if (java.lang.String == null)\n                    java.lang.String = new java.lang.String(char[] , int , int);\n                \n                if (java.lang.String.equals(\"\"))\n                    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n                \n                if (!(org.eclipse.jgit.lib.Repository.isValidRefName((\"x/\" + java.lang.String))))\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                \n                org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n                java.lang.String = null;\n                if (org.eclipse.jgit.lib.Ref == null)\n                    return null;\n                \n                if (org.eclipse.jgit.lib.Ref.isSymbolic())\n                    org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getLeaf();\n                \n                org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.resolveReflog(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.Ref, java.lang.String);\n            }\n            int = int;\n        } else\n            throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n        \n        break;\n    case ':' :\n        {\n            org.eclipse.jgit.revwalk.RevTree org.eclipse.jgit.revwalk.RevTree;\n            if (org.eclipse.jgit.revwalk.RevObject == null) {\n                if (java.lang.String == null)\n                    java.lang.String = new java.lang.String(char[] , int , int);\n                \n                if (java.lang.String.equals(\"\"))\n                    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n                \n                org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String);\n                java.lang.String = null;\n            } \n            if (org.eclipse.jgit.revwalk.RevObject == null)\n                return null;\n            \n            org.eclipse.jgit.revwalk.RevTree = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject);\n            if (int == ((char[].int) - 1))\n                return org.eclipse.jgit.revwalk.RevTree.copy();\n            \n            org.eclipse.jgit.treewalk.TreeWalk org.eclipse.jgit.treewalk.TreeWalk = org.eclipse.jgit.treewalk.TreeWalk.forPath(org.eclipse.jgit.revwalk.RevWalk.getObjectReader(), new java.lang.String(char[] , (int + 1) , (((char[].int) - int) - 1)), org.eclipse.jgit.revwalk.RevTree);\n            return org.eclipse.jgit.treewalk.TreeWalk != null ? org.eclipse.jgit.treewalk.TreeWalk.getObjectId(0) : null;\n        }\n    default :\n        if (org.eclipse.jgit.revwalk.RevObject != null)\n            throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n        \n}"},"status":-1},{"failures":[818,819,820,821,822,823,824,140,844,845,854,855,22,23,859,860,51,25,26,52,171,172,173,174,175,176,177,181,182,183,184,185,186,187,53,54,55,56,57,141,886,143,887,60,144,888,145,146,889,147,148,149,150,151,890,152,153,154,155,156,157,158,159,61,160,161,62,162,163,63,164,165,166,892,64,893,167,168,169,170,178,58,59,179,180,222,222,223,223,224,224,198,320,65,321,322,323,324,325,326,66,327,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,330,331,67,896,897,898,899,900,901,902,907,909,911,913,357,360,361,362,363,364,365,366,367,71,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,73,405,406,407,409,410,411,412,413,414,74,421,422,423,425,426,427,428,429,430,431,432,433,434,442,443,206,207,208,209,210,211,212,213,215,216,217,218,219,220,221,472,473,474,475,476,477,446,447,448,449,451,452,454,455,457,459,461,462,463,464,465,466,469,471,225,226,227,228,229,231,232,233,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,499,500,502,506,507,68,508,509,510,486,487,488,489,490,491,492,493,494,495,496,497,498,624,625,915,916,917,918,919,920,921,922,522,524,69,525,526,527,528,70,568,569,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,540,542,543,544,545,547,548,549,550,551,552,579,580,581,582,583,28,584,585,586,587,588,589,590,591,538,570,571,572,573,574,575,75,76,576,577,578,77,948,950,952,947,597,598,601,605,606,927,607,609,610,928,614,615,953,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,659,660,661,662,663,664,665,666,667,668,669,670,671,672,677,678,679,680,685,687,688,689,690,692,955,956,696,697,699,706,707,709,733,734,29,737,738,962,963,964,966,694,695,967,968,969,972,974,975,976,977,978,979,785,787,788,789,790,792,793,797,743],"tindex":"c4154b53-4c2c-11e5-a1f3-c5c1e861db07","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:357","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.format(\"%08x\", ++(int))"},"variableMap":{"requestCount":"done","nc":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:435","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.lang.String(char[] , int , int)"},"status":-1},{"failures":[111,113,114,135,115,116,1007,1008,1009,1010,832,833,1011,1012,138,835,836,853,839,872,873,874,877,878,7,8,1013,9,10,11,12,13,14,15,16,17,18,19,20,879,178,58,59,179,180,181,182,184,222,222,223,223,224,224,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,347,353,624,625,915,626,627,916,917,918,919,920,921,922,524,528,537,538,558,562,563,564,566,579,580,581,582,583,28,584,585,586,587,588,589,590,591,653,655,656,659,660,661,662,663,664,665,666,667,668,669,670,671,672,739,740,741,742,743,744,745,1014,981,30,1001,1002,1003,1004,1005,32,1006],"tindex":"c4157264-4c2c-11e5-a1f3-b35cd3bc6e15","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Constants:487","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Constants.int"},"variableMap":{"org.eclipse.jgit.lib.Constants.OBJ_BLOB":"flags"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:186","type":"CtReturnImpl","sourcecode":"return ((int) >> (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) & 7"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}