{"failureDictionary":{"org.eclipse.jgit.util.RefMapTest.testMerge_WithPrefix":15,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":76,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":31,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":92,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":118,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":82,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":71,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":126,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":70,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":112,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":63,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":80,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":93,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":9,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":68,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":41,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":89,"org.eclipse.jgit.util.RefMapTest.testMerge_HeadMaster":14,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode":78,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":94,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":21,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":73,"org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange":77,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":95,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":28,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":59,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":27,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":26,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":25,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":91,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":129,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":58,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":60,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":61,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":84,"org.eclipse.jgit.util.RefMapTest.testMerge_PackedLooseLoose":12,"org.eclipse.jgit.util.RefMapTest.testPut_CollapseResolved":16,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":75,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":36,"org.eclipse.jgit.util.RefMapTest.testRemove":19,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":98,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":110,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":133,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":111,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":0,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":103,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":109,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":3,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":81,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":132,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":108,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":102,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":100,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":22,"org.eclipse.jgit.util.RefMapTest.testEntryTypeSet":18,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":88,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":65,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":69,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":42,"org.eclipse.jgit.util.RefMapTest.testPut_WithPrefix":17,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":44,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":35,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":10,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":57,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":5,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":79,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":54,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":7,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":97,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":46,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode":74,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":117,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":29,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":45,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":30,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":67,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":2,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":119,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":40,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":131,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":52,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":114,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":33,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":51,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":125,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":37,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":50,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":49,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":66,"org.eclipse.jgit.util.RefMapTest.testClear":13,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":121,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":23,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":4,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":130,"org.eclipse.jgit.transport.PackParserTest.test1":122,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":43,"org.eclipse.jgit.transport.PackParserTest.test2":123,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":116,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":72,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12":99,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":128,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":38,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":6,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":96,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":20,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":39,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":115,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":24,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":127,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":56,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":48,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":53,"org.eclipse.jgit.util.RefMapTest.testPut_NoPrefix":11,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":107,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":106,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":8,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":55,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":105,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":104,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":34,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":113,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":32,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":64,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":86,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":62,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":87,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":83,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":47,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":90,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":124,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":120,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":101,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":85},"transformations":[{"failures":[],"tindex":"20db6dfd-4c3f-11e5-bef2-2fa0ab573e6d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:194","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile.close()"},"status":-2},{"failures":[0],"tindex":"20db950e-4c3f-11e5-bef2-2364d1ee6b65","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:330","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) > 0) && (!(java.lang.String.endsWith(\"/\"))))\n    java.lang.String += \"/\";\n"},"variableMap":{"prefix":"sourcePrefix"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DiffCommand:154","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.diff.DiffFormatter.setOldPrefix(java.lang.String)"},"status":-1},{"failures":[],"tindex":"20db950f-4c3f-11e5-bef2-cf3c2a7bc552","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:326","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.blame.Candidate.BlobCandidate.org.eclipse.jgit.diff.RawText.size()"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"20db9510-4c3f-11e5-bef2-e929f5832e82","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeResult:72","type":"CtReturnImpl","sourcecode":"return \"Fast-forward\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:280","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"20db9511-4c3f-11e5-bef2-61e3171ef6b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:413","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-1},{"failures":[83,84,85,86,87,88],"tindex":"20dbbc22-4c3f-11e5-bef2-e96c102683aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:255","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    if ((java.lang.String.length()) != 2)\n        continue;\n    \n    java.lang.String[] java.lang.String[] = new java.io.File(java.io.File , java.lang.String).list();\n    if (java.lang.String[] == null)\n        continue;\n    \n    for (java.lang.String java.lang.String : java.lang.String[]) {\n        if ((java.lang.String.length()) != ((org.eclipse.jgit.lib.Constants.int) - 2))\n            continue;\n        \n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId;\n        try {\n            org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString((java.lang.String + java.lang.String));\n        } catch (java.lang.IllegalArgumentException notAnObject) {\n            continue;\n        }\n        boolean boolean = false;\n        for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)\n            if (org.eclipse.jgit.internal.storage.file.PackFile.hasObject(org.eclipse.jgit.lib.ObjectId)) {\n                boolean = true;\n                break;\n            } \n        if (boolean)\n            org.eclipse.jgit.util.FileUtils.delete(org.eclipse.jgit.internal.storage.file.ObjectDirectory.fileFor(org.eclipse.jgit.lib.ObjectId), (((org.eclipse.jgit.util.FileUtils.int) | (org.eclipse.jgit.util.FileUtils.int)) | (org.eclipse.jgit.util.FileUtils.int)));\n        \n    }\n}"},"status":-1},{"failures":[],"tindex":"20dbbc23-4c3f-11e5-bef2-7df02de3bb73","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.UserConfig:204","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.lib.UserConfig.org.eclipse.jgit.lib.UserConfig.system().getenv(java.lang.String)"},"variableMap":{"this":"this","envKey":"committerEmail","email":"committerEmail"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.UserConfig:95","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.lib.UserConfig.org.eclipse.jgit.lib.UserConfig.getDefaultEmail()"},"status":0},{"failures":[],"tindex":"20dbbc24-4c3f-11e5-bef2-b1912e40274b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.MergeResult:175","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"containsConflicts":"implicitDirCache"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:281","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"20dbe335-4c3f-11e5-bef2-237fac05dd3f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:469","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:278","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\"\\\\.| \")"},"status":-2},{"failures":[],"tindex":"20dbe336-4c3f-11e5-bef2-f760cf5284ca","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:257","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    return \"\\\"\\\"\";\n"},"variableMap":{"instr":"org.eclipse.jgit.lib.Constants.R_REMOTES"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1271","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    return java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n"},"status":-2},{"failures":[],"tindex":"20dbe337-4c3f-11e5-bef2-87161300438e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.WalkPushConnection:371","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"[core]\\n\" + \"\\trepositoryformatversion = 0\\n\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:314","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.eclipse.jgit.transport.BasePackPushConnection.readStringLongTimeout()"},"status":-2},{"failures":[89],"tindex":"20dbe338-4c3f-11e5-bef2-933851b942eb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:201","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.transport.RefSpec>.add(org.eclipse.jgit.transport.RefSpec.expandFromSource(java.lang.String))"},"status":-1},{"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,63,64,133],"tindex":"20dbe339-4c3f-11e5-bef2-0fd58f713458","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.AuthorRevFilter:84","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.util.RawParseUtils.author(byte[], 0)"},"variableMap":{"raw":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:170","type":"CtLocalVariableImpl","sourcecode":"final int int = (byte[][int++]) & 255"},"status":-1},{"failures":[],"tindex":"20dbe33a-4c3f-11e5-bef2-b93989221e61","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:196","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.internal.storage.dfs.DfsInserter.PackStream) == null)\n    throw new java.io.IOException();\n"},"variableMap":{"packOut":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackConnection:290","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.close()"},"status":0},{"failures":[],"tindex":"20dc0a4b-4c3f-11e5-bef2-1ff52a4a1243","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.URIish:205","type":"CtThrowImpl","sourcecode":"throw new java.net.URISyntaxException(\"The uri was empty or null\" , org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"variableMap":{"cannotParseGitURIish":"uriNotConfigured"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:144","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}