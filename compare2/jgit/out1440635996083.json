{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":393,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":561,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":269,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":13,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":201,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":61,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":272,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":410,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":27,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":529,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":420,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":45,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":424,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":176,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":384,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":531,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":222,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":94,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":323,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":115,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":147,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":415,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":551,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":530,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":88,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":131,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":540,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":349,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":373,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":87,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":321,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":11,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":534,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":198,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":406,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":250,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":85,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":84,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":312,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":67,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":359,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":140,"org.eclipse.jgit.api.BranchCommandTest.testDelete":364,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":42,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":196,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":495,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":375,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":496,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":392,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":492,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":493,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":494,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":533,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":325,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":170,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":327,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":138,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":541,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":552,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":293,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":337,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":423,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":303,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":109,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":181,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":295,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":223,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":320,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":38,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":135,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":257,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":430,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":519,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":428,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":518,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":499,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":500,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":65,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":501,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":387,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":214,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":314,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":497,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":35,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":498,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":542,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":70,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":472,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":15,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":474,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":184,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":473,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":523,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":476,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":421,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":475,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":524,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":548,"org.eclipse.jgit.api.GitConstructionTest.testClose":210,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":292,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":9,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":63,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":298,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":307,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":167,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":200,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":277,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":72,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":178,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":544,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":360,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":108,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":521,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":304,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":244,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":362,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":239,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":389,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":339,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":502,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":503,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":189,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":504,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":77,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":395,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":470,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":469,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":471,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":353,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":332,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":217,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":365,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":549,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":99,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":399,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":536,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":444,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":86,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":8,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":538,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":120,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":516,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":515,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":517,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":347,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":335,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":183,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":139,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":275,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":249,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":261,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":246,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":29,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":150,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":338,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":414,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":355,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":466,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":356,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":468,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":467,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":19,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":363,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":16,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":386,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":528,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":416,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":188,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":388,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":254,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":371,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":89,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":126,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":289,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":282,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":278,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":216,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":380,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":165,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":372,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":225,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":145,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":566,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":458,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":130,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":207,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":116,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":83,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":290,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":408,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":64,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":154,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":152,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":520,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":228,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":177,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":464,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":463,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":413,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":46,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":465,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":24,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":112,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":396,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":75,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":199,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":240,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":224,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":243,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":268,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":48,"org.eclipse.jgit.api.GitConstructionTest.testWrap":212,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":66,"org.eclipse.jgit.api.TagCommandTest.testTagging":390,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":281,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":443,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":525,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":546,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":280,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":47,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":560,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":543,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":124,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":209,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":234,"org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging":391,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":151,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":197,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":403,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":93,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":460,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":238,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":284,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":459,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":562,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":462,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":461,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":397,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":187,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":97,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":136,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":309,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":477,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":479,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":478,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":481,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":308,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":480,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":44,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":348,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":334,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":425,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":259,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":537,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":123,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":336,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":547,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":122,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":370,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":402,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":450,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":74,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":452,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":451,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":297,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":96,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":14,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":445,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":411,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":446,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":447,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":448,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":368,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":449,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":202,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":361,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":456,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":455,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":457,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":432,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":354,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":271,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":56,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":105,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":369,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":146,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":405,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":171,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":340,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":283,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":219,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":247,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":195,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":539,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":121,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":158,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":527,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":418,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":164,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":417,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":394,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":553,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":143,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":454,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":453,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":111,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":346,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":299,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":567,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":565,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":34,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":160,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":535,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":113,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":132,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":286,"org.eclipse.jgit.api.CleanCommandTest.testClean":18,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":98,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":68,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":185,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":422,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":313,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":285,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":163,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":20,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":229,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":103,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":532,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":156,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":10,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":208,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":134,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":141,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":161,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":252,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":311,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":28,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":345,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":162,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":169,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":248,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":81,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":23,"org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.testBoundary":173,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":379,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":226,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":144,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":294,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":232,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":436,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":310,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":193,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":256,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":43,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":442,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":107,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":260,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":106,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":69,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":192,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":322,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":419,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":186,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":159,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":288,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":191,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":25,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":49,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":300,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":427,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":264,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":265,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":378,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":17,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":319,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":381,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":328,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":487,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":59,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":491,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":149,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":490,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":489,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":488,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":437,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":95,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":267,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":438,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":7,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":100,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":301,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":128,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":114,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":12,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":129,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":39,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":242,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":194,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":215,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":125,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":230,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":245,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":554,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":157,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":367,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":51,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":90,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":344,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":556,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":206,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":205,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":412,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":550,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":258,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":400,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified":133,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":382,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":253,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":40,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":434,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":104,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":431,"org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.test":174,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":315,"org.eclipse.jgit.api.BlameCommandTest.testRename":263,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":324,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":429,"org.eclipse.jgit.lib.IndexDiffTest.testModified":166,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":401,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":220,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":482,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":483,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":484,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":485,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":486,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":82,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":50,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":509,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":153,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":505,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":506,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":168,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":507,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":508,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":441,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":79,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":26,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":316,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":119,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":439,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":180,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":262,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":358,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit":522,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":255,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":91,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":221,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":236,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":237,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":555,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":351,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":385,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":32,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":92,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":118,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":36,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":148,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":404,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":366,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":513,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":172,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":514,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":510,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":58,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":511,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":57,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":318,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":512,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":305,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":563,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":383,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":101,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":233,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":41,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":190,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":218,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":235,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":78,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":270,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":545,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":179,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":127,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":203,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":266,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":433,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":330,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":557,"org.eclipse.jgit.api.GitConstructionTest.testOpen":211,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":5,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":117,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":110,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":33,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":287,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":291,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":31,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":326,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":241,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase3":3,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":564,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase2":2,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase1":1,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase0":0,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":231,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":52,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":21,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":62,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":296,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":213,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":306,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":435,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":71,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":329,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":37,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":175,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":342,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":377,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":30,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":526,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":73,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":102,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":279,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":333,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":137,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":407,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":317,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":376,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":426,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":274,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":409,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":440,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":273,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":80,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":276,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":251,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":343,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":182,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":331,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":352,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":54,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":55,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":558,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":350,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":559,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":398,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":155,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":227,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":374,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":22,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":357,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":142,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":341,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":60,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":302,"org.eclipse.jgit.api.RevertCommandTest.testRevert":204,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":53},"transformations":[{"failures":[],"tindex":"237c9900-4c54-11e5-8442-3d70fa82e17a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefUpdate:583","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.setOldObjectId(org.eclipse.jgit.lib.Ref.getObjectId())"},"status":-2},{"failures":[0,1,2,3],"tindex":"237cc011-4c54-11e5-8442-a51662372b24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:91","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern)"},"status":-1},{"failures":[4,5,6,7],"tindex":"237cc012-4c54-11e5-8442-ad22e115ce46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:349","type":"CtTryImpl","sourcecode":"try {\n    final org.eclipse.jgit.lib.MutableObjectId org.eclipse.jgit.lib.MutableObjectId = new org.eclipse.jgit.lib.MutableObjectId();\n    final org.eclipse.jgit.lib.ObjectReader org.eclipse.jgit.lib.ObjectReader = org.eclipse.jgit.treewalk.TreeWalk.getObjectReader();\n    final org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.treewalk.TreeWalk.getObjectReader());\n    org.eclipse.jgit.treewalk.TreeWalk.reset(org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.lib.ObjectId));\n    if (!(java.util.List<java.lang.String>.isEmpty()))\n        org.eclipse.jgit.treewalk.TreeWalk.setFilter(org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.util.List<java.lang.String>));\n    \n    while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n        final java.lang.String java.lang.String = java.lang.String + (org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n        org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.TreeWalk.getFileMode(0);\n        if (org.eclipse.jgit.treewalk.TreeWalk.isSubtree())\n            org.eclipse.jgit.treewalk.TreeWalk.enterSubtree();\n        \n        if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode))\n            org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n        \n        if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n            org.eclipse.jgit.api.ArchiveCommand.Format<T>.putEntry(T, (java.lang.String + \"/\"), org.eclipse.jgit.lib.FileMode, null);\n            continue;\n        } \n        org.eclipse.jgit.treewalk.TreeWalk.getObjectId(org.eclipse.jgit.lib.MutableObjectId, 0);\n        org.eclipse.jgit.api.ArchiveCommand.Format<T>.putEntry(T, java.lang.String, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectReader.open(org.eclipse.jgit.lib.MutableObjectId));\n    }\n    T.close();\n} finally {\n    java.io.OutputStream.close();\n}"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"tindex":"237cc013-4c54-11e5-8442-cdc4ed99f10b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:183","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.TreeWalk.next())\n    return true;\n"},"variableMap":{"tw":"tw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:189","type":"CtIfImpl","sourcecode":"if (int == (org.eclipse.jgit.lib.FileMode.int)) {\n    if ((boolean) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored())) {\n        java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryPathString());\n        int int = 0;\n        for ( ; int < int ; int++) {\n            if ((int == (int)) || (int == (int)))\n                continue;\n            \n            if ((org.eclipse.jgit.treewalk.TreeWalk.getRawMode(int)) != (org.eclipse.jgit.lib.FileMode.int))\n                break;\n            \n        }\n        return int == int ? false : true;\n    } else {\n        return true;\n    }\n} "},"status":-1},{"failures":[173,174],"tindex":"237e46b4-4c54-11e5-8442-1fa67b342b98","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:324","type":"CtIfImpl","sourcecode":"if (int == int)\n    return false;\n"},"variableMap":{"sz":"cnt","nextPtr":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFInputStream:145","type":"CtIfImpl","sourcecode":"if ((int) < 1)\n    return false;\n"},"status":-1},{"failures":[175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,4,5,6,7,210,210,211,211,212,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,25,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,50,284,285,286,287,288,289,51,290,291,292,293,294,295,296,297,298,52,299,300,301,302,303,304,305,306,47,48,307,49,308,309,310,311,312,313,314,315,316,125,317,318,319,320,321,322,323,324,325,126,127,326,327,328,329,330,331,53,54,55,332,333,334,335,336,337,338,56,57,58,28,29,32,36,41,42,45,46,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,61,70,71,72,73,368,74,75,76,77,78,369,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,370,98,99,100,101,371,102,103,104,105,106,107,108,109,110,111,112,113,372,115,116,117,118,119,120,121,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,122,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,132,527,528,529,530,531,532,136,533,534,140,535,536,537,538,539,540,541,542,160,161,162,163,167,169,543,544,545,546,547,548,170,549,171,550,172,551,552,553,154,554,555,556,557,558,559,560,561,562,563,564,565,566],"tindex":"237e6dc5-4c54-11e5-8442-214e80852743","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.CommitBuilder:209","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId[] = org.eclipse.jgit.lib.ObjectId[]"},"variableMap":{"newParents":"parentIds","parentIds":"parentIds"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:191","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId[] = new org.eclipse.jgit.lib.ObjectId[java.util.List<? extends org.eclipse.jgit.lib.AnyObjectId>.size()]"},"status":-1},{"failures":[],"tindex":"237f0a06-4c54-11e5-8442-35702bc3da5e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdSubclassMap:238","type":"CtAssignmentImpl","sourcecode":"int = int >> 1"},"variableMap":{"grow":"lengthOfReservedLane","sz":"lengthOfReservedLane"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:172","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.intValue()"},"status":0},{"failures":[],"tindex":"237f0a07-4c54-11e5-8442-e19824965ca9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.AddCommand:135","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache org.eclipse.jgit.dircache.DirCache = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:222","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.dircache.DirCache org.eclipse.jgit.dircache.DirCache = new org.eclipse.jgit.dircache.DirCache(java.io.File , org.eclipse.jgit.util.FS)"},"status":-2},{"failures":[],"tindex":"237fa648-4c54-11e5-8442-91606e001dfd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:229","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge()) {\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.internal.storage.pack.ObjectToPack.copy());\n} else {\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDeltaBase(org.eclipse.jgit.internal.storage.pack.ObjectToPack);\n}"},"variableMap":{"srcObj":"otp","resObj":"otp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:196","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackOutputStream.writeObject(org.eclipse.jgit.internal.storage.pack.ObjectToPack)"},"status":-2},{"failures":[],"tindex":"237fa649-4c54-11e5-8442-83492f23bc0b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:166","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    continue;\n"},"variableMap":{"available":"slot"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:460","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry = new org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.clean(org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry) , org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.Ref<T>);\n    if (java.util.concurrent.atomic.AtomicReferenceArray<org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry>.compareAndSet(int, org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry, org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry))\n        break;\n    \n    org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry = java.util.concurrent.atomic.AtomicReferenceArray<org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.HashEntry>.get(int);\n}"},"status":-2},{"failures":[],"tindex":"237fa64a-4c54-11e5-8442-1dbff4d824ae","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker:94","type":"CtTryImpl","sourcecode":"try {\n    if (!(org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.contains(org.eclipse.jgit.lib.ObjectId))) {\n        org.eclipse.jgit.revwalk.ObjectWalk.markStart(org.eclipse.jgit.revwalk.ObjectWalk.parseAny(org.eclipse.jgit.lib.ObjectId));\n        boolean = true;\n    } \n} catch (org.eclipse.jgit.errors.MissingObjectException e) {\n    if (boolean)\n        continue;\n    \n    throw org.eclipse.jgit.errors.MissingObjectException;\n}"},"status":-2},{"failures":[],"tindex":"237fcd5b-4c54-11e5-8442-0fdfecd3247b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:275","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.diff.Edit.getLengthA()) < (int - int)) || (int < (int))) {\n    org.eclipse.jgit.diff.Edit.int = int;\n    org.eclipse.jgit.diff.Edit.int = int;\n    org.eclipse.jgit.diff.Edit.int = int;\n    org.eclipse.jgit.diff.Edit.int = int;\n    int = int;\n} "},"variableMap":{"rc":"eIdx","bs":"eIdx","as":"eIdx","beginA":"sourceStart","beginB":"eIdx","be":"sourceStart","ae":"sourceStart","cnt":"eIdx","endB":"eIdx","endA":"eIdx","lcs":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:190","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.Edit.getEndB()) <= (org.eclipse.jgit.blame.Region.int)) {\n    int++;\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"237fcd5c-4c54-11e5-8442-33df8c1ba100","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:779","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    while ((int > 0) && (org.eclipse.jgit.dircache.DirCache.(org.eclipse.jgit.dircache.DirCache.cmp(byte[], int, org.eclipse.jgit.dircache.DirCacheEntry[][(int - 1)])) == 0))\n        int--;\n    return int;\n} else\n    int = int + 1;\n"},"status":-2},{"failures":[],"tindex":"237fcd5d-4c54-11e5-8442-bfb4683bd268","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:509","type":"CtAssignmentImpl","sourcecode":"int = (int) + int"},"variableMap":{"pathLen":"lastSeparator","pathOffset":"lastSeparator","nameLen":"lastSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:305","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.lastIndexOf(':')"},"status":0},{"failures":[18,19,20,21,22,23,24,130,527,134,528,532,137,534,139,141,567,145,168],"tindex":"237fcd5e-4c54-11e5-8442-f9a58c7b633b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.ContentSource:203","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.reset()"},"variableMap":{"tw":"tw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:196","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.TreeWalk.getRawMode(int)) != (org.eclipse.jgit.lib.FileMode.int))\n    break;\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}