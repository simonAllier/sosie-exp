{"failureDictionary":{"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":72,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugEmptyLineAndSob":67,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":10,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":11,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine":57,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase5":0,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage":42,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NoBodySobAndBug":66,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase6":1,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":26,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":9,"org.eclipse.jgit.util.ChangeIdUtilTest.testWithEndingURL":59,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyFails":73,"org.eclipse.jgit.util.ChangeIdUtilTest.testFirstParentAltersId":50,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":31,"org.eclipse.jgit.util.ChangeIdUtilTest.testDirCacheAltersId":70,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBug_NonFooterLineAndSob":64,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":34,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":5,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":29,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":13,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":6,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":37,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":28,"org.eclipse.jgit.util.ChangeIdUtilTest.testKernelStyleFooter":49,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugLineWithASpaceAndSob":53,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":2,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement":52,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithBug_SubButNoBody":69,"org.eclipse.jgit.transport.PackParserTest.test1":38,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId":56,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessages":60,"org.eclipse.jgit.transport.PackParserTest.test2":39,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":8,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithSignedOffBy":55,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAfterBugOrIssue":51,"org.eclipse.jgit.util.ChangeIdUtilTest.testNoteInMiddle":63,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":71,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":12,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommit":61,"org.eclipse.jgit.util.ChangeIdUtilTest.testTimeAltersId":47,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":7,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":24,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":33,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":48,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommitWithSob_ButNoBody":46,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":25,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":17,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":23,"org.eclipse.jgit.util.ChangeIdUtilTest.testOnelinerFollowedByBlank":45,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":21,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":30,"org.eclipse.jgit.util.ChangeIdUtilTest.testATwoLines":44,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NonFooterAndBugAndSob":62,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":20,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":22,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":19,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement":68,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":18,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":16,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":27,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":14,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testEmpty":3,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":32,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithoutFooter":65,"org.eclipse.jgit.util.ChangeIdUtilTest.testOneliner":43,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testHasFlags":4,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":36,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessagesWithSignedOffBy":54,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugBrackersAndSob":41,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":35,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit2":40,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":15,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLineNoLineBreak":58},"transformations":[{"failures":[],"tindex":"049fa920-4c38-11e5-a4ca-7b52b5d25cef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:545","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"049fd031-4c38-11e5-a4ca-a9eca7939be4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:214","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.AnyObjectId == null)\n    return this;\n"},"variableMap":{"noteData":"noteOn"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:160","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.AnyObjectId != null) {\n    if (org.eclipse.jgit.notes.LeafBucket.shouldSplit()) {\n        return org.eclipse.jgit.notes.LeafBucket.split().set(org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.lib.ObjectReader);\n    } else {\n        org.eclipse.jgit.notes.LeafBucket.growIfFull();\n        int = -(int + 1);\n        if (int < (int))\n            java.lang.System.arraycopy(org.eclipse.jgit.notes.Note[], int, org.eclipse.jgit.notes.Note[], (int + 1), ((int) - int));\n        \n        org.eclipse.jgit.notes.Note[][int] = new org.eclipse.jgit.notes.Note(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.lib.AnyObjectId.copy());\n        (int)++;\n        return this;\n    }\n} else {\n    return this;\n}"},"status":-2},{"failures":[],"tindex":"049fd032-4c38-11e5-a4ca-4de0f4d45965","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.NB:121","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 8"},"status":0},{"failures":[],"tindex":"049fd033-4c38-11e5-a4ca-eb37ce3fb0e4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:226","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.file.FileBasedConfig:145","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.storage.file.FileBasedConfig.org.eclipse.jgit.storage.file.FileBasedConfig.hash(byte[])"},"status":-2},{"failures":[],"tindex":"049fd034-4c38-11e5-a4ca-09e65bb19d64","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:189","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.dircache.DirCacheIterator.(eof()))\n    org.eclipse.jgit.dircache.DirCacheIterator.parseEntry();\n"},"status":-2},{"failures":[],"tindex":"049fd035-4c38-11e5-a4ca-bfb698a46ca0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.ChangeIdUtil:100","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0)\n    return null;\n"},"variableMap":{"cleanMessage":"stashApplyFailed"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:170","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.lib.ObjectReader);\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.lib.Constants.java.lang.String);\n    if (org.eclipse.jgit.lib.ObjectId == null)\n        throw new org.eclipse.jgit.api.errors.NoHeadException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.api.StashApplyCommand.getStashId();\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n    if (((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) < 2) || ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) > 3))\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.ObjectId.name(), java.lang.Integer.valueOf(org.eclipse.jgit.revwalk.RevCommit.getParentCount())));\n    \n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(((org.eclipse.jgit.lib.Constants.java.lang.String) + \"^{tree}\"));\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevCommit.getParent(1));\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = null;\n    if ((boolean) && ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 3))\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevCommit.getParent(2));\n    \n    org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)));\n    org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"stashed HEAD\" , \"HEAD\" , \"stash\" });\n    org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.lib.ObjectId);\n    org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository));\n    if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevCommit)) {\n        org.eclipse.jgit.dircache.DirCache org.eclipse.jgit.dircache.DirCache = org.eclipse.jgit.lib.Repository.lockDirCache();\n        org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.lib.ObjectId , org.eclipse.jgit.dircache.DirCache , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n        org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n        org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n        if (boolean) {\n            org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository, true)));\n            org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"stashed HEAD\" , \"HEAD\" , \"stashed index\" });\n            org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.lib.ObjectId);\n            boolean boolean = org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId);\n            if (boolean) {\n                org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()));\n            } else {\n                throw new org.eclipse.jgit.api.errors.StashApplyFailureException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            }\n        } \n        if (org.eclipse.jgit.lib.ObjectId != null) {\n            org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository, true)));\n            org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"stashed HEAD\" , \"HEAD\" , \"untracked files\" });\n            org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.lib.ObjectId);\n            boolean boolean = org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId);\n            if (boolean)\n                try {\n                    org.eclipse.jgit.revwalk.RevTree org.eclipse.jgit.revwalk.RevTree = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n                    org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree);\n                } catch (org.eclipse.jgit.errors.CheckoutConflictException e) {\n                    throw new org.eclipse.jgit.api.errors.StashApplyFailureException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n                }\n            else\n                throw new org.eclipse.jgit.api.errors.StashApplyFailureException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            \n        } \n    } else {\n        throw new org.eclipse.jgit.api.errors.StashApplyFailureException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n    return org.eclipse.jgit.lib.ObjectId;\n} catch (org.eclipse.jgit.api.errors.JGitInternalException e) {\n    throw org.eclipse.jgit.api.errors.JGitInternalException;\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n} finally {\n    org.eclipse.jgit.lib.ObjectReader.release();\n}"},"status":-2},{"failures":[0,1,2],"tindex":"049ff746-4c38-11e5-a4ca-f7f019749494","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:366","type":"CtAssignmentImpl","sourcecode":"int = int + (org.eclipse.jgit.lib.Constants.int)"},"variableMap":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"firstValidEndBracketIndex","nextPtr":"firstValidEndBracketIndex","ptr":"firstValidEndBracketIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:193","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[3,4],"tindex":"049ff747-4c38-11e5-a4ca-5b50224a89dd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:637","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:137","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"04a01e58-4c38-11e5-a4ca-a5361036f246","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:261","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"cmd":"copySize"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:188","type":"CtAssignmentImpl","sourcecode":"int = (byte[][int++]) & 255"},"status":-1},{"failures":[],"tindex":"04a01e59-4c38-11e5-a4ca-3f99c1005880","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:79","type":"CtReturnImpl","sourcecode":"return ((int) <= int) && (int < (int))"},"variableMap":{"nextPosition":"size","position":"size","sizeInBits":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:219","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[40],"tindex":"04a01e5a-4c38-11e5-a4ca-834bec42e3ca","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:93","type":"CtReturnImpl","sourcecode":"return ((((((((byte[][0]) == 'g') && ((byte[][1]) == 'i')) && ((byte[][2]) == 't')) && ((byte[][3]) == 'd')) && ((byte[][4]) == 'i')) && ((byte[][5]) == 'r')) && ((byte[][6]) == ':')) && ((byte[][7]) == ' ')"},"variableMap":{"ref":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:556","type":"CtSwitchImpl","sourcecode":"switch (byte[][(int + 2)]) {\n    case ((byte)(170)) :\n    case ((byte)(171)) :\n    case ((byte)(172)) :\n    case ((byte)(173)) :\n    case ((byte)(174)) :\n    case ((byte)(175)) :\n        boolean = true;\n        int += 3;\n        continue;\n    default :\n        return false;\n}"},"status":-1},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"04a01e5b-4c38-11e5-a4ca-8bb2afcfcef6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:285","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"r":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:115","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.lib.PersonIdent.toExternalString())"},"status":-1},{"failures":[],"tindex":"04a01e5c-4c38-11e5-a4ca-1d4196893c87","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.HunkHeader:199","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.Edit:228","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = ((org.eclipse.jgit.diff.Edit)(java.lang.Object))"},"status":-2},{"failures":[5,6,71,72,73,7,13,37],"tindex":"04a01e5d-4c38-11e5-a4ca-791763ced927","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:247","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.internal.storage.pack.DeltaEncoder.encodeCopy(int, long, int)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}