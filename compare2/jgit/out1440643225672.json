{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_CorruptZLibStream":9,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TruncatedZLibStream":3,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_DeltaNotAllowed":8,"org.eclipse.jgit.diff.HistogramDiffTest.testFallbackToMyersDiff":12,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_InvalidType":0,"org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfB":11,"org.eclipse.jgit.diff.HistogramDiffTest.testExceedsChainLength_DuringScanOfA":10,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NoHeader":2,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TrailingGarbage":7,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_GarbageAfterSize":6,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TruncatedZLibStream":1,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TrailingGarbage":5,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NegativeSize":4},"transformations":[{"failures":[],"tindex":"f8a71c1e-4c64-11e5-a525-31f3f6be041b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.FileMode:186","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"p":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:481","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"f8a7432f-4c64-11e5-a525-37ef86c03800","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1214","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.revwalk.RevFlag org.eclipse.jgit.revwalk.RevFlag : org.eclipse.jgit.revwalk.RevFlag[])\n    int |= org.eclipse.jgit.revwalk.RevFlag.int;"},"status":0},{"failures":[],"tindex":"f8a74330-4c64-11e5-a525-97a02a069bc7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.attributes.AttributesRule:136","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\"))) {\n    java.lang.String = \"/\" + java.lang.String;\n} "},"variableMap":{"pattern":"org.eclipse.jgit.lib.ConfigConstants.CONFIG_KEY_WORKTREE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:335","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.lib.Repository.getDirectory().getParentFile().equals(java.io.File))) {\n    org.eclipse.jgit.storage.file.FileBasedConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, null, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, org.eclipse.jgit.lib.Repository.getWorkTree().getAbsolutePath());\n    org.eclipse.jgit.internal.storage.file.LockFile org.eclipse.jgit.internal.storage.file.LockFile = new org.eclipse.jgit.internal.storage.file.LockFile(new java.io.File(java.io.File , org.eclipse.jgit.lib.Constants.java.lang.String) , org.eclipse.jgit.lib.Repository.getFS());\n    try {\n        if (org.eclipse.jgit.internal.storage.file.LockFile.lock()) {\n            org.eclipse.jgit.internal.storage.file.LockFile.write(org.eclipse.jgit.lib.Constants.encode(((org.eclipse.jgit.lib.Constants.java.lang.String) + (org.eclipse.jgit.lib.Repository.getDirectory().getAbsolutePath()))));\n            org.eclipse.jgit.internal.storage.file.LockFile.commit();\n        } \n    } finally {\n        org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n    }\n} "},"status":-2},{"failures":[],"tindex":"f8a74331-4c64-11e5-a525-038dc299ddb8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.attributes.AttributesNode:103","type":"CtIfImpl","sourcecode":"if (int == (-1))\n    int = int;\nelse if (int == (-1))\n    int = int;\nelse\n    int = java.lang.Math.min(int, int);\n"},"variableMap":{"patternEndTab":"idx","patternEnd":"idx","patternEndSpace":"idx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:867","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.set(int, org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef)))\n    java.util.concurrent.atomic.AtomicInteger.incrementAndGet();\n"},"status":-2},{"failures":[],"tindex":"f8a76a42-4c64-11e5-a525-af9176bb3b3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:448","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.blame.BlameResult org.eclipse.jgit.blame.BlameResult = org.eclipse.jgit.blame.BlameResult.create(this);\n    if (org.eclipse.jgit.blame.BlameResult != null)\n        org.eclipse.jgit.blame.BlameResult.computeAll();\n    \n    return org.eclipse.jgit.blame.BlameResult;\n} finally {\n    org.eclipse.jgit.blame.BlameGenerator.release();\n}"},"status":-2},{"failures":[],"tindex":"f8a76a43-4c64-11e5-a525-190ac92e9fd3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:642","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    if ((byte[][int]) == '\\n')\n        return -1;\n    \n    if ((byte[][int]) == 'e')\n        break;\n    \n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);\n}"},"variableMap":{"b":"org.eclipse.jgit.lib.ObjectChecker.encoding","sz":"ptr","this":"this","ptr":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:649","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.lib.ObjectChecker.byte[])"},"status":-2},{"failures":[],"tindex":"f8a76a44-4c64-11e5-a525-87902cb28900","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:1038","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheBuilder = null"},"status":0},{"failures":[],"tindex":"f8a76a45-4c64-11e5-a525-35276a3ed53c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:160","type":"CtLocalVariableImpl","sourcecode":"final int int = 24 * 3600"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:172","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)((long) / (long)))"},"status":-2},{"failures":[],"tindex":"f8a76a46-4c64-11e5-a525-8ff8a2ec8b01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:580","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.eclipse.jgit.lib.ReflogEntry> == null) || (java.util.List<org.eclipse.jgit.lib.ReflogEntry>.isEmpty()))\n    return java.util.Collections.<org.eclipse.jgit.lib.ObjectId>emptySet();\n"},"status":0},{"failures":[],"tindex":"f8a76a47-4c64-11e5-a525-d7bedf6f2547","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:174","type":"CtInvocationImpl","sourcecode":"java.util.LinkedList<java.lang.String>.clear()"},"variableMap":{"untrackedParentFolders":"commits"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeMessageFormatter:109","type":"CtIfImpl","sourcecode":"if (!(java.util.List<java.lang.String>.isEmpty()))\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.merge.MergeMessageFormatter.org.eclipse.jgit.merge.MergeMessageFormatter.joinNames(java.util.List<java.lang.String>, \"commit\", \"commits\"));\n"},"status":0},{"failures":[],"tindex":"f8a79158-4c64-11e5-a525-95f9fafc2ca4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:110","type":"CtReturnImpl","sourcecode":"return 22"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.AbstractMatcher:76","type":"CtReturnImpl","sourcecode":"return java.lang.String.hashCode()"},"status":0},{"failures":[],"tindex":"f8a79159-4c64-11e5-a525-e90e79bb318d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:459","type":"CtIfImpl","sourcecode":"if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator)))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"f8a7915a-4c64-11e5-a525-bd09d8db5ab5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.errors.CorruptObjectException:70","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.errors.CorruptObjectException.this(org.eclipse.jgit.lib.AnyObjectId.toObjectId(), java.lang.String)"},"status":-1},{"failures":[10,11,12],"tindex":"f8a7915b-4c64-11e5-a525-ad8853456ad2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:381","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    break;\n"},"variableMap":{"r":"ptrShift"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:195","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.diff.HashedSequenceComparator<S>.equals(org.eclipse.jgit.diff.HashedSequence<S>, org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recPtr(long), org.eclipse.jgit.diff.HashedSequence<S>, int)) {\n    int int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.(org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long)) + 1;\n    if ((org.eclipse.jgit.diff.HistogramDiffIndex.int) < int)\n        int = org.eclipse.jgit.diff.HistogramDiffIndex.int;\n    \n    long[][int] = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCreate(org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recNext(long), int, int);\n    int[][(int - (int))] = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recPtr(long);\n    int[][(int - (int))] = int;\n    continue SCAN;\n} "},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}