{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":84,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":447,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchNone":296,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":50,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":462,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":409,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":24,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":265,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":428,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":349,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":135,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":347,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":789,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":127,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":579,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":759,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":15,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":224,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":153,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":151,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":758,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":460,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":603,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":203,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":60,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":35,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":543,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":21,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":446,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":251,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":533,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":32,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":128,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":178,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":145,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath":233,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix":213,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":441,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":253,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":394,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout":215,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":385,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":237,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":22,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":622,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":643,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":125,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":715,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":716,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":717,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":476,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":522,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":713,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":179,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":417,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":714,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":28,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":494,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":2,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":333,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":243,"org.eclipse.jgit.api.GitConstructionTest.testClose":633,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":560,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":554,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":605,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":365,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":741,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":244,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":318,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":317,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":395,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":266,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":214,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":478,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1":234,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":338,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":747,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":66,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":684,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":83,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":683,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":686,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":685,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":687,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEndLF":312,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":401,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":490,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":139,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":453,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":133,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":9,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":736,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":794,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":735,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":737,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2":218,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1":217,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":734,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":733,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":168,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":439,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix":222,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":332,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":34,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":539,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":411,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":169,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":578,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference":69,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":475,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":20,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":601,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_NoMessage":303,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":370,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":400,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":468,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":191,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":787,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":44,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":150,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":497,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":790,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":380,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":505,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":173,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":171,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":674,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":673,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":140,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":676,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":675,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":577,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":429,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":677,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":785,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":408,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted":46,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix":238,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":481,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":223,"org.eclipse.jgit.api.GitConstructionTest.testWrap":635,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":158,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":134,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":193,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":809,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":239,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":80,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":368,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":480,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":664,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":152,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":663,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":82,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":249,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":170,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":92,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":282,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":451,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":336,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":101,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":167,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testNonRecursiveFiltering":6,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded":301,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":625,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":181,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":162,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":440,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":769,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":456,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":148,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":387,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchAll":299,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":647,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":648,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":649,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":650,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":651,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":607,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":666,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":665,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":667,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":798,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":110,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case":210,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference":79,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":485,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2":309,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":360,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":778,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":63,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":262,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":261,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":264,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":263,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_3":258,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":257,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":260,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":259,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":812,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":371,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_EmptyTree":287,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":465,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":141,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":466,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":656,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":655,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":17,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":184,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":154,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":190,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":581,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":448,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":278,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":241,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":247,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":11,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":122,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":40,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":149,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":186,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":36,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":198,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":786,"org.eclipse.jgit.api.CleanCommandTest.testClean":588,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":342,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":770,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":334,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":563,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":586,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":341,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":374,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":189,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":590,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":776,"org.eclipse.jgit.revwalk.ObjectWalkTest.testMarkUninterestingPropagation":326,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":498,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows":236,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":599,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk":197,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":209,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":520,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":410,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":816,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":131,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":188,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":196,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":657,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":157,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":752,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":548,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":593,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":39,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":43,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":567,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":802,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":204,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":245,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":256,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":621,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":808,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":626,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":780,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":463,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":335,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":325,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon":200,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":613,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":8,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":355,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":81,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":642,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":630,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":631,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":526,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":96,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":469,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":534,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded":310,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":356,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":766,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":804,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":513,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":772,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":10,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":124,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":13,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":283,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":279,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":535,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":541,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":516,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":523,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":56,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":182,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":549,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":379,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded":305,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":761,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":93,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":129,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":280,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":576,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_GitStyleMessage":307,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":202,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":470,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":225,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":600,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":23,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":424,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":800,"org.eclipse.jgit.api.BlameCommandTest.testRename":629,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":529,"org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes":142,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":255,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase":112,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":753,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":372,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":163,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":195,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":78,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":77,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":76,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":75,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix":208,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":805,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":353,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":628,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":620,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":405,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":54,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":57,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":572,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":474,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":414,"org.eclipse.jgit.api.PushCommandTest.testPush":506,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":418,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":130,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":136,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":458,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":242,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":731,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":281,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":732,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":796,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":728,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":729,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":525,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":730,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase":118,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":396,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":52,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":99,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":773,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":571,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":748,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":226,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":68,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":352,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":608,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix":201,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":632,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":799,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":62,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":275,"org.eclipse.jgit.api.GitConstructionTest.testOpen":634,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":276,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":511,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":277,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":791,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":271,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":272,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":273,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":274,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":415,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_10":268,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":381,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":269,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":532,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":270,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":618,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":619,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":566,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":615,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":616,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":389,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":617,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":553,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":591,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon":227,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":397,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":479,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":801,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":419,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":546,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":742,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":367,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":504,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":74,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":545,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":641,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":509,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1":219,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":362,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":751,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":598,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":324,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":814,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":431,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":433,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded":316,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":434,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":64,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit":639,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":164,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":174,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":486,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":592,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":288,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":290,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":289,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":393,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":432,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":143,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":345,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":344,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":358,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":492,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":606,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":361,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":552,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":574,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":584,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":329,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":97,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":638,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":473,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":26,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":406,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":765,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":47,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":25,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr":199,"org.eclipse.jgit.merge.CherryPickTest.testRevert":340,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":527,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":33,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":438,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":155,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":597,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":756,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":755,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":521,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_NoMatch":297,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":562,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":3,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger":302,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":426,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":637,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":711,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":712,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":216,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":708,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":709,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":710,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":30,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF":314,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":530,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference":88,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1":228,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":229,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":343,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":383,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields":306,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testRecursiveFiltering":5,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":119,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":587,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":49,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testAddLargeBlocks":820,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":109,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":354,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":782,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":407,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":0,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":646,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":285,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":346,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":284,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":291,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":557,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":556,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":398,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":739,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":688,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":690,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":689,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":692,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":585,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":691,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":327,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":382,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":328,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_REVERSE":823,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":388,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":482,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":194,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":351,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":159,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":781,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":111,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":488,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":537,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":719,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":720,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":811,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":721,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":722,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":449,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":508,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":718,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels":221,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":132,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":53,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":435,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":252,"org.eclipse.jgit.revwalk.RevTagParseTest.testTagTag":315,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":771,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":180,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":810,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":212,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":757,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig":98,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree":331,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":818,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":500,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":363,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":595,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":627,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":442,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":678,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":680,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":679,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":682,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":681,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":589,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":489,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":495,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":580,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":337,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":165,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":477,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow":104,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":774,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":760,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":378,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":531,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":323,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":366,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":668,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":14,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":292,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":754,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":555,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":160,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":72,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":515,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":350,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":746,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":450,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":594,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":745,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":604,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":176,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":536,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":644,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":357,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testSimple1":298,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":596,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":561,"org.eclipse.jgit.api.TagCommandTest.testTagging":501,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":330,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":369,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":59,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":322,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":623,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":499,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":211,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":569,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":250,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":602,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":457,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":764,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":670,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":51,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":373,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":669,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":73,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":672,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":671,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":161,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":29,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":768,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":693,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":695,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":694,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":697,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":248,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":518,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":696,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":1,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":147,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":246,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":437,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":640,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":240,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":510,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":658,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":660,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":744,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":659,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":121,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":120,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":767,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":493,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":144,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":575,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":743,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":487,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":443,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":749,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":45,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":459,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":254,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":544,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":403,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":517,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":205,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2":206,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3":207,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":795,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":582,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":55,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":41,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":71,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":662,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":661,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":784,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":817,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":390,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":416,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout":232,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":16,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":375,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":87,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":321,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":319,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":320,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":652,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":654,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":175,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":653,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":19,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":37,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":187,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":295,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":559,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":484,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":514,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":102,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":90,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2":231,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1":230,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":384,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":123,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":558,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyNoLF":308,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":519,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":540,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":427,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":779,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":564,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":614,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":528,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":583,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":185,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":377,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":483,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":391,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":107,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":547,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":496,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":116,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":703,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":115,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":67,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":114,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":113,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":550,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":707,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":137,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":183,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":706,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":705,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":704,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":803,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":392,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":7,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":788,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":491,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderUntracked":42,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":421,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":126,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":399,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":822,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":461,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":538,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":117,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":815,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":611,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":610,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedLF":311,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":454,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":624,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified":18,"org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes":156,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":58,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommitted":12,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":777,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":797,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":645,"org.eclipse.jgit.lib.IndexDiffTest.testModified":192,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":455,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":166,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":404,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":698,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":699,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":700,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":701,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":177,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":702,"org.eclipse.jgit.api.FetchCommandTest.testFetch":565,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":727,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":172,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":723,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":724,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":636,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":725,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":220,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":726,"org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes":138,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":807,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":750,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":793,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":762,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":573,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":763,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":91,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":792,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":105,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName":108,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":103,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":512,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":420,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix":235,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":100,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":445,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":444,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":472,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":568,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":425,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":612,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testEdgeCases":4,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":402,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":359,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":471,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":430,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":464,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":783,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":376,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":413,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testHasFlags":821,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":267,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":61,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":423,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":738,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":106,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":467,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":294,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":86,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":386,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":146,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":740,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":48,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":293,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":507,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":348,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":94,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":412,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":313,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":775,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":436,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":31,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":70,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":95,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":524,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":806,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":364,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testNoRename":286,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":502,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":422,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":89,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":85,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":570,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":65,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":819,"org.eclipse.jgit.merge.CherryPickTest.testPick":339,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":452,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_OnlyLFMessage":304,"org.eclipse.jgit.api.TagCommandTest.testDelete":503,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":542,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":38,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":813,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":551,"org.eclipse.jgit.api.RevertCommandTest.testRevert":609,"org.eclipse.jgit.revwalk.RevTagParseTest.testTagTree":300},"transformations":[{"failures":[],"tindex":"e930f454-4c67-11e5-b5ca-1786d55d9207","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RenameBranchCommand:106","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String;\n    java.lang.String java.lang.String;\n    if ((org.eclipse.jgit.lib.Repository.getRef(java.lang.String)) != null)\n        throw new org.eclipse.jgit.api.errors.RefAlreadyExistsException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n    if ((java.lang.String) != null) {\n        org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n        if (org.eclipse.jgit.lib.Ref == null)\n            throw new org.eclipse.jgit.api.errors.RefNotFoundException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n        \n        if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n            throw new org.eclipse.jgit.api.errors.RefNotFoundException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n        \n        java.lang.String = org.eclipse.jgit.lib.Ref.getName();\n    } else {\n        java.lang.String = org.eclipse.jgit.lib.Repository.getFullBranch();\n        if (org.eclipse.jgit.lib.ObjectId.isId(java.lang.String))\n            throw new org.eclipse.jgit.api.errors.DetachedHeadException();\n        \n    }\n    if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n        java.lang.String = (org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String);\n    else {\n        java.lang.String = (org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String);\n    }\n    if (!(org.eclipse.jgit.lib.Repository.isValidRefName(java.lang.String)))\n        throw new org.eclipse.jgit.api.errors.InvalidRefNameException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n    org.eclipse.jgit.lib.RefRename org.eclipse.jgit.lib.RefRename = org.eclipse.jgit.lib.Repository.renameRef(java.lang.String, java.lang.String);\n    org.eclipse.jgit.lib.RefUpdate.Result org.eclipse.jgit.lib.RefUpdate.Result = org.eclipse.jgit.lib.RefRename.rename();\n    org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.lib.Ref>.setCallable(false);\n    if ((org.eclipse.jgit.lib.RefUpdate.Result.org.eclipse.jgit.lib.RefUpdate.Result) != org.eclipse.jgit.lib.RefUpdate.Result)\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.RefUpdate.Result.name()));\n    \n    if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n        java.lang.String java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n        final org.eclipse.jgit.lib.StoredConfig org.eclipse.jgit.lib.StoredConfig = org.eclipse.jgit.lib.Repository.getConfig();\n        for (java.lang.String java.lang.String : org.eclipse.jgit.lib.StoredConfig.getNames(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String)) {\n            java.lang.String[] java.lang.String[] = org.eclipse.jgit.lib.StoredConfig.getStringList(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, java.lang.String);\n            if ((java.lang.String[].int) == 0)\n                continue;\n            \n            java.lang.String[] java.lang.String[] = org.eclipse.jgit.lib.StoredConfig.getStringList(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, java.lang.String);\n            if ((java.lang.String[].int) > 0) {\n                java.lang.String[] java.lang.String[] = new java.lang.String[(java.lang.String[].int) + (java.lang.String[].int)];\n                java.lang.System.arraycopy(java.lang.String[], 0, java.lang.String[], 0, java.lang.String[].int);\n                java.lang.System.arraycopy(java.lang.String[], 0, java.lang.String[], java.lang.String[].int, java.lang.String[].int);\n                java.lang.String[] = java.lang.String[];\n            } \n            org.eclipse.jgit.lib.StoredConfig.setStringList(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, java.lang.String, java.util.Arrays.asList(java.lang.String[]));\n        }\n        org.eclipse.jgit.lib.StoredConfig.unsetSection(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n        org.eclipse.jgit.lib.StoredConfig.save();\n    } \n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n    if (org.eclipse.jgit.lib.Ref == null)\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    return org.eclipse.jgit.lib.Ref;\n} catch (java.io.IOException ioe) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n}"},"status":-2},{"failures":[0,1],"tindex":"e9311b65-4c67-11e5-b5ca-a13ff09c53a5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:387","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.release()"},"variableMap":{"walk":"walk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:339","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n    final org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(0, org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator);\n    if (org.eclipse.jgit.treewalk.AbstractTreeIterator == null)\n        continue;\n    \n    final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.TreeWalk.getRawPath());\n    org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode());\n    org.eclipse.jgit.dircache.DirCacheEntry.setObjectIdFromRaw(org.eclipse.jgit.treewalk.AbstractTreeIterator.idBuffer(), org.eclipse.jgit.treewalk.AbstractTreeIterator.idOffset());\n    org.eclipse.jgit.treewalk.FileTreeIterator org.eclipse.jgit.treewalk.FileTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(1, org.eclipse.jgit.treewalk.FileTreeIterator.org.eclipse.jgit.treewalk.FileTreeIterator);\n    if (org.eclipse.jgit.treewalk.FileTreeIterator != null) {\n        if (org.eclipse.jgit.treewalk.FileTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, org.eclipse.jgit.lib.ObjectReader)) {\n            throw new org.eclipse.jgit.errors.CheckoutConflictException(org.eclipse.jgit.dircache.DirCacheEntry.getPathString());\n        } \n    } \n    org.eclipse.jgit.api.StashApplyCommand.checkoutPath(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.lib.ObjectReader);\n}"},"status":-1},{"failures":[],"tindex":"e9311b66-4c67-11e5-b5ca-356bfcc51a1b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:672","type":"CtIfImpl","sourcecode":"if (boolean)\n    return false;\n"},"variableMap":{"inCore":"reuseObjects"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.pack.PackConfig:269","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"e9311b67-4c67-11e5-b5ca-adbd727c5b3a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:185","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.add(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>)"},"status":0},{"failures":[],"tindex":"e9314278-4c67-11e5-b5ca-2d8305c809ba","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:348","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCursor.pin(this, 0)"},"variableMap":{"curs":"reader"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:254","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectReader.release()"},"status":-2},{"failures":[],"tindex":"e9314279-4c67-11e5-b5ca-a960241d039d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1030","type":"CtIfImpl","sourcecode":"if (int == 0)\n    return ;\n"},"variableMap":{"numSteps":"pathHash"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:110","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.internal.storage.pack.IntSet.add(int)))\n    return ;\n"},"status":0},{"failures":[],"tindex":"e931427a-4c67-11e5-b5ca-011e186afacc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.ChangeIdUtil:69","type":"CtInvocationImpl","sourcecode":"java.lang.String.replaceAll(\"(?i)(?m)^Signed-off-by:.*$\\n?\", \"\").replaceAll(\"(?m)^#.*$\\n?\", \"\").replaceAll(\"(?m)\\n\\n\\n+\", \"\\\\\\n\").replaceAll(\"\\\\n*$\", \"\")"},"variableMap":{"msg":"subsection"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1067","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"')"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,0,421,422,423,424,425,426,427,1,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,633,634,634,635,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819],"tindex":"e931427b-4c67-11e5-b5ca-2943222e5f94","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:823","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.util.RawParseUtils.byte[][byte]) == 0) {\n    if (byte == ':')\n        return int;\n    \n    return -1;\n} "},"variableMap":{"org.eclipse.jgit.util.RawParseUtils.footerLineKeyChars":"typeString","c":"endMark","ptr":"org.eclipse.jgit.lib.Constants.OBJ_TREE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:501","type":"CtSwitchImpl","sourcecode":"switch (byte[][(int + 1)]) {\n    case 'a' :\n        if (((byte[][(int + 2)]) != 'g') || ((byte[][(int + 3)]) != byte))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.util.MutableInteger.int = int + 4;\n        return org.eclipse.jgit.lib.Constants.int;\n    case 'r' :\n        if ((((byte[][(int + 2)]) != 'e') || ((byte[][(int + 3)]) != 'e')) || ((byte[][(int + 4)]) != byte))\n            throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        org.eclipse.jgit.util.MutableInteger.int = int + 5;\n        return org.eclipse.jgit.lib.Constants.int;\n    default :\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"e931698c-4c67-11e5-b5ca-4d322cfc4ff8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:170","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":0},{"failures":[],"tindex":"e931909d-4c67-11e5-b5ca-d55719a04764","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker:88","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.BitmapIndex.Bitmap != null)\n    org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.or(org.eclipse.jgit.lib.BitmapIndex.Bitmap);\n"},"status":0},{"failures":[],"tindex":"e931909e-4c67-11e5-b5ca-ebbb3111e684","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:426","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"bytes\" , \"KiB\" , \"MiB\" , \"GiB\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:214","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = java.lang.String.split(\"/\")"},"status":-2},{"failures":[],"tindex":"e931909f-4c67-11e5-b5ca-4fcb9ddce073","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:2360","type":"CtReturnImpl","sourcecode":"return ((((long) + (long)) + (long)) + (long)) + (long)"},"variableMap":{"timeWriting":"size","timeCompressing":"size","timeSearchingForReuse":"size","timeSearchingForSizes":"size","timeCounting":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LargePackedWholeObject:87","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"e93190a0-4c67-11e5-b5ca-911e0e2c4022","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:335","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revplot.PlotLane != null)\n    java.util.BitSet.set(org.eclipse.jgit.revplot.PlotLane.getPosition());\n"},"status":0},{"failures":[],"tindex":"e93190a1-4c67-11e5-b5ca-9d6b1bdef2bd","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:239","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status)"},"status":-2},{"failures":[820,821,822,823],"tindex":"e93190a2-4c67-11e5-b5ca-3b07893f2b29","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.LIFORevQueue:74","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block.unpop(org.eclipse.jgit.revwalk.RevCommit)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}