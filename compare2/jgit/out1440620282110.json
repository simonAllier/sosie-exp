{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":126,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":137,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":123,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_UniqueCommonLargerThanMatchPoint":10,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":91,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":84,"org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification":1,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":17,"org.eclipse.jgit.api.FetchCommandTest.testFetch":44,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":64,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":99,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":101,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":116,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":27,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":23,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":151,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":98,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":33,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":43,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDeleteNonExisting":140,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":117,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":133,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":20,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipAndExpand":3,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":67,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":95,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":96,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InvertBlocks":11,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":131,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InsertNearCommonTail":9,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":37,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":75,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":97,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":149,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":16,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":115,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":79,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":103,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":63,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":41,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":77,"org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases":138,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":89,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":88,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":118,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":26,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_ReplaceCommonDelete":5,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":144,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":18,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":24,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":22,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":112,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":70,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":69,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":34,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":47,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":71,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":87,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":94,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":105,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":86,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":148,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LcsContainsUnique":4,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":46,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":128,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":52,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonReplaceCommonDeleteCommon":13,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":36,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":14,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":108,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":134,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":66,"org.eclipse.jgit.api.GitConstructionTest.testWrap":82,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":125,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":55,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":53,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":85,"org.eclipse.jgit.api.GitConstructionTest.testOpen":81,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":104,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_DuplicateAButCommonUniqueInB":8,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":100,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_MoveBlock":7,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":30,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":38,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":90,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":122,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":135,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":54,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":110,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":19,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":107,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_NoUniqueMiddleSide_FlipBlocks":2,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUpToDate":139,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":45,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":48,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":21,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonGrowsPrefixAndSuffix":12,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":119,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":106,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":39,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":129,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":130,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":102,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":127,"org.eclipse.jgit.api.GitConstructionTest.testClose":80,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":32,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":0,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":150,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":40,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":109,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":62,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":61,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":35,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":42,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":132,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":65,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":145,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":113,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":147,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":78,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":83,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":74,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LinuxBug":6,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":56,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":111,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":58,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":59,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":92,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":31,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":73,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":49,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":120,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":114,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":124,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":25,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":93,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":60,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":51,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":68,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":76,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":72,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":141,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":146,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":136,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":143,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":142,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":121,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":57},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"8d535284-4c2f-11e5-8f3a-1dd036a18d9f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:331","type":"CtOperatorAssignmentImpl","sourcecode":"int += (org.eclipse.jgit.lib.Constants.int) + 1"},"variableMap":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"ae","ptr":"ae"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:281","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.Edit.int = int"},"status":-1},{"failures":[],"tindex":"8d537995-4c2f-11e5-8f3a-c9a287fa5e37","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffEntry:274","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry = new org.eclipse.jgit.diff.DiffEntry()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:228","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry = java.util.List<org.eclipse.jgit.diff.DiffEntry>.get(int)"},"status":-2},{"failures":[],"tindex":"8d548b06-4c2f-11e5-8f3a-6bebc9768381","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:257","type":"CtReturnImpl","sourcecode":"return (int) - (org.eclipse.jgit.lib.Constants.int)"},"variableMap":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"deltaBaseCacheLimit","nextPtr":"deltaBaseCacheLimit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:155","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[19],"tindex":"8d54b217-4c2f-11e5-8f3a-0bb9e5673144","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:752","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.diff.EditList.isEmpty()) {\n    if (org.eclipse.jgit.blame.Candidate instanceof org.eclipse.jgit.blame.Candidate.ReverseCandidate) {\n        org.eclipse.jgit.blame.Candidate[][int] = org.eclipse.jgit.blame.Candidate;\n        continue;\n    } \n    org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Region;\n    org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Region = null;\n    org.eclipse.jgit.blame.Candidate[][int] = org.eclipse.jgit.blame.Candidate;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"8d54b218-4c2f-11e5-8f3a-11afc13ef44d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:314","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(org.eclipse.jgit.treewalk.CanonicalTreeParser)"},"status":0},{"failures":[],"tindex":"8d54b219-4c2f-11e5-8f3a-278628348b27","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:172","type":"CtIfImpl","sourcecode":"if (((int != (int)) && (int != (org.eclipse.jgit.lib.FileMode.int))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))) {\n    java.util.LinkedList<java.lang.String>.clear();\n    break;\n} "},"variableMap":{"org.eclipse.jgit.lib.FileMode.TYPE_MISSING":"org.eclipse.jgit.lib.FileMode.TYPE_MISSING","org.eclipse.jgit.lib.FileMode.TREE":"org.eclipse.jgit.lib.FileMode.TREE","i":"cnt","workingTree":"cnt","untrackedParentFolders":"untrackedParentFolders","rmode":"workingTree"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:170","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int int = org.eclipse.jgit.treewalk.TreeWalk.getRawMode(int);\n    if (((int != (int)) && (int != (org.eclipse.jgit.lib.FileMode.int))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(int))) {\n        java.util.LinkedList<java.lang.String>.clear();\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"8d585b9a-4c2f-11e5-8f3a-c325aaa4e82a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1314","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.clearDeltaBase()"},"variableMap":{"otp":"advertisedOld"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:191","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId().equals(org.eclipse.jgit.lib.ObjectId)) {\n    if (org.eclipse.jgit.transport.RemoteRefUpdate.isDelete()) {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n    } else {\n        org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n    }\n    continue;\n} "},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,15,16,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,80,81,81,82,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"8d585b9b-4c2f-11e5-8f3a-3d4c32edcb55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:395","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectLoader != null)\n    return org.eclipse.jgit.lib.ObjectLoader;\n"},"status":-1},{"failures":[138,139,140],"tindex":"8d585b9c-4c2f-11e5-8f3a-8f66e673955b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:192","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.RemoteRefUpdate.isDelete()) {\n    org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n} else {\n    org.eclipse.jgit.transport.RemoteRefUpdate.setStatus(org.eclipse.jgit.transport.RemoteRefUpdate.Status.org.eclipse.jgit.transport.RemoteRefUpdate.Status);\n}"},"status":-1},{"failures":[],"tindex":"8d5882ad-4c2f-11e5-8f3a-63e901427483","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:351","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"variableMap":{"java.lang.Integer.MAX_VALUE":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:209","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.InputStream.read(byte[], int, ((byte[].int) - int))"},"status":-2},{"failures":[141,142,143,144],"tindex":"8d5882ae-4c2f-11e5-8f3a-17f56da19d3a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:107","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit != org.eclipse.jgit.revwalk.RevCommit) {\n    org.eclipse.jgit.revwalk.RevCommit[][int] = org.eclipse.jgit.revwalk.RevCommit;\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"8d5882af-4c2f-11e5-8f3a-b5b7a433ec4f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:309","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.min((int - int), int)"},"variableMap":{"maxCommits":"high","minRegionEnd":"low","idxFromStart":"low"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:155","type":"CtLocalVariableImpl","sourcecode":"final int int = (int + int) >>> 1"},"status":-2},{"failures":[],"tindex":"8d58a9c0-4c2f-11e5-8f3a-3992dee81f6f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:568","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int += 46;\n"},"variableMap":{"ptr":"org.eclipse.jgit.revplot.AbstractPlotRenderer.LINE_WIDTH"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:102","type":"CtForEachImpl","sourcecode":"for (final TLane TLane : ((TLane[])(org.eclipse.jgit.revplot.PlotCommit<TLane>.org.eclipse.jgit.revplot.PlotLane[]))) {\n    final int int = org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.org.eclipse.jgit.revplot.AbstractPlotRenderer.laneC(TLane);\n    final TColor TColor = org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.laneColor(TLane);\n    org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.drawLine(TColor, int, 0, int, int, org.eclipse.jgit.revplot.AbstractPlotRenderer.int);\n    int = java.lang.Math.max(int, int);\n}"},"status":-2},{"failures":[145,146,147,148,149,150,151],"tindex":"8d58a9c1-4c2f-11e5-8f3a-bb3344939f85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:587","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.merge.ResolveMerger.(org.eclipse.jgit.merge.ResolveMerger.nonTree(int)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"8d58a9c2-4c2f-11e5-8f3a-1d56e25b84ce","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1287","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(java.lang.String))\n    return java.lang.String.substring(java.lang.String.length());\n"},"variableMap":{"remotePrefix":"years","refName":"months"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RelativeDateFormatter:116","type":"CtIfImpl","sourcecode":"if (long < (5 * (org.eclipse.jgit.util.RelativeDateFormatter.long))) {\n    long long = long / (org.eclipse.jgit.util.RelativeDateFormatter.long);\n    java.lang.String java.lang.String = long > 1 ? org.eclipse.jgit.internal.JGitText.get().java.lang.String : org.eclipse.jgit.internal.JGitText.get().java.lang.String;\n    long long = org.eclipse.jgit.util.RelativeDateFormatter.org.eclipse.jgit.util.RelativeDateFormatter.round((long % (org.eclipse.jgit.util.RelativeDateFormatter.long)), org.eclipse.jgit.util.RelativeDateFormatter.long);\n    java.lang.String java.lang.String = long > 1 ? org.eclipse.jgit.internal.JGitText.get().java.lang.String : long == 1 ? org.eclipse.jgit.internal.JGitText.get().java.lang.String : \"\";\n    return java.text.MessageFormat.format((long == 0 ? org.eclipse.jgit.internal.JGitText.get().java.lang.String : org.eclipse.jgit.internal.JGitText.get().java.lang.String), new java.lang.Object[]{ long , java.lang.String , long , java.lang.String });\n} "},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}