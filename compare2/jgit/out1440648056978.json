{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":89,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":63,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":158,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":153,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":86,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":141,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":169,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":25,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":134,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":62,"org.eclipse.jgit.revwalk.RevTagParseTest.testTagCommit":132,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":147,"org.eclipse.jgit.api.FetchCommandTest.testFetch":138,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":45,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":32,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":34,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":24,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":81,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":133,"org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin":117,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenWildcardBeforeText":124,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":101,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag":2,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":143,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":18,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":96,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":78,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":29,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":47,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":30,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource":112,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":94,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":76,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":105,"org.eclipse.jgit.transport.RefSpecTest.testMaster":116,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":31,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenWildcardBeforeTextAtEnd":119,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":144,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":23,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":60,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":135,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":36,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":167,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":44,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":59,"org.eclipse.jgit.transport.RefSpecTest.testForceMasterMaster":109,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":165,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":155,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":19,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":84,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseOldStyleNoTagger":128,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":58,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenMoreThanOneWildcardInSource":121,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":163,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":82,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":80,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":49,"org.eclipse.jgit.transport.RefSpecTest.invalidSetDestination":125,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":102,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":145,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":52,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":28,"org.eclipse.jgit.transport.RefSpecTest.testMasterMaster":113,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":168,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":146,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":11,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":14,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":51,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":91,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":104,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":97,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":171,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":9,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields":129,"org.eclipse.jgit.api.GitConstructionTest.testWrap":67,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":88,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":38,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":55,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":64,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":160,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":37,"org.eclipse.jgit.api.GitConstructionTest.testOpen":66,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":0,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":33,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation":110,"org.eclipse.jgit.transport.RefSpecTest.testForceMaster":111,"org.eclipse.jgit.api.TagCommandTest.testTagging":136,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":106,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenMoreThanOneWildcardInDestination":122,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":17,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":98,"org.eclipse.jgit.transport.SideBandOutputStreamTest.testWrite_SmallBlocks2":118,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":56,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":72,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":152,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":69,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":139,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":150,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":53,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":79,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit":6,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":166,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":108,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":162,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2":157,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1":156,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":15,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":20,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":68,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":92,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":93,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":159,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":1,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":35,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":90,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":107,"org.eclipse.jgit.api.GitConstructionTest.testClose":65,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":100,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":149,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":71,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":130,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":8,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":43,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":151,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":103,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":10,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":57,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":95,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":46,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed":4,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":61,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec":85,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":13,"org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster":115,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":12,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":75,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":137,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":40,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":140,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":41,"org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart":114,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri":3,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":74,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":170,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":154,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":161,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":164,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":54,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch":5,"org.eclipse.jgit.revwalk.RevTagParseTest.testTagBlob":126,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":21,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":87,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":174,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":142,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":173,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":27,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":83,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":42,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":48,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":77,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":73,"org.eclipse.jgit.revwalk.RevTagParseTest.testTagTag":131,"org.eclipse.jgit.transport.RefSpecTest.invalidSetSource":120,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":99,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenWildcardAfterText":123,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":148,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":16,"org.eclipse.jgit.api.RevertCommandTest.testRevert":172,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":39,"org.eclipse.jgit.revwalk.RevTagParseTest.testTagTree":127},"transformations":[{"failures":[0,1],"tindex":"3856aa20-4c70-11e5-a5bf-e781c30aec2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ArchiveCommand:371","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.ArchiveCommand.Format<T>.putEntry(T, (java.lang.String + \"/\"), org.eclipse.jgit.lib.FileMode, null)"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"3856f841-4c70-11e5-a5bf-83b696147b55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeMessageFormatter:83","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()))) + \"\\'\"));\nelse if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()))) + \"\\'\"));\nelse if (org.eclipse.jgit.lib.Ref.getName().equals(org.eclipse.jgit.lib.Ref.getObjectId().getName()))\n    java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Ref.getName())) + \"\\'\"));\nelse\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.lib.Ref.getName());\n"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,7,39,40,41,42,43,8,44,45,46,9,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,65,66,66,67,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"3856f842-4c70-11e5-a5bf-a5eeb9b18f87","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.StringUtils:112","type":"CtIfImpl","sourcecode":"if (java.lang.String == java.lang.String)\n    return true;\n"},"variableMap":{"a":"s","b":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:423","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    return false;\n"},"status":-1},{"failures":[],"tindex":"38571f53-4c70-11e5-a5bf-9fb670100356","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.TimeoutOutputStream:141","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.TimeoutOutputStream.endWrite()"},"status":-2},{"failures":[],"tindex":"38571f54-4c70-11e5-a5bf-f15d7248f4e9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_Win32:139","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"HOMEDRIVE\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:277","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.lib.Ref.getTarget().getName()"},"status":-2},{"failures":[118],"tindex":"38571f55-4c70-11e5-a5bf-5331e5d85043","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:109","type":"CtIfImpl","sourcecode":"if (int < (int))\n    break;\n"},"variableMap":{"nextPosition":"org.eclipse.jgit.transport.SideBandOutputStream.HDR_SIZE","end":"org.eclipse.jgit.transport.SideBandOutputStream.HDR_SIZE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandOutputStream:144","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(byte[], 0, org.eclipse.jgit.transport.SideBandOutputStream.int)"},"status":-1},{"failures":[],"tindex":"38574666-4c70-11e5-a5bf-dffad3edb03c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Tree:158","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int + 1;\nelse if (int == 0)\n    return int;\nelse\n    int = int;\n"},"variableMap":{"high":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.DELTA_SHIFT","low":"flags","cmp":"flags","mid":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.DELTA_SHIFT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:190","type":"CtReturnImpl","sourcecode":"return (int) >>> (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)"},"status":-2},{"failures":[119,120,121,122,123,124,125],"tindex":"38574667-4c70-11e5-a5bf-dd0bec1c05f0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:190","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    return true;\n"},"variableMap":{"cnt":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:457","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    if ((java.lang.String.indexOf('*', (int + 1))) > int)\n        return false;\n    \n    if ((int > 0) && ((java.lang.String.charAt((int - 1))) != '/'))\n        return false;\n    \n    if ((int < ((java.lang.String.length()) - 1)) && ((java.lang.String.charAt((int + 1))) != '/'))\n        return false;\n    \n} "},"status":-1},{"failures":[],"tindex":"38574668-4c70-11e5-a5bf-67cb080910e5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.URIish:587","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.transport.URIish.(org.eclipse.jgit.transport.URIish.eq(org.eclipse.jgit.transport.URIish.getPath(), org.eclipse.jgit.transport.URIish.getPath())))\n    return false;\n"},"variableMap":{"b":"b","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:577","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.transport.URIish.(org.eclipse.jgit.transport.URIish.eq(org.eclipse.jgit.transport.URIish.getScheme(), org.eclipse.jgit.transport.URIish.getScheme())))\n    return false;\n"},"status":0},{"failures":[126,127,128,129,130,131,132,25,26,27,28,29,30,31,133,32,33,34,35,36,37,134,135,136,137,138,139,51,52,53,54,61,62,63,64,140,141,142,10,11,12,13,143,144,145,146,147,86,87,88,89,90,91,92,93,94,95,96,97,98,99,148,149,150,151,152,153,154,155],"tindex":"38576d79-4c70-11e5-a5bf-a1f635857c01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevTag:156","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.lookupAny(org.eclipse.jgit.revwalk.RevWalk.org.eclipse.jgit.lib.MutableObjectId, int)"},"status":-1},{"failures":[156,157,158,159,148,160,161,162,163,164,165],"tindex":"38576d7a-4c70-11e5-a5bf-276f86d310cc","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:165","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.DateRevQueue.Entry = null"},"variableMap":{"head":"q"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:122","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.DateRevQueue.Entry = org.eclipse.jgit.revwalk.DateRevQueue.Entry.org.eclipse.jgit.revwalk.DateRevQueue.Entry"},"status":-1},{"failures":[],"tindex":"38576d7b-4c70-11e5-a5bf-ef96e6868dd4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:471","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.util.zip.DataFormatException();\n"},"variableMap":{"n":"nthByOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:135","type":"CtForImpl","sourcecode":"for (int int = int[][int] ; int > 0 ; int = int[][int]) {\n    final int int = int - 1;\n    final long long = long[][int];\n    int int = int++;\n    for ( ; int < int ; int--) {\n        if (long > (long[][int[][(int - 1)]]))\n            break;\n        \n        int[][int] = int[][(int - 1)];\n    }\n    int[][int] = int;\n}"},"status":-2},{"failures":[],"tindex":"38576d7c-4c70-11e5-a5bf-dda585a82e6c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:243","type":"CtIfImpl","sourcecode":"if ((++(int)) >= (1 << (int)))\n    throw new java.util.NoSuchElementException();\n"},"variableMap":{"dirIdx":"current","bits":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:166","type":"CtIfImpl","sourcecode":"if (int != (org.eclipse.jgit.diff.Edit.getBeginA())) {\n    org.eclipse.jgit.merge.MergeResult<S>.add(0, int, org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n} "},"status":0},{"failures":[166,167,168,169,170,171,172,173,174],"tindex":"3857948d-4c70-11e5-a5bf-23eab323ba06","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:224","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{"srcParent":"headCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:176","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)) {\n    if (org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.revwalk.RevCommit.getTree().getId(), org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()))\n        continue;\n    \n    org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.revwalk.RevCommit.getTree() , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n    org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n    org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n    org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.revwalk.RevCommit>.getRepository()).commit().setMessage(java.lang.String).setReflogComment((\"revert: \" + java.lang.String)).call();\n    java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit;\n} else {\n    java.util.List<java.lang.String> = org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths();\n    java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> = org.eclipse.jgit.merge.ResolveMerger.getFailingPaths();\n    if (java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> != null)\n        org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n    else\n        org.eclipse.jgit.api.MergeResult = new org.eclipse.jgit.api.MergeResult(null , org.eclipse.jgit.merge.ResolveMerger.getBaseCommitId() , new org.eclipse.jgit.lib.ObjectId[]{ org.eclipse.jgit.revwalk.RevCommit.getId() , org.eclipse.jgit.revwalk.RevCommit.getId() } , org.eclipse.jgit.api.MergeResult.MergeStatus.org.eclipse.jgit.api.MergeResult.MergeStatus , org.eclipse.jgit.merge.MergeStrategy , org.eclipse.jgit.merge.ResolveMerger.getMergeResults() , java.util.Map<java.lang.String, org.eclipse.jgit.merge.ResolveMerger.MergeFailureReason> , null);\n    \n    if ((!(org.eclipse.jgit.merge.ResolveMerger.failed())) && (!(java.util.List<java.lang.String>.isEmpty()))) {\n        java.lang.String java.lang.String = new org.eclipse.jgit.merge.MergeMessageFormatter().formatWithConflicts(java.lang.String, org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths());\n        org.eclipse.jgit.lib.Repository.writeRevertHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n        org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String);\n    } \n    return null;\n}"},"status":-1},{"failures":[],"tindex":"3857bb9e-4c70-11e5-a5bf-e3ff4c73a0e8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:294","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(((java.lang.String.length()) - 1))) == '/')\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n"},"variableMap":{"remoteUrl":"org.eclipse.jgit.internal.storage.file.RefDirectory.PACKED_REFS_PEELED"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefWriter:158","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.io.StringWriter.write(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String);\n    if (boolean)\n        java.io.StringWriter.write(org.eclipse.jgit.internal.storage.file.RefDirectory.java.lang.String);\n    \n    java.io.StringWriter.write('\\n');\n} "},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}