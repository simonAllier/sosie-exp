{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":213,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":170,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":126,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":119,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":226,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart":103,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":135,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":31,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":129,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":75,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":237,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":147,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":39,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":41,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":30,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":38,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":115,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":1,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":233,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":93,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":203,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":36,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":145,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":236,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":102,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":127,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":148,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":242,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":101,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":199,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":100,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":231,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":128,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":251,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":43,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":117,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":133,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":58,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":72,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":149,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":141,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":210,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":27,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":177,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":112,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":201,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":206,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":222,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":99,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":12,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":68,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":18,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":61,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":167,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":187,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":76,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":97,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":44,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":40,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":163,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":250,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":6,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":228,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":49,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":161,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":132,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":110,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":95,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":197,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":14,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":229,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":42,"org.eclipse.jgit.api.GitConstructionTest.testClose":77,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":160,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":173,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":188,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":48,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":3,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":159,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":108,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":234,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":169,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":196,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":74,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":88,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":171,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":198,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":125,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":114,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":158,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":139,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":84,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":96,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":28,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":153,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":137,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":136,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":33,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":55,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":205,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":90,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":211,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":143,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":192,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":20,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":175,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":91,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":10,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":144,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":7,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":162,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":219,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":220,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":120,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":194,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":111,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":243,"org.eclipse.jgit.api.FetchCommandTest.testFetch":66,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":208,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":59,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":130,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":123,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":238,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":24,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":151,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":189,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":21,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":35,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":62,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":239,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":146,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":15,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":5,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":89,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":246,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":191,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":37,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":124,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":121,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":29,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":152,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":172,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":195,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":73,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":142,"org.eclipse.jgit.api.PushCommandTest.testPush":82,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":207,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":107,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":247,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":118,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":109,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":245,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":184,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":94,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":104,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":185,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":183,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":81,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":131,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":140,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":182,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":25,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":23,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":176,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":65,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":64,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":174,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":165,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":2,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":240,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":69,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":34,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":113,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":116,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":138,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree2":168,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":134,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":241,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":122,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":204,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":4,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":47,"org.eclipse.jgit.api.GitConstructionTest.testWrap":79,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":227,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":9,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":50,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":154,"org.eclipse.jgit.api.GitConstructionTest.testOpen":78,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":225,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":190,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":92,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":19,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":98,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":217,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":106,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":46,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":166,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":67,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":232,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":248,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":70,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":249,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":22,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":200,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":164,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":45,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":230,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":11,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":214,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":244,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":83,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":0,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":235,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":105,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":57,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":56,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":80,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":150,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":16,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":85,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":60,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":223,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":215,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":181,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":221,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":180,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":224,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":51,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":179,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":178,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":53,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":54,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":186,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":218,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":87,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":156,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":193,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":209,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":71,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":157,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":8,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":212,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":26,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":202,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":63,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":86,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":216,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":155,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":52},"transformations":[{"failures":[],"tindex":"c3fe6ed0-4c34-11e5-842f-f10354032ef4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndex:131","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:125","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.eclipse.jgit.patch.FileHeader.byte[]"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,77,78,78,79,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"c4181151-4c34-11e5-842f-ef606632a024","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:428","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    return ;\n} "},"variableMap":{"entrySpan":"available"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:159","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    boolean = true;\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"c41c08f2-4c34-11e5-842f-6f95234eacc9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:223","type":"CtUnaryOperatorImpl","sourcecode":"--long"},"variableMap":{"v":"position"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:313","type":"CtAssignmentImpl","sourcecode":"long = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.alignToBlock(long)"},"status":0},{"failures":[5,80,81,82,83,84,85],"tindex":"c41c08f3-4c34-11e5-842f-797e2a2cf041","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:161","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.ReceivePack.service()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.ReceivePack:160","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.transport.ReceivePack.service();\n} finally {\n    try {\n        org.eclipse.jgit.transport.BaseReceivePack.close();\n    } finally {\n        org.eclipse.jgit.transport.BaseReceivePack.release();\n    }\n}"},"status":-1},{"failures":[],"tindex":"c41c08f4-4c34-11e5-842f-b34b03b8c2da","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.TreeEntry:154","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Tree.addEntry(this)"},"variableMap":{"t":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TreeEntry:246","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.TreeEntry != null) {\n    org.eclipse.jgit.lib.TreeEntry.appendFullName(java.lang.StringBuilder);\n    if ((java.lang.StringBuilder.length()) > 0) {\n        java.lang.StringBuilder.append('/');\n    } \n} "},"status":-2},{"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,46,47,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,55,59,138,139,140,141,142,143,144,145,146,147],"tindex":"c41c3005-4c34-11e5-842f-655294498c04","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:138","type":"CtLocalVariableImpl","sourcecode":"int int = int++"},"variableMap":{"nthByOffset":"theirsBeginB"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:257","type":"CtLocalVariableImpl","sourcecode":"int int = int - (int - int)"},"status":-1},{"failures":[],"tindex":"c41c3006-4c34-11e5-842f-6b1046d5e33b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:519","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.System.currentTimeMillis()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackReverseIndex:111","type":"CtLocalVariableImpl","sourcecode":"final long long = org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry.getOffset()"},"status":-2},{"failures":[],"tindex":"c41c3007-4c34-11e5-842f-311fa53c07ec","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.BlameCommand:276","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], 0, int)"},"variableMap":{"read":"length","buffer":"org.eclipse.jgit.patch.FileHeader.NEW_FILE_MODE","copy":"org.eclipse.jgit.patch.FileHeader.DISSIMILARITY_INDEX"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:419","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2},{"failures":[148,149,150,151,152],"tindex":"c41c5718-4c34-11e5-842f-5bbdcde82bd2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.FanoutBucket:125","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.NoteBucket == null)\n    return null;\n"},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:127","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.NoteBucket instanceof org.eclipse.jgit.notes.InMemoryNoteBucket)\n    return ((org.eclipse.jgit.notes.InMemoryNoteBucket)(org.eclipse.jgit.notes.NoteBucket));\n"},"status":-1},{"failures":[],"tindex":"c41c7e29-4c34-11e5-842f-a50e151d1072","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:291","type":"CtIfImpl","sourcecode":"if (int == 0)\n    break TRY_LOCATIONS;\n"},"variableMap":{"np":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:184","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(int)"},"status":-2},{"failures":[],"tindex":"c41e2bda-4c34-11e5-842f-0b060ce870b9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:616","type":"CtIfImpl","sourcecode":"if ((boolean) & boolean)\n    break SEND_HAVES;\n"},"variableMap":{"receivedReady":"canDispose","noDone":"boundary"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:147","type":"CtIfImpl","sourcecode":"if (boolean) {\n    ((org.eclipse.jgit.revwalk.PendingGenerator)(org.eclipse.jgit.revwalk.Generator)).boolean = false;\n} "},"status":-2},{"failures":[],"tindex":"c41e2bdb-4c34-11e5-842f-d5d3df91d41d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:413","type":"CtLocalVariableImpl","sourcecode":"final java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File)"},"variableMap":{"tmpIdx":"of"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:794","type":"CtLocalVariableImpl","sourcecode":"java.io.FileOutputStream java.io.FileOutputStream = new java.io.FileOutputStream(java.io.File)"},"status":0},{"failures":[],"tindex":"c41e2bdc-4c34-11e5-842f-47d60883b3e3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:157","type":"CtIfImpl","sourcecode":"if (int == '\\n')\n    break;\n"},"variableMap":{"c":"headIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:152","type":"CtForImpl","sourcecode":"for (int int = org.eclipse.jgit.revwalk.BlockRevQueue.Block.int ; int < (org.eclipse.jgit.revwalk.BlockRevQueue.Block.int) ; int++)\n    org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.RevCommit[][int].int &= int;"},"status":-2},{"failures":[],"tindex":"c41e2bdd-4c34-11e5-842f-8105e8aa4573","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1164","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:91","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,21,22,23,24,26,27,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,77,94,95,80,81,82],"tindex":"c41e52ee-4c34-11e5-842f-91b2cd8de4c6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:286","type":"CtLocalVariableImpl","sourcecode":"final java.io.File java.io.File = new java.io.File(new java.io.File(java.io.File , \".ssh\") , \"known_hosts\")"},"variableMap":{"home":"packDirectory"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:761","type":"CtLocalVariableImpl","sourcecode":"final java.io.File java.io.File = new java.io.File(java.io.File , java.lang.String)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}