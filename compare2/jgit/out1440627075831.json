{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":188,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openRepoBadArgs":119,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog":131,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":225,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":224,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":115,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":11,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testCheckout":130,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":103,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":44,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications":265,"org.eclipse.jgit.util.FileUtilTest.testDeleteNotEmptyTreeNotOk":79,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting":182,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":4,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":40,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDeleteNonExisting":249,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":74,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":171,"org.eclipse.jgit.util.FileUtilTest.testMkdir":77,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":122,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":154,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttempts":256,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster":210,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":230,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":43,"org.eclipse.jgit.transport.NetRCTest.testNetRCDefault":235,"org.eclipse.jgit.transport.OpenSshConfigTest.testQuoteParsing":259,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":51,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":162,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":164,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":38,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":213,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testModifySettings":100,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":75,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":219,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine":136,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":229,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testNotIgnoreNonExistingObjects":101,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster":208,"org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases":236,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":218,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefKeySameAsName":161,"org.eclipse.jgit.lib.RepositoryCacheTest.testCacheRegisterOpen":58,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":184,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":90,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":168,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":178,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsSet":254,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1":85,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":125,"org.eclipse.jgit.lib.RefTest.testResolvedSymRef":26,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritBatchMode":255,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2":86,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":245,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test025_computeSha1NoStore":113,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":24,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":223,"org.eclipse.jgit.lib.T0002_TreeTest.test004_addTree":61,"org.eclipse.jgit.lib.T0002_TreeTest.test000_sort_05":70,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":192,"org.eclipse.jgit.lib.T0002_TreeTest.test000_sort_04":69,"org.eclipse.jgit.lib.T0002_TreeTest.test000_sort_03":68,"org.eclipse.jgit.lib.T0002_TreeTest.test000_sort_02":67,"org.eclipse.jgit.lib.T0002_TreeTest.test000_sort_01":66,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":274,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":228,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":35,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":202,"org.eclipse.jgit.lib.T0002_TreeTest.test005_addRecursiveTree":64,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test001_Initalize":117,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":186,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":146,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":126,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":226,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjects":99,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUpToDate":243,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_badConnectionAttempts":264,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":118,"org.eclipse.jgit.lib.RepositoryCacheTest.testNonBareFileKey":56,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":2,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit":215,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":272,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":6,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":110,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":142,"org.eclipse.jgit.lib.T0002_TreeTest.test005_addRecursiveFile":63,"org.eclipse.jgit.lib.RepositoryCacheTest.testBareFileKey":55,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":206,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":160,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":36,"org.eclipse.jgit.api.GitConstructionTest.testClose":9,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsKeywordCaseInsensitive":261,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":145,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch":216,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":114,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":203,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":191,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":193,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":177,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":81,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":120,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":144,"org.eclipse.jgit.transport.TransportTest.testSpi":267,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit":257,"org.eclipse.jgit.transport.OpenSshConfigTest.testSeparatorParsing":260,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":41,"org.eclipse.jgit.lib.T0002_TreeTest.test002_addFile":72,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed":207,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testContructor":98,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":112,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":159,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test30_stripWorkDir":107,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":189,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_DoesNotMatch":253,"org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo":15,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":8,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":163,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":143,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":165,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":22,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":179,"org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenExisting":59,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":141,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":148,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":175,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":185,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":124,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":153,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":87,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":166,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber":135,"org.eclipse.jgit.util.FileUtilTest.testDeleteNotEmptyTreeNotOkButIgnoreFail":80,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":60,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":147,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom":158,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled":252,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":278,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_nonexisting":33,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches":212,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists":150,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_PreferredAuthentications":263,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":240,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":156,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":52,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test007_Open":116,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":181,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardUnknownObject":247,"org.eclipse.jgit.util.FileUtilTest.testDeleteEmptyTreeOk":78,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":46,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet":128,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemoteVsForce":241,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":194,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag":204,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":47,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":269,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":244,"org.eclipse.jgit.internal.storage.file.ReflogWriterTest.shouldFilterLineFeedFromMessage":138,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":220,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":277,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":151,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":5,"org.eclipse.jgit.transport.TransportTest.testLocalTransportWithRelativePath":273,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":176,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":190,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":7,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":157,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":82,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_invalidConnectionAttempts":262,"org.eclipse.jgit.api.PushCommandTest.testPush":20,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":180,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":108,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":221,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":1,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.testShouldAutomagicallyDetectGitDirectory":149,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":129,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":54,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":97,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":102,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":96,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet":105,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":19,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine":137,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":95,"org.eclipse.jgit.lib.T0002_TreeTest.test007_manyFileLookup":65,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":89,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":84,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":276,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":3,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_BatchModeYes":258,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":49,"org.eclipse.jgit.lib.RefTest.testResolvedNamesBranch":28,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":83,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree2":106,"org.eclipse.jgit.lib.RefTest.testRemoteNames":29,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":50,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":172,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted":76,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches":209,"org.eclipse.jgit.lib.T0002_TreeTest.test008_SubtreeInternalSorting":71,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":0,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir":13,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":34,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD":174,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":152,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":198,"org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen":57,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":10,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testEmptyIteratorOnEmptyDirectory":139,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":195,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDelete":239,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":25,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii":121,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":266,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":268,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":197,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":88,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":39,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom":173,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":222,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":227,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":167,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked":111,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":275,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":37,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress":132,"org.eclipse.jgit.transport.NetRCTest.testNetRCFile":234,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":231,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":53,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":196,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":21,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster":214,"org.eclipse.jgit.lib.RefTest.testReadLooseRef":30,"org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked":32,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":42,"org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile":17,"org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef":31,"org.eclipse.jgit.transport.PushProcessTest.testPushResult":246,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":270,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemote":237,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":127,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":18,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":73,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom":169,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":23,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":250,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":134,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":232,"org.eclipse.jgit.lib.T0002_TreeTest.test001_createEmpty":62,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe":45,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":94,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":242,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":93,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet":109,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":217,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":271,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":92,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward":248,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":91,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":27,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":104,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri":205,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testNoLog":133,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":155,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":183,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":200,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test012_SubtreeExternalSorting":123,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch":211,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":140,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":201,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":187,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject":238,"org.eclipse.jgit.api.AddCommandTest.testAddFolder":16,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_existing":48,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":170,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":233,"org.eclipse.jgit.transport.PushProcessTest.testUpdateCreateRef":251,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":12,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":199},"transformations":[{"failures":[0],"tindex":"5e9b6179-4c3f-11e5-b3bc-ebf81e41ba59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:435","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int)"},"status":-1},{"failures":[],"tindex":"5e9b888a-4c3f-11e5-b3bc-55601ad1a815","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:152","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.patch.FileHeader.PatchType = org.eclipse.jgit.patch.FileHeader.PatchType"},"variableMap":{"patchType":"patchType","type":"org.eclipse.jgit.patch.FileHeader.PatchType.GIT_BINARY"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:308","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.patch.FileHeader.org.eclipse.jgit.patch.FileHeader.PatchType = org.eclipse.jgit.patch.FileHeader.PatchType.org.eclipse.jgit.patch.FileHeader.PatchType"},"status":-2},{"failures":[],"tindex":"5e9b888b-4c3f-11e5-b3bc-cd4a70511d20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:414","type":"CtInvocationImpl","sourcecode":"new org.eclipse.jgit.transport.RefSpec().setSource(org.eclipse.jgit.lib.Ref.getName()).setDestination(org.eclipse.jgit.lib.Ref.getName())"},"status":0},{"failures":[],"tindex":"5e9b888c-4c3f-11e5-b3bc-ed22378c9437","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.ignore.internal.Strings:154","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf('*')"},"variableMap":{"pattern":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:141","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(']')"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"tindex":"5e9baf9d-4c3f-11e5-b3bc-416ce150ab3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:248","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.org.eclipse.jgit.util.FileUtils.mkdir(java.io.File, false)"},"status":-1},{"failures":[],"tindex":"5e9baf9e-4c3f-11e5-b3bc-abb246bcd19f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.RecursiveMerger:249","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(int, org.eclipse.jgit.revwalk.RevCommit.getCommitTime())"},"variableMap":{"p":"c","time":"org.eclipse.jgit.revwalk.MergeBaseGenerator.POPPED"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:174","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int"},"status":-2},{"failures":[],"tindex":"5e9baf9f-4c3f-11e5-b3bc-d3b01f0c0c08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:150","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n    if (int != (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        org.eclipse.jgit.merge.MergeResult<S>.add(0, int, org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    } \n    org.eclipse.jgit.merge.MergeResult<S>.add(1, org.eclipse.jgit.diff.Edit.getBeginB(), org.eclipse.jgit.diff.Edit.getEndB(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    int = org.eclipse.jgit.diff.Edit.getEndA();\n    org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n} else if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n    if (int != (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        org.eclipse.jgit.merge.MergeResult<S>.add(0, int, org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    } \n    org.eclipse.jgit.merge.MergeResult<S>.add(2, org.eclipse.jgit.diff.Edit.getBeginB(), org.eclipse.jgit.diff.Edit.getEndB(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    int = org.eclipse.jgit.diff.Edit.getEndA();\n    org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n} else {\n    if (((org.eclipse.jgit.diff.Edit.getBeginA()) != int) && ((org.eclipse.jgit.diff.Edit.getBeginA()) != int)) {\n        org.eclipse.jgit.merge.MergeResult<S>.add(0, int, java.lang.Math.min(org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.diff.Edit.getBeginA()), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    } \n    int int = org.eclipse.jgit.diff.Edit.getBeginB();\n    int int = org.eclipse.jgit.diff.Edit.getBeginB();\n    if ((org.eclipse.jgit.diff.Edit.getBeginA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        int -= (org.eclipse.jgit.diff.Edit.getBeginA()) - (org.eclipse.jgit.diff.Edit.getBeginA());\n    } else {\n        int -= (org.eclipse.jgit.diff.Edit.getBeginA()) - (org.eclipse.jgit.diff.Edit.getBeginA());\n    }\n    org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n    org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n    for ( ;  ; ) {\n        if ((org.eclipse.jgit.diff.Edit.getEndA()) >= (org.eclipse.jgit.diff.Edit.getBeginA())) {\n            org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n            org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n        } else if ((org.eclipse.jgit.diff.Edit.getEndA()) >= (org.eclipse.jgit.diff.Edit.getBeginA())) {\n            org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n            org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n        } else {\n            break;\n        }\n    }\n    int int = org.eclipse.jgit.diff.Edit.getEndB();\n    int int = org.eclipse.jgit.diff.Edit.getEndB();\n    if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getEndA())) {\n        int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n    } else {\n        int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n    }\n    int int = int - int;\n    int int = int - (int - int);\n    if (int > 0)\n        int -= int;\n    \n    int int = 0;\n    while ((int < int) && (org.eclipse.jgit.diff.SequenceComparator<S>.equals(S, (int + int), S, (int + int))))\n        int++;\n    int -= int;\n    int int = 0;\n    while ((int < int) && (org.eclipse.jgit.diff.SequenceComparator<S>.equals(S, ((int - int) - 1), S, ((int - int) - 1))))\n        int++;\n    int -= int;\n    if (int > 0)\n        org.eclipse.jgit.merge.MergeResult<S>.add(1, int, (int + int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    \n    if ((int > 0) || (int != 0)) {\n        org.eclipse.jgit.merge.MergeResult<S>.add(1, (int + int), (int - int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        org.eclipse.jgit.merge.MergeResult<S>.add(2, (int + int), (int - int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    } \n    if (int > 0)\n        org.eclipse.jgit.merge.MergeResult<S>.add(1, (int - int), int, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    \n    int = java.lang.Math.max(org.eclipse.jgit.diff.Edit.getEndA(), org.eclipse.jgit.diff.Edit.getEndA());\n    org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n    org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n}"},"status":-2},{"failures":[],"tindex":"5e9bd6b0-4c3f-11e5-b3bc-e132be952b3d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ConfigSnapshot:94","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.String> == null)\n    return java.util.Collections.emptySet();\n"},"variableMap":{"r":"assumeUnchanged"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:684","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.lang.String>"},"status":-2},{"failures":[23,277],"tindex":"5e9bd6b1-4c3f-11e5-b3bc-137f317b9ac4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:198","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (boolean)\n        org.eclipse.jgit.transport.BasePackPushConnection.readStatusReport(java.util.Map<java.lang.String, org.eclipse.jgit.transport.RemoteRefUpdate>);\n    \n    if (boolean) {\n        int int = java.io.InputStream.read();\n        if (0 <= int)\n            throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.URIish , java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Character.valueOf(((char)(int)))));\n        \n    } \n} "},"status":-1},{"failures":[278],"tindex":"5e9bd6b2-4c3f-11e5-b3bc-25301f967b37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RenameBranchCommand:165","type":"CtIfImpl","sourcecode":"if ((java.lang.String[].int) > 0) {\n    java.lang.String[] java.lang.String[] = new java.lang.String[(java.lang.String[].int) + (java.lang.String[].int)];\n    java.lang.System.arraycopy(java.lang.String[], 0, java.lang.String[], 0, java.lang.String[].int);\n    java.lang.System.arraycopy(java.lang.String[], 0, java.lang.String[], java.lang.String[].int, java.lang.String[].int);\n    java.lang.String[] = java.lang.String[];\n} "},"status":-1},{"failures":[],"tindex":"5e9bfdc3-4c3f-11e5-b3bc-8f38d4d8f1b1","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.NB:62","type":"CtLocalVariableImpl","sourcecode":"final int int = (int >>> 1) - (int >>> 1)"},"variableMap":{"a":"cnt","b":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:348","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.InputStream.read(byte[], int, int)"},"status":-2},{"failures":[],"tindex":"5e9bfdc4-4c3f-11e5-b3bc-17c83fa89b6b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:299","type":"CtLocalVariableImpl","sourcecode":"int int = 100"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:220","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.lastIndexOf('/')"},"status":-2},{"failures":[],"tindex":"5e9bfdc5-4c3f-11e5-b3bc-2da03998df38","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:377","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.seek(0)"},"variableMap":{"out":"fd"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:628","type":"CtInvocationImpl","sourcecode":"java.io.RandomAccessFile.close()"},"status":0},{"failures":[],"tindex":"5e9bfdc6-4c3f-11e5-b3bc-871d406dd33c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:313","type":"CtIfImpl","sourcecode":"if ((0 < int) && (int < int))\n    int = (int / int) * int;\nelse if (int <= 0)\n    int = int;\n"},"variableMap":{"bs":"length","wantSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:684","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.get();\n    final org.eclipse.jgit.internal.storage.file.PackFile[] org.eclipse.jgit.internal.storage.file.PackFile[] = org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[];\n    final int int = org.eclipse.jgit.internal.storage.file.ObjectDirectory.org.eclipse.jgit.internal.storage.file.ObjectDirectory.indexOf(org.eclipse.jgit.internal.storage.file.PackFile[], org.eclipse.jgit.internal.storage.file.PackFile);\n    if (int < 0)\n        break;\n    \n    final org.eclipse.jgit.internal.storage.file.PackFile[] org.eclipse.jgit.internal.storage.file.PackFile[] = new org.eclipse.jgit.internal.storage.file.PackFile[(org.eclipse.jgit.internal.storage.file.PackFile[].int) - 1];\n    java.lang.System.arraycopy(org.eclipse.jgit.internal.storage.file.PackFile[], 0, org.eclipse.jgit.internal.storage.file.PackFile[], 0, int);\n    java.lang.System.arraycopy(org.eclipse.jgit.internal.storage.file.PackFile[], (int + 1), org.eclipse.jgit.internal.storage.file.PackFile[], int, ((org.eclipse.jgit.internal.storage.file.PackFile[].int) - int));\n    org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = new org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.FileSnapshot , org.eclipse.jgit.internal.storage.file.PackFile[]);\n} while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.compareAndSet(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList, org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)) )"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}