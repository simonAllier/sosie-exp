{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":19,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":450,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":51,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":79,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":290,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":75,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":560,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":335,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":360,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":234,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":303,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":407,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":31,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":449,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":340,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":633,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":311,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":257,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":354,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":46,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting":463,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":258,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":370,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":635,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects":649,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":381,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":158,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":479,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":457,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":54,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":550,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":30,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":87,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":634,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":152,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":556,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":7,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":130,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":265,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":151,"org.eclipse.jgit.merge.CherryPickTest.testRevert":45,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":477,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":639,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":82,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":357,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":63,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":120,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":150,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":149,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":137,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":18,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":414,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":433,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":640,"org.eclipse.jgit.api.BranchCommandTest.testDelete":438,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":12,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":352,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":441,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":215,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":216,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":78,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":2,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":618,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":619,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":214,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":638,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":481,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":583,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":485,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":557,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":50,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":245,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":114,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testRecursiveFiltering":263,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":314,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":252,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":53,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":260,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":546,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":575,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":382,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":476,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":4,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":323,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":284,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":52,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":282,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":217,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":218,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":219,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":409,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":96,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":408,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":376,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":470,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":620,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":90,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":621,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":139,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":614,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":337,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":198,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":261,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":287,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":592,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":615,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":24,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":200,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":199,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":312,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":593,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":582,"org.eclipse.jgit.api.GitConstructionTest.testClose":452,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":244,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":412,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":103,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":576,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":461,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":511,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":134,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":359,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":566,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":141,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":66,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":255,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":29,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":254,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":434,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":163,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":590,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":579,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":392,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":436,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":499,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":374,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":623,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":122,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":220,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":221,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":108,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":222,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":530,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":291,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":462,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":506,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":517,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":622,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddGetAndContains":647,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":613,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":612,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":196,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":195,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":197,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":427,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":489,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":99,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":439,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":40,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":584,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":160,"org.eclipse.jgit.lib.ObjectIdTest.testSetByte":644,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":295,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":524,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":276,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":534,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":526,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":230,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":553,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":229,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":231,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":629,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":628,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":129,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":415,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":70,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":491,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":286,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":564,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":512,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":328,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":394,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":341,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":588,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":306,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":493,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":610,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":429,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":192,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":611,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":194,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":430,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":193,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":48,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":437,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":338,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":372,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":632,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":307,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":289,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":68,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":373,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":121,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":540,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":153,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":241,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":482,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":418,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":569,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":49,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":235,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":367,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":377,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":166,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":396,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":401,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":606,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":384,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":551,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":243,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":503,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":533,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":104,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":172,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":170,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":589,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":398,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":609,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":608,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":41,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":190,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":259,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":189,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":144,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":305,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":6,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":191,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":164,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":292,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":143,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":358,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":500,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":383,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":14,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":391,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":559,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":510,"org.eclipse.jgit.api.GitConstructionTest.testWrap":454,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":36,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":413,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":456,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":65,"org.eclipse.jgit.api.TagCommandTest.testTagging":416,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":568,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":275,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":594,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":253,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":301,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":567,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":509,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":605,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":62,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":604,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":324,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":27,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":386,"org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging":420,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":446,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":169,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":356,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":11,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":298,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":157,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":186,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":76,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":238,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":498,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":607,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":188,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":25,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":187,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":293,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":536,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":637,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":34,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":467,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":616,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":201,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":617,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":203,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":202,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":466,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":69,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":5,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":388,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":113,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":279,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testNonRecursiveFiltering":264,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":326,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":525,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":492,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":315,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":581,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":266,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":537,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":81,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":602,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":180,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":529,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":603,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":43,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":248,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":159,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":336,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":42,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":175,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":176,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":304,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":22,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":177,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":178,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":179,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":528,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":361,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":435,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":184,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":183,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":185,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":58,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":465,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":428,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":561,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":115,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":544,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":146,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":72,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":300,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":585,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":123,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":570,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":366,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":378,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":424,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":527,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":600,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":554,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":599,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotOctal2":653,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":631,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotOctal1":652,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":309,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":643,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":308,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":523,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":80,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":28,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":182,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":181,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":548,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":128,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":577,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":33,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":89,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":132,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":26,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":641,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":165,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":573,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":630,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":538,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":105,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":107,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":313,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":571,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":47,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":469,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":572,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":133,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":399,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":596,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":542,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":636,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":598,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":174,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":597,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":385,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":515,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":521,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":468,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":88,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":127,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":411,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":38,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":135,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":522,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":601,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":395,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":64,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":532,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":97,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":246,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":518,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":410,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":60,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":444,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":136,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":322,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":402,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":274,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":353,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":327,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":545,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":162,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":20,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":423,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":451,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":478,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":310,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":288,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":23,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":240,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":464,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":422,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":106,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":118,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":250,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":281,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":331,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":332,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":339,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":138,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":368,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":486,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":209,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":213,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":405,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":212,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":278,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":520,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":211,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":210,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":459,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":270,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":271,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":535,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":558,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":85,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":539,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":578,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":549,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":334,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":348,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":390,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":403,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGetAndContains":650,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":513,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":98,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":400,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":473,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":448,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":393,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":497,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":56,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":8,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":404,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":9,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":242,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":154,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":126,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":55,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":365,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":364,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":86,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":586,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":15,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":296,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":325,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsent":648,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":1,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":10,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":94,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":516,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":351,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":268,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":543,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":267,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":471,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects":646,"org.eclipse.jgit.api.BlameCommandTest.testRename":330,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":480,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":283,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":297,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists":455,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":204,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":379,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":205,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":206,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":207,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":208,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":16,"org.eclipse.jgit.api.FetchCommandTest.testFetch":442,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":148,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":237,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":32,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":225,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":171,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":624,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":625,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":223,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":224,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":345,"org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes":39,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":61,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":147,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":472,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":168,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":272,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":329,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":432,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit":591,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":321,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":155,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":380,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":57,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":119,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":460,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":496,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":642,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":458,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":389,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations":494,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":371,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":344,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":156,"org.eclipse.jgit.api.PushCommandTest.testPush":504,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":167,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":91,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":35,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":37,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":277,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":299,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":440,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":227,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":84,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":228,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":587,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":347,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":555,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":626,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":117,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":627,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":116,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":226,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":475,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":580,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":77,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":369,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":161,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":445,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":93,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":421,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":100,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testEdgeCases":262,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":495,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":145,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":233,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":95,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":285,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":483,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":362,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":333,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":59,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":488,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":71,"org.eclipse.jgit.api.GitConstructionTest.testOpen":453,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":83,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit":355,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":552,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":547,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":346,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":239,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":574,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":21,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":343,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":484,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":501,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":101,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":232,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":350,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":319,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":320,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":443,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsent":645,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":316,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":302,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":317,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":249,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":318,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":425,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":102,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":247,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":375,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testIterator":651,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":508,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":269,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":140,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":487,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":92,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":505,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":387,"org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked":519,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":342,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":595,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":142,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":236,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":541,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":490,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":502,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":474,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":280,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":273,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":507,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":563,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":562,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":531,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":565,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":514,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":256,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":125,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":417,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":0,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":109,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":349,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":426,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":111,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":112,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":17,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":73,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":447,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":74,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":131,"org.eclipse.jgit.merge.CherryPickTest.testPick":44,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":67,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":294,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":173,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":397,"org.eclipse.jgit.api.TagCommandTest.testDelete":419,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":431,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":124,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":406,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":251,"org.eclipse.jgit.api.RevertCommandTest.testRevert":363,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":110},"transformations":[{"failures":[],"tindex":"0a7aed9e-4c24-11e5-ab81-51e24985b48e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:159","type":"CtIfImpl","sourcecode":"if (int == 0)\n    continue;\n"},"variableMap":{"h":"pathOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:336","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.TreeFormatter.append(byte[], int, ((byte[].int) - int), org.eclipse.jgit.dircache.DirCacheEntry.getFileMode(), org.eclipse.jgit.dircache.DirCacheEntry.idBuffer(), org.eclipse.jgit.dircache.DirCacheEntry.idOffset())"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"0a7aed9f-4c24-11e5-ab81-3374895cb6bb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:239","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit[][int].org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[]"},"variableMap":{"pList":"pList","org.eclipse.jgit.revwalk.RevCommit.NO_PARENTS":"pList","i":"length","parents":"pList"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:184","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[(org.eclipse.jgit.revwalk.RevCommit[].int) + 32]"},"status":-1},{"failures":[36],"tindex":"0a7b14b0-4c24-11e5-ab81-038c6c78b2bf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.LimitedInputStream:104","type":"CtUnaryOperatorImpl","sourcecode":"--(long)"},"variableMap":{"left":"position"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:619","type":"CtOperatorAssignmentImpl","sourcecode":"long += org.eclipse.jgit.internal.storage.dfs.DfsBlock.setInput(long, java.util.zip.Inflater)"},"status":-1},{"failures":[],"tindex":"0a7b14b1-4c24-11e5-ab81-0d2068a2ef35","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.InflaterCache:100","type":"CtUnaryOperatorImpl","sourcecode":"(org.eclipse.jgit.lib.InflaterCache.int)++"},"variableMap":{"org.eclipse.jgit.lib.InflaterCache.openInflaterCount":"org.eclipse.jgit.revwalk.PendingGenerator.SEEN"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:149","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.int |= org.eclipse.jgit.revwalk.PendingGenerator.int"},"status":-2},{"failures":[],"tindex":"0a7b14b2-4c24-11e5-ab81-f74cd151a1da","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:390","type":"CtLocalVariableImpl","sourcecode":"final int int = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)).getCommitTime()"},"variableMap":{"obj":"noteOn"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.FanoutBucket:210","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.notes.FanoutBucket.cell(org.eclipse.jgit.lib.AnyObjectId)"},"status":-2},{"failures":[],"tindex":"0a7b14b3-4c24-11e5-ab81-d331136d386f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:169","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    byte[][--int] = '0';\n    return int;\n} "},"variableMap":{"b":"org.eclipse.jgit.patch.Patch.SIG_FOOTER","value":"newLineCount","o":"nContext"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:288","type":"CtIfImpl","sourcecode":"if ((((int < int) && ((((int) + (org.eclipse.jgit.patch.HunkHeader.OldImage.int)) - 1) == (org.eclipse.jgit.patch.HunkHeader.OldImage.int))) && (((int) + (org.eclipse.jgit.patch.HunkHeader.OldImage.int)) == (int))) && (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.Patch.byte[])) >= 0)) {\n    (org.eclipse.jgit.patch.HunkHeader.OldImage.int)--;\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"0a7b14b4-4c24-11e5-ab81-51cf510a2294","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:157","type":"CtIfImpl","sourcecode":"if (int == '\\n')\n    break;\n"},"variableMap":{"c":"entryCnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.BaseDirCacheEditor:176","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache.replace(org.eclipse.jgit.dircache.DirCacheEntry[], int)"},"status":-2},{"failures":[],"tindex":"0a7b3bc5-4c24-11e5-ab81-8fcd6c875d3a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:550","type":"CtIfImpl","sourcecode":"if ((31 & int) != 0) {\n    continue;\n} "},"variableMap":{"havesSent":"off"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:139","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    org.eclipse.jgit.transport.SideBandInputStream.needDataPacket();\n    if (boolean)\n        break;\n    \n    final int int = java.io.InputStream.read(byte[], int, java.lang.Math.min(int, int));\n    if (int < 0)\n        break;\n    \n    int += int;\n    int += int;\n    int -= int;\n    int -= int;\n}"},"status":-2},{"failures":[],"tindex":"0a7b3bc6-4c24-11e5-ab81-d1da34e53bd2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.LongMap:88","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.LongMap.Node<V>.org.eclipse.jgit.transport.LongMap.Node<V> = org.eclipse.jgit.transport.LongMap.Node<V>.org.eclipse.jgit.transport.LongMap.Node<V>"},"variableMap":{"next":"n","prior":"n","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.LongMap:115","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.LongMap.Node<V>.org.eclipse.jgit.transport.LongMap.Node<V> = org.eclipse.jgit.transport.LongMap.Node<V>[][int]"},"status":-2},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,20,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264],"tindex":"0a7b3bc7-4c24-11e5-ab81-5fbe753e5a50","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:301","type":"CtAssignmentImpl","sourcecode":"int = (int * -1640562687) >>> 1"},"variableMap":{"key":"entryIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:338","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[265,266,267,58,59,268,269,60,270,271,272,273,61,274,275,276,0,277,278,46,279,280,281,282,283,284,285,286,287,107,288,3,289,108,290,78,79,80,291,292,293,294,295,296,297,81,298,299,300,82,301,302,303,304,86,305,306,87,307,308,309,310,311,312,313,314,315,83,84,85,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,88,341,342,343,344,345,346,89,90,91,92,347,4,348,349,350,351,93,352,353,5,354,355,6,356,357,358,359,360,361,362,363,364,365,366,367,368,94,95,369,370,371,372,96,373,374,375,376,98,377,99,100,378,379,380,381,382,383,384,385,386,122,123,124,387,125,126,127,128,129,388,130,131,389,390,391,392,393,394,395,396,97,397,398,399,400,401,402,403,404,405,406,407,102,103,104,408,409,410,411,412,413,414,105,20,415,416,417,418,419,420,421,422,423,106,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,452,453,453,454,454,455,456,457,458,459,7,10,15,460,461,462,16,463,17,464,465,466,467,136,468,137,469,470,471,472,473,474,475,138,476,477,478,479,480,481,482,483,484,485,486,487,488,109,110,111,112,489,490,113,491,492,114,493,115,116,117,494,495,496,119,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,118,512,120,513,514,515,516,121,517,518,22,519,520,132,521,522,133,523,134,135,23,27,28,29,524,525,526,527,139,140,141,142,528,529,143,144,530,145,146,147,531,532,148,533,149,150,534,151,152,153,154,155,156,157,158,535,159,536,537,538,160,539,161,540,541,542,543,544,162,545,163,546,547,548,164,165,166,549,550,551,552,167,168,553,554,555,556,557,558,559,560,233,561,234,562,563,564,565,566,235,236,567,568,569,570,237,238,571,572,573,239,240,241,242,243,574,244,245,246,575,247,248,576,249,577,250,578,251,252,579,580,253,581,582,583,584,585,586,587,588,169,170,171,172,173,174,589,590,591,592,593,594,595,175,176,177,178,179,596,597,598,599,600,601,602,603,180,181,182,604,605,183,184,185,606,607,186,187,188,608,609,189,190,191,610,611,192,193,194,612,613,195,196,197,614,615,198,199,200,616,617,201,202,203,204,205,206,207,208,209,210,211,212,213,618,619,214,215,216,620,621,217,218,219,622,623,220,221,222,624,625,223,224,225,626,627,226,227,228,628,629,229,230,231,232,630,631,632,633,634,635,636,637,638,639,640,641,642,643],"tindex":"0a7b62d8-4c24-11e5-ab81-97e89eec0507","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:726","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.internal.storage.file.RefDirectory.readRef(org.eclipse.jgit.lib.Ref.getName(), org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)"},"variableMap":{"dst":"ref","this":"this","packed":"packed"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:267","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.internal.storage.file.RefDirectory.resolve(org.eclipse.jgit.lib.Ref, 0, null, null, org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>)"},"status":-1},{"failures":[],"tindex":"0a7dfae9-4c24-11e5-ab81-1d117b4730ad","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:619","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.revwalk.RevObject>.add(org.eclipse.jgit.revwalk.RevBlob)"},"status":-2},{"failures":[644,645,646,647,648,649,650,651],"tindex":"0a7dfaea-4c24-11e5-ab81-2be6eb60f59e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:463","type":"CtIfImpl","sourcecode":"if (int >= 0)\n    return int;\n"},"variableMap":{"position":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.MutableObjectId:125","type":"CtReturnImpl","sourcecode":"return (int & -256) | int"},"status":-1},{"failures":[],"tindex":"0a7dfaeb-4c24-11e5-ab81-f3efd2fd9469","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.GitDateParser:93","type":"CtAssignmentImpl","sourcecode":"java.util.Map<org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.text.SimpleDateFormat> = new java.util.HashMap<org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.text.SimpleDateFormat>()"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:94","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.util.Locale, java.util.Map<org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.text.SimpleDateFormat>>.put(java.util.Locale, java.util.Map<org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.text.SimpleDateFormat>)"},"status":0},{"failures":[652,653],"tindex":"0a7dfaec-4c24-11e5-ab81-335ade5fe43a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:368","type":"CtIfImpl","sourcecode":"if ((byte < '0') || (byte > '7'))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid mode character\");\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}