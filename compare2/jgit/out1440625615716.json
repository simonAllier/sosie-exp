{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":48,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":121,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":58,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":171,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":140,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":111,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":5,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":146,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":148,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":109,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":25,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":145,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":61,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":53,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":26,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":16,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_Seek2IsEOF":101,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":150,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":187,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":7,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":71,"org.eclipse.jgit.util.RefMapTest.testRemove":0,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":82,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":93,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":158,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek3IsEOF":98,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":6,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":31,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":22,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":14,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":50,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":42,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":114,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":78,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":201,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_BackwardsTwo":97,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":190,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":137,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":59,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":68,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":173,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":112,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":125,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":151,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":147,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":162,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Forward":100,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":35,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":66,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":80,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":49,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":133,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":46,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":45,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":136,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":28,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue":47,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":33,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":197,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":198,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":149,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":75,"org.eclipse.jgit.transport.PackParserTest.test1":166,"org.eclipse.jgit.api.GitConstructionTest.testClose":123,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":24,"org.eclipse.jgit.transport.PackParserTest.test2":167,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":174,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":132,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts1":95,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":63,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwords_Prebuilts2":96,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":57,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsTwo":106,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":110,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":118,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":138,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":38,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":12,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":122,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":107,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":161,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":15,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_ForwardOneAtATime":99,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":184,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":120,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":168,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":51,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":83,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Backwards":104,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":203,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":52,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":156,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":18,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":195,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":21,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":39,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":4,"org.eclipse.jgit.api.FetchCommandTest.testFetch":113,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":188,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":30,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":32,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":91,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":175,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":73,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":55,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":74,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":43,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":88,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":143,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":191,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":23,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":199,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":65,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testTwoEntries_BackwardsOneAtATime":102,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":119,"org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage":170,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":144,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":3,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":37,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":108,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":139,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":9,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":56,"org.eclipse.jgit.api.PushCommandTest.testPush":10,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":69,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":44,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":20,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":160,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":87,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":27,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":29,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":2,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":178,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":90,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":194,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":193,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":164,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":62,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":115,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":142,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":79,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":85,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":64,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":131,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":86,"org.eclipse.jgit.api.GitConstructionTest.testWrap":124,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":41,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":128,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":179,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":152,"org.eclipse.jgit.api.GitConstructionTest.testOpen":17,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":176,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":202,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":126,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testThreeEntries_Seek2":94,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":130,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":134,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":157,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":70,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":116,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":89,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName":105,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":169,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":165,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":163,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":129,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":36,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":196,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":11,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":60,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":67,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":186,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":185,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve":127,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":1,"org.eclipse.jgit.lib.ConfigTest.testReadLong":81,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":200,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":189,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":172,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":8,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":159,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":180,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":182,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":141,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":183,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":154,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":135,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":155,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":40,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":84,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":92,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testOneEntry_Seek1IsEOF":103,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":192,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":117,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":177,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":72,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":153,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":76,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":54,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":77,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":181},"transformations":[{"failures":[0,1,2],"tindex":"f84daeb5-4c3b-11e5-afee-597008f78e64","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:155","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(org.eclipse.jgit.lib.Ref.getName())"},"variableMap":{"dst":"res","loose":"loose"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:203","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String)"},"status":-1},{"failures":[],"tindex":"f84daeb6-4c3b-11e5-afee-93aa9fa35900","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TreeFormatter:351","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"*** ERROR: \")"},"variableMap":{"r":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.errors.CheckoutConflictException:80","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n\")"},"status":0},{"failures":[],"tindex":"f84dd5c7-4c3b-11e5-afee-e3e1f2f575bd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:250","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Config.setString(org.eclipse.jgit.transport.RemoteConfig.java.lang.String, org.eclipse.jgit.transport.RemoteConfig.getName(), java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"f84dd5c8-4c3b-11e5-afee-f18ec6a2bc77","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.BlameCommand:241","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.RawText org.eclipse.jgit.diff.RawText"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:661","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.RawText org.eclipse.jgit.diff.RawText = org.eclipse.jgit.treewalk.CanonicalTreeParser == null ? org.eclipse.jgit.diff.RawText.org.eclipse.jgit.diff.RawText : org.eclipse.jgit.merge.ResolveMerger.org.eclipse.jgit.merge.ResolveMerger.getRawText(org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryObjectId(), org.eclipse.jgit.lib.ObjectReader)"},"status":-2},{"failures":[],"tindex":"f84dd5c9-4c3b-11e5-afee-5587428ce704","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:127","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.PlotCommitList<L>.setupChildren(org.eclipse.jgit.revplot.PlotCommit<L>)"},"status":-2},{"failures":[],"tindex":"f84dd5ca-4c3b-11e5-afee-a58a358b09ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:684","type":"CtDoImpl","sourcecode":"do {\n    org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.get();\n    final org.eclipse.jgit.internal.storage.file.PackFile[] org.eclipse.jgit.internal.storage.file.PackFile[] = org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.PackFile[];\n    final int int = org.eclipse.jgit.internal.storage.file.ObjectDirectory.org.eclipse.jgit.internal.storage.file.ObjectDirectory.indexOf(org.eclipse.jgit.internal.storage.file.PackFile[], org.eclipse.jgit.internal.storage.file.PackFile);\n    if (int < 0)\n        break;\n    \n    final org.eclipse.jgit.internal.storage.file.PackFile[] org.eclipse.jgit.internal.storage.file.PackFile[] = new org.eclipse.jgit.internal.storage.file.PackFile[(org.eclipse.jgit.internal.storage.file.PackFile[].int) - 1];\n    java.lang.System.arraycopy(org.eclipse.jgit.internal.storage.file.PackFile[], 0, org.eclipse.jgit.internal.storage.file.PackFile[], 0, int);\n    java.lang.System.arraycopy(org.eclipse.jgit.internal.storage.file.PackFile[], (int + 1), org.eclipse.jgit.internal.storage.file.PackFile[], int, ((org.eclipse.jgit.internal.storage.file.PackFile[].int) - int));\n    org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList = new org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList.org.eclipse.jgit.internal.storage.file.FileSnapshot , org.eclipse.jgit.internal.storage.file.PackFile[]);\n} while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList>.compareAndSet(org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList, org.eclipse.jgit.internal.storage.file.ObjectDirectory.PackList)) )"},"status":0},{"failures":[3,4,5,6,7,8,9,1,2,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"f84dfcdb-4c3b-11e5-afee-e13c23edbf3a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefMap:332","type":"CtIfImpl","sourcecode":"if (int == 0)\n    (int)++;\n"},"variableMap":{"cmp":"c","packedIdx":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1218","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    if (java.lang.Character.isWhitespace(((char)(int)))) {\n        boolean = true;\n        continue;\n    } \n    if ((';' == int) || ('#' == int)) {\n        org.eclipse.jgit.lib.Config.StringReader.reset();\n        break;\n    } \n} "},"status":-1},{"failures":[],"tindex":"f84dfcdc-4c3b-11e5-afee-a537963f1084","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:158","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.mkdirs(java.io.File.getParentFile(), true)"},"variableMap":{"lck":"identityFile"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:217","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"User\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"Port\", java.lang.String)) {\n    try {\n        final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n            if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n            \n    } catch (java.lang.NumberFormatException nfe) {\n    }\n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"IdentityFile\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File = org.eclipse.jgit.transport.OpenSshConfig.toFile(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"PreferredAuthentications\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.nows(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"BatchMode\", java.lang.String)) {\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.Boolean = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.yesno(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"StrictHostKeyChecking\", java.lang.String)) {\n    java.lang.String java.lang.String = org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String);\n    for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n        if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String) == null)\n            org.eclipse.jgit.transport.OpenSshConfig.Host.java.lang.String = java.lang.String;\n        \n} else if (org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(\"ConnectionAttempts\", java.lang.String)) {\n    try {\n        final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n        if (int > 0) {\n            for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n                if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                    org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n                \n        } \n    } catch (java.lang.NumberFormatException nfe) {\n    }\n} "},"status":-2},{"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,7,9,110,111,112,113,114,115,116,1,2,10,117,118,119,120,121,18,19,26,27,28,122,123,123,17,17,124,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,15,142,143,16,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,88,89,90,91,178,92,93,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,39,40,41,195,196,42,197,198,199,200,43,201,202,203,60,61,62,65,66],"tindex":"f84e23ed-4c3b-11e5-afee-0b64dd630377","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:342","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.AnyObjectId.org.eclipse.jgit.lib.AnyObjectId.writeRawInt(java.io.OutputStream, int)"},"status":-1},{"failures":[134,152,154],"tindex":"f84e23ee-4c3b-11e5-afee-c9ba43f4be6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:557","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<org.eclipse.jgit.lib.ObjectId>.isEmpty())) {\n    org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile = org.eclipse.jgit.internal.storage.file.GC.writePack(java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.Set<org.eclipse.jgit.lib.ObjectId>, java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriter.ObjectIdSet>);\n    if (org.eclipse.jgit.internal.storage.file.PackFile != null)\n        java.util.List<org.eclipse.jgit.internal.storage.file.PackFile>.add(org.eclipse.jgit.internal.storage.file.PackFile);\n    \n} "},"status":-1},{"failures":[],"tindex":"f84e23ef-4c3b-11e5-afee-d9dfcc7dbc68","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:158","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.Ref> java.util.List<org.eclipse.jgit.lib.Ref> = new java.util.ArrayList<org.eclipse.jgit.lib.Ref>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:123","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.Ref> java.util.List<org.eclipse.jgit.lib.Ref> = new java.util.LinkedList<org.eclipse.jgit.lib.Ref>()"},"status":-2},{"failures":[],"tindex":"f84e23f0-4c3b-11e5-afee-49a5333afa48","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFInputStream:145","type":"CtIfImpl","sourcecode":"if ((int) < 1)\n    return false;\n"},"variableMap":{"cnt":"tailIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.LIFORevQueue:97","type":"CtForImpl","sourcecode":"for (int int = org.eclipse.jgit.revwalk.BlockRevQueue.Block.int ; int < (org.eclipse.jgit.revwalk.BlockRevQueue.Block.int) ; int++)\n    if (((org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.RevCommit[][int].int) & int) == 0)\n        return false;\n    "},"status":-2},{"failures":[],"tindex":"f84e4b01-4c3b-11e5-afee-a11dab540c22","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TreeEntry:235","type":"CtReturnImpl","sourcecode":"return '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:284","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"f84e4b02-4c3b-11e5-afee-6d884363f63a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:340","type":"CtReturnImpl","sourcecode":"return (int) + ((int ^ (int)) & 1)"},"variableMap":{"minK":"newStartLine","k":"newStartLine"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:178","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"f84e4b03-4c3b-11e5-afee-e594964f4731","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefMap:411","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.lib.ObjectId != null) && (org.eclipse.jgit.lib.ObjectId != null)) && (org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId)))\n    return true;\n"},"variableMap":{"a":"resultTree","b":"resultTree"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:1041","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths().isEmpty()) && (!org.eclipse.jgit.merge.ResolveMerger.(failed()))) {\n    org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.dircache.DirCache.writeTree(org.eclipse.jgit.merge.Merger.getObjectInserter());\n    return true;\n} else {\n    org.eclipse.jgit.lib.ObjectId = null;\n    return false;\n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}