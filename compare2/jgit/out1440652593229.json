{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":643,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":802,"org.eclipse.jgit.api.RmCommandTest.testRemove":114,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":580,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":165,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":283,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":334,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":305,"org.eclipse.jgit.api.TagCommandTest.testEmptyTagName":312,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting":482,"org.eclipse.jgit.util.RefMapTest.testMerge_HeadMaster":588,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":227,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":794,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":455,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":447,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":138,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":576,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":434,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":325,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":380,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":462,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":575,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":27,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":627,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":615,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":59,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":111,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment":51,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster":622,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":177,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":583,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":345,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":561,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":331,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":801,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":852,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":233,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":342,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":381,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":577,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":378,"org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit":280,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":517,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":104,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches":827,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned":798,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":332,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":537,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":113,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":681,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":770,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":771,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":772,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":601,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":276,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":217,"org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames":311,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":768,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":293,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":769,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":338,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":158,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":816,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":817,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":851,"org.eclipse.jgit.api.GitConstructionTest.testClose":192,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":367,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":361,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":129,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":496,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":428,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile":553,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":399,"org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus":190,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":518,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":277,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":17,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":572,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":739,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":738,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":741,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":740,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":742,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":171,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":183,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":198,"org.eclipse.jgit.api.DescribeCommandTest.noTargetSet":150,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":806,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":696,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":382,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":409,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":846,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":53,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":394,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":791,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":790,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule":822,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":792,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":789,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":788,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":457,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":108,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":112,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":344,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":152,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":285,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":387,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":137,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference":631,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":611,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":274,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":330,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":692,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":262,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":480,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":500,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":69,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":266,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":445,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":568,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":249,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":353,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":691,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":125,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":48,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":102,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":521,"org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode":271,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":391,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":389,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":729,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":728,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":402,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":731,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":730,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":136,"org.eclipse.jgit.lib.RefTest.testResolvedNamesBranch":417,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":78,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":732,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":46,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":209,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":73,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":472,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted":355,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":4,"org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates":406,"org.eclipse.jgit.api.GitConstructionTest.testWrap":194,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":453,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit":563,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":697,"org.eclipse.jgit.api.RebaseCommandTest.testLeadingSpacesRebaseTodo":50,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":840,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":818,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":850,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":640,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":498,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":596,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":3,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":719,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":718,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":642,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":688,"org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging":319,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":91,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":388,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile":560,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":651,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":207,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":396,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":804,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":657,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":405,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":246,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":540,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":117,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":408,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF1":116,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":686,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":377,"org.eclipse.jgit.api.TagCommandTest.testDeleteBadName":318,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":439,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":685,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":809,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":529,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":512,"org.eclipse.jgit.util.RefMapTest.testPut_NoPrefix":585,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":698,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":699,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":700,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":701,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":702,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":130,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":721,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":720,"org.eclipse.jgit.api.NameRevCommandTest.ref":858,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":722,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":829,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":487,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":662,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":172,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":491,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":39,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":603,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":65,"org.eclipse.jgit.api.RebaseCommandTest.testOnlyCommentRebaseTodo":41,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":501,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":282,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":384,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":411,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":709,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a":708,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":115,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":711,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":710,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":327,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":140,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":567,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":109,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":398,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":578,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":321,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":674,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":349,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":690,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":79,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":47,"org.eclipse.jgit.api.CleanCommandTest.testClean":421,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":34,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":87,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":370,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":145,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":86,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":100,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":81,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":423,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":253,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":337,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":442,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":126,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":386,"org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail":263,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":260,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":478,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":559,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":214,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":284,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":244,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":80,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":84,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":712,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":92,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":20,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":426,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":348,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":352,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":413,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":548,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":833,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":536,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":839,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":40,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":541,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":167,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":616,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":265,"org.eclipse.jgit.util.RefListTest.testPutReplaceEntry":594,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":162,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":189,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":641,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":680,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":74,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":75,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":223,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":654,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":268,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":234,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit":629,"org.eclipse.jgit.util.RefMapTest.testClear":587,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":461,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":95,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":437,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":835,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":188,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":440,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":320,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":617,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":323,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":147,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":124,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":844,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":258,"org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags":309,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":220,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":254,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":460,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":570,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":463,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit":826,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":76,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":507,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":29,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":694,"org.eclipse.jgit.lib.ReflogResolveTest.resolveDate":412,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":574,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":135,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":855,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":475,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch":267,"org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog":279,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":269,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":261,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":333,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":301,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":831,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":237,"org.eclipse.jgit.api.BlameCommandTest.testRename":544,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":228,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase":664,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":481,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":22,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":99,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":569,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":290,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":639,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":191,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":219,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":401,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":638,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":637,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":636,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":836,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":543,"org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage":93,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":176,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":535,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":72,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":204,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":476,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":555,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":571,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":458,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations":202,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":248,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk":824,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":273,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":289,"org.eclipse.jgit.api.PushCommandTest.testPush":522,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":294,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":795,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":811,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":786,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":787,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":856,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":449,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":783,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":784,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":222,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":785,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":519,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase":670,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":582,"org.eclipse.jgit.util.RefMapTest.testEntryTypeSet":592,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":122,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":36,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":656,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":203,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":18,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":564,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":131,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":545,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":830,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":602,"org.eclipse.jgit.api.GitConstructionTest.testOpen":193,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":186,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":49,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":291,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":103,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":232,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":597,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":533,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":534,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom":473,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":547,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":530,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":531,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":513,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":532,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":360,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":424,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":821,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":195,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":168,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":832,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":295,"org.eclipse.jgit.lib.RefTest.testReadLooseRef":418,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":241,"org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked":420,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":557,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":819,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":14,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":98,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":520,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":635,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":679,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":525,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":492,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":432,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":259,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":242,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":609,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":373,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":170,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":8,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":606,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit":677,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":392,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":470,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":175,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":425,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":558,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":516,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits":825,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":6,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":488,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":166,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog":527,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.concurrentOnlyOneWritesPackedRefs":693,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":89,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":88,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":608,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":96,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":154,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":61,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testCheckout":526,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":97,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":133,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":359,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":842,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":143,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":655,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":676,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":272,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":336,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":200,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":32,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":471,"org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting":310,"org.eclipse.jgit.api.TagCommandTest.testInvalidTagName":316,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster":624,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":356,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":335,"org.eclipse.jgit.lib.IndexDiffTest.testStageState":82,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":464,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":67,"org.eclipse.jgit.util.RefMapTest.testPut_CollapseResolved":590,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":225,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":343,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":376,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":257,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":823,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":25,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":215,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":369,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":484,"org.eclipse.jgit.api.BranchCommandTest.testDelete":182,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":77,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":468,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":278,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":689,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":766,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":767,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":763,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":764,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":765,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":340,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":229,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference":647,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":509,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":671,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":146,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":579,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":614,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":43,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":661,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":201,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":224,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":297,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":684,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":90,"org.eclipse.jgit.util.RefListTest.testFindContainsGet":595,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":364,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":363,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":196,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues":238,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":12,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":743,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":745,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":744,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":747,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":144,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":746,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":508,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch":630,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":383,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":105,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":169,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":477,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":83,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":178,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":42,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":814,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":663,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":149,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":180,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":208,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":774,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":64,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":775,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":776,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":777,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile":21,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":264,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":479,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":524,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":773,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":803,"org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch":410,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":695,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":554,"org.eclipse.jgit.api.StashDropCommandTest.dropNegativeRef":156,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":107,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":853,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":35,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":407,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":454,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":841,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":433,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom":459,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches":626,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":245,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":307,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":494,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":256,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":542,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag":618,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":379,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":733,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":173,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":735,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":598,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":734,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":174,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":737,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":736,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":422,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":181,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":452,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":159,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":139,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":58,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":441,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":28,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":101,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":230,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":315,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":497,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":612,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":723,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":324,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":23,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":362,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":813,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":2,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":252,"org.eclipse.jgit.api.ResetCommandTest.testResetToNonexistingHEAD":275,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":16,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":110,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":427,"org.eclipse.jgit.util.RefMapTest.testPut_WithPrefix":591,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":15,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":60,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":403,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":148,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches":623,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":682,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":489,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":68,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":843,"org.eclipse.jgit.diff.HistogramDiffTest.testFallbackToMyersDiff":0,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD":474,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":368,"org.eclipse.jgit.api.TagCommandTest.testTagging":308,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":499,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead":287,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":538,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":397,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":127,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":550,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":128,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":467,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":810,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":436,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory":552,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":725,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":502,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":581,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":724,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":634,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":727,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":726,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":339,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":438,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":212,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":748,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":750,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":749,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":752,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":211,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":751,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":304,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackRepoWithNoRefs":605,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":599,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":375,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":678,"org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream":444,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom":469,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":85,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":185,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":713,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":430,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":715,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned":800,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":714,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":673,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":600,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":33,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":672,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":155,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":134,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":416,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":429,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri":619,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":179,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":9,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":610,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":431,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":354,"org.eclipse.jgit.util.RefMapTest.testMerge_WithPrefix":589,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":812,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":854,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":70,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":255,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":141,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":556,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":849,"org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned":584,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":350,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":633,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":717,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":716,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":45,"org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository":314,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":66,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":514,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues":236,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":292,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":326,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":504,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":646,"org.eclipse.jgit.util.RefMapTest.testMerge_PackedLooseLoose":586,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":503,"org.eclipse.jgit.util.RefMapTest.testRemove":593,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":216,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_a":703,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":705,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b":704,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":707,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":393,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":706,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":329,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":346,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":566,"org.eclipse.jgit.lib.RefTest.testResolvedSymRef":415,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":366,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":847,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":562,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":250,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":658,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":649,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":510,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":365,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":675,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":213,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":123,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":303,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":443,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":371,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":163,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":226,"org.eclipse.jgit.api.StashDropCommandTest.dropWithNoStashedCommits":157,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":142,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":395,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":486,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":506,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":5,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":106,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":660,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":160,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":820,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":668,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":758,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":667,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":573,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":666,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":665,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":357,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":762,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":565,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":761,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":796,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":760,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":620,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":759,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":834,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":515,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":848,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":446,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":153,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue":239,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderUntracked":351,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":298,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":119,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":120,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":121,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile":31,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":197,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":118,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed":621,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":164,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":151,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":669,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":206,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":465,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":243,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":63,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":62,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":539,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":807,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified":328,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":485,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":466,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":857,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommitted":322,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":38,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":828,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":218,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":683,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists":451,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":808,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":71,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":753,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":754,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":755,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":756,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":404,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":757,"org.eclipse.jgit.api.FetchCommandTest.testFetch":546,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":782,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":390,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":778,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":779,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":687,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":780,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":781,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":838,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":52,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit":815,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":435,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":205,"org.eclipse.jgit.dircache.DirCacheBasicTest.testDetectUnmergedPaths":94,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.repackEmptyRepo_noPackCreated":604,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":448,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":650,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":55,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":845,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":184,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":187,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":296,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":11,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":10,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":270,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":549,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":302,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":161,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":199,"org.eclipse.jgit.api.RebaseCommandTest.testParseRewordCommand":24,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":490,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LcsContainsUnique":1,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":57,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":231,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":372,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":281,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit":306,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":44,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":505,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":288,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":414,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":210,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":300,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":793,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":799,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":613,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":659,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":385,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":645,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":511,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned":797,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":13,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":235,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":450,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":523,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster":628,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":652,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":400,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":286,"org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef":419,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":374,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":341,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":632,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":653,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":221,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":493,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":837,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":495,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":313,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":299,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":648,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testNoLog":528,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":456,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":483,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":644,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":551,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch":625,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":247,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":607,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":805,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":251,"org.eclipse.jgit.api.TagCommandTest.testDelete":317,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":347,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":240,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":358,"org.eclipse.jgit.api.RevertCommandTest.testRevert":132},"transformations":[{"failures":[],"tindex":"c826df74-4c7a-11e5-a7ea-39249861eaef","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:205","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DelayRevQueue:86","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.Generator.next()"},"status":-2},{"failures":[0,1],"tindex":"c8270685-4c7a-11e5-a7ea-6518cb57876a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.LimitedInputStream:104","type":"CtUnaryOperatorImpl","sourcecode":"--(long)"},"variableMap":{"left":"rec"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:237","type":"CtAssignmentImpl","sourcecode":"long = long[][int]"},"status":-1},{"failures":[],"tindex":"c8270686-4c7a-11e5-a7ea-bbda1037d77f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:238","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[2],"tindex":"c8270687-4c7a-11e5-a7ea-b9fb660b0661","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:186","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.internal.storage.file.PackFile.getPackName()"},"variableMap":{"oldPack":"pf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:667","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.eclipse.jgit.internal.storage.file.PackFile.getPackFile().getName()"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"c8270688-4c7a-11e5-a7ea-a77c81372cab","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:466","type":"CtIfImpl","sourcecode":"if (int < 1)\n    break;\n"},"variableMap":{"l":"tokenBegin"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:101","type":"CtIfImpl","sourcecode":"if ((byte[][int]) == '#') {\n    if (boolean)\n        org.eclipse.jgit.lib.RebaseTodoFile.org.eclipse.jgit.lib.RebaseTodoFile.parseComments(byte[], int, java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>, int);\n    \n} else {\n    int = org.eclipse.jgit.lib.RebaseTodoFile.org.eclipse.jgit.lib.RebaseTodoFile.nextParsableToken(byte[], int, int);\n    if (int == (-1)) {\n        if (boolean)\n            java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.add(new org.eclipse.jgit.lib.RebaseTodoLine(org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, (1 + int))));\n        \n        continue;\n    } \n    org.eclipse.jgit.lib.RebaseTodoLine org.eclipse.jgit.lib.RebaseTodoLine = org.eclipse.jgit.lib.RebaseTodoFile.org.eclipse.jgit.lib.RebaseTodoFile.parseLine(byte[], int, int);\n    if (org.eclipse.jgit.lib.RebaseTodoLine == null)\n        continue;\n    \n    java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>.add(org.eclipse.jgit.lib.RebaseTodoLine);\n}"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,3,4,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,15,17,20,23,25,26,28,34,35,38,39,40,43,44,45,48,49,52,54,112],"tindex":"c8270689-4c7a-11e5-a7ea-dddf5c81e656","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheBuilder:199","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.dircache.DirCache.cmp(org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.dircache.DirCacheEntry)"},"variableMap":{"lastEntry":"pe","newEntry":"pe"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheBuilder:233","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.dircache.DirCacheEntry.getStage()"},"status":-1},{"failures":[],"tindex":"c8272d9a-4c7a-11e5-a7ea-8f78dc1edb19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:414","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case org.eclipse.jgit.lib.Constants.int :\n        return org.eclipse.jgit.lib.Constants.java.lang.String;\n    case org.eclipse.jgit.lib.Constants.int :\n        return org.eclipse.jgit.lib.Constants.java.lang.String;\n    case org.eclipse.jgit.lib.Constants.int :\n        return org.eclipse.jgit.lib.Constants.java.lang.String;\n    case org.eclipse.jgit.lib.Constants.int :\n        return org.eclipse.jgit.lib.Constants.java.lang.String;\n    default :\n        throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.valueOf(int)));\n}"},"status":-2},{"failures":[],"tindex":"c8272d9b-4c7a-11e5-a7ea-dbb598e5fc6b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:184","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[(org.eclipse.jgit.revwalk.RevCommit[].int) + 32]"},"variableMap":{"pList":"sourceCommits","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.Merger:189","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[org.eclipse.jgit.revwalk.RevObject[].int]"},"status":-2},{"failures":[],"tindex":"c8272d9c-4c7a-11e5-a7ea-8fa61b0be9b2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:104","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockRevQueue.Block.resetToEnd()"},"status":-2},{"failures":[],"tindex":"c8272d9d-4c7a-11e5-a7ea-e1166754d88b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:211","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BaseReceivePack.executeCommands()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.ReceivePack:192","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BaseReceivePack.receivePackAndCheckConnectivity()"},"status":-2},{"failures":[],"tindex":"c8272d9e-4c7a-11e5-a7ea-0fbe62a9c52a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:331","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.SimilarityIndex.long) < long)\n    throw new org.eclipse.jgit.diff.SimilarityIndex.TableFullException();\n"},"variableMap":{"org.eclipse.jgit.diff.SimilarityIndex.MAX_COUNT":"lastModified","cnt":"mtime"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:159","type":"CtIfImpl","sourcecode":"if (long != (long)) {\n    try {\n        final java.io.FileInputStream java.io.FileInputStream = new java.io.FileInputStream(java.io.File);\n        try {\n            java.util.Map<java.lang.String, org.eclipse.jgit.transport.OpenSshConfig.Host> = org.eclipse.jgit.transport.OpenSshConfig.parse(java.io.FileInputStream);\n        } finally {\n            java.io.FileInputStream.close();\n        }\n    } catch (java.io.FileNotFoundException none) {\n        java.util.Map<java.lang.String, org.eclipse.jgit.transport.OpenSshConfig.Host> = java.util.Collections.emptyMap();\n    } catch (java.io.IOException err) {\n        java.util.Map<java.lang.String, org.eclipse.jgit.transport.OpenSshConfig.Host> = java.util.Collections.emptyMap();\n    }\n    long = long;\n} "},"status":-2},{"failures":[],"tindex":"c8272d9f-4c7a-11e5-a7ea-a3e41345ae65","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:926","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.FileSnapshot.setClean(org.eclipse.jgit.internal.storage.file.FileSnapshot)"},"status":0},{"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,59,60,129,61,130,131,132,62,63,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,3,4,169,5,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,192,193,193,194,194,195,196,197,69,198,199,70,71,72,200,201,73,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,64,65,240,241,242,243,244,66,245,246,67,247,248,249,250,251,252,253,254,255,256,68,257,258,259,260,261,262,263,264,265,266,267,268,269,57,270,271,272,273,274,275,276,58,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,77,303,304,305,306,78,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,56,346,347,348,349,350,351,352,353,354,355,356,76,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,6,7,8,107,374,375,376,108,377,378,379,9,10,11,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,12,13,428,14,429,430,15,16,17,18,431,19,432,20,22,23,25,26,433,27,434,28,29,435,30,436,32,437,33,438,439,34,35,440,36,441,37,442,38,39,443,40,42,43,44,444,45,46,47,445,446,447,48,49,448,52,53,54,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,95,489,490,491,97,492,493,494,495,496,497,98,498,499,500,501,99,502,503,100,504,505,506,101,507,102,103,508,509,510,104,511,512,105,513,514,106,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,74,75,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,79,566,80,81,567,568,82,83,569,84,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,91,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,2,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,109,803,110,804,805,806,807,808,809,810,811,812,111,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,85,851,852,853,854,855,856,857],"tindex":"c82754b0-4c7a-11e5-a7ea-cd863717a561","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:605","type":"CtReturnImpl","sourcecode":"return (int - 3) - int"},"variableMap":{"start":"mid","ptr":"mid"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefList:159","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[858],"tindex":"c8277bc1-4c7a-11e5-a7ea-4d70d931f13e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:304","type":"CtIfImpl","sourcecode":"if ((java.util.List<org.eclipse.jgit.lib.Ref>) == null)\n    java.util.List<org.eclipse.jgit.lib.Ref> = new java.util.ArrayList<org.eclipse.jgit.lib.Ref>();\n"},"status":-1},{"failures":[],"tindex":"c8277bc2-4c7a-11e5-a7ea-eddc4c2d3d65","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:780","type":"CtIfImpl","sourcecode":"if (long < (org.eclipse.jgit.internal.storage.dfs.DfsReader.getStreamFileThreshold())) {\n    byte[] = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress((long + int), ((int)(long)), org.eclipse.jgit.internal.storage.dfs.DfsReader);\n    if (byte[] != null)\n        return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n    \n} "},"variableMap":{"p":"org.eclipse.jgit.lib.Constants.OBJ_COMMIT","data":"data","pos":"pos","ctx":"ctx","sz":"pos","this":"this","typeCode":"org.eclipse.jgit.lib.Constants.OBJ_REF_DELTA"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:756","type":"CtForImpl","sourcecode":"SEARCH : for ( ;  ; ) {\n    org.eclipse.jgit.internal.storage.dfs.DfsPackFile.readFully(long, byte[], 0, 20, org.eclipse.jgit.internal.storage.dfs.DfsReader);\n    int int = (byte[][0]) & 255;\n    final int int = (int >> 4) & 7;\n    long long = int & 15;\n    int int = 4;\n    int int = 1;\n    while ((int & 128) != 0) {\n        int = (byte[][int++]) & 255;\n        long += ((long)((int & 127))) << int;\n        int += 7;\n    }\n    switch (int) {\n        case org.eclipse.jgit.lib.Constants.int :\n        case org.eclipse.jgit.lib.Constants.int :\n        case org.eclipse.jgit.lib.Constants.int :\n        case org.eclipse.jgit.lib.Constants.int :\n            {\n                if (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta != null) {\n                    byte[] = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress((long + int), ((int)(long)), org.eclipse.jgit.internal.storage.dfs.DfsReader);\n                    int = int;\n                    break SEARCH;\n                } \n                if (long < (org.eclipse.jgit.internal.storage.dfs.DfsReader.getStreamFileThreshold())) {\n                    byte[] = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress((long + int), ((int)(long)), org.eclipse.jgit.internal.storage.dfs.DfsReader);\n                    if (byte[] != null)\n                        return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n                    \n                } \n                return new org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject(int , long , long , int , this , org.eclipse.jgit.internal.storage.dfs.DfsReader.org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase);\n            }\n        case org.eclipse.jgit.lib.Constants.int :\n            {\n                int = (byte[][int++]) & 255;\n                long long = int & 127;\n                while ((int & 128) != 0) {\n                    long += 1;\n                    int = (byte[][int++]) & 255;\n                    long <<= 7;\n                    long += int & 127;\n                }\n                long = long - long;\n                org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta = new org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta(org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta , long , ((int)(long)) , int , long);\n                if (long != (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.int))\n                    break SEARCH;\n                \n                org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry = org.eclipse.jgit.internal.storage.dfs.DfsReader.getDeltaBaseCache().get(org.eclipse.jgit.internal.storage.dfs.DfsPackKey, long);\n                if (org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry != null) {\n                    int = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.int;\n                    byte[] = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.byte[];\n                    boolean = true;\n                    break SEARCH;\n                } \n                long = long;\n                continue SEARCH;\n            }\n        case org.eclipse.jgit.lib.Constants.int :\n            {\n                org.eclipse.jgit.internal.storage.dfs.DfsPackFile.readFully((long + int), byte[], 0, 20, org.eclipse.jgit.internal.storage.dfs.DfsReader);\n                long long = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.findDeltaBase(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ObjectId.fromRaw(byte[]));\n                org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta = new org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta(org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta , long , ((int)(long)) , (int + 20) , long);\n                if (long != (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.int))\n                    break SEARCH;\n                \n                org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry = org.eclipse.jgit.internal.storage.dfs.DfsReader.getDeltaBaseCache().get(org.eclipse.jgit.internal.storage.dfs.DfsPackKey, long);\n                if (org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry != null) {\n                    int = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.int;\n                    byte[] = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.byte[];\n                    boolean = true;\n                    break SEARCH;\n                } \n                long = long;\n                continue SEARCH;\n            }\n        default :\n            throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.valueOf(int)));\n    }\n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}