{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":58,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":64,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":63,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":86,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_3":60,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":18,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":39,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":73,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":62,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":74,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":13,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":29,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":61,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":70,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":71,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":0,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":72,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":46,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_10":67,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":68,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid":95,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":69,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":14,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":41,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":85,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":50,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":66,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":83,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":56,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":42,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":57,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":82,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":35,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":8,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":81,"org.eclipse.jgit.treewalk.CanonicalTreeParserTest.testBackwards_ConfusingPathName":89,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":75,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":26,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":25,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":49,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":45,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":21,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":55,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":77,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":88,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":3,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":30,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":33,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":40,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":11,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":90,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":1,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":2,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":16,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":31,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":4,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":17,"org.eclipse.jgit.api.CleanCommandTest.testClean":32,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":78,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":54,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":76,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":15,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":52,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":12,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":44,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":34,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":10,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":51,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":24,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":43,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":65,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":47,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":6,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":80,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":27,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":28,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":19,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":84,"org.eclipse.jgit.attributes.AttributesMatcherTest.testNameOnlyMatches":92,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF":94,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":20,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":37,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":38,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":79,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":9,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":23,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_ShortLineOnlyEmbeddedLF":93,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":36,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":48,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":7,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":22,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":87,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":53,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":59,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":91,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":5},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"6ac3dc7d-4c7a-11e5-94de-29ff57ad6469","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:477","type":"CtIfImpl","sourcecode":"if ((int < int) && ((byte[][int]) == 0))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"name contains byte 0x00\");\n"},"variableMap":{"e":"pathOffset","raw":"encodedName","end":"pathOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:328","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheTree.contains(byte[], int, byte[].int)) {\n    org.eclipse.jgit.lib.TreeFormatter.append(org.eclipse.jgit.dircache.DirCacheTree.byte[], org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.dircache.DirCacheTree.org.eclipse.jgit.lib.ObjectId);\n    int += org.eclipse.jgit.dircache.DirCacheTree.int;\n    int++;\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"6ac42a9e-4c7a-11e5-94de-f17fd486696b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:187","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry = null"},"variableMap":{"currentEntry":"newEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.BaseDirCacheEditor:113","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry[][(int)++] = org.eclipse.jgit.dircache.DirCacheEntry"},"status":-2},{"failures":[],"tindex":"6ac42a9f-4c7a-11e5-94de-6d1104d0f7e7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1060","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Integer.lowestOneBit(int)"},"variableMap":{"freeFlags":"msk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:82","type":"CtLocalVariableImpl","sourcecode":"int int = int & int"},"status":-2},{"failures":[],"tindex":"6ac42aa0-4c7a-11e5-94de-7fd83e19b05d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:529","type":"CtIfImpl","sourcecode":"if (int == int)\n    int = int;\n"},"variableMap":{"tab":"org.eclipse.jgit.revwalk.RevObject.PARSED","end":"flags","ptr":"org.eclipse.jgit.revwalk.RevObject.PARSED"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevTag:141","type":"CtIfImpl","sourcecode":"if ((byte[]) == null) {\n    byte[] = org.eclipse.jgit.revwalk.RevWalk.getCachedBytes(this);\n    if (((int) & (org.eclipse.jgit.revwalk.RevObject.int)) == 0)\n        org.eclipse.jgit.revwalk.RevTag.parseCanonical(org.eclipse.jgit.revwalk.RevWalk, byte[]);\n    \n} "},"status":-2},{"failures":[89],"tindex":"6ac51501-4c7a-11e5-94de-e39d8baac902","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:335","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[],"tindex":"6ac51502-4c7a-11e5-94de-cd4002fac699","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:584","type":"CtIfImpl","sourcecode":"if ((byte[][int++]) != (byte[][int++]))\n    return false;\n"},"status":-2},{"failures":[90,91,92],"tindex":"6ac56323-4c7a-11e5-94de-4795ed7ccbc8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.resolver.FileResolver:245","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"../\"))\n    return true;\n"},"variableMap":{"name":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:146","type":"CtIfImpl","sourcecode":"if (((java.lang.String.indexOf('?')) != (-1)) || ((java.lang.String.indexOf('\\\\')) != (-1)))\n    return true;\n"},"status":-1},{"failures":[],"tindex":"6ac56324-4c7a-11e5-94de-d7f60d4696bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:171","type":"CtIfImpl","sourcecode":"if ((long) <= (long += org.eclipse.jgit.internal.storage.pack.ObjectToPack.getWeight())) {\n    int int = ((int)((long) / (long)));\n    org.eclipse.jgit.lib.ProgressMonitor.update(int);\n    long -= int * (long);\n} "},"status":0},{"failures":[93,94],"tindex":"6ac56325-4c7a-11e5-94de-3fd4be68b32f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:228","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"private\""},"variableMap":{"acl":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevTag:238","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.util.StringUtils.replaceLineBreaksWithSpace(java.lang.String)"},"status":-1},{"failures":[],"tindex":"6ac56326-4c7a-11e5-94de-a71ad371fdfe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommitList:323","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revplot.PlotCommit == org.eclipse.jgit.revplot.PlotCommit)\n    break;\n"},"variableMap":{"rObj":"c","child":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.BlockObjQueue:62","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.BlockObjQueue.Block.add(org.eclipse.jgit.revwalk.RevObject)"},"status":-2},{"failures":[95],"tindex":"6ac58a37-4c7a-11e5-94de-f92c8f09d6d7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:140","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n    if (org.eclipse.jgit.dircache.DirCacheEntry != null) {\n        if (org.eclipse.jgit.dircache.DirCacheEntry.isAssumeValid())\n            return false;\n        \n        if ((org.eclipse.jgit.dircache.DirCacheEntry.getStage()) != 0)\n            return true;\n        \n    } \n} "},"variableMap":{"di":"baseDirCache"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter:75","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheIterator != null) && (org.eclipse.jgit.dircache.DirCacheIterator != null)) {\n    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n    if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.dircache.DirCacheEntry != null)) {\n        if ((org.eclipse.jgit.dircache.DirCacheEntry.isAssumeValid()) != (org.eclipse.jgit.dircache.DirCacheEntry.isAssumeValid()))\n            return true;\n        \n        if (org.eclipse.jgit.dircache.DirCacheEntry.isAssumeValid())\n            return false;\n        \n    } \n} "},"status":-1},{"failures":[],"tindex":"6ac62678-4c7a-11e5-94de-17f85a760822","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:185","type":"CtReturnImpl","sourcecode":"return new java.util.Properties()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:167","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Repository) instanceof org.eclipse.jgit.internal.storage.file.FileRepository) {\n    org.eclipse.jgit.internal.storage.file.GC org.eclipse.jgit.internal.storage.file.GC = new org.eclipse.jgit.internal.storage.file.GC(((org.eclipse.jgit.internal.storage.file.FileRepository)(org.eclipse.jgit.lib.Repository)));\n    org.eclipse.jgit.internal.storage.file.GC.setPackConfig(org.eclipse.jgit.storage.pack.PackConfig);\n    org.eclipse.jgit.internal.storage.file.GC.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor);\n    if ((this.java.util.Date) != null)\n        org.eclipse.jgit.internal.storage.file.GC.setExpire(java.util.Date);\n    \n    try {\n        org.eclipse.jgit.internal.storage.file.GC.gc();\n        return org.eclipse.jgit.api.GarbageCollectCommand.org.eclipse.jgit.api.GarbageCollectCommand.toProperties(org.eclipse.jgit.internal.storage.file.GC.getStatistics());\n    } catch (java.text.ParseException e) {\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.text.ParseException);\n    }\n} else if ((org.eclipse.jgit.lib.Repository) instanceof org.eclipse.jgit.internal.storage.dfs.DfsRepository) {\n    org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector = new org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector(((org.eclipse.jgit.internal.storage.dfs.DfsRepository)(org.eclipse.jgit.lib.Repository)));\n    org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.setPackConfig(org.eclipse.jgit.storage.pack.PackConfig);\n    org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector.pack(org.eclipse.jgit.lib.ProgressMonitor);\n    return new java.util.Properties();\n} else {\n    throw new java.lang.UnsupportedOperationException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.Repository.getClass().toString()));\n}"},"status":-2},{"failures":[],"tindex":"6ac62679-4c7a-11e5-94de-036e2ead7341","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:152","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"6ac64d8a-4c7a-11e5-94de-9d2731f339aa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1411","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ThreadSafeProgressMonitor.waitForCompletion()"},"variableMap":{"pm":"monitor"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleUpdateCommand:169","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.ProgressMonitor) != null)\n    org.eclipse.jgit.api.CloneCommand.setProgressMonitor(org.eclipse.jgit.lib.ProgressMonitor);\n"},"status":-2},{"failures":[],"tindex":"6ac64d8b-4c7a-11e5-94de-f7c008cff445","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:1049","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int += 48;\n"},"variableMap":{"ptr":"srcIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:244","type":"CtIfImpl","sourcecode":"if (int == int) {\n    long += java.lang.Math.min(org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.countOf(long[][int]), org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.countOf(long[][int]));\n    if ((++int) == (long[].int))\n        break;\n    \n    int = org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.keyOf(long[][int]);\n    if ((++int) == (long[].int))\n        break;\n    \n    int = org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.keyOf(long[][int]);\n} else if (int < int) {\n    if ((++int) == (long[].int))\n        break;\n    \n    int = org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.keyOf(long[][int]);\n} else {\n    if ((++int) == (long[].int))\n        break;\n    \n    int = org.eclipse.jgit.diff.SimilarityIndex.org.eclipse.jgit.diff.SimilarityIndex.keyOf(long[][int]);\n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}