{"failureDictionary":{"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":145,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":212,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":11,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":211,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":116,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit":1,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder":186,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":286,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":330,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":91,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":44,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":219,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":261,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":179,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":351,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":216,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":93,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":340,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict":191,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":347,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":72,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":119,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":246,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":55,"org.eclipse.jgit.merge.CherryPickTest.testRevert":218,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":17,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":73,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":252,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":54,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":53,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":311,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127":169,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":196,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":419,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":230,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":420,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":276,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":417,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":418,"org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree":152,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":120,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":34,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":210,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":147,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":134,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testRecursiveFiltering":183,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":306,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":215,"org.eclipse.jgit.notes.LeafBucketTest.testRemoveFirst":65,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":235,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":283,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":40,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":87,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":213,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":234,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":86,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":422,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":423,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":424,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":264,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":38,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":421,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":46,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":399,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":185,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":398,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":401,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":400,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":131,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":298,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":90,"org.eclipse.jgit.dircache.DirCacheBasicTest.testBuildThenClear":165,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive":171,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":332,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":302,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":9,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":48,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":10,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsNotMacHFSGit2":0,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test3":81,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test4":82,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":79,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test2":80,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":85,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test5":83,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":84,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":58,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":307,"org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo":231,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":266,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":425,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":236,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":426,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":427,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":62,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":428,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":178,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":394,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":396,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":395,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":397,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":282,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":70,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":356,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":114,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":166,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":346,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":278,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":439,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":438,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":440,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":437,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":244,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":205,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":78,"org.eclipse.jgit.notes.LeafBucketTest.testSetFive_InOrder":69,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":287,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":250,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":193,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":135,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":26,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":391,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":390,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":393,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":392,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":269,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":208,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":263,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":76,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":265,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":255,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":359,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":56,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":295,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":209,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":289,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":256,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":362,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":319,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_16384":160,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":267,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":296,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":333,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":139,"org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree":153,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":137,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":322,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":386,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":144,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":388,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":387,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":51,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":45,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":389,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":59,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":274,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":50,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":251,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":202,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":31,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":167,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":113,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":129,"org.eclipse.jgit.notes.LeafBucketTest.testRemoveLast":68,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":378,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":199,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":115,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":133,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":195,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":214,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":136,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":16,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":350,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory":223,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":383,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":32,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":117,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":382,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":385,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":384,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_NoTreeWalk":174,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":277,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":220,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":354,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":309,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":402,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":404,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":403,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":406,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":405,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuilderClear":163,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":204,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":43,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap":190,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":71,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":245,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":23,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":132,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testNonRecursiveFiltering":184,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree":2,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":74,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":198,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":24,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":130,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":315,"org.eclipse.jgit.notes.LeafBucketTest.testRemoveMiddle":67,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":197,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":355,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":15,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":375,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":374,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":149,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":301,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":353,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":146,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":366,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":367,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":368,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":369,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":341,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":370,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":380,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":379,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":381,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":102,"org.eclipse.jgit.api.AddCommandTest.testAddFolder":233,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":27,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":342,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile":161,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":97,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":232,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":237,"org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail":150,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":279,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":371,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":372,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":122,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree":188,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":225,"org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin":142,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":125,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":12,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":6,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree":187,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":377,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":376,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":243,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":37,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":7,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":60,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":292,"org.eclipse.jgit.api.CleanCommandTest.testClean":268,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":207,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":61,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":334,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":206,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":312,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":8,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":270,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":323,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":360,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":141,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":275,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":123,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":253,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":229,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":35,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":242,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":124,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":128,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":177,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":373,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":201,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":273,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":320,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":299,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":106,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":310,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":112,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles":4,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":327,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":361,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":335,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":89,"org.eclipse.jgit.notes.LeafBucketTest.testSetFive_MixedOrder":66,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":294,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":221,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":365,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":304,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":314,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":257,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":412,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":416,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":181,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":415,"org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree":151,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":414,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":413,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":107,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":108,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":284,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":352,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":318,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":357,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":281,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":324,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":94,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles":3,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":121,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":57,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":241,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":92,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4096":159,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":339,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":326,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4095":158,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4094":157,"org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes":200,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive":175,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4090":156,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":258,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":254,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":42,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":104,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":101,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":313,"org.eclipse.jgit.api.BlameCommandTest.testRename":328,"org.eclipse.jgit.lib.IndexDiffTest.testModified":126,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":407,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":408,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":409,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":410,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":411,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":345,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder":162,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":291,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk":168,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":432,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":138,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":75,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":429,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":127,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":194,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":430,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":431,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":111,"org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes":143,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":343,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":222,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":364,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":109,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":325,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":348,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames":155,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":5,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":95,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":224,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":248,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":262,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":349,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":363,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":227,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":337,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":176,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":180,"org.eclipse.jgit.notes.LeafBucketTest.testParseFive":64,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":435,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":317,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":436,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":29,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":433,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":28,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":434,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":308,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":118,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":260,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion":173,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":358,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":338,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset":170,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":77,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testEdgeCases":182,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":52,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":285,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":259,"org.eclipse.jgit.notes.LeafBucketTest.testSetFive_ReverseOrder":63,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":103,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":96,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":316,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":293,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":297,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":336,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap":189,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":100,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":441,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":303,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":280,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":271,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":331,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":300,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":148,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":105,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":47,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":39,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath":172,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":239,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":192,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":226,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":49,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":290,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":22,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder":164,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames":154,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":110,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":30,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":288,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":344,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":88,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":240,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":18,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":41,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":21,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":98,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":99,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":247,"org.eclipse.jgit.merge.CherryPickTest.testPick":217,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":13,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":203,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":140,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":321,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":272,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":238,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":228,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":329,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":305,"org.eclipse.jgit.api.RevertCommandTest.testRevert":249,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":19},"transformations":[{"failures":[0,1,2,3,4],"tindex":"e8c11a62-4c4d-11e5-a2ab-4b1f25743f04","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:254","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:707","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[5],"tindex":"e8c14173-4c4d-11e5-a2ab-d38bbdb96534","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RewriteGenerator:161","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null)\n    continue;\n"},"status":-1},{"failures":[6],"tindex":"e8c14174-4c4d-11e5-a2ab-0b5c2ca7892a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:677","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"\"))\n    java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"e8c14175-4c4d-11e5-a2ab-b91af38174f5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:807","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheEntry"},"variableMap":{"next":"ourDce","last":"ourDce"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:485","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.keep(org.eclipse.jgit.dircache.DirCacheEntry)"},"status":-1},{"failures":[],"tindex":"e8c16886-4c4d-11e5-a2ab-29921b14ec49","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:163","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.revwalk.PendingGenerator.int"},"variableMap":{"org.eclipse.jgit.revwalk.PendingGenerator.OVER_SCAN":"ptr","overScan":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:1028","type":"CtOperatorAssignmentImpl","sourcecode":"int += 48"},"status":0},{"failures":[],"tindex":"e8c16887-4c4d-11e5-a2ab-0718c8d127ae","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:709","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:168","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[4096]"},"status":-2},{"failures":[],"tindex":"e8c16888-4c4d-11e5-a2ab-759f4e672df8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:780","type":"CtIfImpl","sourcecode":"if (long < (org.eclipse.jgit.internal.storage.dfs.DfsReader.getStreamFileThreshold())) {\n    byte[] = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress((long + int), ((int)(long)), org.eclipse.jgit.internal.storage.dfs.DfsReader);\n    if (byte[] != null)\n        return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n    \n} "},"variableMap":{"p":"org.eclipse.jgit.lib.Constants.OBJ_REF_DELTA","data":"tempId","pos":"deltaPos","ctx":"ctx","sz":"basePos","this":"this","typeCode":"java.lang.Integer.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:749","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = org.eclipse.jgit.internal.storage.dfs.DfsReader.byte[];\n    org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta = null;\n    byte[] byte[] = null;\n    int int = org.eclipse.jgit.lib.Constants.int;\n    boolean boolean = false;\n    SEARCH : for ( ;  ; ) {\n        org.eclipse.jgit.internal.storage.dfs.DfsPackFile.readFully(long, byte[], 0, 20, org.eclipse.jgit.internal.storage.dfs.DfsReader);\n        int int = (byte[][0]) & 255;\n        final int int = (int >> 4) & 7;\n        long long = int & 15;\n        int int = 4;\n        int int = 1;\n        while ((int & 128) != 0) {\n            int = (byte[][int++]) & 255;\n            long += ((long)((int & 127))) << int;\n            int += 7;\n        }\n        switch (int) {\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n            case org.eclipse.jgit.lib.Constants.int :\n                {\n                    if (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta != null) {\n                        byte[] = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress((long + int), ((int)(long)), org.eclipse.jgit.internal.storage.dfs.DfsReader);\n                        int = int;\n                        break SEARCH;\n                    } \n                    if (long < (org.eclipse.jgit.internal.storage.dfs.DfsReader.getStreamFileThreshold())) {\n                        byte[] = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress((long + int), ((int)(long)), org.eclipse.jgit.internal.storage.dfs.DfsReader);\n                        if (byte[] != null)\n                            return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n                        \n                    } \n                    return new org.eclipse.jgit.internal.storage.dfs.LargePackedWholeObject(int , long , long , int , this , org.eclipse.jgit.internal.storage.dfs.DfsReader.org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase);\n                }\n            case org.eclipse.jgit.lib.Constants.int :\n                {\n                    int = (byte[][int++]) & 255;\n                    long long = int & 127;\n                    while ((int & 128) != 0) {\n                        long += 1;\n                        int = (byte[][int++]) & 255;\n                        long <<= 7;\n                        long += int & 127;\n                    }\n                    long = long - long;\n                    org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta = new org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta(org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta , long , ((int)(long)) , int , long);\n                    if (long != (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.int))\n                        break SEARCH;\n                    \n                    org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry = org.eclipse.jgit.internal.storage.dfs.DfsReader.getDeltaBaseCache().get(org.eclipse.jgit.internal.storage.dfs.DfsPackKey, long);\n                    if (org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry != null) {\n                        int = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.int;\n                        byte[] = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.byte[];\n                        boolean = true;\n                        break SEARCH;\n                    } \n                    long = long;\n                    continue SEARCH;\n                }\n            case org.eclipse.jgit.lib.Constants.int :\n                {\n                    org.eclipse.jgit.internal.storage.dfs.DfsPackFile.readFully((long + int), byte[], 0, 20, org.eclipse.jgit.internal.storage.dfs.DfsReader);\n                    long long = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.findDeltaBase(org.eclipse.jgit.internal.storage.dfs.DfsReader, org.eclipse.jgit.lib.ObjectId.fromRaw(byte[]));\n                    org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta = new org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta(org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta , long , ((int)(long)) , (int + 20) , long);\n                    if (long != (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.int))\n                        break SEARCH;\n                    \n                    org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry = org.eclipse.jgit.internal.storage.dfs.DfsReader.getDeltaBaseCache().get(org.eclipse.jgit.internal.storage.dfs.DfsPackKey, long);\n                    if (org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry != null) {\n                        int = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.int;\n                        byte[] = org.eclipse.jgit.internal.storage.dfs.DeltaBaseCache.Entry.byte[];\n                        boolean = true;\n                        break SEARCH;\n                    } \n                    long = long;\n                    continue SEARCH;\n                }\n            default :\n                throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.valueOf(int)));\n        }\n    }\n    if (byte[] == null)\n        throw new org.eclipse.jgit.errors.LargeObjectException();\n    \n    do {\n        if (boolean)\n            boolean = false;\n        else if ((org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta) == null)\n            org.eclipse.jgit.internal.storage.dfs.DfsReader.getDeltaBaseCache().put(org.eclipse.jgit.internal.storage.dfs.DfsPackKey, org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.long, int, byte[]);\n        \n        long = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.long;\n        byte[] byte[] = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.decompress((long + (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.int)), org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.int, org.eclipse.jgit.internal.storage.dfs.DfsReader);\n        if (byte[] == null) {\n            byte[] = null;\n            throw new org.eclipse.jgit.errors.LargeObjectException();\n        } \n        final long long = org.eclipse.jgit.internal.storage.pack.BinaryDelta.getResultSize(byte[]);\n        if ((java.lang.Integer.int) <= long)\n            throw new org.eclipse.jgit.errors.LargeObjectException.ExceedsByteArrayLimit();\n        \n        final byte[] byte[];\n        try {\n            byte[] = new byte[((int)(long))];\n        } catch (java.lang.OutOfMemoryError tooBig) {\n            byte[] = null;\n            byte[] = null;\n            throw new org.eclipse.jgit.errors.LargeObjectException.OutOfMemory(java.lang.OutOfMemoryError);\n        }\n        org.eclipse.jgit.internal.storage.pack.BinaryDelta.apply(byte[], byte[], byte[]);\n        byte[] = byte[];\n        org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta = org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta.org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta;\n    } while (org.eclipse.jgit.internal.storage.dfs.DfsPackFile.Delta != null );\n    return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n} catch (java.util.zip.DataFormatException dfe) {\n    org.eclipse.jgit.errors.CorruptObjectException org.eclipse.jgit.errors.CorruptObjectException = new org.eclipse.jgit.errors.CorruptObjectException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Long.valueOf(long), org.eclipse.jgit.internal.storage.dfs.DfsPackFile.getPackName()));\n    org.eclipse.jgit.errors.CorruptObjectException.initCause(java.util.zip.DataFormatException);\n    throw org.eclipse.jgit.errors.CorruptObjectException;\n}"},"status":-2},{"failures":[],"tindex":"e8c18f99-4c4d-11e5-a2ab-a1ea3fd85a8a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:127","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.PlotCommitList<L>.setupChildren(org.eclipse.jgit.revplot.PlotCommit<L>)"},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"e8c18f9a-4c4d-11e5-a2ab-6100fabb3514","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:239","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.notes.Note[].int) == (int)) {\n    org.eclipse.jgit.notes.Note[] org.eclipse.jgit.notes.Note[] = new org.eclipse.jgit.notes.Note[(org.eclipse.jgit.notes.Note[].int) * 2];\n    java.lang.System.arraycopy(org.eclipse.jgit.notes.Note[], 0, org.eclipse.jgit.notes.Note[], 0, int);\n    org.eclipse.jgit.notes.Note[] = org.eclipse.jgit.notes.Note[];\n} "},"status":-1},{"failures":[77],"tindex":"e8c1b6ab-4c4d-11e5-a2ab-d35103b6d44a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:492","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'..\\'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:216","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.revwalk.RevCommit, java.lang.Integer))"},"status":-1},{"failures":[],"tindex":"e8c1b6ac-4c4d-11e5-a2ab-61d2022b35d3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Tree:117","type":"CtIfImpl","sourcecode":"if (int > int)\n    return 1;\nelse if (int == (int - 1))\n    return 0;\nelse\n    return 1;\n"},"variableMap":{"nameEnd":"length","lasta":"length","bk":"length","k":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:85","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.AbbreviatedObjectId[].int"},"status":-2},{"failures":[78],"tindex":"e8c1b6ad-4c4d-11e5-a2ab-7d961562b487","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:110","type":"CtAssignmentImpl","sourcecode":"long[][int] = (((long)(int)) << 32) | int"},"variableMap":{"head":"h","entries":"entries","key":"h","ptr":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:188","type":"CtAssignmentImpl","sourcecode":"long[][int++] = org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner.long[][int]"},"status":-1},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,7,123,124,8,125,126,9,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,70,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,73,200,201,202,10,203,76,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,5,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,11,12,277,13,14,15,17,278,279,280,281,282,77,283,284,285,286,30,287,288,289,290,31,291,32,292,293,294,295,33,296,297,298,34,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,18,19,20,21,22,23,24,25,26,27,28,29,329,330,331,332,333,334,335,35,336,36,37,38,337,39,338,44,45,339,340,46,47,48,49,341,50,51,52,342,343,344,345,53,54,346,55,347,56,57,348,349,350,351,352,353,354,355,356,357,358,359,360,361,58,59,60,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,61,62],"tindex":"e8c1b6ae-4c4d-11e5-a2ab-f98e43df3a12","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:1053","type":"CtIfImpl","sourcecode":"if ((int < int) && ((byte[][int]) == '\\n'))\n    return int + 1;\n"},"variableMap":{"b":"aPath","sz":"bLen","ptr":"aLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:128","type":"CtForImpl","sourcecode":"for (int int = 0 ; (int < int) && (int < int) ; int++) {\n    final int int = ((byte[][int]) & 255) - ((byte[][int]) & 255);\n    if (int != 0)\n        return int;\n    \n}"},"status":-1},{"failures":[],"tindex":"e8c1ddbf-4c4d-11e5-a2ab-f91290913317","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:297","type":"CtLocalVariableImpl","sourcecode":"final java.text.SimpleDateFormat java.text.SimpleDateFormat"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:244","type":"CtLocalVariableImpl","sourcecode":"java.text.SimpleDateFormat java.text.SimpleDateFormat = org.eclipse.jgit.util.GitDateParser.org.eclipse.jgit.util.GitDateParser.getDateFormat(org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat, java.util.Locale)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}