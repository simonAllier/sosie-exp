{"failureDictionary":{"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":16,"org.eclipse.jgit.patch.EditListTest.testFileHeader":15,"org.eclipse.jgit.transport.URIishTest.testScpStyleNoURIDecoding":26,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":13,"org.eclipse.jgit.patch.EditListTest.testTypes":14,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":18,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":12,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":1,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":20,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":2,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":10,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":11,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":19,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":9,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":5,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":3,"org.eclipse.jgit.transport.RemoteConfigTest.noInsteadOf":23,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithoutUserRelativePath":24,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":4,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1":6,"org.eclipse.jgit.transport.RemoteConfigTest.noPushInsteadOf":22,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine1":7,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":21,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testNoNewLine2":8,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":17,"org.eclipse.jgit.transport.URIishTest.testScpStyleWithUser":25,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":0,"org.eclipse.jgit.lib.RefDatabaseConflictingNamesTest.testGetConflictingNames":27},"transformations":[{"failures":[],"tindex":"090b6a3b-4c47-11e5-9995-cbc48ccd7332","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:177","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0)\n    int = (byte[][int++]) & 255;\n"},"variableMap":{"deltaPtr":"infoOffset","delta":"info","cmd":"len","copyOffset":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:299","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(byte[], int, int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"090b914c-4c47-11e5-9995-a3ddad2c2f93","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:329","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.patch.HunkHeader org.eclipse.jgit.patch.HunkHeader : java.util.List<org.eclipse.jgit.patch.HunkHeader>)\n    org.eclipse.jgit.diff.EditList.addAll(org.eclipse.jgit.patch.HunkHeader.toEditList());"},"status":-1},{"failures":[],"tindex":"090b914d-4c47-11e5-9995-3d8f431f3269","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:416","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleAddCommand:168","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.api.CloneCommand.call().getRepository()"},"status":-2},{"failures":[],"tindex":"090b914e-4c47-11e5-9995-ad84ba752995","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:918","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.lib.Repository.getRefDatabase().getRefs(org.eclipse.jgit.lib.RefDatabase.java.lang.String);\n} catch (java.io.IOException e) {\n    return new java.util.HashMap<java.lang.String, org.eclipse.jgit.lib.Ref>();\n}"},"variableMap":{"org.eclipse.jgit.lib.RefDatabase.ALL":"org.eclipse.jgit.lib.ConfigConstants.CONFIG_KEY_URL","this":"repo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleSyncCommand:114","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.submodule.SubmoduleWalk org.eclipse.jgit.submodule.SubmoduleWalk = org.eclipse.jgit.submodule.SubmoduleWalk.forIndex(org.eclipse.jgit.lib.Repository);\n    if (!(java.util.Collection<java.lang.String>.isEmpty()))\n        org.eclipse.jgit.submodule.SubmoduleWalk.setFilter(org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.util.Collection<java.lang.String>));\n    \n    java.util.Map<java.lang.String, java.lang.String> java.util.Map<java.lang.String, java.lang.String> = new java.util.HashMap<java.lang.String, java.lang.String>();\n    org.eclipse.jgit.lib.StoredConfig org.eclipse.jgit.lib.StoredConfig = org.eclipse.jgit.lib.Repository.getConfig();\n    while (org.eclipse.jgit.submodule.SubmoduleWalk.next()) {\n        java.lang.String java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.getRemoteUrl();\n        if (java.lang.String == null)\n            continue;\n        \n        java.lang.String java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.getPath();\n        org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n        java.util.Map<java.lang.String, java.lang.String>.put(java.lang.String, java.lang.String);\n        org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.submodule.SubmoduleWalk.getRepository();\n        if (org.eclipse.jgit.lib.Repository == null)\n            continue;\n        \n        org.eclipse.jgit.lib.StoredConfig org.eclipse.jgit.lib.StoredConfig;\n        java.lang.String java.lang.String;\n        try {\n            org.eclipse.jgit.lib.StoredConfig = org.eclipse.jgit.lib.Repository.getConfig();\n            java.lang.String = org.eclipse.jgit.api.SubmoduleSyncCommand.getHeadBranch(org.eclipse.jgit.lib.Repository);\n            java.lang.String java.lang.String = null;\n            if (java.lang.String != null)\n                java.lang.String = org.eclipse.jgit.lib.StoredConfig.getString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String);\n            \n            if (java.lang.String == null)\n                java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n            \n            org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n            org.eclipse.jgit.lib.StoredConfig.save();\n        } finally {\n            org.eclipse.jgit.lib.Repository.close();\n        }\n    }\n    if (!(java.util.Map<java.lang.String, java.lang.String>.isEmpty()))\n        org.eclipse.jgit.lib.StoredConfig.save();\n    \n    return java.util.Map<java.lang.String, java.lang.String>;\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n} catch (org.eclipse.jgit.errors.ConfigInvalidException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.errors.ConfigInvalidException.getMessage() , org.eclipse.jgit.errors.ConfigInvalidException);\n}"},"status":-2},{"failures":[],"tindex":"090bb85f-4c47-11e5-9995-63744aa82589","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:360","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.AbstractTreeIterator == null) {\n    continue;\n} "},"variableMap":{"cIter":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.EmptyTreeIterator:143","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator.stopWalk()"},"status":-2},{"failures":[],"tindex":"090bb860-4c47-11e5-9995-dbbf13d009fc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:329","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"090bb861-4c47-11e5-9995-c3761cd6c1ec","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.TopoSortGenerator:122","type":"CtUnaryOperatorImpl","sourcecode":"~(org.eclipse.jgit.revwalk.TopoSortGenerator.int)"},"variableMap":{"org.eclipse.jgit.revwalk.TopoSortGenerator.TOPO_DELAY":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:119","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.eclipse.jgit.internal.storage.pack.DeltaIndex.int"},"status":-2},{"failures":[],"tindex":"090bb862-4c47-11e5-9995-3511952a78fc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandOutputStream:132","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.SideBandOutputStream.flushBuffer()"},"status":-2},{"failures":[],"tindex":"090bb863-4c47-11e5-9995-97b00d12c60a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.Base64:118","type":"CtOperatorAssignmentImpl","sourcecode":"int |= ((byte[][(int + 1)]) << 24) >>> 16"},"variableMap":{"inBuff":"startOffset","source":"buf","srcOffset":"startOffset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:106","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.MutableInteger.int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int, ' ')"},"status":-2},{"failures":[21,22,23,24,25,26],"tindex":"090bb864-4c47-11e5-9995-6987a0ba594f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.ChangeIdUtil:69","type":"CtInvocationImpl","sourcecode":"java.lang.String.replaceAll(\"(?i)(?m)^Signed-off-by:.*$\\n?\", \"\").replaceAll(\"(?m)^#.*$\\n?\", \"\").replaceAll(\"(?m)\\n\\n\\n+\", \"\\\\\\n\")"},"variableMap":{"msg":"rawPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:233","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.util.regex.Matcher.group(4)"},"status":-1},{"failures":[],"tindex":"090bdf75-4c47-11e5-9995-2588387af28d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:194","type":"CtIfImpl","sourcecode":"if ((int == (int)) || (int == (int)))\n    continue;\n"},"variableMap":{"i":"rc","workingTree":"rc","dirCache":"ae"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:267","type":"CtIfImpl","sourcecode":"if (1 < int)\n    int = java.lang.Math.min(int, org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long[][int[][(int - (int))]]));\n"},"status":-2},{"failures":[],"tindex":"090bdf76-4c47-11e5-9995-4bd24d6de24d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RemoveNoteCommand:83","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.notes.Note>.checkCallable()"},"status":0},{"failures":[],"tindex":"090bdf77-4c47-11e5-9995-a93e2b5acca5","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:214","type":"CtUnaryOperatorImpl","sourcecode":"~(org.eclipse.jgit.revwalk.MergeBaseGenerator.int)"},"variableMap":{"org.eclipse.jgit.revwalk.MergeBaseGenerator.POPPED":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:129","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[27],"tindex":"090bdf78-4c47-11e5-9995-ade0157e3001","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.RefDatabase:141","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.containsKey(java.lang.String))\n    return java.util.Collections.singletonList(java.lang.String);\n"},"variableMap":{"allRefs":"allRefs","needle":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefDatabase:139","type":"CtWhileImpl","sourcecode":"while (0 < int) {\n    java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    if (java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.containsKey(java.lang.String))\n        return java.util.Collections.singletonList(java.lang.String);\n    \n    int = java.lang.String.lastIndexOf('/', (int - 1));\n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}