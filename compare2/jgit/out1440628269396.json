{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef":7,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":195,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":119,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":187,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":1,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":204,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":158,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":35,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":85,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":118,"org.eclipse.jgit.merge.MergeAlgorithmTest.testNoAgainstOneModification":191,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":220,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":48,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":166,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":168,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":123,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":165,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":39,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef":6,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":80,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":174,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":163,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":185,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":216,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":178,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":210,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":11,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":170,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":196,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":132,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":114,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":180,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":66,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":79,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":26,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":94,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":49,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":146,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":3,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":209,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":186,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":105,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":142,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":206,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":59,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":111,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":135,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":213,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":120,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":172,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":171,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":167,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":12,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":44,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":214,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":62,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":175,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":181,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":2,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":157,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":22,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":198,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":199,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":89,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":19,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue":0,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":82,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":177,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":10,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":106,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":107,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":169,"org.eclipse.jgit.api.GitConstructionTest.testClose":91,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":61,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":176,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":156,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":41,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":87,"org.eclipse.jgit.lib.ConfigTest.test008_readSectionNames":69,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":201,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":20,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.emptyRepositoryFormatVersion":5,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":58,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":117,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":97,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications":188,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":15,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":208,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":151,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":192,"org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenExisting":51,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":88,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":121,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSeperateModifications":189,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":160,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":129,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":99,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":202,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":67,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":113,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef":4,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":83,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":103,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":100,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":219,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":47,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test007_Open":21,"org.eclipse.jgit.events.ConfigChangeEventTest.testFileRepository_ChangeEventsOnlyOnSave":222,"org.eclipse.jgit.api.FetchCommandTest.testFetch":140,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":133,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":179,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":9,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet":23,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":76,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":54,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":55,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":197,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":110,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":73,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":136,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":162,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":108,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":43,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":98,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":164,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":14,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":46,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":122,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":116,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":65,"org.eclipse.jgit.api.PushCommandTest.testPush":149,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":17,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":205,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":182,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":33,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":37,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":81,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":34,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":194,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":32,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet":16,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":217,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":148,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":31,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":77,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":75,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":25,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":139,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":138,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":40,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":143,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":161,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":203,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":184,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":183,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":8,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":60,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":71,"org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey":64,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":42,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":155,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":72,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":86,"org.eclipse.jgit.api.GitConstructionTest.testWrap":93,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":102,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":124,"org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen":50,"org.eclipse.jgit.api.GitConstructionTest.testOpen":92,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":218,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":215,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":84,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":112,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":173,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":154,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":141,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":144,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":74,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":90,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":207,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":200,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":153,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":13,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":104,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":70,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":150,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":38,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":190,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":131,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":211,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":130,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":147,"org.eclipse.jgit.lib.ConfigTest.testReadLong":63,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":109,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":152,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":134,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":115,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":30,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet":18,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":29,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":45,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":28,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":125,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":27,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":127,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":128,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":159,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":36,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":96,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":145,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":68,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":101,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":193,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":78,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":137,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":95,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":212,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":221,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":53,"org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive":52,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":56,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":57,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":126},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,91,92,92,93,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"26048180-4c42-11e5-b5fb-21717061ad8a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:273","type":"CtIfImpl","sourcecode":"if (int < int)\n    int = int;\n"},"variableMap":{"be":"c","bNext":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1118","type":"CtIfImpl","sourcecode":"if (']' == int) {\n    org.eclipse.jgit.lib.Config.StringReader.reset();\n    break;\n} "},"status":-1},{"failures":[174],"tindex":"2604a891-4c42-11e5-b5fb-6f9668e57d2c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:1164","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.diff.DiffEntry.java.lang.String"},"variableMap":{"org.eclipse.jgit.diff.DiffEntry.DEV_NULL":"newPath","oldp":"newPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:443","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int)"},"status":-1},{"failures":[175,176,177,178,179,180,181,182,183,184],"tindex":"2604cfa2-4c42-11e5-b5fb-470f1dd73290","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:228","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('(')"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeMessageFormatter:154","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Conflicts:\\n\")"},"status":-1},{"failures":[],"tindex":"2604cfa3-4c42-11e5-b5fb-d933bb4074ce","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:287","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RenameCallback.renamed(org.eclipse.jgit.diff.DiffEntry)"},"status":-2},{"failures":[],"tindex":"2604cfa4-4c42-11e5-b5fb-05e224444da7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheTree:538","type":"CtForImpl","sourcecode":"for ( ; (int < int) && (int < int) ; int++ , int++) {\n    final int int = ((byte[][int]) & 255) - ((byte[][int]) & 255);\n    if (int != 0)\n        return int;\n    \n}"},"variableMap":{"a":"dstbuf","b":"dstbuf","aLen":"length","aPos":"length","bLen":"length","bPos":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:620","type":"CtForImpl","sourcecode":"for (int int = 0 ;  ; ) {\n    int int = java.util.zip.Inflater.inflate(byte[], int, ((byte[].int) - int));\n    int += int;\n    if ((java.util.zip.Inflater.finished()) || (boolean && (int == (byte[].int))))\n        return int;\n    \n    if (java.util.zip.Inflater.needsInput()) {\n        org.eclipse.jgit.internal.storage.dfs.DfsReader.pin(org.eclipse.jgit.internal.storage.dfs.DfsPackFile, long);\n        long += org.eclipse.jgit.internal.storage.dfs.DfsBlock.setInput(long, java.util.zip.Inflater);\n    } else if (int == 0)\n        throw new java.util.zip.DataFormatException();\n    \n}"},"status":-2},{"failures":[],"tindex":"2604cfa5-4c42-11e5-b5fb-2d5cc4eacbde","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.TransportCommand:123","type":"CtReturnImpl","sourcecode":"return ((C)(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.TransportCommand:92","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.TransportCommand<C, T>.self()"},"status":-2},{"failures":[],"tindex":"2604cfa6-4c42-11e5-b5fb-ef04d87b3af6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:243","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"matcher":"org.eclipse.jgit.dircache.DirCacheEntry.INFO_LEN","lastWildmatch":"org.eclipse.jgit.dircache.DirCacheEntry.INFO_LEN"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:160","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.dircache.DirCacheEntry.int"},"status":-2},{"failures":[38,39,40,41,42,43,44,73,74,75,76,77,78,79,83,84,80,81,82,88,91,91,92,92,93,93,95,96,97,98,99,114,116,100,101,102,103,104,105,106,107,108,109,110,111,112,113,117,118,120,121,122,123,140,141,142,143,144,145,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,153,154,155,156,157,147,148,149,150,151,152,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"2604f6b7-4c42-11e5-b5fb-87aa13e9c03b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:297","type":"CtOperatorAssignmentImpl","sourcecode":"int |= (int & (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) << (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)"},"variableMap":{"org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_SHIFT":"r","flag":"n","flags":"r","org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_MASK":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:146","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"2604f6b8-4c42-11e5-b5fb-5d64cdd580e8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.IndexDiff:473","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n    if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n        java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n    \n} else {\n    if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n        java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n    } \n}"},"variableMap":{"ignoreSubmoduleMode":"org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.DIRTY","added":"untracked","dirCacheIterator":"org.eclipse.jgit.dircache.DirCacheIterator.class","treeWalk":"treeWalk","org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.ALL":"org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.ALL","workingTreeIterator":"org.eclipse.jgit.treewalk.WorkingTreeIterator.class","this":"this","untracked":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:432","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator);\n    org.eclipse.jgit.dircache.DirCacheIterator org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n    org.eclipse.jgit.treewalk.WorkingTreeIterator org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator);\n    if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n        final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n        if (org.eclipse.jgit.dircache.DirCacheEntry != null) {\n            int int = org.eclipse.jgit.dircache.DirCacheEntry.getStage();\n            if (int > 0) {\n                java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n                org.eclipse.jgit.lib.IndexDiff.addConflict(java.lang.String, int);\n                continue;\n            } \n        } \n    } \n    if (org.eclipse.jgit.treewalk.AbstractTreeIterator != null) {\n        if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n            if ((!(org.eclipse.jgit.treewalk.AbstractTreeIterator.idEqual(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryRawMode()) != (org.eclipse.jgit.dircache.DirCacheIterator.getEntryRawMode()))) {\n                if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator)))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n                \n            } \n        } else {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n            if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null)\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        }\n    } else {\n        if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        } else {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            } \n        }\n    }\n    if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n        if (org.eclipse.jgit.treewalk.WorkingTreeIterator == null) {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        } else {\n            if (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry(), true, org.eclipse.jgit.treewalk.TreeWalk.getObjectReader())) {\n                if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.WorkingTreeIterator)))) || (((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode))))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n                \n            } \n        }\n    } \n    for (int int = 0 ; int < (org.eclipse.jgit.treewalk.TreeWalk.getTreeCount()) ; int++) {\n        java.util.Set<java.lang.String> java.util.Set<java.lang.String> = java.util.Map<org.eclipse.jgit.lib.FileMode, java.util.Set<java.lang.String>>.get(org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int));\n        java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n        if (java.lang.String != null) {\n            if (java.util.Set<java.lang.String> == null)\n                java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>();\n            \n            java.util.Set<java.lang.String>.add(java.lang.String);\n            java.util.Map<org.eclipse.jgit.lib.FileMode, java.util.Set<java.lang.String>>.put(org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int), java.util.Set<java.lang.String>);\n        } \n    }\n}"},"status":-2},{"failures":[185,186,187],"tindex":"26051dc9-4c42-11e5-b5fb-513cb98229fc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:459","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.revwalk.RevObject != null) {\n    if ((java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.remove(org.eclipse.jgit.revwalk.RevObject.getId())) != null)\n        if (java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.isEmpty())\n            return ;\n        \n    \n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.ObjectWalk.nextObject();\n}"},"variableMap":{"id2File":"id2File","w":"w","ro":"ro"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:452","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.revwalk.RevObject != null) {\n    if ((java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.remove(org.eclipse.jgit.revwalk.RevObject.getId())) != null)\n        if (java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.isEmpty())\n            return ;\n        \n    \n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.ObjectWalk.next();\n}"},"status":-1},{"failures":[],"tindex":"26051dca-4c42-11e5-b5fb-a16e11d36702","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:805","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[188,189,190,191,9,10,12,13,14,15,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,156,208,209,210,211,212,213,214,215,216,217,218,219,220],"tindex":"26051dcb-4c42-11e5-b5fb-71a312ebd154","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.patch.HunkHeader:205","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.Edit = null"},"variableMap":{"in":"theirsEdit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:173","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>)"},"status":-1},{"failures":[],"tindex":"260544dc-4c42-11e5-b5fb-9d1833fda4c5","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:171","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PushProcess.updateTrackingRefs()"},"status":0},{"failures":[221],"tindex":"260544dd-4c42-11e5-b5fb-c1d1a9ec2a05","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:261","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"cmd":"headerCnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:386","type":"CtAssignmentImpl","sourcecode":"int = (byte[][int++]) & 255"},"status":-2},{"failures":[222],"tindex":"260544de-4c42-11e5-b5fb-2bee6b4087fc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.DaemonService:141","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Repository = null"},"variableMap":{"db":"repository"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.events.RepositoryEvent:69","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Repository = org.eclipse.jgit.lib.Repository"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}