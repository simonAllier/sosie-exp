{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":136,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog":29,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":12,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":9,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":32,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom":106,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled":97,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_nonexisting":49,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches":79,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testCheckout":28,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists":98,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":86,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":104,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":61,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardUnknownObject":93,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":129,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting":130,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":53,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemoteVsForce":87,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag":71,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":10,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":119,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":102,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":57,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster":77,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":65,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":90,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":43,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":99,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":17,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":4,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete":110,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":112,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":19,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly":124,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":6,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":105,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters":80,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":48,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":128,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":44,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster":75,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefKeySameAsName":109,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":132,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":5,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":116,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":126,"org.eclipse.jgit.lib.RefTest.testResolvedSymRef":36,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":23,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":14,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":91,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":59,"org.eclipse.jgit.lib.RefTest.testResolvedNamesBranch":38,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":15,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":60,"org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs":34,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":120,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches":76,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD":122,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":24,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound":100,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":47,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":50,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody":69,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":35,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":134,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":63,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":11,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":64,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":21,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUpToDate":89,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":45,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":52,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom":121,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":16,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":46,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit":82,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":68,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":115,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked":8,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":22,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":51,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter":73,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":108,"org.eclipse.jgit.api.GitConstructionTest.testClose":1,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":62,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster":81,"org.eclipse.jgit.lib.RefTest.testReadLooseRef":39,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch":83,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak":70,"org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked":41,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":55,"org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef":40,"org.eclipse.jgit.transport.PushProcessTest.testPushResult":92,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":125,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":66,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemote":84,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":2,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":54,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom":117,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed":74,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":95,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":31,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":107,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe":56,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":88,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":18,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":33,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":67,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward":94,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":111,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":37,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":0,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri":72,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testNoLog":30,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefNoChange":113,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":13,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":26,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":103,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":131,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead":127,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch":78,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":7,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":27,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":20,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":135,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject":85,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_existing":58,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":118,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":123,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":42,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":133,"org.eclipse.jgit.transport.PushProcessTest.testUpdateCreateRef":96,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":101,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":3,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead":114,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":25},"transformations":[{"failures":[],"tindex":"f3469c09-4c55-11e5-a098-5dd7c3a23b05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:151","type":"CtForImpl","sourcecode":"for (org.eclipse.jgit.revwalk.BlockRevQueue.Block org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block ; org.eclipse.jgit.revwalk.BlockRevQueue.Block != null ; org.eclipse.jgit.revwalk.BlockRevQueue.Block = org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.BlockRevQueue.Block) {\n    for (int int = org.eclipse.jgit.revwalk.BlockRevQueue.Block.int ; int < (org.eclipse.jgit.revwalk.BlockRevQueue.Block.int) ; int++)\n        org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.RevCommit[][int].int &= int;\n}"},"status":0},{"failures":[],"tindex":"f346c31a-4c55-11e5-a098-d344ead1721b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:395","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode())"},"variableMap":{"newEntry":"entry","e":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:988","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setLength(org.eclipse.jgit.treewalk.FileTreeIterator.getEntryLength())"},"status":0},{"failures":[],"tindex":"f346c31b-4c55-11e5-a098-951e48fd7311","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:826","type":"CtReturnImpl","sourcecode":"return \"rd\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.StrategySimpleTwoWayInCore:78","type":"CtReturnImpl","sourcecode":"return \"simple-two-way-in-core\""},"status":0},{"failures":[],"tindex":"f346c31c-4c55-11e5-a098-1d0908b70f4a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX_Java6:79","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])"},"variableMap":{"args":"args","name":"name","on":"on"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FS_POSIX_Java6:78","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n} catch (java.lang.SecurityException e) {\n    return null;\n} catch (java.lang.NoSuchMethodException e) {\n    return null;\n}"},"status":-2},{"failures":[0],"tindex":"f346c31d-4c55-11e5-a098-c55295979b9c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:206","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\".pack\"))\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - (\".pack\".length())));\n"},"variableMap":{"name":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:204","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"pack-\"))\n    java.lang.String = java.lang.String.substring(\"pack-\".length());\n"},"status":-1},{"failures":[],"tindex":"f346c31e-4c55-11e5-a098-0b8020c2b5f1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:262","type":"CtLocalVariableImpl","sourcecode":"long long = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.BitSet:91","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"f346ea2f-4c55-11e5-a098-aff7290a8ec3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:450","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.CanonicalTreeParser"},"variableMap":{"parser":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:535","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.treewalk.AbstractTreeIterator.createSubtreeIterator(org.eclipse.jgit.lib.ObjectReader)"},"status":-2},{"failures":[],"tindex":"f346ea30-4c55-11e5-a098-7f9fc4b51678","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectLoader:255","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.io.EOFException();\n"},"variableMap":{"n":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:422","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-2},{"failures":[],"tindex":"f346ea31-4c55-11e5-a098-89d2ac530120","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineOut:163","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:141","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f3471042-4c55-11e5-a098-15bb3b9fcf96","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:147","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.Set<java.lang.String>)\n    for (java.lang.String java.lang.String : java.util.Set<java.lang.String>)\n        if ((boolean && (java.lang.String.equals(java.lang.String))) || ((!boolean) && (java.lang.String.startsWith(java.lang.String)))) {\n            java.util.Set<java.lang.String>.remove(java.lang.String);\n            break;\n        } "},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"f3471043-4c55-11e5-a098-fd2c900ff1a0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:809","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.ObjectIdRef)"},"status":-1},{"failures":[],"tindex":"f3471044-4c55-11e5-a098-f19ba546e2d6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.TemporaryBuffer:274","type":"CtAssignmentImpl","sourcecode":"java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block> = new java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>(1)"},"variableMap":{"blocks":"blocks"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:310","type":"CtAssignmentImpl","sourcecode":"java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block> = null"},"status":0},{"failures":[],"tindex":"f3471045-4c55-11e5-a098-9b917fef67fe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:217","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.Edit.getLengthB()) == 0) {\n    int++;\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"f3471046-4c55-11e5-a098-0be2ed161d34","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TagOpt:109","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.TagOpt.option().equals(java.lang.String))\n    return org.eclipse.jgit.transport.TagOpt;\n"},"variableMap":{"tagopt":"this","o":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TagOpt:108","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.TagOpt org.eclipse.jgit.transport.TagOpt : org.eclipse.jgit.transport.TagOpt.org.eclipse.jgit.transport.TagOpt.values()) {\n    if (org.eclipse.jgit.transport.TagOpt.option().equals(java.lang.String))\n        return org.eclipse.jgit.transport.TagOpt;\n    \n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}