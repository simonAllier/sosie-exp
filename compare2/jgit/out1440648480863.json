{"failureDictionary":{"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":61,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":60,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":38,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testNoPostOrder":97,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":336,"org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail":124,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":30,"org.eclipse.jgit.patch.PatchTest.testParse_FixNoNewline":29,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":13,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":277,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":156,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":22,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":157,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":78,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_EnterSubtree":99,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":343,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":45,"org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin":122,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":322,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":66,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":83,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_NoMode":20,"org.eclipse.jgit.treewalk.PostOrderTreeWalkTest.testWithPostOrder_NoEnterSubtree":98,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":4,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_OldStyle":15,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":249,"org.eclipse.jgit.patch.FileHeaderTest.testParseModeChange":19,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":162,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":161,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":65,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":10,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":31,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":333,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict":94,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":243,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":342,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":74,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":79,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":262,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":286,"org.eclipse.jgit.patch.FileHeaderTest.testParseRename100_NewStyle":17,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":242,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":56,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":73,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":344,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":55,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":307,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":240,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":82,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":239,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":7,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testBackBug396127":115,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":148,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":258,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":274,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":3,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":80,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":268,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":132,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":204,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":133,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":205,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":68,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":202,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":316,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":203,"org.eclipse.jgit.patch.PatchTest.testParse_AddNoNewline":28,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":81,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":86,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":158,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":338,"org.eclipse.jgit.dircache.DirCacheTreeTest.testTwoLevelSubtree":110,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":145,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":75,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":295,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":59,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":294,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":306,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":67,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":272,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":259,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":91,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testRecursiveFiltering":103,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":302,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":64,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":288,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":337,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":127,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":137,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":300,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":340,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":42,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":62,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":41,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":309,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":207,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":208,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":209,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":197,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":339,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":206,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":318,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":201,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":227,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":200,"org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree":109,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":199,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":198,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":184,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":100,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":183,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":186,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":250,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":275,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":185,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":255,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":89,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":293,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":44,"org.eclipse.jgit.dircache.DirCacheBasicTest.testBuildThenClear":123,"org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk":14,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_Recursive":117,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":141,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":298,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":84,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":229,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":54,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test3":48,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test4":49,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":46,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test2":47,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":52,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test5":50,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":51,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":125,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":260,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":149,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":303,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":36,"org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo":134,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":210,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":77,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":211,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":212,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":213,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":311,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":290,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":245,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":179,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":334,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":181,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":35,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":180,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":182,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":332,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":126,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":254,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":0,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":71,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_Recursive":121,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":312,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":269,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":241,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode":18,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":224,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":308,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":223,"org.eclipse.jgit.api.BlameCommandTest.testRename":273,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":24,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":225,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":222,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":352,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":192,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":193,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":194,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":354,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":195,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":11,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":196,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":325,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":238,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_ReverseGitSortOrder":106,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":284,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_WithTreeWalk":114,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":217,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":27,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":279,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":266,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":96,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":214,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":349,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":85,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":215,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":216,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":326,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":327,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":331,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":236,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":138,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":176,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":175,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":265,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":178,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":177,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":57,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":271,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":246,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames":113,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":37,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":143,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":351,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":315,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":314,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":257,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":244,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":289,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":247,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":264,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":58,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":281,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":130,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":263,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":144,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":319,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":330,"org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode":23,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":150,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":291,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":142,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":220,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":129,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":221,"org.eclipse.jgit.dircache.DirCacheTreeTest.testSingleSubtree":111,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":346,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":218,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":219,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":304,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":40,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":147,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":171,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testSingleSubtree_NoRecursion":119,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":256,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":173,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":172,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":233,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":321,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset":116,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":174,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testEdgeCases":102,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":261,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":232,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":234,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":276,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":5,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":313,"org.eclipse.jgit.patch.FileHeaderTest.testParseCopy100":21,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":267,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":329,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":323,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":128,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":345,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":283,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":287,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":292,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":8,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":87,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":317,"org.eclipse.jgit.patch.FileHeaderTest.testParseFullIndexLine_WithMode":16,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap":92,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":163,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":53,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":226,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":341,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryDelta":26,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":76,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":63,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":299,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":140,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":2,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":25,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":248,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":296,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":168,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":39,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":167,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":285,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":170,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":169,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":69,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testNoSubtree_NoTreeWalk":120,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":347,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":101,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":252,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":12,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":187,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":305,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyOk":324,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":228,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testTwoLevelSubtree_FilterPath":118,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":189,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":320,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":188,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":191,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":190,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":95,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuilderClear":107,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":353,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap":93,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":230,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":90,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":282,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testNonRecursiveFiltering":104,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testAdd_InGitSortOrder":108,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":328,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames":112,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":348,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":88,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":278,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":253,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":237,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":280,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":160,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":43,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":159,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":297,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":251,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":151,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":152,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":335,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":9,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":153,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":154,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":155,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":231,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":1,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":6,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":33,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":165,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":164,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":34,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":166,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":310,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":70,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":350,"org.eclipse.jgit.api.AddCommandTest.testAddFolder":136,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":146,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":235,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testFindSingleFile":105,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":131,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":139,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":32,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":301,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":135,"org.eclipse.jgit.api.RevertCommandTest.testRevert":270},"transformations":[{"failures":[],"tindex":"34fed737-4c71-11e5-ac29-2519ab90a545","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriterV2:79","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.PackedObjectInfo.copyRawTo(java.security.DigestOutputStream)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"34fefe48-4c71-11e5-ac29-9bdb2bb64885","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:871","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevTag"},"variableMap":{"r":"rev","t":"rev"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:528","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject = null"},"status":-1},{"failures":[],"tindex":"34ff2559-4c71-11e5-ac29-1d2e76ab3f0b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:375","type":"CtIfImpl","sourcecode":"if (int <= int)\n    break;\n"},"variableMap":{"blkEnd":"pendingOutputType","end":"pendingOutputType"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:141","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevWalk) instanceof org.eclipse.jgit.revwalk.DepthWalk) {\n    org.eclipse.jgit.revwalk.DepthWalk org.eclipse.jgit.revwalk.DepthWalk = ((org.eclipse.jgit.revwalk.DepthWalk)(org.eclipse.jgit.revwalk.RevWalk));\n    org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.DepthGenerator(org.eclipse.jgit.revwalk.DepthWalk , org.eclipse.jgit.revwalk.DateRevQueue);\n} else {\n    org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.PendingGenerator(org.eclipse.jgit.revwalk.RevWalk , org.eclipse.jgit.revwalk.DateRevQueue , org.eclipse.jgit.revwalk.filter.RevFilter , int);\n    if (boolean) {\n        ((org.eclipse.jgit.revwalk.PendingGenerator)(org.eclipse.jgit.revwalk.Generator)).boolean = false;\n    } \n}"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"34ff255a-4c71-11e5-ac29-ff0d462efc6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:416","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n} else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n    org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"34ff4c6b-4c71-11e5-ac29-b11fa0942ceb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:577","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[20]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:520","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = byte[]"},"status":-2},{"failures":[],"tindex":"34ff4c6c-4c71-11e5-ac29-bd06fab5fe4b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:254","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:473","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Ref.getTarget().getName().equals(org.eclipse.jgit.lib.Ref.getTarget().getName())"},"status":0},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322],"tindex":"34ff4c6d-4c71-11e5-ac29-c117d839a8d7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:320","type":"CtReturnImpl","sourcecode":"return ((int + int) - (int)) / 2"},"variableMap":{"middleK":"cmp","d":"cmp","k":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:130","type":"CtIfImpl","sourcecode":"if (int != 0)\n    return int;\n"},"status":-1},{"failures":[],"tindex":"34ff737e-4c71-11e5-ac29-0bdd42cc82d3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:491","type":"CtIfImpl","sourcecode":"if ((byte[][(int + 1)]) == '.')\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'..\\'\");\n"},"variableMap":{"raw":"buf","ptr":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:547","type":"CtForImpl","sourcecode":"for ( ; int < int ; int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int))\n    org.eclipse.jgit.util.IntList.add(int);"},"status":-2},{"failures":[323,324,325,326,327,328,329,330,331,332,333],"tindex":"34ff737f-4c71-11e5-ac29-9fe3d878401b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.FileMode:191","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    byte[][int] = byte[][(int + int)];\n}"},"variableMap":{"p":"resPtr","tmp":"res","length":"srcPtr","octalBytes":"res"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:400","type":"CtForImpl","sourcecode":"for ( ; (int < (byte[].int)) && (int < (byte[].int)) ; int++ , int++) {\n    if ((byte[][int]) != (byte[][int]))\n        break;\n    \n}"},"status":-1},{"failures":[],"tindex":"34ff7380-4c71-11e5-ac29-554296c884cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:258","type":"CtWhileImpl","sourcecode":"while ((((org.eclipse.jgit.diff.Edit.int) < int) && ((org.eclipse.jgit.diff.Edit.int) < int)) && (org.eclipse.jgit.diff.HashedSequenceComparator<S>.equals(org.eclipse.jgit.diff.HashedSequence<S>, (int - 1), org.eclipse.jgit.diff.HashedSequence<S>, (int - 1)))) {\n    int--;\n    int--;\n    if (1 < int)\n        int = java.lang.Math.min(int, org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long[][int[][(int - (int))]]));\n    \n}"},"status":0},{"failures":[334,335,332,333],"tindex":"34ff7381-4c71-11e5-ac29-8ffdb6049be7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:824","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(org.eclipse.jgit.internal.storage.file.FileRepository.getObjectsDirectory() , \"pack\")"},"variableMap":{"repo":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:334","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = org.eclipse.jgit.lib.Repository.getWorkTree()"},"status":-1},{"failures":[336,337,338,339,340],"tindex":"34ff7382-4c71-11e5-ac29-33825003386b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:690","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.Config()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:688","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.storage.file.FileBasedConfig"},"status":-1},{"failures":[],"tindex":"34ff7383-4c71-11e5-ac29-19e4d4f86a5b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1034","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackOutputStream.flush()"},"variableMap":{"out":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:304","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.DeltaWindow.selectDeltaBase(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry, java.io.OutputStream)"},"status":0},{"failures":[341,342,343,344,345,346,347,348,349,350,351,352,353,354],"tindex":"34ff7384-4c71-11e5-ac29-1141ab4b71c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteMapMerger:242","type":"CtWhileImpl","sourcecode":"while (((int < (org.eclipse.jgit.notes.LeafBucket.size())) || (int < (org.eclipse.jgit.notes.LeafBucket.size()))) || (int < (org.eclipse.jgit.notes.LeafBucket.size()))) {\n    org.eclipse.jgit.notes.Note org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.get(org.eclipse.jgit.notes.LeafBucket, int);\n    org.eclipse.jgit.notes.Note org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.get(org.eclipse.jgit.notes.LeafBucket, int);\n    org.eclipse.jgit.notes.Note org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.get(org.eclipse.jgit.notes.LeafBucket, int);\n    org.eclipse.jgit.notes.Note org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.min(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note);\n    org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameNoteOrNull(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note);\n    org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameNoteOrNull(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note);\n    org.eclipse.jgit.notes.Note = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameNoteOrNull(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note);\n    if (org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note))\n        org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.Note);\n    else if (org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note))\n        org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.Note);\n    else if (org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.sameContent(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note))\n        org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.Note);\n    else\n        org.eclipse.jgit.notes.InMemoryNoteBucket = org.eclipse.jgit.notes.NoteMapMerger.org.eclipse.jgit.notes.NoteMapMerger.addIfNotNull(org.eclipse.jgit.notes.InMemoryNoteBucket, org.eclipse.jgit.notes.NoteMerger.merge(org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.notes.Note, org.eclipse.jgit.lib.ObjectReader, org.eclipse.jgit.lib.ObjectInserter));\n    \n    if (org.eclipse.jgit.notes.Note != null)\n        int++;\n    \n    if (org.eclipse.jgit.notes.Note != null)\n        int++;\n    \n    if (org.eclipse.jgit.notes.Note != null)\n        int++;\n    \n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}