{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":143,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":145,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":263,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":144,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":139,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":142,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":253,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":249,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":126,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":187,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":58,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":164,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":117,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":46,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":238,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":66,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":68,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":28,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":146,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":65,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":254,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":93,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":215,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":63,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":230,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":136,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":250,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":152,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":170,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":232,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":251,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":210,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":218,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":70,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":264,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":37,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":208,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":153,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":207,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":242,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":8,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":252,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":241,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":155,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":137,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":205,"org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc":275,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":248,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":128,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":177,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":83,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":176,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":240,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":141,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":89,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":40,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":226,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":269,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":225,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":138,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":47,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":99,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":71,"org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld":274,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":67,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":183,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":98,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":228,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":172,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":193,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":19,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":157,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":181,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":158,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":159,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":119,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":243,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":194,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":74,"org.eclipse.jgit.util.Base64Test.testEncodeMatchesDecode":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":84,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":85,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":162,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":69,"org.eclipse.jgit.transport.PackParserTest.test1":122,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":220,"org.eclipse.jgit.api.GitConstructionTest.testClose":53,"org.eclipse.jgit.transport.PackParserTest.test2":123,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":175,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertWholeObject_Length12":111,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":180,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":18,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":154,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":186,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":196,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":95,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":134,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":190,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":227,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":244,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":184,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":45,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":50,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":156,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":201,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":13,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":102,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":255,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":212,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":75,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":26,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":60,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":150,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":34,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":259,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":267,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":52,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":124,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":191,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":219,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":129,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":258,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":91,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":76,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":81,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":209,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":223,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":78,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":237,"org.eclipse.jgit.api.BlameCommandTest.testRename":271,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":246,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":260,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":140,"org.eclipse.jgit.api.FetchCommandTest.testFetch":20,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":105,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":38,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":101,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":5,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":106,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":88,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":107,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":2,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":204,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":41,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":62,"org.eclipse.jgit.util.FileUtilTest.testCreateNewFile":265,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":236,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":86,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":51,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":97,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":270,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":266,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":64,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":213,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":27,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":57,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":221,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":211,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":247,"org.eclipse.jgit.api.PushCommandTest.testPush":11,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":214,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":166,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":233,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":110,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":160,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":115,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":73,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":116,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":114,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":273,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":234,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":10,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":173,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":206,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":133,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":151,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":6,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":4,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":113,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":44,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":43,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":112,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":185,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":94,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":23,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":61,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":161,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":200,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":192,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":231,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":256,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":199,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":163,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":202,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":96,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":17,"org.eclipse.jgit.api.GitConstructionTest.testWrap":55,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":272,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":80,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":29,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":109,"org.eclipse.jgit.api.GitConstructionTest.testOpen":54,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":149,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":235,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":229,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":168,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":77,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":148,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":90,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":171,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":174,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":100,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":131,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":147,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":16,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":21,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":24,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":103,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":3,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":125,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":262,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":178,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":121,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":169,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":189,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":82,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":216,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":195,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":12,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":239,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":92,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":197,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":36,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":135,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":167,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":222,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":35,"org.eclipse.jgit.util.Base64Test.testDecode":0,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":108,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":9,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":268,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":130,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":245,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":14,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":87,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":39,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":132,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":127,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":217,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":165,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":261,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":179,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":104,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":30,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":276,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":33,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":59,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":118,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":198,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":49,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":188,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":25,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":79,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":257,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":42,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":48,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":224,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":120,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":203,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":182,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":31},"transformations":[{"failures":[0,1],"tindex":"88754278-4c62-11e5-92eb-2f546a915114","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:69","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 64 ; int++)\n    org.eclipse.jgit.util.Base64.byte[][org.eclipse.jgit.util.Base64.byte[][int]] = ((byte)(int));"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,53,54,54,55,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"88756989-4c62-11e5-92eb-a5663c4002fc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:509","type":"CtAssignmentImpl","sourcecode":"int = (int) + int"},"variableMap":{"pathLen":"channel","pathOffset":"channel","nameLen":"channel"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:164","type":"CtAssignmentImpl","sourcecode":"int = (java.io.InputStream.read()) & 255"},"status":-1},{"failures":[],"tindex":"8875909a-4c62-11e5-92eb-470a81d65be8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:540","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath())"},"status":-2},{"failures":[101,102,103,104],"tindex":"8875909b-4c62-11e5-92eb-9191c6da28e5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.MergeCommand:354","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('.')"},"variableMap":{"refLogMessage":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.SquashMessageFormatter:99","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\">\\n\")"},"status":-1},{"failures":[105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,60,63,120,92,97,121,122,123,124,125,126,127],"tindex":"8875909c-4c62-11e5-92eb-2bcf5fbb7c3a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:445","type":"CtAssignmentImpl","sourcecode":"byte[] = org.eclipse.jgit.dircache.DirCache.byte[]"},"variableMap":{"readIndexChecksum":"result","org.eclipse.jgit.dircache.DirCache.NO_CHECKSUM":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:163","type":"CtAssignmentImpl","sourcecode":"byte[] = new byte[int]"},"status":-1},{"failures":[],"tindex":"8875909d-4c62-11e5-92eb-ada95c74cfe1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:133","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,15,16,17,19,157,158,159,160,161,162,163,164,165,166,167,168,101,169,170,171,172,102,173,174,175,176,177,178,179,180,103,181,182,183,184,185,29,31,32,33,35,39,41,42,43,44,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,81,84,87,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264],"tindex":"8875b7ae-4c62-11e5-92eb-4f959e567210","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.StashCreateCommand:207","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    return ;\n"},"variableMap":{"ref":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:749","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))) {\n        if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) && (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict())) {\n            if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))))\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n        \n    } else\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    \n} else if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    } else {\n        if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n                if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n                    return ;\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    }\n} else {\n    if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    else if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n        if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        }\n    } else {\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n}"},"status":-1},{"failures":[],"tindex":"8875debf-4c62-11e5-92eb-c9523b19494e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:888","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[18]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:325","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.eclipse.jgit.dircache.DirCacheEntry.byte[]"},"status":-2},{"failures":[265],"tindex":"8875dec0-4c62-11e5-92eb-8731a200a0fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:338","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File))"},"status":-1},{"failures":[],"tindex":"887604d1-4c62-11e5-92eb-d9fad4695b3f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:426","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"bytes\" , \"KiB\" , \"MiB\" , \"GiB\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:214","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = java.lang.String.split(\"/\")"},"status":-2},{"failures":[266,157,267,268,269,270,271,158,159,272,273],"tindex":"887604d2-4c62-11e5-92eb-bdaca1d72c98","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameGenerator:809","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Region.deepCopy()"},"variableMap":{"p":"this","regionList":"r","n":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Candidate:226","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.blame.Region = org.eclipse.jgit.blame.Candidate.org.eclipse.jgit.blame.Candidate.add(org.eclipse.jgit.blame.Region, org.eclipse.jgit.blame.Candidate, org.eclipse.jgit.blame.Region)"},"status":-1},{"failures":[],"tindex":"887604d3-4c62-11e5-92eb-2b241afd278e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:284","type":"CtLocalVariableImpl","sourcecode":"java.nio.ByteBuffer java.nio.ByteBuffer = java.nio.ByteBuffer.wrap(byte[])"},"variableMap":{"content":"encodedName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:267","type":"CtLocalVariableImpl","sourcecode":"final java.nio.ByteBuffer java.nio.ByteBuffer = java.nio.ByteBuffer.wrap(byte[])"},"status":-2},{"failures":[],"tindex":"887604d4-4c62-11e5-92eb-1f46f3edbb21","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:1073","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger.cleanUp()"},"status":-2},{"failures":[274,275,276],"tindex":"88762be5-4c62-11e5-92eb-b308ed6fb337","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:179","type":"CtIfImpl","sourcecode":"if (int == (org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage[].int))\n    (int)++;\n"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}