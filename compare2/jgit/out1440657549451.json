{"failureDictionary":{"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":11,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart":101,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":42,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":29,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":56,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":12,"org.eclipse.jgit.notes.LeafBucketTest.testSet_Replace":116,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":107,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":124,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":93,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":59,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":1,"org.eclipse.jgit.notes.LeafBucketTest.testSetFive_InOrder":114,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":6,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":125,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":123,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":74,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":84,"org.eclipse.jgit.notes.NoteMapTest.testCreateFromEmpty":118,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":80,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":90,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":92,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":100,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":91,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":46,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":82,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":39,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":60,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":41,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":104,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":120,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":9,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":51,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":54,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":102,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":62,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":81,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":25,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":97,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":53,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":36,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":15,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":49,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":14,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":35,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":63,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":71,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":68,"org.eclipse.jgit.lib.T0002_TreeTest.test008_SubtreeInternalSorting":130,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":23,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":88,"org.eclipse.jgit.notes.LeafBucketTest.testSetFive_ReverseOrder":109,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":40,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":126,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":17,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":38,"org.eclipse.jgit.merge.MergeAlgorithmTest.testEmptyTexts":99,"org.eclipse.jgit.notes.LeafBucketTest.testRemoveMakesEmpty":115,"org.eclipse.jgit.lib.T0002_TreeTest.test000_sort_03":129,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":89,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":121,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":58,"org.eclipse.jgit.notes.LeafBucketTest.testRemoveFirst":110,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":4,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii":95,"org.eclipse.jgit.notes.LeafBucketTest.testSetFive_MixedOrder":111,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":13,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":16,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":69,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":103,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":50,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":67,"org.eclipse.jgit.notes.LeafBucketTest.testRemoveLast":113,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":66,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":65,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":30,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":34,"org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildOneFile_Commit_IndexChangedEvent":131,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":33,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":64,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":106,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":27,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":76,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":48,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":2,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":77,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":37,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":31,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":78,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":22,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":86,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":94,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":70,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":98,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":108,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":105,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":122,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":57,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":8,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":55,"org.eclipse.jgit.notes.LeafBucketTest.testRemoveMiddle":112,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeTruncatedInName":0,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":73,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":72,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":47,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":75,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":18,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":20,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":119,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":21,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":128,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":43,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":79,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":61,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test012_SubtreeExternalSorting":127,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":83,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":45,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":52,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":10,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":24,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":87,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":117,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":85,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":96,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":28,"org.eclipse.jgit.api.RevertCommandTest.testRevert":44,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":19},"transformations":[{"failures":[],"tindex":"524af1c4-4c86-11e5-8e3d-4bc143d99736","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:860","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"deepen \")) {\n    int = java.lang.Integer.parseInt(java.lang.String.substring(7));\n    continue;\n} "},"variableMap":{"depth":"mNext","line":"oldPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:236","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<org.eclipse.jgit.diff.DiffEntry>.size()) ; int++) {\n    org.eclipse.jgit.diff.DiffEntry org.eclipse.jgit.diff.DiffEntry = java.util.List<org.eclipse.jgit.diff.DiffEntry>.get(int);\n    if (!org.eclipse.jgit.diff.SimilarityRenameDetector.(org.eclipse.jgit.diff.SimilarityRenameDetector.isFile(org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.FileMode))) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    } \n    if (!(org.eclipse.jgit.diff.RenameDetector.sameType(org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.diff.DiffEntry.org.eclipse.jgit.lib.FileMode))) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    } \n    if ((java.util.BitSet != null) && (java.util.BitSet.get(int))) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    } \n    long long = long[][int];\n    if (long == 0) {\n        long = org.eclipse.jgit.diff.SimilarityRenameDetector.(size(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)) + 1;\n        long[][int] = long;\n    } \n    long long = long[][int];\n    if (long == 0) {\n        long = org.eclipse.jgit.diff.SimilarityRenameDetector.(size(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry)) + 1;\n        long[][int] = long;\n    } \n    long long = java.lang.Math.max(long, long);\n    long long = java.lang.Math.min(long, long);\n    if (((long * 100) / long) < (int)) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    } \n    if (org.eclipse.jgit.diff.SimilarityIndex == null) {\n        try {\n            org.eclipse.jgit.diff.SimilarityIndex = org.eclipse.jgit.diff.SimilarityRenameDetector.hash(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry);\n        } catch (org.eclipse.jgit.diff.SimilarityIndex.TableFullException tableFull) {\n            boolean = true;\n            continue SRC;\n        }\n    } \n    org.eclipse.jgit.diff.SimilarityIndex org.eclipse.jgit.diff.SimilarityIndex;\n    try {\n        org.eclipse.jgit.diff.SimilarityIndex = org.eclipse.jgit.diff.SimilarityRenameDetector.hash(org.eclipse.jgit.diff.DiffEntry.Side.org.eclipse.jgit.diff.DiffEntry.Side, org.eclipse.jgit.diff.DiffEntry);\n    } catch (org.eclipse.jgit.diff.SimilarityIndex.TableFullException tableFull) {\n        if (java.util.BitSet == null)\n            java.util.BitSet = new java.util.BitSet(java.util.List<org.eclipse.jgit.diff.DiffEntry>.size());\n        \n        java.util.BitSet.set(int);\n        boolean = true;\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    }\n    int int = org.eclipse.jgit.diff.SimilarityIndex.score(org.eclipse.jgit.diff.SimilarityIndex, 10000);\n    int int = org.eclipse.jgit.diff.SimilarityRenameDetector.(org.eclipse.jgit.diff.SimilarityRenameDetector.nameScore(org.eclipse.jgit.diff.DiffEntry.java.lang.String, org.eclipse.jgit.diff.DiffEntry.java.lang.String)) * 100;\n    int int = ((int * 99) + (int * 1)) / 10000;\n    if (int < (int)) {\n        org.eclipse.jgit.lib.ProgressMonitor.update(1);\n        continue;\n    } \n    long[][int++] = org.eclipse.jgit.diff.SimilarityRenameDetector.org.eclipse.jgit.diff.SimilarityRenameDetector.encode(int, int, int);\n    org.eclipse.jgit.lib.ProgressMonitor.update(1);\n}"},"status":-2},{"failures":[],"tindex":"524b18d5-4c86-11e5-8e3d-b7ba231cf394","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.Edit:125","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.diff.Edit.Type.org.eclipse.jgit.diff.Edit.Type"},"variableMap":{"org.eclipse.jgit.diff.Edit.Type.REPLACE":"org.eclipse.jgit.diff.Edit.Type.INSERT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.Edit:130","type":"CtIfImpl","sourcecode":"if ((int) < (int))\n    return org.eclipse.jgit.diff.Edit.Type.org.eclipse.jgit.diff.Edit.Type;\nelse\n    return org.eclipse.jgit.diff.Edit.Type.org.eclipse.jgit.diff.Edit.Type;\n"},"status":-2},{"failures":[0],"tindex":"524b3fe6-4c86-11e5-8e3d-fbfc643161e1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:221","type":"CtIfImpl","sourcecode":"if (byte[] == null)\n    continue;\n"},"variableMap":{"b":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:381","type":"CtIfImpl","sourcecode":"if ((int == int) || ((byte[][int]) != 0))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in name\");\n"},"status":-1},{"failures":[],"tindex":"524b3fe7-4c86-11e5-8e3d-99a53175bf86","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:237","type":"CtOperatorAssignmentImpl","sourcecode":"int &= ~(org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)"},"variableMap":{"flags":"d","org.eclipse.jgit.internal.storage.pack.ObjectToPack.REUSE_AS_IS":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Region:105","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":0},{"failures":[],"tindex":"524b3fe8-4c86-11e5-8e3d-95b883303141","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:371","type":"CtIfImpl","sourcecode":"if ((int) <= 32)\n    return new java.lang.String(char[] , 0 , int);\n"},"variableMap":{"nibbles":"nibbles","b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:367","type":"CtIfImpl","sourcecode":"if ((int) <= 24)\n    return new java.lang.String(char[] , 0 , int);\n"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"524b3fe9-4c86-11e5-8e3d-d972345898ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:297","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write('\\n')"},"status":-1},{"failures":[99,100,101,102,103,104,105,106,107],"tindex":"524b66fa-4c86-11e5-8e3d-2d614bd1b553","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS_Win32:157","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(\"/c\")"},"variableMap":{"argv":"names"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeFormatter:149","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(java.lang.String)"},"status":-1},{"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"524b66fb-4c86-11e5-8e3d-21546096c4fb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.LeafBucket:223","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.notes.Note[][(int)++] = new org.eclipse.jgit.notes.Note(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.lib.AnyObjectId.copy())"},"variableMap":{"notes":"notes","noteOn":"noteOn","cnt":"p","noteData":"noteOn"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:169","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.notes.Note[][int] = new org.eclipse.jgit.notes.Note(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.lib.AnyObjectId.copy())"},"status":-1},{"failures":[],"tindex":"524b66fc-4c86-11e5-8e3d-7f9db3ab51f3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:411","type":"CtLocalVariableImpl","sourcecode":"final long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:289","type":"CtLocalVariableImpl","sourcecode":"final long long = org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig.getBlockLimit()"},"status":-2},{"failures":[],"tindex":"524b66fd-4c86-11e5-8e3d-012452a0a7ad","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:125","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.AbstractRevQueue instanceof org.eclipse.jgit.revwalk.DateRevQueue)\n    org.eclipse.jgit.revwalk.DateRevQueue = ((org.eclipse.jgit.revwalk.DateRevQueue)(org.eclipse.jgit.revwalk.AbstractRevQueue));\nelse\n    org.eclipse.jgit.revwalk.DateRevQueue = new org.eclipse.jgit.revwalk.DateRevQueue(org.eclipse.jgit.revwalk.AbstractRevQueue);\n"},"status":-2},{"failures":[125],"tindex":"524b66fe-4c86-11e5-8e3d-d1680d48c481","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:363","type":"CtIfImpl","sourcecode":"if (int == int)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in mode\");\n"},"variableMap":{"sz":"index","ptr":"marks"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.TreeFilterMarker:107","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.filter.TreeFilter != null) {\n    try {\n        boolean boolean = org.eclipse.jgit.treewalk.filter.TreeFilter.include(org.eclipse.jgit.treewalk.TreeWalk);\n        if (boolean)\n            int |= 1L << int;\n        \n    } catch (org.eclipse.jgit.errors.StopWalkException e) {\n        org.eclipse.jgit.treewalk.filter.TreeFilter[][int] = null;\n    }\n} "},"status":-1},{"failures":[],"tindex":"524b66ff-4c86-11e5-8e3d-cf69b391a403","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommit:107","type":"CtIfImpl","sourcecode":"if (int == 1)\n    org.eclipse.jgit.revplot.PlotLane[] = new org.eclipse.jgit.revplot.PlotLane[]{ org.eclipse.jgit.revplot.PlotLane[][0] , org.eclipse.jgit.revplot.PlotLane };\nelse {\n    final org.eclipse.jgit.revplot.PlotLane[] org.eclipse.jgit.revplot.PlotLane[] = new org.eclipse.jgit.revplot.PlotLane[int + 1];\n    java.lang.System.arraycopy(org.eclipse.jgit.revplot.PlotLane[], 0, org.eclipse.jgit.revplot.PlotLane[], 0, int);\n    org.eclipse.jgit.revplot.PlotLane[][int] = org.eclipse.jgit.revplot.PlotLane;\n    org.eclipse.jgit.revplot.PlotLane[] = org.eclipse.jgit.revplot.PlotLane[];\n}"},"status":-2},{"failures":[126],"tindex":"524b8e10-4c86-11e5-8e3d-ebe66655bb9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:543","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"status":-1},{"failures":[127,128,129,130],"tindex":"524b8e11-4c86-11e5-8e3d-7d4d807e3f13","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:469","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.util.RawParseUtils.endOfParagraph(byte[], int)"},"variableMap":{"msgB":"k","raw":"nameUTF8"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:114","type":"CtLocalVariableImpl","sourcecode":"int int = (byte[][int]) & 255"},"status":-1},{"failures":[131],"tindex":"524b8e12-4c86-11e5-8e3d-5d8528be2979","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:302","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCache.registerIndexChangedListener(org.eclipse.jgit.events.IndexChangedListener)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}