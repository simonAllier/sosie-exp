{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":670,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":95,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":528,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef":612,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchNone":566,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":585,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":578,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":190,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":13,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":19,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":156,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":356,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":636,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":94,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":480,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":125,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":518,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":29,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":146,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":463,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":38,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":601,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":520,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":121,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":235,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":419,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":546,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":647,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":442,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":24,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":479,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":579,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":519,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":413,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":490,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":662,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":186,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":214,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":412,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":233,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":524,"org.eclipse.jgit.merge.SimpleMergeTest.testTheirs":514,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":10,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":541,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":617,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":198,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":410,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":409,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":223,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":104,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":549,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":525,"org.eclipse.jgit.api.BranchCommandTest.testDelete":109,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":143,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":545,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":124,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":324,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":325,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":570,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":527,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":321,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":322,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":323,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":523,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":237,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":507,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":241,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":491,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":580,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":379,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":255,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":607,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":32,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":390,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":652,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":436,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":606,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":381,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":122,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":232,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":137,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":83,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":469,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":568,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":467,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":561,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":567,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":328,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":329,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":161,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":330,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":41,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":160,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":113,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":225,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":326,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":133,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":327,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":592,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":393,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":301,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":192,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":303,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":5,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":302,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":594,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":305,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":474,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":6,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":30,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":304,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":506,"org.eclipse.jgit.api.GitConstructionTest.testClose":206,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":378,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":164,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":158,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":384,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":608,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":212,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":12,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":500,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":361,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":395,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":603,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":622,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":552,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":478,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":551,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":105,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":435,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":3,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":391,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":107,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":150,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":53,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":43,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":332,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":176,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":333,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":334,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":335,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":599,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":621,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":401,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":204,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":331,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":530,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":297,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":615,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":646,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":296,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":299,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":678,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":298,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":300,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":98,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":250,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":110,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":116,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":508,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":425,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":492,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":534,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":542,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":462,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":644,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":411,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":494,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":349,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":447,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":471,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":620,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":348,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":350,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":347,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":346,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":184,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":657,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":60,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":253,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":593,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":359,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":1,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":197,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":87,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":609,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":152,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":127,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":638,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":23,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":256,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":291,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":100,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":293,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":292,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":101,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":295,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":294,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":108,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":512,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":656,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":193,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":40,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":517,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":25,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":598,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":42,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":203,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":428,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":414,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":238,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":374,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":63,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo":666,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":366,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":362,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":557,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":650,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":33,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":115,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":441,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":69,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":634,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":576,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":281,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":635,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":66,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":633,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":443,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":562,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":216,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":376,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":408,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":159,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":632,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":502,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":640,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":2,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":624,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":72,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":287,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":286,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":289,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":482,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":602,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":288,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":22,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":400,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":147,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":290,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":439,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":531,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":399,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":11,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":54,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":483,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":123,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":547,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":149,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":353,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":211,"org.eclipse.jgit.api.GitConstructionTest.testWrap":208,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":472,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":165,"org.eclipse.jgit.api.TagCommandTest.testTagging":61,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":365,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":610,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":645,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":461,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":7,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":504,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":364,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":210,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":277,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":276,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":556,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":577,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":477,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":68,"org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging":65,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":174,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":651,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":639,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":9,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":544,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":538,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":418,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":283,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":52,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":282,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":369,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":586,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":285,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":284,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":475,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":532,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":597,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":422,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":522,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":220,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":306,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":486,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":308,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":307,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":310,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":219,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":309,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":145,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":185,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":252,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":464,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":85,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":493,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":254,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":56,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":505,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":423,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":470,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":271,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":537,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":677,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":273,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":398,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":272,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":654,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":383,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":421,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":191,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":260,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":20,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":261,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":262,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":489,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":637,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":263,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":264,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":397,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":14,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":106,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":279,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":278,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":613,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":280,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":450,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":669,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":99,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":355,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":257,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":432,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":655,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":403,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":623,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":540,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":509,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":177,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":367,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":118,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":205,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":195,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":495,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":269,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":268,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":448,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":516,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":27,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":680,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":26,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":529,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":671,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":581,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":275,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":274,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":438,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":183,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":386,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":484,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":575,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":132,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":496,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":476,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":526,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":371,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":440,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":515,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":424,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":166,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":595,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":31,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":224,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":370,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":555,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":499,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":553,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":554,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":73,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":265,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":430,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":521,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":267,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":266,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":643,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":67,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":627,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":201,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":497,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":665,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":565,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":222,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":126,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":163,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":182,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":270,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":498,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":501,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":676,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":44,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":406,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":574,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":70,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":380,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":162,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":172,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":454,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":221,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":82,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":168,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":144,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":460,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":86,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":434,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":433,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":167,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":47,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":96,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":234,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":28,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":596,"org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD":473,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":373,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":46,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":75,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":213,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":619,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":387,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":466,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":90,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":91,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":573,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":194,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":231,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":34,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":242,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":316,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":614,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":616,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":154,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":320,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":319,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":649,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":318,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":317,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":660,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":455,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":352,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":420,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":456,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":426,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":388,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":618,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":189,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":138,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":148,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":169,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":199,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":114,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":74,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":228,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":611,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo":659,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":93,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":151,"org.eclipse.jgit.transport.RefSpecTest.testDeleteMaster":550,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":51,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":582,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":661,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":153,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":375,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":415,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":181,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":584,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":18,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":17,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":21,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":510,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":84,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":535,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":664,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":668,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":625,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":35,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":202,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":141,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":452,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":431,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":449,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":226,"org.eclipse.jgit.api.BlameCommandTest.testRename":89,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":236,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":468,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":536,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":674,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":119,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":311,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":312,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":313,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":314,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":315,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":485,"org.eclipse.jgit.api.FetchCommandTest.testFetch":170,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":667,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":407,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":368,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":673,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":340,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":641,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":336,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":337,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":338,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":339,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":459,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":404,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":227,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":481,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":446,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":457,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":88,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":605,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":103,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit":4,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":81,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":416,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":120,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":49,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":50,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":583,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":679,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":658,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":188,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":39,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":130,"org.eclipse.jgit.api.PushCommandTest.testPush":217,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":417,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":445,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":134,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":487,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":648,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":539,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":111,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":344,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":58,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":345,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":511,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":136,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":341,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":626,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":259,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":342,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":230,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":258,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":343,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":392,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":587,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":37,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":427,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":173,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":142,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":45,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":48,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":117,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":354,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":402,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":36,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":244,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":604,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":239,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":15,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":92,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":451,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":245,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":589,"org.eclipse.jgit.api.GitConstructionTest.testOpen":207,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":57,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":444,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":437,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":131,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":372,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":377,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":129,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":240,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":488,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":55,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":140,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":351,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":588,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":79,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":80,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":171,"org.eclipse.jgit.merge.SimpleMergeTest.testOurs":513,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":76,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":77,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":78,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":385,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":196,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":157,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":564,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":382,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":112,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":209,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":453,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":653,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":243,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":394,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":135,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":563,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":600,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":179,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":672,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":572,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":128,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":396,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":363,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":429,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":251,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":215,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":229,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":465,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":571,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":218,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":358,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":458,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":357,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":360,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":405,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":200,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":180,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":62,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":631,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":675,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":503,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":630,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":0,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":139,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":246,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":629,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":97,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":628,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":248,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":249,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":543,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":548,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":590,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":175,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":187,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":591,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":533,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":71,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":642,"org.eclipse.jgit.api.TagCommandTest.testDelete":64,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo":663,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":569,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":102,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":178,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":558,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":155,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":560,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":559,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":389,"org.eclipse.jgit.api.RevertCommandTest.testRevert":16,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":247},"transformations":[{"failures":[],"tindex":"46ae2fbb-4c85-11e5-9b03-236ca304747b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.NameRevCommand:141","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.FIFORevQueue org.eclipse.jgit.revwalk.FIFORevQueue = new org.eclipse.jgit.revwalk.FIFORevQueue()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1235","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.FIFORevQueue org.eclipse.jgit.revwalk.FIFORevQueue = new org.eclipse.jgit.revwalk.FIFORevQueue()"},"status":-2},{"failures":[],"tindex":"46b5f7ec-4c85-11e5-9b03-9177a76861d7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:166","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    continue;\n"},"variableMap":{"available":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:274","type":"CtForImpl","sourcecode":"for (int int = (java.lang.String[].int) - 1 ; int > 1 ; --int) {\n    if (org.eclipse.jgit.util.ChangeIdUtil.java.util.regex.Pattern.matcher(java.lang.String[][int]).matches()) {\n        int = int;\n        continue;\n    } \n    if ((int != (java.lang.String[].int)) && ((java.lang.String[][int].length()) == 0))\n        break;\n    \n    if ((int != (java.lang.String[].int)) && (org.eclipse.jgit.util.ChangeIdUtil.java.util.regex.Pattern.matcher(java.lang.String[][int]).matches())) {\n        int = int + 1;\n        continue;\n    } \n    int = java.lang.String[].int;\n    break;\n}"},"status":-2},{"failures":[],"tindex":"46b61efd-4c85-11e5-9b03-7f47e23f944b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommitList:159","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revplot.PlotCommit org.eclipse.jgit.revplot.PlotCommit = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:191","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revplot.PlotCommit org.eclipse.jgit.revplot.PlotCommit = ((org.eclipse.jgit.revplot.PlotCommit)(org.eclipse.jgit.revplot.PlotCommit.getParent(0)))"},"status":-2},{"failures":[],"tindex":"46b61efe-4c85-11e5-9b03-4b3609097cd1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:935","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.lib.ProgressMonitor = org.eclipse.jgit.lib.ProgressMonitor == null ? org.eclipse.jgit.lib.NullProgressMonitor.org.eclipse.jgit.lib.NullProgressMonitor : org.eclipse.jgit.lib.ProgressMonitor"},"variableMap":{"org.eclipse.jgit.lib.NullProgressMonitor.INSTANCE":"org.eclipse.jgit.lib.NullProgressMonitor.INSTANCE","pm":"pm"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:246","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ProgressMonitor = org.eclipse.jgit.lib.NullProgressMonitor.org.eclipse.jgit.lib.NullProgressMonitor"},"status":-2},{"failures":[0,1],"tindex":"46b61eff-4c85-11e5-9b03-ebba63212b94","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:511","type":"CtOperatorAssignmentImpl","sourcecode":"int += 20"},"variableMap":{"headerCnt":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:395","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"46b61f00-4c85-11e5-9b03-8b00298c471b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ReflogReaderImpl:92","type":"CtIfImpl","sourcecode":"if (int < 0)\n    throw new java.lang.IllegalArgumentException();\n"},"variableMap":{"number":"lf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:192","type":"CtIfImpl","sourcecode":"if ((0 <= int) && (0 <= int))\n    int = java.lang.Math.min(int, int);\nelse if (0 <= int)\n    int = int;\nelse if (0 <= int)\n    int = int;\nelse\n    break;\n"},"status":-2},{"failures":[],"tindex":"46b61f01-4c85-11e5-9b03-972f09947cf8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndexScanner:126","type":"CtIfImpl","sourcecode":"if (int < int)\n    int <<= 1;\n"},"variableMap":{"sz":"childCnt","worstCaseBlockCnt":"childCnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:491","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheTree.removeChild(((int) - 1))"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,206,207,207,208,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549],"tindex":"46b64612-4c85-11e5-9b03-71bede816552","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:445","type":"CtIfImpl","sourcecode":"if ((int + 1) < (char[].int)) {\n    switch (char[][(int + 1)]) {\n        case '0' :\n        case '1' :\n        case '2' :\n        case '3' :\n        case '4' :\n        case '5' :\n        case '6' :\n        case '7' :\n        case '8' :\n        case '9' :\n            int int;\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n            for (int = int + 1 ; int < (char[].int) ; ++int) {\n                if (!(java.lang.Character.isDigit(char[][int])))\n                    break;\n                \n            }\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + 1) , ((int - int) - 1));\n            int int;\n            try {\n                int = java.lang.Integer.parseInt(java.lang.String);\n            } catch (java.lang.NumberFormatException e) {\n                throw new org.eclipse.jgit.errors.RevisionSyntaxException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.lang.String);\n            }\n            if (int != 0) {\n                org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                if (int > (org.eclipse.jgit.revwalk.RevCommit.getParentCount()))\n                    org.eclipse.jgit.revwalk.RevObject = null;\n                else\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent((int - 1));\n                \n            } \n            int = int - 1;\n            int = int;\n            break;\n        case '{' :\n            int int;\n            java.lang.String java.lang.String = null;\n            for (int = int + 2 ; int < (char[].int) ; ++int) {\n                if ((char[][int]) == '}') {\n                    java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n                    break;\n                } \n            }\n            int = int;\n            if (java.lang.String != null)\n                if (java.lang.String.equals(\"tree\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.revwalk.RevObject);\n                } else if (java.lang.String.equals(\"commit\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevObject);\n                } else if (java.lang.String.equals(\"blob\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                    if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevBlob))\n                        throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n                    \n                } else if (java.lang.String.equals(\"\")) {\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n                } else\n                    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n                \n            else\n                throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n            \n            int = int;\n            break;\n        default :\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n            if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n                org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n                if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n                    org.eclipse.jgit.revwalk.RevObject = null;\n                else\n                    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n                \n            } else\n                throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n            \n    }\n} else {\n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.peel(org.eclipse.jgit.revwalk.RevObject);\n    if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n        if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 0)\n            org.eclipse.jgit.revwalk.RevObject = null;\n        else\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n        \n    } else\n        throw new org.eclipse.jgit.errors.IncorrectObjectTypeException(org.eclipse.jgit.revwalk.RevObject , org.eclipse.jgit.lib.Constants.java.lang.String);\n    \n}"},"status":-1},{"failures":[202],"tindex":"46b66d23-4c85-11e5-9b03-170c97050ee5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:1049","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int += 48;\n"},"variableMap":{"ptr":"completed"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BatchingProgressMonitor:127","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.BatchingProgressMonitor.Task) != null)\n    org.eclipse.jgit.lib.BatchingProgressMonitor.Task.update(this, int);\n"},"status":-1},{"failures":[550],"tindex":"46b66d24-4c85-11e5-9b03-05ee596b5ae3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:167","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"branch: Reset start-point to branch \" + java.lang.String"},"variableMap":{"refLogMessage":"dstName","startPointFullName":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:136","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.transport.RefSpec.org.eclipse.jgit.transport.RefSpec.checkValid(java.lang.String)"},"status":-1},{"failures":[],"tindex":"46b69435-4c85-11e5-9b03-9be47a4f5804","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:442","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef)"},"variableMap":{"symbolic":"symbolic","n":"resolvedRef"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:304","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.set(int, org.eclipse.jgit.lib.Ref)"},"status":-2},{"failures":[],"tindex":"46b69436-4c85-11e5-9b03-5f4910a2c2e8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:153","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)))"},"variableMap":{"repo":"repo","strategy":"strategy"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:222","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository, true)))"},"status":-2},{"failures":[551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,50,72,74],"tindex":"46b69437-4c85-11e5-9b03-139b5899ec9d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.MergeConfig:146","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:165","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[567,568,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,33,34,35,37,38,39,40,41,42,43,19,20,21,22,23,24,25,26,27,28,29,30,31,32,44,48,49,50,52,53,54,55,45,46,47,61,65,56,57,58,59,75,66,67,68,69,70,71,72,73,74,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,81,82,83,84,85,86,87,88,89,90,91,92,569,570,571,572,573,574,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,130,134,142,143,146,147,153,156,148,149,150,151,152,168,169,176,177,178,179,180,181,182,183,184,185,186,187,188,171,172,173,174,205,195,206,206,207,207,208,208,209,210,211,212,213,197,198,200,201,202,203,214,215,216,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,244,260,261,262,263,264,271,272,273,274,275,278,279,280,281,282,283,284,285,288,289,290,293,294,295,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,333,334,335,336,337,338,339,340,341,342,343,344,345,348,349,350,575,576,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,577,352,353,578,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,579,580,581,582,583,584,585,586,587,588,589,590,591,470,463,464,465,466,467,468,469,592,449,450,451,452,453,454,455,456,457,458,459,460,461,462,477,478,490,491,492,493,494,495,496,497,498,499,500,501,503,593,594,595,596,597,598,599,504,505,506,507,508,509,510,511,600,601,602,603,604,605,606,502,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,515,516,517,518,519,520,521,522,523,524,525,526],"tindex":"46b69438-4c85-11e5-9b03-e1431e6f5749","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:193","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId[][int] = java.util.List<? extends org.eclipse.jgit.lib.AnyObjectId>.get(int).copy()"},"status":-1},{"failures":[93,94,96,198,203,209,210,211,212,213,102,107,108,110,206,206,207,207,208,208,170,172,174,215,216,217,19,20,21,22,23,24,25,26,27,28,29,30,31,32,234,240,607,608,609,610,611,612,613,614,615,616,245,246,247,248,249,250,251,252,617,253,254,255,256,257,258,259,582,618,619,620,621,622,584,586,471,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,488,489,638,639,640,641,502,642,643,503,644,645,646,647,648,649,512,650,513,651,652,514,653,654,655,449,450,451,452,453,454,455,456,457,458,459,460,461,462,656,542,543,657,658,659,660,661,662,544,545,663,546,547,664,665,666,667,548,549,668,669,670,600,601,602,605,606,472,473,474,475,476,477,671,478,672,479,480,673,481,482,483,484,485,486,487,674,675,676,677,678,679,680],"tindex":"46b6bb49-4c85-11e5-9b03-cb9e57fcb0af","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:757","type":"CtIfImpl","sourcecode":"if (long != (org.eclipse.jgit.internal.storage.file.PackFile.Delta.int))\n    break SEARCH;\n"},"variableMap":{"sz":"pos","delta":"delta","deltaSize":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:731","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.internal.storage.file.PackFile.Delta != null) || (long < (org.eclipse.jgit.internal.storage.file.WindowCursor.getStreamFileThreshold())))\n    byte[] = org.eclipse.jgit.internal.storage.file.PackFile.decompress((long + int), ((int)(long)), org.eclipse.jgit.internal.storage.file.WindowCursor);\n"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}