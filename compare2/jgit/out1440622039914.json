{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":27,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":29,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":51,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":28,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":23,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":26,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":41,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":166,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":106,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":60,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":165,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":178,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":30,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":142,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":157,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":189,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":20,"org.eclipse.jgit.revwalk.FooterLineTest.testMatchesBugId":4,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsNonBare":190,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":167,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":36,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":67,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":159,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":168,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":137,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":145,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":52,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":186,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":135,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":37,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":134,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":98,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":185,"org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare":191,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":40,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":97,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":39,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":21,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":132,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":104,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":12,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":75,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":74,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":96,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":25,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":153,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":152,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":22,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":82,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":155,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooSpLfNulBar":192,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":69,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":120,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":112,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":113,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":80,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":114,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":115,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":172,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_IgnoreWhitespace":6,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":99,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":121,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":176,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":54,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":58,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":147,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":73,"org.eclipse.jgit.revwalk.FooterLineTest.testShortKey":10,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":78,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":38,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":105,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":123,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":18,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":171,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":117,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":154,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":100,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":83,"org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueWithLF":2,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":108,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":128,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":43,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":70,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":139,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":174,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":34,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":188,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":47,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":118,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":146,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":13,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":46,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":53,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":136,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":150,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":164,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":102,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_SkipNonFooter":8,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":48,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":24,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":65,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":182,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":131,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":179,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":91,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":163,"org.eclipse.jgit.patch.FileHeaderTest.testParseGitFileName_DqFooTabBar":193,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":140,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":177,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":187,"org.eclipse.jgit.revwalk.FooterLineTest.testFilterFootersIgnoreCase":7,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":148,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":138,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":103,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":141,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":62,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":160,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":56,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":175,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":161,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":71,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":133,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":35,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":183,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":181,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":94,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":93,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":84,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserWithLF":0,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":127,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":44,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":119,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":158,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":126,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":59,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":129,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":111,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":170,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":85,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":33,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":162,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":156,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":64,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":32,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":68,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":72,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":15,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":31,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":110,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":79,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":180,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":173,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":50,"org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueNoLF":9,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":76,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":169,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":66,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":116,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":109,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":143,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":122,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":95,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserNoLF":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":124,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":19,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":63,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":149,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":89,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":14,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":101,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":90,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":16,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":144,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":49,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":61,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":77,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":87,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":88,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":125,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":107,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_ManyUsers":11,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":45,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":184,"org.eclipse.jgit.revwalk.FooterLineTest.testNonDelimtedEmail":5,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":92,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":151,"org.eclipse.jgit.revwalk.FooterLineTest.testNotEmail":1,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":130,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":81,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":86},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"a4f52408-4c33-11e5-a967-f3ef32be37f8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:341","type":"CtIfImpl","sourcecode":"if (int > (int))\n    return (int) - ((int ^ (int)) & 1);\n"},"variableMap":{"maxK":"ptr","k":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:824","type":"CtIfImpl","sourcecode":"if (byte == ':')\n    return int;\n"},"status":-1},{"failures":[],"tindex":"a4f54b19-4c33-11e5-a967-2b6264afe480","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RepositoryCache:203","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository != null)\n    org.eclipse.jgit.lib.Repository.close();\n"},"variableMap":{"db":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:617","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.transport.RemoteConfig = new org.eclipse.jgit.transport.RemoteConfig(org.eclipse.jgit.lib.Repository.getConfig() , \"origin\");\n} catch (java.net.URISyntaxException e) {\n    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"a4f54b1a-4c33-11e5-a967-f1bccfb913a9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:840","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"This is a combination of (.*) commits\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.UserConfig:220","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.lib.UserConfig.org.eclipse.jgit.lib.UserConfig.getDefaultUserName()"},"status":-2},{"failures":[],"tindex":"a4f54b1b-4c33-11e5-a967-e71f889264ae","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:847","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String;\n    while ((java.lang.String = java.io.BufferedReader.readLine()) != null) {\n        java.util.List<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle>.add(org.eclipse.jgit.internal.storage.file.ObjectDirectory.openAlternate(java.lang.String));\n    }\n} finally {\n    java.io.BufferedReader.close();\n}"},"status":-2},{"failures":[],"tindex":"a4f54b1c-4c33-11e5-a967-9581205f8936","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:1164","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.diff.DiffEntry.java.lang.String"},"variableMap":{"org.eclipse.jgit.diff.DiffEntry.DEV_NULL":"name","oldp":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1081","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String.substring(0, ((org.eclipse.jgit.lib.ConfigLine.java.lang.String.length()) - 1))"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168],"tindex":"a4f5722d-4c33-11e5-a967-c954a0d327e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:749","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))) {\n        if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) && (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict())) {\n            if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))))\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n        \n    } else\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    \n} else if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    } else {\n        if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n                if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n                    return ;\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    }\n} else {\n    if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    else if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n        if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        }\n    } else {\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n}"},"status":-1},{"failures":[],"tindex":"a4f5993e-4c33-11e5-a967-eb470921f4ce","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:809","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.RefList.Builder<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.ObjectIdRef)"},"status":-2},{"failures":[169],"tindex":"a4f5993f-4c33-11e5-a967-e3d2396882b7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:79","type":"CtReturnImpl","sourcecode":"return ((int) <= int) && (int < (int))"},"variableMap":{"nextPosition":"c","position":"c","sizeInBits":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:374","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, byte[])) >= 0)\n    return true;\n"},"status":-1},{"failures":[170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],"tindex":"a4f59940-4c33-11e5-a967-fbd287ec1c1d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RepositoryCache:323","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.internal.storage.file.FileRepository(java.io.File)"},"variableMap":{"path":"workTree"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.submodule.SubmoduleWalk:233","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.RepositoryBuilder().setMustExist(true).setFS(org.eclipse.jgit.util.FS.org.eclipse.jgit.util.FS).setWorkTree(java.io.File).build()"},"status":-1},{"failures":[],"tindex":"a4f59941-4c33-11e5-a967-0d9e52d3bb82","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder:151","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.BitmapIndex.Bitmap instanceof org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmap)\n    com.googlecode.javaewah.EWAHCompressedBitmap = ((org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.CompressedBitmap)(org.eclipse.jgit.lib.BitmapIndex.Bitmap)).getEwahCompressedBitmap();\nelse\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.lib.BitmapIndex.Bitmap.getClass().toString());\n"},"status":-2},{"failures":[190,191],"tindex":"a4f5c052-4c33-11e5-a967-ed83294eaf2f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.InitCommand:90","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RepositoryBuilder.setWorkTree(java.io.File)"},"variableMap":{"builder":"builder","directory":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.InitCommand:102","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RepositoryBuilder.setGitDir(java.io.File)"},"status":-1},{"failures":[192,193],"tindex":"a4f5c053-4c33-11e5-a967-4fd14cc7f6d3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.internal.PathMatcher:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"variableMap":{"pattern":"oldPath"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:385","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.util.QuotedString.org.eclipse.jgit.util.QuotedString.GitPathStyle.dequote(byte[], int, (int - 1))"},"status":-1},{"failures":[],"tindex":"a4f5c054-4c33-11e5-a967-bfdf649cc14b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:614","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int += 48;\n"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}