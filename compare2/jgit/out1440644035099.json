{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":21,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":15,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":49,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":0,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":63,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":44,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":73,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":40,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":48,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine":68,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":29,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":64,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":71,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":32,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage":65,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyFails":16,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":47,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":76,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":8,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":55,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":39,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":41,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":80,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length123":11,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":12,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":27,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":36,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":58,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":37,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":45,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":23,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement":66,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130InsertFails":10,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":24,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":25,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":22,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":42,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":31,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId":67,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_Length130CopyOk":7,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":38,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":19,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":74,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_InsertFrontFails":9,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":54,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":75,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":53,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":14,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":43,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":77,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":62,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter2":79,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter1":78,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":26,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testShuffleSegments":17,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":56,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":4,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":5,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":18,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":3,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement":69,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":2,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":51,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":33,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":52,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":6,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":61,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":60,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":1,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testIndexSize":13,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":35,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":72,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":34,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":59,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":70,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":30,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":46,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":28,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":57,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":50},"transformations":[{"failures":[],"tindex":"db1cc8d3-4c66-11e5-8231-ddf4edfdc2a8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:469","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:187","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\"\\n\")"},"status":-2},{"failures":[],"tindex":"db1cefe4-4c66-11e5-8231-01a9743a6aa1","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:733","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String)"},"variableMap":{"revstr":"org.eclipse.jgit.lib.Constants.HEAD"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:170","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.lib.ObjectReader);\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(org.eclipse.jgit.lib.Constants.java.lang.String);\n    if (org.eclipse.jgit.lib.ObjectId == null)\n        throw new org.eclipse.jgit.api.errors.NoHeadException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.api.StashApplyCommand.getStashId();\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n    if (((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) < 2) || ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) > 3))\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.ObjectId.name(), java.lang.Integer.valueOf(org.eclipse.jgit.revwalk.RevCommit.getParentCount())));\n    \n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(((org.eclipse.jgit.lib.Constants.java.lang.String) + \"^{tree}\"));\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevCommit.getParent(1));\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = null;\n    if ((boolean) && ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) == 3))\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.revwalk.RevCommit.getParent(2));\n    \n    org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)));\n    org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"stashed HEAD\" , \"HEAD\" , \"stash\" });\n    org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.lib.ObjectId);\n    org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository));\n    if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.revwalk.RevCommit)) {\n        org.eclipse.jgit.dircache.DirCache org.eclipse.jgit.dircache.DirCache = org.eclipse.jgit.lib.Repository.lockDirCache();\n        org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.lib.ObjectId , org.eclipse.jgit.dircache.DirCache , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n        org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n        org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n        if (boolean) {\n            org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository, true)));\n            org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"stashed HEAD\" , \"HEAD\" , \"stashed index\" });\n            org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.lib.ObjectId);\n            boolean boolean = org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId);\n            if (boolean) {\n                org.eclipse.jgit.api.StashApplyCommand.resetIndex(org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()));\n            } else {\n                throw new org.eclipse.jgit.api.errors.StashApplyFailureException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            }\n        } \n        if (org.eclipse.jgit.lib.ObjectId != null) {\n            org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository, true)));\n            org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"stashed HEAD\" , \"HEAD\" , \"untracked files\" });\n            org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.lib.ObjectId);\n            boolean boolean = org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId);\n            if (boolean)\n                try {\n                    org.eclipse.jgit.revwalk.RevTree org.eclipse.jgit.revwalk.RevTree = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n                    org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree);\n                } catch (org.eclipse.jgit.errors.CheckoutConflictException e) {\n                    throw new org.eclipse.jgit.api.errors.StashApplyFailureException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n                }\n            else\n                throw new org.eclipse.jgit.api.errors.StashApplyFailureException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            \n        } \n    } else {\n        throw new org.eclipse.jgit.api.errors.StashApplyFailureException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    }\n    return org.eclipse.jgit.lib.ObjectId;\n} catch (org.eclipse.jgit.api.errors.JGitInternalException e) {\n    throw org.eclipse.jgit.api.errors.JGitInternalException;\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n} finally {\n    org.eclipse.jgit.lib.ObjectReader.release();\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"db1d3e05-4c66-11e5-8231-eb60b6b5ceda","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ConfigSnapshot:113","type":"CtAssignmentImpl","sourcecode":"int = -(int + 1)"},"variableMap":{"idx":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:186","type":"CtAssignmentImpl","sourcecode":"int[][int] = int"},"status":-1},{"failures":[],"tindex":"db1d3e06-4c66-11e5-8231-affb1fb0e53f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:294","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile = org.eclipse.jgit.internal.storage.dfs.DfsPackFile"},"variableMap":{"pack":"last","lastPack":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:668","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile = null"},"status":0},{"failures":[],"tindex":"db1d6517-4c66-11e5-8231-3f37ef54f918","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1145","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DelayRevQueue:86","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.Generator.next()"},"status":-2},{"failures":[65,66,67,68,69],"tindex":"db1d6518-4c66-11e5-8231-9ddc8f90c0a4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevObject:186","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((((int) & (org.eclipse.jgit.revwalk.RevWalk.int)) != 0 ? 's' : '-'))"},"variableMap":{"s":"ret","flags":"indexOfNextLineBreak","org.eclipse.jgit.revwalk.RevWalk.SEEN":"indexOfNextLineBreak"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:182","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String.substring(int))"},"status":-1},{"failures":[70],"tindex":"db1d6519-4c66-11e5-8231-d3184daefdab","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchProcess:349","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.ObjectWalk.release()"},"variableMap":{"ow":"rw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:254","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId()));\n} catch (java.io.IOException readError) {\n}"},"status":-1},{"failures":[71,72,73,74,75,76],"tindex":"db1d8c2a-4c66-11e5-8231-b95b66cd45e4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:793","type":"CtInvocationImpl","sourcecode":"java.io.File.mkdirs()"},"variableMap":{"parentFolder":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:293","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getFS().setExecute(java.io.File, true)"},"status":-1},{"failures":[],"tindex":"db1d8c2b-4c66-11e5-8231-7993f5820d73","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ConfigLine:122","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\".\")"},"variableMap":{"b":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FormatError:109","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.patch.FormatError.getMessage())"},"status":0},{"failures":[],"tindex":"db1d8c2c-4c66-11e5-8231-b73cb3615415","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:500","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString())"},"status":-2},{"failures":[77],"tindex":"db1d8c2d-4c66-11e5-8231-7589a47c9f73","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:780","type":"CtAssertImpl","sourcecode":"assert int >= 0"},"variableMap":{"number":"runningEmptyWords"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.BitSet:92","type":"CtForEachImpl","sourcecode":"for (long long : long[]) {\n    if (long == 0) {\n        int++;\n        continue;\n    } \n    if (long != 0)\n        com.googlecode.javaewah.EWAHCompressedBitmap.add(long);\n    \n    if (int > 0) {\n        com.googlecode.javaewah.EWAHCompressedBitmap.addStreamOfEmptyWords(false, int);\n        int = 0;\n    } \n    long = long;\n}"},"status":-1},{"failures":[],"tindex":"db1db33e-4c66-11e5-8231-a594b0b51f44","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.Transport:933","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = org.eclipse.jgit.transport.RemoteConfig.java.lang.String"},"variableMap":{"org.eclipse.jgit.transport.RemoteConfig.DEFAULT_RECEIVE_PACK":"host","optionReceivePack":"host"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:429","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.transport.URIish.java.lang.String = java.lang.String"},"status":0},{"failures":[78,79],"tindex":"db1db33f-4c66-11e5-8231-297c336bad21","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:189","type":"CtIfImpl","sourcecode":"if ((int != 0) && (int < 4))\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"variableMap":{"len":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:251","type":"CtIfImpl","sourcecode":"if ((int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.lib.ObjectChecker.byte[])) < 0)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"no committer\");\n"},"status":-1},{"failures":[],"tindex":"db1db340-4c66-11e5-8231-f5b81ecacfb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:779","type":"CtIfImpl","sourcecode":"if (int < int) {\n    java.lang.String = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, (int - 1));\n} else {\n    java.lang.String = \"invalid\";\n}"},"status":-2},{"failures":[80],"tindex":"db1db341-4c66-11e5-8231-938a5a179312","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:455","type":"CtForImpl","sourcecode":"for (int int = java.lang.Math.max(0, ((int) - 16)) ; int < (int) ; int++) {\n    byte byte = byte[][int];\n    if (byte != ' ')\n        int = (int >>> 2) + (byte << 24);\n    \n}"},"variableMap":{"path":"buf","pathLen":"ptr","hash":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:335","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream[][0].write(byte[], int, (int - int))"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}