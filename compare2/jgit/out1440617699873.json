{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":271,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":173,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":272,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":163,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":277,"org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail":83,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":228,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":67,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NoBodySobAndBug":129,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase3":137,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase2":136,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSimpleStarCase1":135,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":16,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":17,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":260,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritPreferredAuthentications":148,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":273,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":164,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":242,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":21,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":254,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":269,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":278,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":90,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":219,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":262,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":201,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":256,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":279,"org.eclipse.jgit.api.CleanCommandTest.testClean":1,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNameOnlyMatches":152,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":238,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":244,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":174,"org.eclipse.jgit.util.ChangeIdUtilTest.testTimeAltersId":110,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":89,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":88,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":263,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":3,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":209,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":111,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":100,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":11,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubject_NonFooterAndBugAndSob":125,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement":131,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":150,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":51,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":162,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_InheritBatchMode":146,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":49,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":215,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":50,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":18,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":102,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":236,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":6,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":261,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugBrackersAndSob":104,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":71,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":208,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":149,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":159,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":224,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":9,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":250,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":249,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":270,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":206,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":252,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine":120,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":185,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":79,"org.eclipse.jgit.util.ChangeIdUtilTest.testWithEndingURL":122,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":182,"org.eclipse.jgit.util.ChangeIdUtilTest.testFirstParentAltersId":113,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":175,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":73,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":78,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":176,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":177,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":53,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":54,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":210,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":52,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":220,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":231,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":47,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":46,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":38,"org.eclipse.jgit.util.ChangeIdUtilTest.testKernelStyleFooter":112,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":37,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":155,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":39,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":156,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":196,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":245,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":204,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":222,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithSignedOffBy":118,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":181,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":227,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":264,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":232,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_OptionsInherit":147,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":74,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":251,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":211,"org.eclipse.jgit.util.ChangeIdUtilTest.testATwoLines":107,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":55,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":56,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":103,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":57,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":235,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":165,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":203,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":240,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":34,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":35,"org.eclipse.jgit.util.ChangeIdUtilTest.testOneliner":106,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":36,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":276,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessagesWithSignedOffBy":117,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":169,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":75,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":168,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":265,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":161,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":223,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":153,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":237,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":259,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":65,"org.eclipse.jgit.api.BlameCommandTest.testRename":10,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":66,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":213,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":64,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":170,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage":105,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":43,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":44,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":45,"org.eclipse.jgit.util.ChangeIdUtilTest.testDirCacheAltersId":133,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":200,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBug_NonFooterLineAndSob":127,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":60,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":97,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":183,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":58,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":59,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":216,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":192,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":32,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":31,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":33,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugLineWithASpaceAndSob":116,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithBug_SubButNoBody":132,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":157,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":2,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":241,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":77,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAfterBugOrIssue":114,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":80,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":246,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":239,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":214,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":91,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":94,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommit":124,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":199,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":68,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":12,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":81,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":257,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":70,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":267,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":63,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":98,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":96,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":61,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":195,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":62,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":194,"org.eclipse.jgit.util.ChangeIdUtilTest.testMultiLineMessagesWithoutFooter":128,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":28,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":29,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":82,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":234,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":30,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":226,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":7,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":76,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":166,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":255,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":86,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":87,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":180,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLineNoLineBreak":121,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":186,"org.eclipse.jgit.util.ChangeIdUtilTest.testACommitWithSubjectBodyBugEmptyLineAndSob":130,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":275,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":258,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":253,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":160,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":202,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":101,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":218,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":274,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testHasFlags":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":179,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":22,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase1":144,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase2":145,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testVerySimpleStarCase0":143,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":205,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":95,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":4,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":172,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":92,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":134,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":26,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":25,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":69,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":27,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":184,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":178,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement":115,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":154,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId":119,"org.eclipse.jgit.util.ChangeIdUtilTest.testSingleLineMessages":123,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":243,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":84,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":41,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":221,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":40,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":42,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":207,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":217,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":225,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":233,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":198,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":247,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":268,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":190,"org.eclipse.jgit.util.ChangeIdUtilTest.testNoteInMiddle":126,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":212,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":158,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":191,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":197,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":266,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":93,"org.eclipse.jgit.util.ChangeIdUtilTest.testRegularCommitWithSob_ButNoBody":109,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":171,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":20,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":19,"org.eclipse.jgit.util.ChangeIdUtilTest.testOnelinerFollowedByBlank":108,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":188,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":189,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":14,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":15,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":85,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":229,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":23,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":151,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase1":139,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":24,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase0":138,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":167,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":99,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase3":141,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":193,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":5,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase2":140,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":248,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testManySolutionsCase4":142,"org.eclipse.jgit.api.RevertCommandTest.testRevert":230,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":187},"transformations":[{"failures":[0],"tindex":"8a180cb3-4c29-11e5-872c-436b0b667ce0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.LIFORevQueue:106","type":"CtForImpl","sourcecode":"for (int int = org.eclipse.jgit.revwalk.BlockRevQueue.Block.int ; int < (org.eclipse.jgit.revwalk.BlockRevQueue.Block.int) ; int++)\n    if (((org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.RevCommit[][int].int) & int) != 0)\n        return true;\n    "},"status":-1},{"failures":[],"tindex":"8a1833c4-4c29-11e5-872c-29ec24e0824c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCache:250","type":"CtAssignmentImpl","sourcecode":"int = 4"},"variableMap":{"eb":"org.eclipse.jgit.dircache.DirCacheEntry.UPDATE_NEEDED"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:426","type":"CtUnaryOperatorImpl","sourcecode":"~(org.eclipse.jgit.dircache.DirCacheEntry.int)"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"8a1833c5-4c29-11e5-872c-cf2ae77739d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheBuildIterator:130","type":"CtIfImpl","sourcecode":"if (int < int)\n    org.eclipse.jgit.dircache.DirCacheBuilder.keep(int, (int - int));\n"},"status":-1},{"failures":[],"tindex":"8a185ad6-4c29-11e5-872c-d70e68c48645","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.TimeoutInputStream:116","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.TimeoutInputStream.endRead()"},"status":-2},{"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"8a185ad7-4c29-11e5-872c-819056bd6bdf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.ChangeIdUtil:116","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n\\n\")"},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:113","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\n\")"},"status":-1},{"failures":[134],"tindex":"8a185ad8-4c29-11e5-872c-2d53ccc20f7f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1151","type":"CtIfImpl","sourcecode":"if (int == 0)\n    return false;\n"},"variableMap":{"len":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.Patch:373","type":"CtForEachImpl","sourcecode":"for (final byte[] byte[] : byte[][]) {\n    if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, byte[])) >= 0)\n        return true;\n    \n}"},"status":-1},{"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"8a185ad9-4c29-11e5-872c-d985c2b211fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:171","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.Head>.add(org.eclipse.jgit.fnmatch.AbstractHead)"},"status":-1},{"failures":[],"tindex":"8a185ada-4c29-11e5-872c-9dd12393a0ab","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS:453","type":"CtInvocationImpl","sourcecode":"java.lang.System.java.io.PrintStream.println(\"(ignoring remaing output:\")"},"variableMap":{"java.lang.System.err":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeFormatter:112","type":"CtForImpl","sourcecode":"for (int int = org.eclipse.jgit.merge.MergeChunk.getBegin() ; int < (org.eclipse.jgit.merge.MergeChunk.getEnd()) ; int++) {\n    org.eclipse.jgit.diff.RawText.writeLine(java.io.OutputStream, int);\n    java.io.OutputStream.write('\\n');\n}"},"status":-2},{"failures":[],"tindex":"8a1881eb-4c29-11e5-872c-9fb02fd111f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.InflaterCache:75","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.InflaterCache.int) > 0) {\n    final java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.lib.InflaterCache.java.util.zip.Inflater[][--(org.eclipse.jgit.lib.InflaterCache.int)];\n    org.eclipse.jgit.lib.InflaterCache.java.util.zip.Inflater[][org.eclipse.jgit.lib.InflaterCache.int] = null;\n    return java.util.zip.Inflater;\n} "},"status":0},{"failures":[153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,74,75,76,185,186,187,188,189,190,191,192,193,194,195,196,67,197,68,198,199,200,69,201,202,203,70,71,72,204,205,73,206,207,208,209,210,211,212,213,214,215,216,217,218,80,219,220,81,221,222,223,82,224,225,226,227,228,229,230,231,84,232,233,85,86,234,235,87,236,88,89,237,238,239,240,241,91,242,243,93,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,102,265,101,266,267,268,269,270,271,272,273,274,275,276,277,278,279],"tindex":"8a1881ec-4c29-11e5-872c-514d15efd06d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:847","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n    if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n        return ;\n    else\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    \n} else\n    org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n"},"variableMap":{"iMode":"mMode","f":"f","org.eclipse.jgit.lib.FileMode.TREE":"hMode","dce":"dce","name":"name","h":"m","this":"this","m":"h","walk":"walk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:749","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))) {\n        if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) && (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict())) {\n            if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))))\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n        \n    } else\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    \n} else if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    } else {\n        if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n                if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n                    return ;\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    }\n} else {\n    if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    else if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n        if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        }\n    } else {\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n}"},"status":-1},{"failures":[],"tindex":"8a1acbdd-4c29-11e5-872c-af74c20018aa","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:929","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.FileRepository.close()"},"variableMap":{"repository":"repo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RemoveNoteCommand:127","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.CommitBuilder.setAuthor(new org.eclipse.jgit.lib.PersonIdent(org.eclipse.jgit.lib.Repository))"},"status":0},{"failures":[],"tindex":"8a1acbde-4c29-11e5-872c-036fb0988954","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ConfigLine:104","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.StringUtils.equalsIgnoreCase(java.lang.String, java.lang.String)"},"variableMap":{"a":"org.eclipse.jgit.lib.ConfigConstants.CONFIG_BRANCH_SECTION","b":"branchName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BranchConfig:146","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Config.getBoolean(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, false)"},"status":-2},{"failures":[],"tindex":"8a1acbdf-4c29-11e5-872c-290c3cdc4fd4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:587","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser != null)\n    int = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode) ? 3328 : 3840;\n"},"variableMap":{"hMode":"org.eclipse.jgit.lib.FileMode.TREE","org.eclipse.jgit.lib.FileMode.TREE":"org.eclipse.jgit.lib.FileMode.TREE","h":"h","ffMask":"org.eclipse.jgit.dircache.DirCacheEntry.STAGE_2"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:978","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.AbstractTreeIterator != null) && (!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode())))) {\n    org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathString() , org.eclipse.jgit.dircache.DirCacheEntry.int);\n    org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode());\n    org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId());\n    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n} "},"status":-2},{"failures":[],"tindex":"8a1acbe0-4c29-11e5-872c-6d4a412a6576","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.FileUtils.mkdirs(java.io.File, true)"},"variableMap":{"parentDir":"identityFile"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:232","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File) == null)\n    org.eclipse.jgit.transport.OpenSshConfig.Host.java.io.File = org.eclipse.jgit.transport.OpenSshConfig.toFile(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n"},"status":-2},{"failures":[],"tindex":"8a1acbe1-4c29-11e5-872c-bfbf2487ea0b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:272","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(\"pack-\"))) || (!(java.lang.String.endsWith(\".pack\"))))\n    continue;\n"},"variableMap":{"n":"commitDoesNotHaveGivenParent"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:206","type":"CtIfImpl","sourcecode":"if ((java.lang.Integer) == null) {\n    if ((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) != 1)\n        throw new org.eclipse.jgit.api.errors.MultipleParentsNotAllowedException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.revwalk.RevCommit.name(), java.lang.Integer.valueOf(org.eclipse.jgit.revwalk.RevCommit.getParentCount())));\n    \n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(0);\n} else {\n    if ((java.lang.Integer.intValue()) > (org.eclipse.jgit.revwalk.RevCommit.getParentCount()))\n        throw new org.eclipse.jgit.api.errors.JGitInternalException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.revwalk.RevCommit, java.lang.Integer));\n    \n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit.getParent(((java.lang.Integer.intValue()) - 1));\n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}