{"failureDictionary":{"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testBinaryDetect":8,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":25,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":80,"org.eclipse.jgit.transport.URIishTest.testGitSshProto":122,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":57,"org.eclipse.jgit.api.FetchCommandTest.testFetch":39,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":68,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":88,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":90,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":19,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":13,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":87,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":95,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":101,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":35,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":10,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":71,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":84,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort":115,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":85,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":33,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":54,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":99,"org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort":120,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testCR":6,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":86,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testLF":7,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":18,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":92,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTrailingSlash":113,"org.eclipse.jgit.api.PushCommandTest.testPush":47,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":67,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":75,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile":146,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":141,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":102,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":142,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":16,"org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode":118,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":134,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":140,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":46,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":139,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":14,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":12,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":133,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":74,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testBinaryDontDetect":9,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":73,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":131,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":96,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":130,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":83,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test002_WriteEmptyTree2":144,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindows":126,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":30,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":41,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":98,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":36,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":112,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":70,"org.eclipse.jgit.api.GitConstructionTest.testWrap":79,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":27,"org.eclipse.jgit.transport.URIishTest.testFileProtoWindows":129,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":59,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":58,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":107,"org.eclipse.jgit.api.GitConstructionTest.testOpen":78,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":93,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":89,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":100,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":105,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":37,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort":117,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":108,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":24,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":21,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testCRLF":4,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":40,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":43,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":11,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort":125,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":103,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":20,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":1,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":31,"org.eclipse.jgit.transport.URIishTest.testSshGitProto":116,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":32,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":91,"org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD":109,"org.eclipse.jgit.api.GitConstructionTest.testClose":77,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort":121,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":48,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":94,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":2,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":23,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":66,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":65,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort":114,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":97,"org.eclipse.jgit.transport.URIishTest.testGetSet":124,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":45,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":34,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":50,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":69,"org.eclipse.jgit.transport.URIishTest.testSshProto":123,"org.eclipse.jgit.transport.URIishTest.testGitProtoUnix":128,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":0,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":56,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":110,"org.eclipse.jgit.transport.URIishTest.testFileProtoUnix":119,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":53,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":138,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":137,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testLFCR":5,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":60,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":136,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":135,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":62,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":63,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":81,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":143,"org.eclipse.jgit.util.io.EolCanonicalizingInputStreamTest.testEmpty":3,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":52,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":44,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":49,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":106,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":17,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":26,"org.eclipse.jgit.transport.URIishTest.testGitWithUserHome":127,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":15,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":82,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":64,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":72,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":51,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":111,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":145,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":38,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":132,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":104,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":61},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"5d79e8a1-4c60-11e5-9d70-bb0b65286eb6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:97","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.EolCanonicalizingInputStream:124","type":"CtReturnImpl","sourcecode":"return int == 1 ? (byte[][0]) & 255 : -1"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,77,78,78,79,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"5d7a0fb2-4c60-11e5-9d70-d7fc55dc083c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:164","type":"CtAssignmentImpl","sourcecode":"int = (java.io.InputStream.read()) & 255"},"status":-1},{"failures":[],"tindex":"5d7a0fb3-4c60-11e5-9d70-a93f48e73f6f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.notes.DefaultNoteMerger:72","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.Note == null)\n    return org.eclipse.jgit.notes.Note;\n"},"variableMap":{"theirs":"ours","ours":"ours"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.DefaultNoteMerger:76","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.notes.Note"},"status":-2},{"failures":[109,110,111],"tindex":"5d7a36c4-4c60-11e5-9d70-8fca1c46a681","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:277","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.NB.encodeInt32(byte[], 4, 2)"},"variableMap":{"buf":"hdrbuf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:164","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.mark(byte[].int)"},"status":-1},{"failures":[112,113],"tindex":"5d7a36c5-4c60-11e5-9d70-6966142c8f36","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.fnmatch.GroupHead:137","type":"CtReturnImpl","sourcecode":"return !(boolean)"},"variableMap":{"inverse":"isDirectory"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:178","type":"CtIfImpl","sourcecode":"if ((boolean) && (!boolean))\n    return false;\nelse\n    return true;\n"},"status":-1},{"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"5d7a36c6-4c60-11e5-9d70-0b993a5a8876","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.URIish:610","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.URIish.format(false, false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:660","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.URIish.format(false, true)"},"status":-1},{"failures":[],"tindex":"5d7a36c7-4c60-11e5-9d70-c3bbd213470e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:222","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexV1:142","type":"CtLocalVariableImpl","sourcecode":"int int = byte[][5]"},"status":-2},{"failures":[],"tindex":"5d7a36c8-4c60-11e5-9d70-b36d61bd115d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:290","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:537","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(\"HEAD\")"},"status":-2},{"failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145],"tindex":"5d7a5dd9-4c60-11e5-9d70-896b9d3adaa9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:261","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"cmd":"w4"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:213","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.NB.compareUInt32(int, org.eclipse.jgit.util.NB.decodeInt32(byte[], (int + 12)))"},"status":-1},{"failures":[],"tindex":"5d7a5dda-4c60-11e5-9d70-177ec1b1257e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:365","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode))\n    org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n"},"variableMap":{"mode":"org.eclipse.jgit.lib.FileMode.GITLINK","org.eclipse.jgit.lib.FileMode.GITLINK":"org.eclipse.jgit.lib.FileMode.GITLINK","org.eclipse.jgit.lib.FileMode.TREE":"org.eclipse.jgit.lib.FileMode.GITLINK"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddCommand:172","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null) {\n    long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLength();\n    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(java.lang.String);\n    if (((org.eclipse.jgit.dircache.DirCacheIterator == null) || ((org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()) == null)) || (!(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry().isAssumeValid()))) {\n        org.eclipse.jgit.lib.FileMode org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.treewalk.WorkingTreeIterator.getIndexFileMode(org.eclipse.jgit.dircache.DirCacheIterator);\n        org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.lib.FileMode);\n        if ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) != org.eclipse.jgit.lib.FileMode) {\n            org.eclipse.jgit.dircache.DirCacheEntry.setLength(long);\n            org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified());\n            long long = org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryContentLength();\n            java.io.InputStream java.io.InputStream = org.eclipse.jgit.treewalk.WorkingTreeIterator.openEntryStream();\n            try {\n                org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.lib.ObjectInserter.insert(org.eclipse.jgit.lib.Constants.int, long, java.io.InputStream));\n            } finally {\n                java.io.InputStream.close();\n            }\n        } else\n            org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryObjectId());\n        \n        org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n        java.lang.String = java.lang.String;\n    } else {\n        org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n    }\n} else if ((org.eclipse.jgit.dircache.DirCacheIterator != null) && ((!(boolean)) || ((org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode) == (org.eclipse.jgit.dircache.DirCacheIterator.getEntryFileMode()))))\n    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry());\n"},"status":-2},{"failures":[],"tindex":"5d7a84eb-4c60-11e5-9d70-19c3bef35a5a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CheckoutCommand:476","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit) != null)\n    return org.eclipse.jgit.revwalk.RevCommit.getId();\n"},"variableMap":{"startCommit":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:542","type":"CtIfImpl","sourcecode":"if (java.lang.Object.(getClass()) == (org.eclipse.jgit.lib.ObjectId.org.eclipse.jgit.lib.ObjectId))\n    return ((org.eclipse.jgit.lib.ObjectId)(this));\n"},"status":-2},{"failures":[],"tindex":"5d7a84ec-4c60-11e5-9d70-61f69bd926b1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RefWriter:131","type":"CtInvocationImpl","sourcecode":"java.io.StringWriter.write(\"^{}\\n\")"},"status":-2},{"failures":[],"tindex":"5d7a84ed-4c60-11e5-9d70-233b230be38e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.LongMap:137","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"variableMap":{"h":"lf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:168","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[146],"tindex":"5d7a84ee-4c60-11e5-9d70-9fb1b692741b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:243","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.FileMode[][int] = org.eclipse.jgit.patch.FileHeader.parseFileMode(int, int)"},"status":-1},{"failures":[],"tindex":"5d7a84ef-4c60-11e5-9d70-d11d6d5ba1f6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:703","type":"CtIfImpl","sourcecode":"if ((!(org.eclipse.jgit.treewalk.AbstractTreeIterator.hasId())) || (!(org.eclipse.jgit.treewalk.AbstractTreeIterator.hasId())))\n    return false;\n"},"variableMap":{"a":"o","b":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:281","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.AnyObjectId.equals(((org.eclipse.jgit.lib.AnyObjectId)(java.lang.Object)))"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}