{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":18,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":52,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":17,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":20,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":99,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":19,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":14,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":124,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":16,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":15,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":64,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":60,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":158,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":62,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule":111,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":55,"org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes":98,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":71,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":78,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":137,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":12,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":118,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":44,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":139,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testLongPaths":147,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":108,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":151,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":85,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":128,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":21,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":166,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":41,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":33,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":3,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":46,"org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes":95,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":126,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":8,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict":164,"org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchOnAppendByte":169,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":70,"org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage":93,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithNestedSubmodule":105,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":90,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeletePathAndTreeNormalNames":94,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":72,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":0,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":136,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":150,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":74,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":47,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":87,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":76,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":130,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":59,"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_BulkWrite":173,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":123,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":48,"org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule":116,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":107,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":4,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":54,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":49,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":45,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":2,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":69,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":83,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":112,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":42,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":97,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":125,"org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchBeforeAppendByte":171,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":53,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":131,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":77,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":160,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":82,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":101,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":6,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":13,"org.eclipse.jgit.lib.ObjectLoaderTest.testSmallObjectLoader":176,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":120,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":11,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":84,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":153,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":30,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":31,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":32,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":132,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":26,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":43,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":88,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":27,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testExact":145,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":28,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithMissingSubmodule":121,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":29,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":115,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":38,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":24,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid":141,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":25,"org.eclipse.jgit.util.TemporaryBufferTest.testRandomWrites":172,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":23,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":40,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":129,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":157,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":163,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":161,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testOneOnly":140,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":10,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":39,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":106,"org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules":109,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":61,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":79,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":81,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testJustCommonPrefixIsNotMatch":142,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":80,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":110,"org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchOnCopy":168,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":37,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":159,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":57,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":35,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":102,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":86,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":89,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":134,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":58,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":127,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead":167,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":9,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":66,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":165,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":138,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":50,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackRepoWithNoRefs":1,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":36,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":103,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":7,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":34,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":75,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":133,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":5,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":174,"org.eclipse.jgit.dircache.DirCachePathEditTest.testAddDeleteTrickyNames":92,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":122,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":117,"org.eclipse.jgit.util.TemporaryBufferTest.testLarge_SingleWrite":170,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":22,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":67,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":104,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testNoMatchButClose":146,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":152,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":51,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":56,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":100,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":63,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":91,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":119,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":155,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testFilterIsPrefixOfKey":144,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":113,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":68,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":73,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":156,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":149,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":162,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":135,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":96,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testStopWalk":143,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":65,"org.eclipse.jgit.treewalk.filter.PathFilterGroupTest.testKeyIsPrefixOfFilter":148,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":175,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":154,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":114},"transformations":[{"failures":[],"tindex":"fa522728-4c5f-11e5-9394-095e8a7b830a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.MutableObjectId:115","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 255"},"variableMap":{"value":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:1076","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int)"},"status":-2},{"failures":[],"tindex":"fa561ec9-4c5f-11e5-9394-bb3d35c0a662","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:1188","type":"CtReturnImpl","sourcecode":"return int - 1"},"variableMap":{"end":"mid"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefList:156","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = int + 1;\nelse if (int == 0)\n    return int;\nelse\n    int = int;\n"},"status":-2},{"failures":[],"tindex":"fa561eca-4c5f-11e5-9394-6d29ab85e568","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:330","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) > 0) && (!(java.lang.String.endsWith(\"/\"))))\n    java.lang.String += \"/\";\n"},"variableMap":{"prefix":"wholePattern"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:87","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"[:cntrl:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('\u0000' , '\u001f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(''));\n} else if (java.lang.String.equals(\"[:digit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:graph:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('!' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:lower:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LowerPattern.org.eclipse.jgit.fnmatch.GroupHead.LowerPattern);\n} else if (java.lang.String.equals(\"[:print:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange(' ' , '~'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else if (java.lang.String.equals(\"[:punct:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern);\n} else if (java.lang.String.equals(\"[:space:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern.org.eclipse.jgit.fnmatch.GroupHead.WhitespacePattern);\n} else if (java.lang.String.equals(\"[:upper:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.UpperPattern.org.eclipse.jgit.fnmatch.GroupHead.UpperPattern);\n} else if (java.lang.String.equals(\"[:xdigit:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('0' , '9'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('a' , 'f'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.CharacterRange('A' , 'F'));\n} else if (java.lang.String.equals(\"[:word:]\")) {\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern('_'));\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.LetterPattern.org.eclipse.jgit.fnmatch.GroupHead.LetterPattern);\n    java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern);\n} else {\n    final java.lang.String java.lang.String = java.lang.String.format(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    throw new org.eclipse.jgit.errors.InvalidPatternException(java.lang.String , java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"fa5645db-4c5f-11e5-9394-5dc043d5be02","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:247","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.file.FileBasedConfig.load()"},"status":-2},{"failures":[0,1,2],"tindex":"fa5645dc-4c5f-11e5-9394-0d4e500f88db","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:950","type":"CtAssignmentImpl","sourcecode":"java.util.Date = null"},"variableMap":{"expire":"expire"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:314","type":"CtAssignmentImpl","sourcecode":"java.util.Date = org.eclipse.jgit.util.GitDateParser.parse(java.lang.String, null, org.eclipse.jgit.util.SystemReader.getInstance().getLocale())"},"status":-1},{"failures":[],"tindex":"fa57303d-4c5f-11e5-9394-2bbee1263ca4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:320","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.eclipse.jgit.util.TemporaryBuffer.Heap"},"status":0},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,0,153,154,155,156,157,158,159,2,160,161,162,163],"tindex":"fa57303e-4c5f-11e5-9394-ed5ba3118206","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEditor:132","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.dircache.DirCacheEditor.PathEdit org.eclipse.jgit.dircache.DirCacheEditor.PathEdit : java.util.List<org.eclipse.jgit.dircache.DirCacheEditor.PathEdit>) {\n    int int = org.eclipse.jgit.dircache.DirCache.findEntry(org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.byte[], org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.byte[].int);\n    final boolean boolean = int < 0;\n    if (int < 0)\n        int = -(int + 1);\n    \n    final int int = (java.lang.Math.min(int, int)) - int;\n    if (int > 0)\n        org.eclipse.jgit.dircache.BaseDirCacheEditor.fastKeep(int, int);\n    \n    int = boolean ? int : org.eclipse.jgit.dircache.DirCache.nextEntry(int);\n    if (org.eclipse.jgit.dircache.DirCacheEditor.PathEdit instanceof org.eclipse.jgit.dircache.DirCacheEditor.DeletePath)\n        continue;\n    \n    if (org.eclipse.jgit.dircache.DirCacheEditor.PathEdit instanceof org.eclipse.jgit.dircache.DirCacheEditor.DeleteTree) {\n        int = org.eclipse.jgit.dircache.DirCache.nextEntry(org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.byte[], org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.byte[].int, int);\n        continue;\n    } \n    if (boolean) {\n        final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.byte[]);\n        org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry);\n        if ((org.eclipse.jgit.dircache.DirCacheEntry.getRawMode()) == 0)\n            throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry.getPathString()));\n        \n        org.eclipse.jgit.dircache.BaseDirCacheEditor.fastAdd(org.eclipse.jgit.dircache.DirCacheEntry);\n    } else {\n        for (int int = int ; int < int ; int++) {\n            final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCache.getEntry(int);\n            org.eclipse.jgit.dircache.DirCacheEditor.PathEdit.apply(org.eclipse.jgit.dircache.DirCacheEntry);\n            org.eclipse.jgit.dircache.BaseDirCacheEditor.fastAdd(org.eclipse.jgit.dircache.DirCacheEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"fa592c0f-4c5f-11e5-9394-21be6baae054","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return ;\n"},"variableMap":{"overflow":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:164","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>) != null) {\n    for ( ;  ; ) {\n        org.eclipse.jgit.util.TemporaryBuffer.Block org.eclipse.jgit.util.TemporaryBuffer.Block = org.eclipse.jgit.util.TemporaryBuffer.last();\n        if (org.eclipse.jgit.util.TemporaryBuffer.Block.isFull()) {\n            if (org.eclipse.jgit.util.TemporaryBuffer.reachedInCoreLimit())\n                break;\n            \n            org.eclipse.jgit.util.TemporaryBuffer.Block = new org.eclipse.jgit.util.TemporaryBuffer.Block();\n            java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>.add(org.eclipse.jgit.util.TemporaryBuffer.Block);\n        } \n        int int = java.io.InputStream.read(org.eclipse.jgit.util.TemporaryBuffer.Block.byte[], org.eclipse.jgit.util.TemporaryBuffer.Block.int, ((org.eclipse.jgit.util.TemporaryBuffer.Block.byte[].int) - (org.eclipse.jgit.util.TemporaryBuffer.Block.int)));\n        if (int < 1)\n            return ;\n        \n        org.eclipse.jgit.util.TemporaryBuffer.Block.int += int;\n    }\n} "},"status":-2},{"failures":[10,164,165,166],"tindex":"fa592c10-4c5f-11e5-9394-f91d8afea8ab","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.DiffCommand:203","type":"CtAssignmentImpl","sourcecode":"this.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator"},"variableMap":{"newTree":"dfConflict"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:293","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator"},"status":-1},{"failures":[167,168,169,170,171,172,173],"tindex":"fa595321-4c5f-11e5-9394-6915a6710307","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:979","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.TransportHttp.Service.HttpOutputStream.reset()"},"variableMap":{"out":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:122","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.util.TemporaryBuffer.reachedInCoreLimit())\n    break;\n"},"status":-1},{"failures":[174,154,175],"tindex":"fa595322-4c5f-11e5-9394-3302738c3728","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:568","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int += 46;\n"},"variableMap":{"ptr":"bitmapCount"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1:116","type":"CtInvocationImpl","sourcecode":"java.io.DataOutput.writeInt(int)"},"status":-1},{"failures":[176],"tindex":"fa595323-4c5f-11e5-9394-99b524784ca7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:342","type":"CtReturnImpl","sourcecode":"return byte[]"},"variableMap":{"dstbuf":"cached"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectLoader:132","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectLoader.org.eclipse.jgit.lib.ObjectLoader.cloneArray(byte[])"},"status":-1},{"failures":[],"tindex":"fa595324-4c5f-11e5-9394-4fb4efe7de67","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportGitAnon:83","type":"CtReturnImpl","sourcecode":"return java.util.Collections.singleton(\"git\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.Status:134","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableSet(org.eclipse.jgit.lib.IndexDiff.getMissing())"},"status":-2},{"failures":[],"tindex":"fa595325-4c5f-11e5-9394-8174ef2e32d7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:244","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == int)\n    return null;\n"},"variableMap":{"c":"c","flags":"length","carry":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:229","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.revwalk.RevCommit[].int) != 1) {\n    if (int == (org.eclipse.jgit.revwalk.RevCommit.int))\n        return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.RevCommit);\n    \n    for (int int = 1 ; int < (org.eclipse.jgit.revwalk.RevCommit[].int) ; int++) {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevCommit[][int];\n        if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == int)\n            continue;\n        \n        org.eclipse.jgit.revwalk.RevCommit.int |= int;\n        org.eclipse.jgit.revwalk.FIFORevQueue org.eclipse.jgit.revwalk.FIFORevQueue = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.carryFlags1(org.eclipse.jgit.revwalk.RevCommit, int, (int + 1));\n        if (org.eclipse.jgit.revwalk.FIFORevQueue != null)\n            return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.FIFORevQueue, int, org.eclipse.jgit.revwalk.RevCommit[], (int + 1));\n        \n    }\n} "},"status":-2},{"failures":[],"tindex":"fa595326-4c5f-11e5-9394-4fb2f1964c83","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:967","type":"CtIfImpl","sourcecode":"if (((int) == 0) || ((org.eclipse.jgit.revwalk.RevCommit.getCommitTime()) < (int)))\n    int = org.eclipse.jgit.revwalk.RevCommit.getCommitTime();\n"},"variableMap":{"c":"p","oldestTime":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:178","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[]{ org.eclipse.jgit.revwalk.RevCommit[][0] , org.eclipse.jgit.revwalk.RevCommit };\n    int = 2;\n} else {\n    if ((org.eclipse.jgit.revwalk.RevCommit[].int) <= int) {\n        org.eclipse.jgit.revwalk.RevCommit[] org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit[];\n        org.eclipse.jgit.revwalk.RevCommit[] = new org.eclipse.jgit.revwalk.RevCommit[(org.eclipse.jgit.revwalk.RevCommit[].int) + 32];\n        java.lang.System.arraycopy(org.eclipse.jgit.revwalk.RevCommit[], 0, org.eclipse.jgit.revwalk.RevCommit[], 0, int);\n    } \n    org.eclipse.jgit.revwalk.RevCommit[][int++] = org.eclipse.jgit.revwalk.RevCommit;\n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}