{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled":851,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":710,"org.eclipse.jgit.api.RmCommandTest.testRemove":288,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchNone":1073,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":827,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_self":257,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":541,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":338,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit":188,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_Negate_ALL":1087,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":361,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":981,"org.eclipse.jgit.api.TagCommandTest.testEmptyTagName":407,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":774,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":277,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":491,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testClear":1135,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice":998,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":1137,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":755,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":1039,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":319,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":902,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":738,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":179,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk":58,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":922,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":239,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":225,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":111,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":996,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":329,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":722,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testClear":1100,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot":39,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":534,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":954,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":199,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedFile":1000,"org.eclipse.jgit.notes.DefaultNoteMergerTest.testEditEdit":919,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":418,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":1011,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":185,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":709,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_incompleteAuthorAndCommitter":1056,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":244,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":95,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":196,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":240,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":903,"org.eclipse.jgit.revwalk.RevObjectTest.testEquals":1047,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath":66,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36":945,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":2,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix":49,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":434,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":970,"org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit":291,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":476,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout":951,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches":100,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":467,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows":70,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":186,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":696,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUpToDate":18,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":287,"org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits":165,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":897,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":616,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":617,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":618,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":671,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":93,"org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames":406,"org.eclipse.jgit.revwalk.DateRevQueueTest.testClear":1133,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":614,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":348,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":615,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":949,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":192,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":517,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":726,"org.eclipse.jgit.treewalk.ForPathTest.testFindObjects":918,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":1025,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":727,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":243,"org.eclipse.jgit.api.GitConstructionTest.testClose":83,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":385,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":379,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":331,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":446,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":102,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile":364,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":964,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test3":1050,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test4":1051,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":1048,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test2":1049,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":1054,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple":254,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test5":1052,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":1053,"org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.testParsePersonIdent_legalCases":771,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":477,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":1001,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":8,"org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo":1003,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot":50,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":673,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1":67,"org.eclipse.jgit.patch.EditListTest.testHunkHeader":136,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":1030,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":105,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":1106,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":585,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject":824,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_MY_ALL":1093,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":584,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead":850,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":587,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":586,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":588,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":529,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":538,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":650,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":939,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":715,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TrailingGarbage":908,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":275,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":235,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":309,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_NoParents":1057,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":637,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":757,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":636,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":638,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2":53,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1":52,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":635,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":634,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddDifferentNotes":937,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardUnknownObject":22,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":432,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix":56,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":1024,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":198,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":308,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":340,"org.eclipse.jgit.util.GitDateFormatterTest.RAW":784,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":226,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":318,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference":836,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced":19,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":708,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":669,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit":184,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":816,"org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk":140,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":681,"org.eclipse.jgit.util.GitDateFormatterTest.LOCAL":786,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":451,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":649,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":659,"org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput":271,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":753,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":295,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":208,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":815,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":284,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":126,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":398,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":462,"org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode":665,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":230,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject":905,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":228,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_Default":1120,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired":797,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":575,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":574,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob":258,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":577,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":940,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":576,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":317,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":362,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":578,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":124,"org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId":527,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":657,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":765,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted":210,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix":71,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair":801,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkForNormalCase":1040,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC":1121,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":643,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad":57,"org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates":956,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_invalid_explicit_parent":249,"org.eclipse.jgit.api.GitConstructionTest.testWrap":422,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit":420,"org.eclipse.jgit.notes.NoteMapMergerTest.testAddSameNoteDifferentContent":927,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack":894,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":276,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":961,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":223,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":728,"org.eclipse.jgit.util.GitDateFormatterTest.ISO":783,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":241,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag":847,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":449,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":642,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":565,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":564,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsTheirs":921,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose":849,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":172,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":968,"org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging":414,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":227,"org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile":417,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase2":1059,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testMultipleHeads_SameBase1":1058,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck":859,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":525,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter0":1127,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":251,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":10,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":131,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":1028,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly":868,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld":142,"org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname":262,"org.eclipse.jgit.util.GitDateFormatterTest.RFC":785,"org.eclipse.jgit.notes.NoteMapMergerTest.testBaseEqualsOurs":936,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":508,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testNonRecursiveFiltering":917,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes":802,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":901,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":699,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":156,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":73,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF1":292,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":931,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":170,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":433,"org.eclipse.jgit.api.TagCommandTest.testDeleteBadName":413,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":169,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":744,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":718,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":820,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":948,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":469,"org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward":23,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":544,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchAll":1076,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":545,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":546,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":547,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":548,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":333,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":567,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":566,"org.eclipse.jgit.api.NameRevCommandTest.ref":1015,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":568,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":213,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case":46,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch":877,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject":14,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":530,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference":846,"org.eclipse.jgit.api.AddCommandTest.testAddFolder":1005,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":442,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":119,"org.eclipse.jgit.transport.PushProcessTest.testUpdateCreateRef":25,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":831,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":1004,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":978,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":977,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":980,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":979,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_3":974,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":973,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_NONE":1085,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":976,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":500,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":975,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":452,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore":798,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":685,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_EmptyTree":1064,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":794,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":311,"org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38":941,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":237,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":555,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a":554,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":152,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d":557,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":556,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit":181,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":958,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditSameNoteDifferentContent":923,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":270,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":321,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":711,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned":904,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":992,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":962,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":7,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":175,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":799,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting":889,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored":204,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":31,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":266,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":34,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":200,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefCommit":252,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":125,"org.eclipse.jgit.api.CleanCommandTest.testClean":390,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":116,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":1034,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":388,"org.eclipse.jgit.util.GitDateFormatterTest.LOCALELOCAL":782,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":1026,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":326,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":1033,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":456,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":269,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":392,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":299,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":191,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":749,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext0":146,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":285,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":313,"org.eclipse.jgit.revwalk.ObjectWalkTest.testMarkUninterestingPropagation":1113,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows":69,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext1":147,"org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail":682,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":679,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":416,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk":33,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob":792,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix":45,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":481,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":339,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Add":811,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":505,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":268,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":274,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":558,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":995,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":926,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":107,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":395,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":1019,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":203,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":207,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":217,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":370,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk":40,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":695,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15b":965,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":972,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":222,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":120,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":700,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE":1086,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":543,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":1099,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":1027,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":1112,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":658,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon":36,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":687,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":640,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllPacked":848,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":164,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":704,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":705,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":94,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked":863,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":661,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":497,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":219,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":439,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":741,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":283,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":745,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":174,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":896,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":177,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":993,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":77,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithoutCommonAncestor":1043,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":303,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime":677,"org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags":404,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":300,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":485,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakAll":808,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":834,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit":99,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureLocked":760,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":957,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":374,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth1":1108,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth2":1109,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":461,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth3":1110,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":113,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":818,"org.eclipse.jgit.lib.ReflogResolveTest.resolveDate":238,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig":860,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":895,"org.eclipse.jgit.util.GitDateFormatterTest.LOCALE":780,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder":1130,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":247,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":316,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":766,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":38,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":899,"org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog":290,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch":660,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":662,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber":821,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows":59,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":680,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":187,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":356,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":215,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TruncatedZLibStream":907,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef":666,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":305,"org.eclipse.jgit.api.BlameCommandTest.testRename":703,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":492,"org.eclipse.jgit.notes.NoteMapTest.testGetCachedBytes":942,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":971,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles":804,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase":879,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":108,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":453,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":932,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":273,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":345,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4":845,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":75,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":484,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3":844,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2":843,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1":842,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix":44,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":220,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":702,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":778,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":533,"org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong":144,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":694,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":654,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":366,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":522,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":835,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":511,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations":520,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk":97,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":668,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":344,"org.eclipse.jgit.api.PushCommandTest.testPush":84,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":349,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_otherparents":263,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":278,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":994,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":720,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":632,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine":823,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":963,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":248,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":633,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":130,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":629,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":630,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertTie":1132,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":487,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":631,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":478,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase":885,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":829,"org.eclipse.jgit.api.ApplyCommandTest.testDeleteD":159,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":746,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllPacked1":866,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":521,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":12,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":60,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testSimple":1062,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":27,"org.eclipse.jgit.revwalk.RevWalkResetTest.testRevFilterReceivesParsedCommits":1119,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":777,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":334,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileInSubDir":1002,"org.eclipse.jgit.util.GitDateFormatterTest.RELATIVE":788,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix":37,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":706,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":214,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":830,"org.eclipse.jgit.api.GitConstructionTest.testOpen":421,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":989,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":281,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_18":990,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":127,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_19":991,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":985,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":986,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_15":987,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":346,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":988,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":463,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_10":982,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":496,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":983,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_12":984,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":692,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":693,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":369,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":689,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":690,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":471,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":691,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":378,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":393,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon":61,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext3":148,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext5":149,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":646,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_Or_NONE":1089,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":641,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":216,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":350,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":502,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":1017,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":368,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":729,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":103,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":448,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":397,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":163,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch":841,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":1016,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":401,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1":54,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":444,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroWhenMergedInto":1041,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":735,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":678,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":1111,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":503,"org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit":707,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":424,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":87,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":1082,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":426,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":427,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":832,"org.eclipse.jgit.transport.URIishTest.testGitWithUserHome":5,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit":161,"org.eclipse.jgit.notes.NoteMapMergerTest.testOursEqualsTheirs":933,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":231,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":394,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":532,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":1065,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":415,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":1067,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":1066,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":475,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits":98,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":425,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":769,"org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38":943,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":542,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.concurrentOnlyOneWritesPackedRefs":817,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":1037,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":1036,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":997,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":513,"org.eclipse.jgit.patch.GetTextTest.testGetText_BothISO88591":138,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":332,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":314,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":377,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":443,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":0,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":324,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":1116,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":160,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose":864,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":667,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2":1084,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1":1083,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit":190,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":655,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":115,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefLockFailureWrongOldValue":764,"org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting":405,"org.eclipse.jgit.api.TagCommandTest.testInvalidTagName":411,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":211,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_implicit_firstparent":256,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit":189,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr":35,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly":800,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory":761,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":509,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL_And_NONE":1097,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":489,"org.eclipse.jgit.merge.CherryPickTest.testRevert":1023,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit":197,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine":822,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":431,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":96,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":676,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":924,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":736,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":110,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":92,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEmpty_NoMatch":1074,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":387,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":768,"org.eclipse.jgit.util.ChangeIdUtilTest.testId":796,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":913,"org.eclipse.jgit.api.BranchCommandTest.testDelete":90,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":358,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":763,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":173,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":289,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":612,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":613,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad":51,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":900,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":609,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":610,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":611,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit":194,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":493,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1":62,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference":855,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2":63,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":465,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":1035,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testRecursiveFiltering":916,"org.eclipse.jgit.transport.URIishTest.testFileProtoWindows":6,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed":886,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1":891,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":327,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":826,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":121,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":779,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose":876,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":488,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":656,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":352,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TrailingGarbage":909,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":168,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":1038,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":1103,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":1068,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":1102,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":382,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":381,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":647,"org.eclipse.jgit.notes.DefaultNoteMergerTest.testAddAdd":920,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues":306,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":101,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":589,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":591,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":590,"org.eclipse.jgit.lib.RepositoryResolveTest.testTree":250,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":593,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":325,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":592,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":464,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_MY_ALL":1095,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":1114,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":1115,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_REVERSE":1126,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TruncatedZLibStream":906,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testNone":1060,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":310,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":470,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2":892,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":644,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":272,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":776,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":928,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTagsNoResult":1014,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":89,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":751,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":724,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn":878,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":79,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":536,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":526,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":620,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":499,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":621,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":622,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":623,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext10":150,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":400,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":619,"org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt":683,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":712,"org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch":236,"org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles":809,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels":952,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":264,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":365,"org.eclipse.jgit.api.StashDropCommandTest.dropNegativeRef":515,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testHasFlags":1101,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":428,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile":245,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":117,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":72,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":758,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":224,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject":911,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":737,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter":1032,"org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects":806,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig":865,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree":1118,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":507,"org.eclipse.jgit.api.TagCommandTest.testDeleteFullName":402,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1Sub":155,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":1128,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":85,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":1055,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":139,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":674,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":701,"org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack":893,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":435,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":579,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":531,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":581,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":580,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":88,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":583,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":582,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":1125,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":391,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":537,"org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex":518,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":320,"org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk":1046,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":1029,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":934,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":672,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Binary":812,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testRefsChangedStackOverflow":871,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":747,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":112,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":460,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":494,"org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder":410,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":447,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":1081,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter0":1031,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":569,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":178,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":1069,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":109,"org.eclipse.jgit.api.NameRevCommandTest.nameExact":1020,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":380,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Modify":810,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDifferentNotes":929,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":723,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose":839,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":298,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":775,"org.eclipse.jgit.api.ResetCommandTest.testResetToNonexistingHEAD":670,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":733,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":396,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":713,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":104,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":330,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTree":259,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":78,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":166,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit":440,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testSimple1":1075,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":675,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":386,"org.eclipse.jgit.api.TagCommandTest.testTagging":403,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":450,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":1117,"org.eclipse.jgit.revwalk.DateRevQueueTest.testHasFlags":1134,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":914,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":1080,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead":342,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":697,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":253,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":286,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case":47,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":372,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":969,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFile":1008,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":328,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":762,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":719,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":740,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory":363,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":571,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":789,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":454,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":570,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":828,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":573,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose":840,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":572,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress":819,"org.eclipse.jgit.notes.NoteMapMergerTest.testEditDeleteConflict":930,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":193,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":743,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":480,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":594,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":596,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":595,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":598,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":479,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":597,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout":967,"org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO":1131,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":360,"org.eclipse.jgit.transport.PushProcessTest.testPushResult":21,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":947,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":162,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":430,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":966,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateLooseBlob":28,"org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream":752,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":242,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":280,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":795,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":24,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":559,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":561,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":732,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":560,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2":888,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":742,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1":887,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":514,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":944,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":315,"org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked":234,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":731,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":535,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_CorruptZLibStream":910,"org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles":143,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_existing":76,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":436,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":734,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":209,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_ALL":1098,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":721,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testCrissCross":1063,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":246,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":1013,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":652,"org.eclipse.jgit.patch.PatchTest.testParse_ConfigCaseInsensitive":134,"org.eclipse.jgit.patch.EditListTest.testTypes":135,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag":301,"org.eclipse.jgit.util.GitDateFormatterTest.SHORT":787,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1":41,"org.eclipse.jgit.util.GitDateFormatterTest.DEFAULT":781,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2":42,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3":43,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":129,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":322,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":367,"org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned":955,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":205,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked":838,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":563,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":562,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":123,"org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository":409,"org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew":141,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":506,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible":472,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroOnSameCommit":1045,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_objectid_explicit_firstparent":260,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues":304,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":347,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout":953,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":180,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":457,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit":854,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":455,"org.eclipse.jgit.patch.EditListTest.testFileHeader":137,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":482,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":1079,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithZeroAsEnd":1044,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":1077,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":1078,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_a":549,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c":551,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b":550,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e":553,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":232,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d":552,"org.eclipse.jgit.diff.DiffFormatterTest.testCreateFileHeader_Delete":813,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":183,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":201,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":267,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":1072,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":1007,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_And_NONE":1096,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":384,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":20,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":419,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":296,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted":869,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834":857,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2":65,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1":64,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":466,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":383,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles":890,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":91,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":302,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":359,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique":29,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":750,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":389,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":688,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":490,"org.eclipse.jgit.api.StashDropCommandTest.dropWithNoStashedCommits":516,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":323,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":959,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":459,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":645,"org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.testParsePersonIdent_fuzzyCases":772,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":473,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef":874,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":1018,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds":814,"org.eclipse.jgit.api.StashDropCommandTest.dropAll":519,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":604,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4":883,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3":882,"org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject":825,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2":881,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1":880,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":375,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":608,"org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked":265,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":279,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":607,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":606,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":605,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":218,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":1123,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1":1122,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":474,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":754,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":512,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue":307,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderUntracked":206,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":353,"org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack":912,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":898,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":158,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":293,"org.eclipse.jgit.util.RawParseUtils_ParsePersonIdentTest.testParsePersonIdent_incompleteCases":770,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":294,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":648,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":1124,"org.eclipse.jgit.api.ApplyCommandTest.testModifyE":157,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":540,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":80,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5":884,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":524,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":504,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":337,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":336,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":698,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":716,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified":182,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":790,"org.eclipse.jgit.notes.NoteMapMergerTest.testDeleteDifferentNotes":925,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommitted":176,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":118,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":212,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":483,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled":26,"org.eclipse.jgit.lib.RepositoryResolveTest.testObjectId_nonexisting":74,"org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits":167,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":717,"org.eclipse.jgit.lib.IndexDiffTest.testModified":960,"org.eclipse.jgit.notes.NoteMapMergerTest.testNoChange":935,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":15,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":599,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":653,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":600,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":601,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":602,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":261,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":603,"org.eclipse.jgit.api.FetchCommandTest.testFetch":81,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":628,"org.eclipse.jgit.patch.PatchTest.testParse_GitBinaryLiteral":133,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":229,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemoteVsForce":16,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":624,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":625,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":171,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":626,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":55,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":627,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":221,"org.eclipse.jgit.notes.NoteMapTest.testReadFlatTwoNotes":938,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":106,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":128,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":1105,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit":725,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":739,"org.eclipse.jgit.api.NameRevCommandTest.prefix":1012,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_MY_ALL_Or_NONE":1091,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":523,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":1009,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":114,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":756,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict":858,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":999,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":872,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_InvalidName":875,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NOT_ALL":1088,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot":1107,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":539,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference":870,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":282,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_Or_ALL":1090,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":351,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix":68,"org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob":793,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage":867,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":438,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":437,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":664,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":371,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":357,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testEmpty1":151,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":686,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":651,"org.eclipse.jgit.treewalk.filter.PathSuffixFilterTest.testEdgeCases":915,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindows":4,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":441,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":663,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":495,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":423,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":684,"org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit":82,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":122,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":458,"org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo":233,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":343,"org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile2":807,"org.eclipse.jgit.revwalk.LIFORevQueueTest.testHasFlags":1136,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":528,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":9,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":355,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":639,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":1021,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort":873,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldWorkWithMerges":1042,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":312,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":1071,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":791,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete":853,"org.eclipse.jgit.patch.PatchTest.testParse_NoBinary":132,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":468,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":946,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":950,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":1,"org.eclipse.jgit.api.ApplyCommandTest.testAddA1":153,"org.eclipse.jgit.api.ApplyCommandTest.testAddA2":154,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":498,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":730,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort":3,"org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob":30,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":1070,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":399,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":773,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1":861,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":255,"org.eclipse.jgit.api.AddCommandTest.testAddIgnoredFile":1006,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":341,"org.eclipse.jgit.diff.DiffFormatterReflowTest.testContext100":145,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent":803,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":1129,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":748,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":429,"org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemote":13,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":195,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce":837,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2":862,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":486,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":32,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":445,"org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_DontBreakAboveScore":805,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":86,"org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testDisallowTreeFilter":1061,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testNoRename":1104,"org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead":408,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":17,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":354,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":856,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePackedRejected":759,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":767,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":852,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":373,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":1092,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":510,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":833,"org.eclipse.jgit.merge.CherryPickTest.testPick":1022,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NONE_And_ALL":1094,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":714,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":297,"org.eclipse.jgit.api.TagCommandTest.testDelete":412,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":1010,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":202,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":501,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":376,"org.eclipse.jgit.api.RevertCommandTest.testRevert":335},"transformations":[{"failures":[],"tindex":"9fd1bf0a-4c61-11e5-a047-bd0ccec9afe6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1072","type":"CtIfImpl","sourcecode":"if (new java.io.File(org.eclipse.jgit.lib.Repository.getWorkTree() , \".dotest\").exists())\n    return org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState;\n"},"variableMap":{"org.eclipse.jgit.lib.RepositoryState.REBASING":"org.eclipse.jgit.lib.RepositoryState.REVERTING_RESOLVED","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1124","type":"CtIfImpl","sourcecode":"if (!(org.eclipse.jgit.lib.Repository.readDirCache().hasUnmergedPaths())) {\n    return org.eclipse.jgit.lib.RepositoryState.org.eclipse.jgit.lib.RepositoryState;\n} "},"status":-2},{"failures":[],"tindex":"9fd1e61b-4c61-11e5-a047-d97c00caff1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:763","type":"CtAssignmentImpl","sourcecode":"byte[] = org.eclipse.jgit.internal.storage.file.DeltaBaseCache.Entry.byte[]"},"status":0},{"failures":[],"tindex":"9fd1e61c-4c61-11e5-a047-1d95dc68cbb3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:179","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.CanonicalTreeParser.parseEntry()"},"variableMap":{"p":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:313","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser != null) {\n    org.eclipse.jgit.dircache.DirCacheCheckout.org.eclipse.jgit.dircache.DirCacheCheckout.checkValidPath(org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    if (org.eclipse.jgit.dircache.DirCacheBuildIterator == null) {\n        if (((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode())))) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n            java.util.ArrayList<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryPathString(), org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryObjectId(), org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryFileMode());\n        \n    } else if ((org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (!(org.eclipse.jgit.treewalk.CanonicalTreeParser.idEqual(org.eclipse.jgit.dircache.DirCacheBuildIterator)))) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.update(org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryPathString(), org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryObjectId(), org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryFileMode());\n    } else if ((org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry()) != null) {\n        if ((org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry(), true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())) || ((org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry().getStage()) != 0))\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryPathString(), org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryObjectId(), org.eclipse.jgit.treewalk.CanonicalTreeParser.getEntryFileMode());\n        else {\n            org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry();\n            if ((org.eclipse.jgit.dircache.DirCacheEntry.getLastModified()) == 0)\n                org.eclipse.jgit.dircache.DirCacheEntry.setLastModified(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryLastModified());\n            \n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n        }\n    } else\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry());\n    \n} else {\n    if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null) {\n        if (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict()) {\n            java.util.ArrayList<java.lang.String>.add(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString());\n        } else {\n            if (org.eclipse.jgit.dircache.DirCacheBuildIterator != null) {\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(org.eclipse.jgit.dircache.DirCacheBuildIterator.getEntryPathString());\n                java.util.ArrayList<java.lang.String>.remove(org.eclipse.jgit.dircache.DirCacheBuildIterator.getEntryPathString());\n            } else {\n            }\n        }\n    } else {\n    }\n}"},"status":-2},{"failures":[],"tindex":"9fd20d2d-4c61-11e5-a047-fdfe5ff4a2bf","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.CheckoutResult:118","type":"CtAssignmentImpl","sourcecode":"this.java.util.List<java.lang.String> = java.util.List<java.lang.String>"},"variableMap":{"conflictList":"paths","fileList":"paths"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StatusCommand:112","type":"CtAssignmentImpl","sourcecode":"java.util.List<java.lang.String> = new java.util.LinkedList<java.lang.String>()"},"status":0},{"failures":[0],"tindex":"9fd20d2e-4c61-11e5-a047-ef32e0d0dc5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.file.FileBasedConfig:194","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(239)"},"status":-1},{"failures":[1,2],"tindex":"9fd20d2f-4c61-11e5-a047-0dac540bd69d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:285","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"r":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:236","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('.').append(char)"},"status":-1},{"failures":[3,4,5,6],"tindex":"9fd20d30-4c61-11e5-a047-3132277556e6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1383","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"ng \")"},"variableMap":{"r":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:641","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('/')"},"status":-1},{"failures":[7,8,9,10,11,12],"tindex":"9fd20d31-4c61-11e5-a047-8f00176fcf0e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:522","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.dircache.DirCacheBuildIterator == null) && (org.eclipse.jgit.treewalk.CanonicalTreeParser == null)) && (org.eclipse.jgit.treewalk.CanonicalTreeParser == null)) {\n    if (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict())\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, null, null, null);\n    \n    return ;\n} "},"variableMap":{"h":"h","name":"name","this":"this","i":"i","m":"h","walk":"walk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:686","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheBuildIterator == null) {\n    if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n        if (!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode))) {\n            if ((org.eclipse.jgit.lib.ObjectId == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryObjectId(), org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode())))) {\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, null, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                return ;\n            } \n        } \n    } \n    if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null)\n        org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n    else if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null)\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    else {\n        if (org.eclipse.jgit.dircache.DirCacheCheckout.equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode)) {\n            if (boolean)\n                org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n            else\n                org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    }\n} else {\n    if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n        if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))) {\n            if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) && (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict())) {\n                if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))))\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    } else if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n        if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n        } else {\n            if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n                if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n                    if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n                        return ;\n                    else\n                        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                    \n                } else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            \n        }\n    } else {\n        if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        else if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n            if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n                org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n            } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            } else {\n                org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n            }\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"9fd25b52-4c61-11e5-a047-5b6f800783d9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:197","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>"},"variableMap":{"match":"match","list":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:193","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.get(0)"},"status":-2},{"failures":[],"tindex":"9fd25b53-4c61-11e5-a047-4f77e05257f3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1308","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack[][int++] = org.eclipse.jgit.internal.storage.pack.ObjectToPack"},"variableMap":{"cnt":"cur","otp":"next","list":"toSearch"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:153","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack = org.eclipse.jgit.internal.storage.pack.ObjectToPack[][(int)++]"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,12,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"9fd25b54-4c61-11e5-a047-3f24d728ba00","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:700","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    return java.lang.String;\n"},"variableMap":{"name":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:707","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository.(getRef(java.lang.String)) != null)\n    return java.lang.String;\n"},"status":-1},{"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"tindex":"9fd25b55-4c61-11e5-a047-49b386eaafae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:247","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.patch.HunkHeader.OldImage.int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], ((org.eclipse.jgit.util.MutableInteger.int) + 1), org.eclipse.jgit.util.MutableInteger)"},"status":-1},{"failures":[160,161,162,163,164,165,166,167,168,169,170,171,172,173,27,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,32,221,222,223,224,225,226,227,228,229,230,231,232,233,234,72,73,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,75,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,152,292,156,157,158,293,294,159,295,296,297,298,299,300,301,302,303,304,305,306,307,77,78,79,80,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,82,362,363,364,365,366,367,368,81,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,84,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,83,83,421,421,422,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,85,86,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,91,481,92,482,93,483,484,485,486,487,94,488,489,490,491,492,493,494,495,496,95,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,87,529,530,531,88,532,533,534,89,535,536,537,90,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,131,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,101,730,102,103,731,732,104,733,105,12,734,106,735,107,108,109,110,736,737,111,738,112,113,739,114,740,115,741,742,743,744,116,117,745,746,747,748,749,118,119,750,120,751,121,122,752,123,124,125,753,754,755,126,127,756,128,757,129,130,758,759,760,761,762,763,764,765,766,767,768,769],"tindex":"9fd28266-4c61-11e5-a047-cb562e664343","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:1116","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject)).getTree()"},"variableMap":{"o":"rev"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:440","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String)"},"status":-1},{"failures":[770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,160,161,162,163,164,165,166,167,168,169,170,797,798,799,800,801,802,803,804,805,806,807,808,809,810,171,172,811,173,812,813,27,814,31,815,816,817,818,30,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,32,221,222,223,224,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,225,938,939,940,941,942,943,944,945,946,947,948,949,950,226,227,228,229,230,231,232,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,951,51,52,53,54,55,952,56,57,58,59,60,61,62,63,64,65,953,66,67,68,69,70,71,954,955,72,73,235,236,237,238,956,239,240,253,254,264,957,265,958,959,266,267,268,269,270,271,960,961,272,273,274,277,278,279,241,242,962,963,243,964,965,966,7,967,968,969,244,245,970,246,971,972,973,974,975,976,977,978,979,980,981,8,9,982,983,984,985,986,987,988,989,990,991,992,993,247,248,10,11,275,276,284,285,286,287,288,280,281,282,283,994,995,289,290,291,295,296,297,298,299,300,301,152,292,156,157,158,293,294,159,302,303,304,305,306,307,77,78,79,80,308,309,310,311,312,313,996,314,315,316,317,318,319,320,321,322,323,324,325,326,327,439,440,997,441,442,443,444,445,85,86,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,82,362,328,329,330,331,332,333,334,335,336,337,81,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,84,399,400,401,998,999,1000,415,1001,1002,416,417,418,1003,419,1004,1005,420,1006,1007,1008,1009,402,403,404,405,406,407,408,409,410,411,412,413,414,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,83,83,421,421,422,422,479,480,91,481,92,482,93,483,484,485,486,487,94,488,489,490,491,492,493,494,495,496,95,497,498,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,499,500,501,502,503,504,505,506,507,508,509,510,511,544,545,546,547,548,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,520,521,522,523,524,525,526,527,528,540,541,542,543,512,513,514,515,516,517,518,519,87,529,530,531,88,532,533,534,89,535,536,537,90,538,539,640,1021,641,642,643,644,645,674,675,676,677,678,679,680,681,683,659,661,662,663,664,667,668,669,671,672,673,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,684,685,646,647,648,649,650,651,652,653,654,655,656,657,1022,1023,1024,1025,1026,1027,1028,1029,1030,707,1031,1032,1033,1034,1035,1036,1037,1038,1039,709,710,711,712,713,131,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,363,1040,364,365,1041,1042,366,1043,367,1044,368,1045,101,730,102,103,731,732,104,733,105,12,734,106,735,107,108,109,110,736,737,111,738,112,113,739,114,740,115,741,742,743,744,116,117,745,746,747,748,749,118,119,750,120,751,121,122,752,123,124,125,753,754,755,126,127,756,128,757,129,130,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,96,97,98,99,100,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,766,769],"tindex":"9fd2d087-4c61-11e5-a047-b7f4ce1f20a9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:316","type":"CtIfImpl","sourcecode":"if (' ' == byte)\n    break;\n"},"variableMap":{"c":"v"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:280","type":"CtIfImpl","sourcecode":"if (byte < 0)\n    break;\n"},"status":-1},{"failures":[],"tindex":"9fd2f798-4c61-11e5-a047-1fdf50d368b0","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:913","type":"CtIfImpl","sourcecode":"if (int == int)\n    return null;\n"},"variableMap":{"limit":"n","n":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:932","type":"CtIfImpl","sourcecode":"if (int < (org.eclipse.jgit.lib.Constants.int))\n    return null;\n"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}