{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":23,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":158,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":221,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":141,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":144,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":181,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":251,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2":10,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":252,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":361,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":54,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":121,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":116,"org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter":52,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":60,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":24,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":134,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":335,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":256,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":353,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":364,"org.eclipse.jgit.lib.IndexDiffTest.testStageState":62,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":164,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":329,"org.eclipse.jgit.lib.ValidRefNameTest.testValidSpecialCharacterUnixs":6,"org.eclipse.jgit.lib.ObjectCheckerTest.testRejectSpaceAtEndOnWindows":1,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":67,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":40,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":110,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":56,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon":8,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":92,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":167,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":190,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":355,"org.eclipse.jgit.api.CleanCommandTest.testClean":150,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":328,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":340,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":33,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":148,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":30,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":125,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":374,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":368,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":326,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":325,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":152,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":367,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":97,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":345,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":75,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":90,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows":16,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":115,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":57,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":126,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull":51,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":211,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":212,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":292,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1":371,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":22,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":108,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":290,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2":372,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":291,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":163,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":58,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":65,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":253,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":322,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":155,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":94,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":68,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1":14,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":198,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":197,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":366,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":36,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":176,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testTreeWalk_LsFiles":38,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":102,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":241,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":349,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":348,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":149,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":82,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog":31,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":205,"org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths":0,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":351,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":55,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches":378,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":192,"org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDevicesOnWindows":4,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":229,"org.eclipse.jgit.lib.ObjectCheckerTest.testRejectInvalidWindowsCharacters":2,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":106,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":362,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":203,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":99,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":104,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":105,"org.eclipse.jgit.submodule.SubmoduleWalkTest.generatorFilteredToOneOfTwoSubmodules":87,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":370,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":294,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":130,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":295,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":137,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":285,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":111,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":293,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":289,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":310,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":84,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":288,"org.eclipse.jgit.dircache.DirCacheTreeTest.testWriteReadTree":41,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":287,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":286,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":273,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":172,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":272,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":173,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":179,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":274,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":336,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":20,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":219,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":342,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":78,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":196,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":146,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":201,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":63,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":312,"org.eclipse.jgit.util.RefListTest.testToString":381,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":224,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":379,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":350,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":98,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":206,"org.eclipse.jgit.api.AddCommandTest.testAddWholeRepo":213,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_LsFiles":37,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":139,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":296,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit":377,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":53,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":157,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":297,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":34,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":143,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":298,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":317,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":194,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":331,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":85,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":269,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":162,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":119,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":270,"org.eclipse.jgit.lib.ValidRefNameTest.testNoLeadingOrTrailingDot":17,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":223,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":271,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4096":47,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":363,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":101,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":236,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":226,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4095":46,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4094":45,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":341,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix":9,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":28,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":178,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_4090":44,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":131,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":88,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":127,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":170,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":327,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":140,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":346,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":307,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":369,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":306,"org.eclipse.jgit.api.BlameCommandTest.testRename":103,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":308,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1":11,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":305,"org.eclipse.jgit.lib.IndexDiffTest.testModified":61,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":165,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":280,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":281,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":282,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":283,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":284,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":239,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":323,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":188,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":86,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":32,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":301,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":72,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":183,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":123,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":299,"org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree":49,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":64,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":300,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1":12,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":69,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":320,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":242,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":107,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":267,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":266,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":360,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":268,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":174,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":151,"org.eclipse.jgit.lib.ValidRefNameTest.testWindowsReservedNames":7,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":136,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":100,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":332,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":228,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":120,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":208,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":138,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":128,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":169,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk":375,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":135,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":109,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":344,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":330,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":193,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":333,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":359,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":185,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":129,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":225,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":209,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":356,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":93,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":112,"org.eclipse.jgit.dircache.DirCacheLargePathTest.testPath_16384":48,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":83,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":357,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":195,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":231,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":324,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":147,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":218,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":304,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":73,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix":15,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":71,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":18,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":245,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":302,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":244,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":303,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":207,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":96,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":133,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":263,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":343,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":264,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":114,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":316,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":117,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":265,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":25,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":156,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":227,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":354,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":315,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":220,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":180,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":318,"org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS":13,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":230,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged":132,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":124,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":373,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":217,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":358,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":352,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":187,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":89,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":177,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":21,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":191,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":76,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":257,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":309,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":66,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":50,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":80,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":81,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":202,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":70,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":142,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":145,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":153,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":199,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":334,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory":118,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":261,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":189,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":260,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":262,"org.eclipse.jgit.merge.ResolveMergerTest.failingDeleteOfDirectoryWithUntrackedContent":26,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":171,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":91,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":338,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":275,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":365,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":311,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":113,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":277,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":276,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":279,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":278,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":160,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":122,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":313,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":166,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":79,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":186,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":238,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":237,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadIndex_DirCacheTree":35,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testRemovedSubtree":39,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":43,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":175,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":240,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":77,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":182,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":216,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":42,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":339,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":29,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":184,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":321,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":255,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":254,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":161,"org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDotAtEndOnWindows":3,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":200,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":232,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":337,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":234,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":246,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames5":5,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":235,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":247,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":248,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":249,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":250,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":314,"org.eclipse.jgit.util.RefListTest.testBuilder_ToString":380,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":258,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":168,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":259,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":27,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":74,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":95,"org.eclipse.jgit.api.AddCommandTest.testAddFolder":215,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":243,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":154,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":347,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":159,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":319,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":210,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":204,"org.eclipse.jgit.api.AddCommandTest.testAddTwoFiles":214,"org.eclipse.jgit.api.RevertCommandTest.testRevert":222,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits":376,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":233},"transformations":[{"failures":[],"tindex":"f05a2f14-4c68-11e5-bbe6-1587b267a653","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:292","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry>emptyList().iterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:289","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.internal.storage.file.PackFile.idx().iterator();\n} catch (java.io.IOException e) {\n    return java.util.Collections.<org.eclipse.jgit.internal.storage.file.PackIndex.MutableEntry>emptyList().iterator();\n}"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"f05a5625-4c68-11e5-bbe6-0b5a9e0fe3b0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:399","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"emptyCommit":"windows"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:137","type":"CtAssignmentImpl","sourcecode":"boolean = boolean"},"status":-1},{"failures":[],"tindex":"f05a5626-4c68-11e5-bbe6-73a260859c8f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:582","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.TreeEntry org.eclipse.jgit.lib.TreeEntry : org.eclipse.jgit.lib.Tree.members()) {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.TreeEntry.getId();\n    if (org.eclipse.jgit.lib.ObjectId == null)\n        throw new org.eclipse.jgit.errors.ObjectWritingException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.TreeEntry.getFullName()));\n    \n    org.eclipse.jgit.lib.TreeFormatter.append(org.eclipse.jgit.lib.TreeEntry.getNameUTF8(), org.eclipse.jgit.lib.TreeEntry.getMode(), org.eclipse.jgit.lib.ObjectId);\n}"},"status":-1},{"failures":[],"tindex":"f05a5627-4c68-11e5-bbe6-2f35f85fa7a3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RefMap:332","type":"CtIfImpl","sourcecode":"if (int == 0)\n    (int)++;\n"},"variableMap":{"cmp":"commitTime","packedIdx":"org.eclipse.jgit.revwalk.PendingGenerator.UNINTERESTING"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:155","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.DateRevQueue.everbodyHasFlag(org.eclipse.jgit.revwalk.PendingGenerator.int)) {\n    final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.DateRevQueue.peek();\n    if ((org.eclipse.jgit.revwalk.RevCommit != null) && ((org.eclipse.jgit.revwalk.RevCommit.int) >= (org.eclipse.jgit.revwalk.RevCommit.int))) {\n        int = org.eclipse.jgit.revwalk.PendingGenerator.int;\n    } else if ((--(int)) == 0)\n        throw org.eclipse.jgit.errors.StopWalkException.org.eclipse.jgit.errors.StopWalkException;\n    \n} else {\n    int = org.eclipse.jgit.revwalk.PendingGenerator.int;\n}"},"status":-2},{"failures":[1,3,17,10],"tindex":"f05a7d38-4c68-11e5-bbe6-e73f6dd7237b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:150","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.InvalidObjectIdException(byte[] , int , (int - int))"},"variableMap":{"bs":"raw","end":"end","ptr":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:519","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(((\"invalid name ends with \\'\" + ((char)(byte[][(int - 1)]))) + \"\\'\"))"},"status":-1},{"failures":[18,19,20,21],"tindex":"f05a7d39-4c68-11e5-bbe6-7d7c0b04d9bf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:312","type":"CtInvocationImpl","sourcecode":"java.util.AbstractList<E>.add(((E)(org.eclipse.jgit.revwalk.RevCommit)))"},"status":-1},{"failures":[],"tindex":"f05a7d3a-4c68-11e5-bbe6-d9b62b79bcbe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1588","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"@\"))\n    int = 1;\nelse\n    int = 0;\n"},"variableMap":{"timeStart":"length","time":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.StringUtils:294","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (char[].int) ; ++int) {\n    char char = java.lang.String.charAt(int);\n    if (char == '\\r') {\n        if (((int + 1) < (char[].int)) && ((java.lang.String.charAt((int + 1))) == '\\n')) {\n            char[][int++] = ' ';\n            ++int;\n        } else\n            char[][int++] = ' ';\n        \n    } else if (char == '\\n')\n        char[][int++] = ' ';\n    else\n        char[][int++] = char;\n    \n}"},"status":-2},{"failures":[],"tindex":"f05a7d3b-4c68-11e5-bbe6-9deec34e99ec","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:175","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = byte[][int++]"},"variableMap":{"r":"intbuf","in":"intbuf","ip":"v","rPtr":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.NB:188","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int))"},"status":-2},{"failures":[],"tindex":"f05a7d3c-4c68-11e5-bbe6-7d02af8c1e11","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:202","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int, '>')"},"variableMap":{"raw":"buf","ptr":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:251","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], ((org.eclipse.jgit.util.MutableInteger.int) + 1), org.eclipse.jgit.util.MutableInteger)"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370],"tindex":"f05aa44d-4c68-11e5-bbe6-1743d6ed3307","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.AnyObjectId:395","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.eclipse.jgit.lib.Constants.int]"},"variableMap":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH":"infoLength"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:478","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[int * (int)]"},"status":-1},{"failures":[371,372,373],"tindex":"f05aa44e-4c68-11e5-bbe6-07bdb9eae9d9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:224","type":"CtReturnImpl","sourcecode":"return java.lang.System.currentTimeMillis()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:305","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.PackFile.idx().getObjectCount()"},"status":-1},{"failures":[],"tindex":"f05aa44f-4c68-11e5-bbe6-c36bcdcc6e02","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.UploadPack:965","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit) {\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n    if (((int) == 0) || ((org.eclipse.jgit.revwalk.RevCommit.getCommitTime()) < (int)))\n        int = org.eclipse.jgit.revwalk.RevCommit.getCommitTime();\n    \n} "},"variableMap":{"oldestTime":"org.eclipse.jgit.lib.Constants.OBJ_BLOB","obj":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:699","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.createCommit(org.eclipse.jgit.lib.AnyObjectId);\n        break;\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.revwalk.RevObject = new org.eclipse.jgit.revwalk.RevTree(org.eclipse.jgit.lib.AnyObjectId);\n        break;\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.revwalk.RevObject = new org.eclipse.jgit.revwalk.RevBlob(org.eclipse.jgit.lib.AnyObjectId);\n        break;\n    case org.eclipse.jgit.lib.Constants.int :\n        org.eclipse.jgit.revwalk.RevObject = new org.eclipse.jgit.revwalk.RevTag(org.eclipse.jgit.lib.AnyObjectId);\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.Integer.valueOf(int)));\n}"},"status":-2},{"failures":[374,375,376,377,378,379],"tindex":"f05acb60-4c68-11e5-bbe6-ab8e51919044","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalkUtils:162","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.Collection<org.eclipse.jgit.lib.Ref>) {\n    org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.revwalk.RevWalk.parseAny(org.eclipse.jgit.lib.Ref.getObjectId());\n    if (!(org.eclipse.jgit.revwalk.RevObject instanceof org.eclipse.jgit.revwalk.RevCommit))\n        continue;\n    \n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = ((org.eclipse.jgit.revwalk.RevCommit)(org.eclipse.jgit.revwalk.RevObject));\n    if (((org.eclipse.jgit.revwalk.RevCommit.getCommitTime()) + int) < (org.eclipse.jgit.revwalk.RevCommit.getCommitTime()))\n        continue;\n    \n    if (org.eclipse.jgit.revwalk.RevWalk.isMergedInto(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit))\n        java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n    \n}"},"status":-1},{"failures":[380,381],"tindex":"f05acb61-4c68-11e5-bbe6-d56d99722a5a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefList:308","type":"CtForImpl","sourcecode":"for (int int = 1 ; int < (int) ; int++) {\n    java.lang.StringBuilder.append(\", \");\n    java.lang.StringBuilder.append(org.eclipse.jgit.lib.Ref[][int]);\n}"},"variableMap":{"r":"r","cnt":"cnt","list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefList:306","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    java.lang.StringBuilder.append(org.eclipse.jgit.lib.Ref[][0]);\n    for (int int = 1 ; int < (int) ; int++) {\n        java.lang.StringBuilder.append(\", \");\n        java.lang.StringBuilder.append(org.eclipse.jgit.lib.Ref[][int]);\n    }\n} "},"status":-1},{"failures":[],"tindex":"f05acb62-4c68-11e5-bbe6-234bdf7add7b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:430","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null)\n    break;\n"},"variableMap":{"c":"stashHeadCommit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:221","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectId != null) {\n    org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository, true)));\n    org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"stashed HEAD\" , \"HEAD\" , \"untracked files\" });\n    org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.lib.ObjectId);\n    boolean boolean = org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.ObjectId);\n    if (boolean)\n        try {\n            org.eclipse.jgit.revwalk.RevTree org.eclipse.jgit.revwalk.RevTree = org.eclipse.jgit.revwalk.RevWalk.parseTree(org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n            org.eclipse.jgit.api.StashApplyCommand.resetUntracked(org.eclipse.jgit.revwalk.RevTree);\n        } catch (org.eclipse.jgit.errors.CheckoutConflictException e) {\n            throw new org.eclipse.jgit.api.errors.StashApplyFailureException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        }\n    else\n        throw new org.eclipse.jgit.api.errors.StashApplyFailureException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n} "},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}