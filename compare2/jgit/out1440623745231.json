{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":96,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":121,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":8,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":56,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":42,"org.eclipse.jgit.lib.ObjectIdSubclassMapTest.testAddIfAbsentGrowsWithObjects":134,"org.eclipse.jgit.lib.ConfigTest.testSetFastForwardMerge":52,"org.eclipse.jgit.lib.ObjectIdTest.testGetByte":108,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles":102,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":15,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":34,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":129,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":35,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":83,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":20,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":12,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":114,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":82,"org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin":65,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":71,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":132,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":3,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsentGrowsWithObjects":137,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":6,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":24,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":112,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":58,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":10,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":32,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource":62,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":75,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly":98,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":97,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":130,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":33,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":118,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":133,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":29,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":50,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":122,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":89,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":27,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":39,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":91,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":131,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":126,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveTimeout":1,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":7,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":104,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":19,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":25,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAllTags":2,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":80,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":113,"org.eclipse.jgit.lib.ConfigTest.testSetEnum":54,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":60,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":36,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":21,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":9,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":72,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":30,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":44,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":125,"org.eclipse.jgit.lib.ConfigTest.testQuotingForSubSectionNames":47,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":38,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":48,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":127,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair":99,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":74,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":17,"org.eclipse.jgit.api.GitConstructionTest.testWrap":78,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":57,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":87,"org.eclipse.jgit.api.GitConstructionTest.testOpen":77,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation":61,"org.eclipse.jgit.lib.ConfigTest.test005_PutGetStringList":46,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":76,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":116,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":23,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":43,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":88,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":41,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":66,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":92,"org.eclipse.jgit.lib.ConfigTest.testSetFastForwardMergeoptions":45,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":90,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":85,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":37,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":67,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":40,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":93,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":128,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":26,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testIterator":139,"org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut":106,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":115,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":117,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":84,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":94,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":55,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":11,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":70,"org.eclipse.jgit.lib.ConfigTest.test003_PutRemote":49,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent":101,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":107,"org.eclipse.jgit.lib.ConfigTest.test004_PutGetSimple":51,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":73,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes":100,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":79,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":18,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGetAndContains":138,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":81,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":123,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":14,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":105,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":28,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":68,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoNonConflictingModifications":110,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":59,"org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart":63,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":16,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":119,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddGrowsWithObjects":136,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":120,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":13,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":53,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":95,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSeperateModifications":111,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":31,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":103,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":124,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":86,"org.eclipse.jgit.lib.ObjectIdOwnerMapTest.testAddIfAbsent":135,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":69,"org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror":64,"org.eclipse.jgit.lib.ObjectIdTest.testSetByte":109,"org.eclipse.jgit.transport.RemoteConfigTest.testCreateOrigin":0,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveNoTags":4,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":22,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":5},"transformations":[{"failures":[],"tindex":"9d67dc96-4c37-11e5-83ca-859be87829c9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1299","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"variableMap":{"abortingRebaseFailedNoOrigHead":"panicCantRenameIndexFile","commitId":"panicCantRenameIndexFile"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:782","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<org.eclipse.jgit.internal.storage.pack.PackExt, java.io.File> java.util.Map.Entry<org.eclipse.jgit.internal.storage.pack.PackExt, java.io.File> : java.util.Map<org.eclipse.jgit.internal.storage.pack.PackExt, java.io.File>.entrySet()) {\n    java.io.File java.io.File = java.util.Map.Entry<org.eclipse.jgit.internal.storage.pack.PackExt, java.io.File>.getValue();\n    java.io.File.setReadOnly();\n    java.io.File java.io.File = org.eclipse.jgit.internal.storage.file.GC.nameFor(java.lang.String, (\".\" + (java.util.Map.Entry<org.eclipse.jgit.internal.storage.pack.PackExt, java.io.File>.getKey().getExtension())));\n    try {\n        org.eclipse.jgit.util.FileUtils.rename(java.io.File, java.io.File);\n    } catch (java.io.IOException e) {\n        java.io.File java.io.File = new java.io.File(java.io.File.getParentFile() , ((java.io.File.getName()) + \".new\"));\n        if (!(java.io.File.renameTo(java.io.File)))\n            java.io.File = java.io.File;\n        \n        throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File, java.io.File));\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"9d6803a7-4c37-11e5-83ca-19c3d8028e42","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:981","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null) && ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null)) {\n    java.lang.StringBuilder.append('[');\n    java.lang.StringBuilder.append(org.eclipse.jgit.lib.ConfigLine.java.lang.String);\n    if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null) {\n        java.lang.StringBuilder.append(' ');\n        java.lang.String java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.escapeValue(org.eclipse.jgit.lib.ConfigLine.java.lang.String);\n        boolean boolean = (java.lang.String.startsWith(\"\\\"\")) && (java.lang.String.endsWith(\"\\\"\"));\n        if (!boolean)\n            java.lang.StringBuilder.append('\\\"');\n        \n        java.lang.StringBuilder.append(java.lang.String);\n        if (!boolean)\n            java.lang.StringBuilder.append('\\\"');\n        \n    } \n    java.lang.StringBuilder.append(']');\n} else if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null) && ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null)) {\n    if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null) || (\"\".equals(org.eclipse.jgit.lib.ConfigLine.java.lang.String)))\n        java.lang.StringBuilder.append('\\t');\n    \n    java.lang.StringBuilder.append(org.eclipse.jgit.lib.ConfigLine.java.lang.String);\n    if ((org.eclipse.jgit.lib.Config.java.lang.String) != (org.eclipse.jgit.lib.ConfigLine.java.lang.String)) {\n        java.lang.StringBuilder.append(\" =\");\n        if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null) {\n            java.lang.StringBuilder.append(' ');\n            java.lang.StringBuilder.append(org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.escapeValue(org.eclipse.jgit.lib.ConfigLine.java.lang.String));\n        } \n    } \n    if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null)\n        java.lang.StringBuilder.append(' ');\n    \n} "},"status":-1},{"failures":[59,60],"tindex":"9d6851c8-4c37-11e5-83ca-8141ed1746f8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:241","type":"CtReturnImpl","sourcecode":"return (long * 100) / long"},"variableMap":{"hits":"len","total":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:464","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[],"tindex":"9d6851c9-4c37-11e5-83ca-5fcb302e137b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:204","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(\"pack-\"))\n    java.lang.String = java.lang.String.substring(\"pack-\".length());\n"},"variableMap":{"name":"notASCIIString"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:555","type":"CtForImpl","sourcecode":"for (int int = (byte[].int) - 1 ; int >= 0 ; int--) {\n    final char char = java.lang.String.charAt(int);\n    if (char > 127)\n        throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n    \n    byte[][int] = ((byte)(char));\n}"},"status":-2},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,58],"tindex":"9d6851ca-4c37-11e5-83ca-99fa0bae9feb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.RefSpec:269","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.RefSpec"},"variableMap":{"r":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:353","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.RefSpec.isWildcard() ? new org.eclipse.jgit.transport.RefSpec(this).expandFromSourceImp(java.lang.String) : this"},"status":-1},{"failures":[],"tindex":"9d6851cb-4c37-11e5-83ca-3d0a2abe74b4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:156","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.FetchProcess.expandFetchTags()"},"status":-2},{"failures":[],"tindex":"9d6851cc-4c37-11e5-83ca-5bde2a799f03","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.TreeWalk:226","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk.this(org.eclipse.jgit.lib.Repository.newObjectReader())"},"variableMap":{"repo":"repo","this":"walk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:293","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.TreeWalk = new org.eclipse.jgit.treewalk.TreeWalk(org.eclipse.jgit.lib.Repository)"},"status":-2},{"failures":[],"tindex":"9d6851cd-4c37-11e5-83ca-2b16d54e78b9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:868","type":"CtLocalVariableImpl","sourcecode":"long long = long % 1000"},"variableMap":{"fileLastModified":"java.lang.Long.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:306","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Long.long"},"status":-2},{"failures":[97,98,99,100,101,102],"tindex":"9d6878de-4c37-11e5-83ca-731eb742f922","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:169","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.diff.DiffEntry>.set(int, null)"},"status":-1},{"failures":[103,104,105],"tindex":"9d6878df-4c37-11e5-83ca-e18f22bec189","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.LogCommand:159","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<java.lang.Iterable<org.eclipse.jgit.revwalk.RevCommit>>.setCallable(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.LogCommand:306","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<java.lang.Iterable<org.eclipse.jgit.revwalk.RevCommit>>.checkCallable()"},"status":-1},{"failures":[],"tindex":"9d6878e0-4c37-11e5-83ca-c745687852a8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.StrategySimpleTwoWayInCore:178","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:441","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry()"},"status":-2},{"failures":[106,107,108,109],"tindex":"9d6878e1-4c37-11e5-83ca-59b75d85faad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:143","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"9d6878e2-4c37-11e5-83ca-e5a4d92f232f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:570","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"dist":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:160","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.diff.Edit.getEndA()"},"status":-1},{"failures":[],"tindex":"9d6878e3-4c37-11e5-83ca-abe9b1349a1b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:1342","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevWalk.isNotStarted())\n    return ;\n"},"variableMap":{"this":"walker"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:401","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null) {\n    org.eclipse.jgit.revwalk.RevWalk = null;\n    return ;\n} "},"status":-2},{"failures":[107,130,131,132,133,109,134,135,136,137,138,139],"tindex":"9d6878e4-4c37-11e5-83ca-d93f24239df0","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdSubclassMap:165","type":"CtAssignmentImpl","sourcecode":"int = (int + 1) & int"},"variableMap":{"msk":"value","i":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.MutableObjectId:115","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 255"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}