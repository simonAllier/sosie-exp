{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":81,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":78,"org.eclipse.jgit.util.io.AutoCRLFInputStreamTest.test":118,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":52,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":7,"org.eclipse.jgit.api.FetchCommandTest.testFetch":30,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":18,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":60,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":62,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":77,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":69,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":59,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":102,"org.eclipse.jgit.transport.RefSpecTest.testForceRemotesOrigin":115,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":93,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":0,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":88,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":66,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":21,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":56,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":57,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfSource":112,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":86,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":50,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":97,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":58,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":76,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":29,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":64,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":17,"org.eclipse.jgit.api.PushCommandTest.testPush":43,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":106,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":28,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":108,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":1,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":72,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":42,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":70,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":68,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testFileNameWildcards":99,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":23,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":94,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":33,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":55,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":32,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":83,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":96,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":38,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":89,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":20,"org.eclipse.jgit.api.GitConstructionTest.testWrap":27,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":80,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":9,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":8,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":73,"org.eclipse.jgit.api.GitConstructionTest.testOpen":26,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":65,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":61,"org.eclipse.jgit.transport.RefSpecTest.testWildcardInMiddleOfDestionation":111,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":98,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":4,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":90,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":74,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":40,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":37,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":116,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":31,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":103,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":107,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":34,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":67,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":117,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase":104,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":2,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":36,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":84,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":85,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":63,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":82,"org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase":105,"org.eclipse.jgit.api.GitConstructionTest.testClose":25,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":44,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":92,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":39,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":16,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":15,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":95,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":41,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":46,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":87,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":19,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":6,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":109,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":49,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":10,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":101,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":12,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":13,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":53,"org.eclipse.jgit.transport.RefSpecTest.testWildcardAtStart":113,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":48,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":35,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":45,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testTargetWithoutLeadingSlash":100,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":5,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":75,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":79,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":54,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":71,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":14,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":22,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":51,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":47,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":110,"org.eclipse.jgit.transport.RefSpecTest.testWildcardMirror":114,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":91,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":3,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":11},"transformations":[{"failures":[],"tindex":"0480304d-4c5c-11e5-8bd9-5d293ed46570","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:460","type":"CtIfImpl","sourcecode":"if ((int < (java.lang.String.length())) && ((java.lang.String.charAt(int)) == ',')) {\n    int++;\n} "},"variableMap":{"next":"length","auth":"resultLengthIncorrect"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:162","type":"CtIfImpl","sourcecode":"if (byte[] == null)\n    byte[] = new byte[int];\nelse if ((byte[].int) != int)\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-2},{"failures":[],"tindex":"0480304e-4c5c-11e5-8bd9-3933d1599772","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:194","type":"CtIfImpl","sourcecode":"if ((int == (int)) || (int == (int)))\n    continue;\n"},"variableMap":{"i":"org.eclipse.jgit.util.FileUtils.RECURSIVE","workingTree":"org.eclipse.jgit.util.FileUtils.RECURSIVE","dirCache":"org.eclipse.jgit.util.FileUtils.RECURSIVE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:130","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.Set<java.lang.String>)\n    if ((java.util.Set<java.lang.String>.isEmpty()) || (java.util.Set<java.lang.String>.contains(java.lang.String))) {\n        if (!(boolean))\n            org.eclipse.jgit.util.FileUtils.delete(new java.io.File(org.eclipse.jgit.lib.Repository.getWorkTree() , java.lang.String), org.eclipse.jgit.util.FileUtils.int);\n        \n        java.util.Set<java.lang.String>.add((java.lang.String + \"/\"));\n    } "},"status":-2},{"failures":[],"tindex":"0480575f-4c5c-11e5-8bd9-1768c06180eb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:109","type":"CtIfImpl","sourcecode":"if (int < (int))\n    break;\n"},"variableMap":{"nextPosition":"java.util.Calendar.HOUR_OF_DAY","end":"java.util.Calendar.HOUR_OF_DAY"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:269","type":"CtInvocationImpl","sourcecode":"java.util.Calendar.set(java.util.Calendar.int, 0)"},"status":-2},{"failures":[],"tindex":"04805760-4c5c-11e5-8bd9-6ba0eb5b6e9a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:313","type":"CtIfImpl","sourcecode":"if ((0 < int) && (int < int))\n    int = (int / int) * int;\nelse if (int <= 0)\n    int = int;\n"},"variableMap":{"bs":"subcnt","wantSize":"subcnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:177","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.sort(org.eclipse.jgit.dircache.DirCacheTree[], 0, int, org.eclipse.jgit.dircache.DirCacheTree.java.util.Comparator<org.eclipse.jgit.dircache.DirCacheTree>)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,25,26,26,27,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"04805761-4c5c-11e5-8bd9-39b0d907c5f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:164","type":"CtAssignmentImpl","sourcecode":"int = (java.io.InputStream.read()) & 255"},"status":-1},{"failures":[],"tindex":"04805762-4c5c-11e5-8bd9-d5050b2c3445","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:152","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"GMT\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeFormatter:81","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"status":-2},{"failures":[99,100],"tindex":"04805763-4c5c-11e5-8bd9-e7e191296cfa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:464","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n    return false;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:233","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String[].int) ; int++) {\n    final java.lang.String java.lang.String = java.lang.String[][int];\n    if ((java.lang.String.length()) == 0)\n        continue;\n    \n    org.eclipse.jgit.fnmatch.FileNameMatcher.append((\"/\" + java.lang.String));\n    if ((org.eclipse.jgit.fnmatch.FileNameMatcher.isMatch()) && org.eclipse.jgit.ignore.IgnoreRule.(doesMatchDirectoryExpectations(boolean, int, java.lang.String[].int)))\n        return true;\n    \n}"},"status":-1},{"failures":[],"tindex":"04807e74-4c5c-11e5-8bd9-c5264bcbc975","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.WalkRemoteObjectDatabase:339","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"P \")"},"variableMap":{"w":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:232","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.lib.RebaseTodoLine.getShortMessage().trim())"},"status":0},{"failures":[101,102],"tindex":"04807e75-4c5c-11e5-8bd9-f971f26c2f33","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:189","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.indexOf('\\n')"},"variableMap":{"pkt":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:403","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.indexOf('\\n', int[][int])"},"status":-1},{"failures":[],"tindex":"04807e76-4c5c-11e5-8bd9-8f516de0f7ab","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:338","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(int)) != (java.lang.String.charAt(int)))\n    break;\n"},"variableMap":{"a":"subsection","b":"section","dirSim":"insertPosition"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:891","type":"CtWhileImpl","sourcecode":"while ((int < (java.util.List<org.eclipse.jgit.lib.ConfigLine>.size())) && (int < (java.util.List<java.lang.String>.size()))) {\n    final org.eclipse.jgit.lib.ConfigLine org.eclipse.jgit.lib.ConfigLine = java.util.List<org.eclipse.jgit.lib.ConfigLine>.get(int);\n    if (org.eclipse.jgit.lib.ConfigLine.match(java.lang.String, java.lang.String, java.lang.String)) {\n        java.util.List<org.eclipse.jgit.lib.ConfigLine>.set(int, org.eclipse.jgit.lib.ConfigLine.forValue(java.util.List<java.lang.String>.get(int++)));\n        int = int + 1;\n    } \n    int++;\n}"},"status":-2},{"failures":[3,4,0,1,2,5,6,7,8,25,25,26,26,27,27,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,28,29,30,31,32,33,34,35,41,42,43,44,45,46,36,37,38,39,40,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,73,74,66,67,68,69,70,71,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"04807e77-4c5c-11e5-8bd9-89d3f93cd0c8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:155","type":"CtIfImpl","sourcecode":"if ((boolean) || (((int) == (org.eclipse.jgit.transport.SideBandInputStream.int)) && ((int) > 0)))\n    return ;\n"},"variableMap":{"org.eclipse.jgit.transport.SideBandInputStream.CH_DATA":"available","channel":"available","available":"available","eof":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:159","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    boolean = true;\n    return ;\n} "},"status":-1},{"failures":[26,27,41,42,46,73,74,47,103,104,105,106,107,108,59,60,63,79,81,88,109,110,111,112,113,114,115,92,93,94,95,96,97,98,116,117],"tindex":"0480a588-4c5c-11e5-8bd9-4f7c68142884","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:360","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.transport.RefSpec.org.eclipse.jgit.transport.RefSpec.expandWildcard(java.lang.String, java.lang.String, java.lang.String)"},"status":-1},{"failures":[118],"tindex":"0480a589-4c5c-11e5-8bd9-cddf15a20c01","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.Edit:200","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"endA":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.AutoCRLFInputStream:128","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"0480a58a-4c5c-11e5-8bd9-d16cdcbec5d6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RepositoryCache:309","type":"CtReturnImpl","sourcecode":"return java.io.File.getCanonicalFile()"},"variableMap":{"path":"logsRefsDir"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ReflogWriter:162","type":"CtReturnImpl","sourcecode":"return new java.io.File(java.io.File , java.lang.String)"},"status":-2},{"failures":[],"tindex":"0480a58b-4c5c-11e5-8bd9-b5caf4165dbb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackConnection:201","type":"CtIfImpl","sourcecode":"if (java.lang.String == (org.eclipse.jgit.transport.PacketLineIn.java.lang.String))\n    break;\n"},"variableMap":{"line":"invalidLineInConfigFile","org.eclipse.jgit.transport.PacketLineIn.END":"suffix"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1048","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) != null) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n} else if ((';' == char) || ('#' == char)) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String.valueOf(char);\n} else if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null) && (java.lang.Character.isWhitespace(char))) {\n    if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null)\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n} else if ('[' == char) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader);\n    int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if ('\\\"' == int) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"');\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n    } \n    if (']' != int)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n} else if (org.eclipse.jgit.lib.ConfigLine != null) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.Config.StringReader.reset();\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader);\n    if (org.eclipse.jgit.lib.ConfigLine.java.lang.String.endsWith(\"\\n\")) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String.substring(0, ((org.eclipse.jgit.lib.ConfigLine.java.lang.String.length()) - 1));\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.java.lang.String;\n    } else\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, false, -1);\n    \n} else\n    throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}