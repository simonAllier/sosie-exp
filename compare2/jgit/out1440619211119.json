{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead":417,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":40,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog":388,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":399,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":363,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":141,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":12,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":260,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testCheckout":387,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":82,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":187,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":280,"org.eclipse.jgit.transport.URIishTest.testGitSshProto":25,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":39,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":326,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":101,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":275,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":197,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":122,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":310,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":96,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":229,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":337,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":385,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass":406,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":248,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":192,"org.eclipse.jgit.transport.URIishTest.testGitProtoUnixPort":23,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":224,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadOneLine":392,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":132,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":172,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment":253,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":223,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":222,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":163,"org.eclipse.jgit.lib.RepositoryCacheTest.testCacheRegisterOpen":205,"org.eclipse.jgit.transport.URIishTest.testURIEncodeDecode":21,"org.eclipse.jgit.transport.URIishTest.testURIEncode_0a":17,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":119,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":169,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":398,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":298,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":135,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":13,"org.eclipse.jgit.transport.URIishTest.testFileProtoWindows":32,"org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit":170,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":200,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":307,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":241,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":315,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithADUserPassAndPort":20,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":299,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":364,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":113,"org.eclipse.jgit.lib.SquashCommitMsgTest.testReadWriteMergeMsg":268,"org.eclipse.jgit.transport.URIishTest.testURIEncode_00":16,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":63,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":84,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking":4,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":83,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":384,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":93,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues":43,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":109,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":207,"org.eclipse.jgit.lib.RepositoryCacheTest.testBareFileKey":202,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":143,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":182,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":198,"org.eclipse.jgit.api.GitConstructionTest.testClose":154,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":297,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":87,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":302,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":147,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting":412,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":209,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":312,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":240,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":325,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":54,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":151,"org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches":79,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":372,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":186,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":213,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile":218,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":400,"org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenExisting":206,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":336,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":90,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":129,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":153,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":233,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":264,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":401,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":362,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":343,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":266,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":331,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":255,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":380,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":407,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":133,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":341,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":181,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":283,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":171,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":68,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":103,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":316,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":136,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":191,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserAndPort":18,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":333,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking":2,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":152,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":193,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":185,"org.eclipse.jgit.util.FileUtilTest.testRenameOverExistingNonEmptyDirectory":345,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":174,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":225,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":286,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":284,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":74,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":94,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.testShouldAutomagicallyDetectGitDirectory":371,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":246,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":249,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":47,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":220,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":296,"org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode":77,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":320,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":318,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":311,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":190,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":212,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":123,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":244,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":211,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":259,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":97,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef":410,"org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf":6,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":53,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":146,"org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates":201,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":328,"org.eclipse.jgit.api.GitConstructionTest.testWrap":156,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":88,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":285,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":344,"org.eclipse.jgit.api.RebaseCommandTest.testLeadingSpacesRebaseTodo":252,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":361,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs":0,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":145,"org.eclipse.jgit.api.BlameCommandTest.testSingleRevision":64,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":179,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":317,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":258,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithEscapedADUserPassAndPort":28,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":403,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":289,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadWhileAppendIsInProgress":389,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":184,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":162,"org.eclipse.jgit.util.FileUtilTest.testRenameOverExistingFile":347,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":121,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination":3,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":131,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":66,"org.eclipse.jgit.api.ApplyCommandTest.testFailureF2":158,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":265,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":134,"org.eclipse.jgit.transport.URIishTest.testGitProtoUnix":31,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":231,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":402,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment":390,"org.eclipse.jgit.transport.URIishTest.testFileProtoUnix":22,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":301,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":323,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":230,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":142,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":188,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":327,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":150,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":261,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":350,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":416,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":279,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":137,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":237,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":215,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef":369,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":405,"org.eclipse.jgit.transport.RemoteConfigTest.singlePushInsteadOf":8,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":373,"org.eclipse.jgit.api.RebaseCommandTest.testOnlyCommentRebaseTodo":239,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":287,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":267,"org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1":157,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":256,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":195,"org.eclipse.jgit.transport.URIishTest.testURIEncode_unicode":14,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":92,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":335,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":194,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":7,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef":368,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":243,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":379,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":108,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":37,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":245,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":292,"org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf":5,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":232,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":89,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":199,"org.eclipse.jgit.api.MergeCommandTest.testMergeInItself":290,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":291,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":322,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":413,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":276,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":102,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":86,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":378,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":332,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":45,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":365,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":217,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":85,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":177,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":354,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":62,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":394,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":120,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":360,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":67,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":238,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":100,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":41,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":166,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":196,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":183,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":271,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":294,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists":415,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":99,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":148,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":304,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":386,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":71,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":72,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":340,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":165,"org.eclipse.jgit.lib.RepositoryCacheTest.testNonBareFileKey":203,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":75,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":81,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":339,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":409,"org.eclipse.jgit.transport.URIishTest.testSshGitProto":19,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":355,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":277,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":356,"org.eclipse.jgit.api.MergeCommandTest.testNoFastForward":305,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":334,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":247,"org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit":140,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue":44,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":114,"org.eclipse.jgit.transport.URIishTest.testSshProtoWithUserPassAndPort":15,"org.eclipse.jgit.transport.URIishTest.testGetSet":27,"org.eclipse.jgit.api.ApplyCommandTest.testModifyX":159,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":52,"org.eclipse.jgit.api.ApplyCommandTest.testModifyY":160,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":11,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":329,"org.eclipse.jgit.api.ApplyCommandTest.testModifyZ":161,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile":228,"org.eclipse.jgit.transport.URIishTest.testSshProto":26,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":38,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":55,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend":78,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":295,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":226,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":377,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":189,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":65,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached":411,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":414,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef":366,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testSpecificEntryNumber":391,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":117,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":352,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":236,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":349,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":164,"org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection":42,"org.eclipse.jgit.api.BlameCommandTest.testRename":70,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":274,"org.eclipse.jgit.api.FetchCommandTest.testFetch":175,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":219,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":288,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":319,"org.eclipse.jgit.util.FileUtilTest.testRenameOverNonExistingFile":346,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":9,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":359,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":216,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase1":34,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase0":33,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":254,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testPunctGroupCase2":35,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":357,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":69,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":314,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":61,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":273,"org.eclipse.jgit.transport.TransportTest.testLocalTransportWithRelativePath":324,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":91,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":408,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":382,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":106,"org.eclipse.jgit.api.PushCommandTest.testPush":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":227,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":251,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":383,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":330,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testCreate":395,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":110,"org.eclipse.jgit.util.FileUtilTest.testRenameOverExistingEmptyDirectory":348,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":338,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":404,"org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf":10,"org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadTwoLine":393,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":112,"org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir":257,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":139,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":138,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":308,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":76,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":234,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":178,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":118,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":98,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":95,"org.eclipse.jgit.lib.RefTest.testRemoteNames":272,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindows":29,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":214,"org.eclipse.jgit.api.RebaseCommandTest.testParseRewordCommand":221,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":278,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":370,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":313,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":167,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":262,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":73,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":351,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":124,"org.eclipse.jgit.api.GitConstructionTest.testOpen":155,"org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen":204,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":250,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":242,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":107,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":293,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":105,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":168,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":80,"org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef":1,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":116,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":397,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4":59,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5":60,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":176,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1":56,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2":57,"org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3":58,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":303,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":367,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":342,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":300,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":144,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":353,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":208,"org.eclipse.jgit.transport.URIishTest.testGitProtoWindowsPort":24,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":111,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":49,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":309,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":375,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":104,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":210,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":235,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":130,"org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeMsg":270,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":46,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":51,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":282,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":358,"org.eclipse.jgit.lib.MergeHeadMsgTest.testReadWriteMergeHeads":269,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":281,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":173,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":376,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":115,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":125,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":127,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":128,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":396,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":180,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":381,"org.eclipse.jgit.transport.URIishTest.testGitWithUserHome":30,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":321,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":149,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":374,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":306,"org.eclipse.jgit.api.RevertCommandTest.testRevert":263,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":126},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"0ee006a4-4c2d-11e5-b8f7-0da8c8c718d7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:615","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.URIish.(getScheme()) != null) {\n    java.lang.StringBuilder.append(org.eclipse.jgit.transport.URIish.getScheme());\n    java.lang.StringBuilder.append(\"://\");\n} "},"status":-1},{"failures":[],"tindex":"0ee02db5-4c2d-11e5-b8f7-db983aaa559d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:329","type":"CtAssignmentImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.Head> = java.util.List<org.eclipse.jgit.fnmatch.Head>"},"status":0},{"failures":[],"tindex":"0ee02db6-4c2d-11e5-b8f7-11d10a10df77","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:417","type":"CtInvocationImpl","sourcecode":"java.io.File.setLastModified(java.lang.System.currentTimeMillis())"},"status":-2},{"failures":[],"tindex":"0ee02db7-4c2d-11e5-b8f7-29204f600330","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesRule:89","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<org.eclipse.jgit.attributes.Attribute>.add(new org.eclipse.jgit.attributes.Attribute(java.lang.String , org.eclipse.jgit.attributes.Attribute.State.org.eclipse.jgit.attributes.Attribute.State))"},"status":-2},{"failures":[33,34,35],"tindex":"0ee054c8-4c2d-11e5-b8f7-4303b41c085e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.fnmatch.GroupHead:85","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(new org.eclipse.jgit.fnmatch.GroupHead.OneCharacterPattern(' '))"},"variableMap":{"characterClasses":"characterClasses"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:103","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.PunctPattern.org.eclipse.jgit.fnmatch.GroupHead.PunctPattern)"},"status":-1},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,154,155,155,156,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417],"tindex":"0ee054c9-4c2d-11e5-b8f7-615d1fc52db5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:149","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    if ((byte[].int) == int) {\n        if ((byte[].int) == int) {\n            int int = java.io.FileInputStream.read();\n            if (int < 0)\n                break;\n            \n            throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File));\n        } \n        byte[] byte[] = new byte[java.lang.Math.min(((byte[].int) * 2), int)];\n        java.lang.System.arraycopy(byte[], 0, byte[], 0, int);\n        byte[] = byte[];\n    } \n    int int = java.io.FileInputStream.read(byte[], int, ((byte[].int) - int));\n    if (int < 0)\n        break;\n    \n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"0ee07bda-4c2d-11e5-b8f7-7b02fa541d8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1086","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.FileMode != org.eclipse.jgit.lib.FileMode)\n    return true;\n"},"status":0},{"failures":[],"tindex":"0ee07bdb-4c2d-11e5-b8f7-c7dc2a98f8e9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.PersonIdent:297","type":"CtLocalVariableImpl","sourcecode":"final java.text.SimpleDateFormat java.text.SimpleDateFormat"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:107","type":"CtLocalVariableImpl","sourcecode":"java.text.SimpleDateFormat java.text.SimpleDateFormat = org.eclipse.jgit.util.SystemReader.getInstance().getSimpleDateFormat(org.eclipse.jgit.util.GitDateParser.ParseableSimpleDateFormat.java.lang.String, java.util.Locale)"},"status":-2},{"failures":[],"tindex":"0ee07bdc-4c2d-11e5-b8f7-9b14d70436da","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:506","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.fireRefsChanged()"},"status":-2},{"failures":[],"tindex":"0ee07bdd-4c2d-11e5-b8f7-bfdc9f202064","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PullCommand:183","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.api.PullResult>.checkCallable()"},"status":0},{"failures":[131],"tindex":"0ee07bde-4c2d-11e5-b8f7-8766484f38c2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:187","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (java.lang.String) + java.lang.String"},"variableMap":{"pkt":"remoteBranchName","progressBuffer":"branchName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PullCommand:235","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"0ee07bdf-4c2d-11e5-b8f7-93da0a331cbd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:223","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.RecursiveMerger:178","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = boolean"},"status":-2},{"failures":[],"tindex":"0ee0a1f0-4c2d-11e5-b8f7-5f2c458dc25b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.CachedObjectDirectory:99","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) != 2)\n    continue;\n"},"variableMap":{"d":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:266","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString((java.lang.String + java.lang.String));\n} catch (java.lang.IllegalArgumentException notAnObject) {\n    continue;\n}"},"status":-2},{"failures":[],"tindex":"0ee0a1f1-4c2d-11e5-b8f7-6762a97b2524","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:404","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int);\n    if (org.eclipse.jgit.patch.FileHeader.(org.eclipse.jgit.patch.FileHeader.isHunkHdr(byte[], int, int)) >= 1) {\n        break;\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.FileHeader.parseOldName(int, int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.FileHeader.parseNewName(int, int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.patch.FileHeader.parseFileMode((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n        org.eclipse.jgit.lib.FileMode = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;\n        org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.FileHeader.parseNewFileMode(int, int);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n        org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n        org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n        org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n        org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n        org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        java.lang.String = org.eclipse.jgit.patch.FileHeader.parseName(java.lang.String, (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n        org.eclipse.jgit.diff.DiffEntry.ChangeType = org.eclipse.jgit.diff.DiffEntry.ChangeType.org.eclipse.jgit.diff.DiffEntry.ChangeType;\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], (int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), null);\n    } else if (org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.match(byte[], int, org.eclipse.jgit.patch.FileHeader.byte[])) >= 0) {\n        org.eclipse.jgit.patch.FileHeader.parseIndexLine((int + (org.eclipse.jgit.patch.FileHeader.byte[].int)), int);\n    } else {\n        break;\n    }\n    int = int;\n}"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}