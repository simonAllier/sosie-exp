{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":71,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":39,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":40,"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlock_BulkWrite":11,"org.eclipse.jgit.util.TemporaryBufferTest.testHeap":7,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead":29,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":57,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":84,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles":113,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":33,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":5,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":18,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDeleteNonExisting":2,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testBasic":54,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":79,"org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchOnAppendByte":8,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":21,"org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage":27,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly":109,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2":108,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":66,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":37,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":65,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":101,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":61,"org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases":0,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":85,"org.eclipse.jgit.util.TemporaryBufferTest.testOneBlockAndHalf_BulkWrite":13,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":100,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":99,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":68,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":50,"org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob":28,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":82,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":81,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":62,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":56,"org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchBeforeAppendByte":10,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":19,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":97,"org.eclipse.jgit.dircache.DirCacheIteratorTest.testReset":3,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":106,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":96,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":98,"org.eclipse.jgit.transport.RefSpecTest.invalidWhenSourceOnlyAndWildcard":52,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":89,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair":110,"org.eclipse.jgit.util.TemporaryBufferTest.testDestroyWhileOpen":14,"org.eclipse.jgit.transport.PackParserTest.testNonMarkingInputStream":32,"org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testReadWriteV3":16,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testParentDirectoryGitIgnores":53,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":73,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":43,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":22,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":35,"org.eclipse.jgit.transport.PushProcessTest.testUpdateDelete":1,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":64,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":83,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":93,"org.eclipse.jgit.util.TemporaryBufferTest.testRandomWrites":12,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":92,"org.eclipse.jgit.ignore.IgnoreMatcherTest.testNegation":55,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects":41,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":46,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock":25,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":67,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":90,"org.eclipse.jgit.util.TemporaryBufferTest.testInCoreLimit_SwitchOnCopy":6,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead":23,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":87,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":34,"org.eclipse.jgit.util.TemporaryBufferTest.testInCoreInputStream":15,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":94,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":69,"org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead":30,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":17,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects":44,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":63,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":91,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":70,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent":112,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":86,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":77,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":95,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":20,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve":42,"org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes":111,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":78,"org.eclipse.jgit.util.TemporaryBufferTest.testLarge_SingleWrite":9,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":105,"org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize":31,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":103,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":60,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":49,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":4,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":48,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":47,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":75,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":76,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":51,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":38,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":58,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":88,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":102,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":45,"org.eclipse.jgit.transport.PackParserTest.testTinyThinPack":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":80,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":107,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":104,"org.eclipse.jgit.api.RevertCommandTest.testRevert":59,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":74},"transformations":[{"failures":[],"tindex":"e0eb0a5d-4c2c-11e5-aee2-7d69af0a0b14","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:217","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.transport.FetchResult.getAdvertisedRef(java.lang.String)"},"variableMap":{"head":"r","result":"fetchRes","branch":"org.eclipse.jgit.lib.Constants.R_HEADS"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.PullCommand:284","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.lib.Ref = org.eclipse.jgit.transport.FetchResult.getAdvertisedRef(((org.eclipse.jgit.lib.Constants.java.lang.String) + (java.lang.String)))"},"status":-2},{"failures":[],"tindex":"e0eb316e-4c2c-11e5-aee2-3f511d691cd5","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1153","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\".lock\"))\n    return false;\n"},"variableMap":{"refName":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ConfigLine:108","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) && (java.lang.String == null))\n    return true;\n"},"status":0},{"failures":[0,1,2],"tindex":"e0eb316f-4c2c-11e5-aee2-4fe836c9e6f3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteRefUpdate:375","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectId.zeroId().equals(org.eclipse.jgit.lib.ObjectId)"},"status":-1},{"failures":[],"tindex":"e0eb3170-4c2c-11e5-aee2-5bffb6af6df1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.resolver.FileResolver:100","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Repository != null) {\n    org.eclipse.jgit.lib.Repository.incrementOpen();\n    return org.eclipse.jgit.lib.Repository;\n} "},"variableMap":{"db":"db"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:235","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Repository"},"status":-2},{"failures":[3],"tindex":"e0eb3171-4c2c-11e5-aee2-45654949cbdc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:224","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheTree) != null)\n    int -= (org.eclipse.jgit.dircache.DirCacheTree.getEntrySpan()) - 1;\n"},"status":-1},{"failures":[],"tindex":"e0eb3172-4c2c-11e5-aee2-659174ebf33a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:695","type":"CtWhileImpl","sourcecode":"while ((byte[][++int]) != 0) {\n}"},"variableMap":{"raw":"buf","ptr":"org.eclipse.jgit.lib.Constants.OBJ_REF_DELTA"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:384","type":"CtIfImpl","sourcecode":"if (int == (org.eclipse.jgit.lib.Constants.int)) {\n    do {\n        int = (byte[][int++]) & 255;\n    } while ((int & 128) != 0 );\n    if (boolean) {\n        java.util.zip.CRC32.update(byte[], 0, int);\n        java.util.zip.CRC32.update(byte[], 0, int);\n    } \n} else if (int == (org.eclipse.jgit.lib.Constants.int)) {\n    if (boolean) {\n        java.util.zip.CRC32.update(byte[], 0, int);\n        java.util.zip.CRC32.update(byte[], 0, int);\n    } \n    org.eclipse.jgit.internal.storage.file.PackFile.readFully(((org.eclipse.jgit.internal.storage.file.LocalObjectToPack.long) + int), byte[], 0, 20, org.eclipse.jgit.internal.storage.file.WindowCursor);\n    if (boolean) {\n        java.util.zip.CRC32.update(byte[], 0, 20);\n        java.util.zip.CRC32.update(byte[], 0, 20);\n    } \n    int += 20;\n} else if (boolean) {\n    java.util.zip.CRC32.update(byte[], 0, int);\n    java.util.zip.CRC32.update(byte[], 0, int);\n} "},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"e0eb5883-4c2c-11e5-aee2-dd3f170ef2e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:118","type":"CtIfImpl","sourcecode":"if ((java.io.OutputStream) == null) {\n    while (int > 0) {\n        org.eclipse.jgit.util.TemporaryBuffer.Block org.eclipse.jgit.util.TemporaryBuffer.Block = org.eclipse.jgit.util.TemporaryBuffer.last();\n        if (org.eclipse.jgit.util.TemporaryBuffer.Block.isFull()) {\n            if (org.eclipse.jgit.util.TemporaryBuffer.reachedInCoreLimit())\n                break;\n            \n            org.eclipse.jgit.util.TemporaryBuffer.Block = new org.eclipse.jgit.util.TemporaryBuffer.Block();\n            java.util.ArrayList<org.eclipse.jgit.util.TemporaryBuffer.Block>.add(org.eclipse.jgit.util.TemporaryBuffer.Block);\n        } \n        final int int = java.lang.Math.min(((org.eclipse.jgit.util.TemporaryBuffer.Block.byte[].int) - (org.eclipse.jgit.util.TemporaryBuffer.Block.int)), int);\n        java.lang.System.arraycopy(byte[], int, org.eclipse.jgit.util.TemporaryBuffer.Block.byte[], org.eclipse.jgit.util.TemporaryBuffer.Block.int, int);\n        org.eclipse.jgit.util.TemporaryBuffer.Block.int += int;\n        int -= int;\n        int += int;\n    }\n} "},"status":-1},{"failures":[],"tindex":"e0eb5884-4c2c-11e5-aee2-c73626755811","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ResetCommand:374","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setLength(org.eclipse.jgit.dircache.DirCacheEntry.getLength())"},"variableMap":{"entry":"newEntry","indexEntry":"newEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheBuilder:173","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheBuilder.beforeAdd(org.eclipse.jgit.dircache.DirCacheEntry)"},"status":0},{"failures":[52],"tindex":"e0eb5885-4c2c-11e5-aee2-73d40bef2cc1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:638","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n"},"variableMap":{"revstr":"s","name":"spec"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:151","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.RefSpec.org.eclipse.jgit.transport.RefSpec.isWildcard(java.lang.String))\n    throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String));\n"},"status":-1},{"failures":[53,54,55],"tindex":"e0eb5886-4c2c-11e5-aee2-4d4f8a11fbf4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.attributes.Attribute:125","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:183","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"e0eb5887-4c2c-11e5-aee2-b186e71ce5eb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:543","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null)\n    break SEND_HAVES;\n"},"variableMap":{"c":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.DelayRevQueue:87","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.RevCommit == null)\n    break;\n"},"status":-2},{"failures":[],"tindex":"e0eb7f98-4c2c-11e5-aee2-cd6a98edf55c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GitDateParser:282","type":"CtIfImpl","sourcecode":"if (((int < 3) || ((int & 1) == 0)) || (!(\"ago\".equals(java.lang.String[][((java.lang.String[].int) - 1)]))))\n    return null;\n"},"variableMap":{"partsLength":"number","parts":"parts","length":"java.util.Calendar.WEEK_OF_YEAR"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:286","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((java.lang.String[].int) - 2) ; int += 2) {\n    try {\n        int = java.lang.Integer.parseInt(java.lang.String[][int]);\n    } catch (java.lang.NumberFormatException e) {\n        return null;\n    }\n    if ((\"year\".equals(java.lang.String[][(int + 1)])) || (\"years\".equals(java.lang.String[][(int + 1)])))\n        java.util.Calendar.add(java.util.Calendar.int, -int);\n    else if ((\"month\".equals(java.lang.String[][(int + 1)])) || (\"months\".equals(java.lang.String[][(int + 1)])))\n        java.util.Calendar.add(java.util.Calendar.int, -int);\n    else if ((\"week\".equals(java.lang.String[][(int + 1)])) || (\"weeks\".equals(java.lang.String[][(int + 1)])))\n        java.util.Calendar.add(java.util.Calendar.int, -int);\n    else if ((\"day\".equals(java.lang.String[][(int + 1)])) || (\"days\".equals(java.lang.String[][(int + 1)])))\n        java.util.Calendar.add(java.util.Calendar.int, -int);\n    else if ((\"hour\".equals(java.lang.String[][(int + 1)])) || (\"hours\".equals(java.lang.String[][(int + 1)])))\n        java.util.Calendar.add(java.util.Calendar.int, -int);\n    else if ((\"minute\".equals(java.lang.String[][(int + 1)])) || (\"minutes\".equals(java.lang.String[][(int + 1)])))\n        java.util.Calendar.add(java.util.Calendar.int, -int);\n    else if ((\"second\".equals(java.lang.String[][(int + 1)])) || (\"seconds\".equals(java.lang.String[][(int + 1)])))\n        java.util.Calendar.add(java.util.Calendar.int, -int);\n    else\n        return null;\n    \n}"},"status":-2},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"e0eb7f99-4c2c-11e5-aee2-bb0625faebaf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:324","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.checkoutEntry(org.eclipse.jgit.lib.Repository, java.util.Map.Entry<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.getValue(), org.eclipse.jgit.lib.ObjectReader)"},"status":-1},{"failures":[107],"tindex":"e0eb7f9a-4c2c-11e5-aee2-b5375bf3db5b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.CommitBuilder:329","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Commit\")"},"variableMap":{"r":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.errors.MissingBundlePrerequisiteException:64","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String>.getKey().name())"},"status":-1},{"failures":[108,109,110,111,112,113],"tindex":"e0eb7f9b-4c2c-11e5-aee2-810d911ff2dd","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:126","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int)(long))"},"variableMap":{"nameLen":"ent"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:147","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.diff.SimilarityRenameDetector.org.eclipse.jgit.diff.SimilarityRenameDetector.dstFile(long)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}