{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":26,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":34,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":8,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":51,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":57,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":15,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":40,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":22,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":25,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":59,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":5,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":30,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":35,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":49,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2":54,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1":53,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":65,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":13,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":41,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":18,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":58,"org.eclipse.jgit.diff.SimilarityIndexTest.testCommonScore_SameFiles_CR_canonicalization":4,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":6,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":9,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroOnSameCommit":56,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":20,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":48,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":17,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":10,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":14,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":23,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":29,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError":67,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":42,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":7,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":16,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":61,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":33,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":19,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":47,"org.eclipse.jgit.revwalk.RevWalkUtilsCountTest.shouldReturnZeroWhenMergedInto":55,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":44,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":46,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":64,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":63,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":45,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":21,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":24,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":52,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":11,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test003_lookupCompressedObject":0,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":12,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":66,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":36,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":60,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":50,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked":68,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":27,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":32,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":1,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":31,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":37,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":43,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":38,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":39,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":62,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":2,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":3,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":28},"transformations":[{"failures":[0,1,2,3],"tindex":"1718613f-4c26-11e5-9687-bb68ccf30ba2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:234","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, java.lang.String.lastIndexOf('/'))"},"variableMap":{"k":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:205","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(\"pack-\".length())"},"status":-1},{"failures":[],"tindex":"17188850-4c26-11e5-9687-7ffd3e9e6e62","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:269","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"no object header\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"E-mail address of PersonIdent must not be null.\")"},"status":-2},{"failures":[],"tindex":"17188851-4c26-11e5-9687-7f783a13ab89","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:96","type":"CtIfImpl","sourcecode":"if (int < 0)\n    return ;\n"},"variableMap":{"overflow":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:331","type":"CtWhileImpl","sourcecode":"while (((int) <= int) && (int < (org.eclipse.jgit.revwalk.RevObjectList.int))) {\n    org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.next();\n    if (org.eclipse.jgit.revwalk.RevCommit == null) {\n        org.eclipse.jgit.revwalk.RevWalk = null;\n        return ;\n    } \n    org.eclipse.jgit.revwalk.RevCommitList<E>.enter((int)++, ((E)(org.eclipse.jgit.revwalk.RevCommit)));\n    java.lang.Object[][int++] = org.eclipse.jgit.revwalk.RevCommit;\n}"},"status":-2},{"failures":[4],"tindex":"17188852-4c26-11e5-9687-6956484a2943","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.SimilarityIndex:155","type":"CtContinueImpl","sourcecode":"continue"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"17188853-4c26-11e5-9687-87bfddb4fa94","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:807","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheEntry"},"variableMap":{"next":"ourDce","last":"ourDce"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:471","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath())"},"status":-1},{"failures":[],"tindex":"17188854-4c26-11e5-9687-6190ece5126c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:225","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.PackIndex != null)\n    return org.eclipse.jgit.internal.storage.file.PackIndex;\n"},"variableMap":{"idx":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndex:96","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.PackIndex.org.eclipse.jgit.internal.storage.file.PackIndex.read(java.io.FileInputStream)"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"1718af65-4c26-11e5-9687-db793ce237f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:246","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.int |= int"},"status":-1},{"failures":[],"tindex":"1718af66-4c26-11e5-9687-6f0469c8df2c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportGitAnon:184","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.io.BufferedInputStream(java.io.InputStream)"},"variableMap":{"sIn":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:105","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.buffer(java.io.InputStream)"},"status":0},{"failures":[],"tindex":"1718af67-4c26-11e5-9687-1345f15f501c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:458","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectChecker.checkPathSegment(byte[], int, int)"},"variableMap":{"start":"end","this":"this","raw":"raw","ptr":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:612","type":"CtIfImpl","sourcecode":"if (((((int - int) >= 3) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 1)])) == 'u')) && (org.eclipse.jgit.lib.ObjectChecker.(org.eclipse.jgit.lib.ObjectChecker.toLower(byte[][(int + 2)])) == 'x')) && (((int - int) == 3) || ((byte[][(int + 3)]) == '.')))\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"invalid name \\'AUX\\'\");\n"},"status":-2},{"failures":[],"tindex":"1718af68-4c26-11e5-9687-4bff3ba2f8b0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:160","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.eclipse.jgit.revwalk.MergeBaseGenerator.int"},"variableMap":{"org.eclipse.jgit.revwalk.MergeBaseGenerator.MERGE_BASE":"currPtr","carry":"prevPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:177","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.CanonicalTreeParser.int = org.eclipse.jgit.treewalk.CanonicalTreeParser.int"},"status":0},{"failures":[],"tindex":"1718af69-4c26-11e5-9687-45538a0d3709","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:929","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[32]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectLoader:130","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = org.eclipse.jgit.lib.ObjectLoader.getCachedBytes(int)"},"status":-2},{"failures":[66,67,68],"tindex":"1718d67a-4c26-11e5-9687-a721d1f3e1d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:639","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.List<java.lang.String>) {\n    java.io.File java.io.File = org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String);\n    if (!(org.eclipse.jgit.util.FS.exists(java.io.File)))\n        continue;\n    \n    org.eclipse.jgit.internal.storage.file.LockFile org.eclipse.jgit.internal.storage.file.LockFile = new org.eclipse.jgit.internal.storage.file.LockFile(java.io.File , org.eclipse.jgit.internal.storage.file.FileRepository.getFS());\n    if (!(org.eclipse.jgit.internal.storage.file.LockFile.lock()))\n        continue;\n    \n    try {\n        org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef = org.eclipse.jgit.internal.storage.file.RefDirectory.scanRef(null, java.lang.String);\n        if ((org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef == null) || (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.isSymbolic()))\n            continue;\n        \n        org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref>.get(java.lang.String);\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.getObjectId();\n        if ((org.eclipse.jgit.lib.ObjectId != null) && (org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.lib.Ref.getObjectId()))) {\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n            org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>;\n            do {\n                org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.get();\n                int int = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.find(java.lang.String);\n                if (int < 0)\n                    break;\n                \n                org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef> = org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>.remove(int);\n            } while (!(java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>>.compareAndSet(org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>, org.eclipse.jgit.util.RefList<org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef>)) );\n            int int = org.eclipse.jgit.internal.storage.file.RefDirectory.(org.eclipse.jgit.internal.storage.file.RefDirectory.levelsIn(java.lang.String)) - 2;\n            org.eclipse.jgit.internal.storage.file.RefDirectory.org.eclipse.jgit.internal.storage.file.RefDirectory.delete(org.eclipse.jgit.internal.storage.file.RefDirectory.fileFor(java.lang.String), int);\n        } \n    } finally {\n        org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n    }\n}"},"status":-1},{"failures":[],"tindex":"1718d67b-4c26-11e5-9687-53bc8448785c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.StartGenerator:132","type":"CtOperatorAssignmentImpl","sourcecode":"int |= (org.eclipse.jgit.revwalk.Generator.int) | (org.eclipse.jgit.revwalk.Generator.int)"},"variableMap":{"pendingOutputType":"sz","org.eclipse.jgit.revwalk.Generator.NEEDS_REWRITE":"sz","org.eclipse.jgit.revwalk.Generator.HAS_REWRITE":"sz"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:334","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 4"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}