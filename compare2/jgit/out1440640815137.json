{"failureDictionary":{"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":16,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":4,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":64,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":22,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":38,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":5,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":11,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":1,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":26,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":2,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":28,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":20,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":50,"org.eclipse.jgit.patch.GetTextTest.testGetText_Convert":77,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion":8,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":33,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":24,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":54,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":35,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":41,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":55,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion":25,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":43,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":18,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":56,"org.eclipse.jgit.lib.ConfigTest.testBooleanWithNoValue":74,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":19,"org.eclipse.jgit.lib.ConfigTest.test002_ReadWithSubsection":67,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":63,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":47,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":0,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":36,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":46,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":68,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":37,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":60,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":30,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":49,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":14,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":23,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":44,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":51,"org.eclipse.jgit.lib.ConfigTest.testReadLong":65,"org.eclipse.jgit.lib.ConfigTest.test008_readSectionNames":73,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":15,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":10,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed":78,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":69,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":27,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":42,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":45,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":59,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":12,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":3,"org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch":79,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":29,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":7,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":17,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":40,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":6,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":70,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":72,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":9,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":62,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":75,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":31,"org.eclipse.jgit.lib.ConfigTest.test001_ReadBareKey":66,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":61,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":71,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":32,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":53,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":76,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":21,"org.eclipse.jgit.lib.ConfigTest.test006_readCaseInsensitive":52,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":57,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":13,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":34,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":39,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":48,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":58},"transformations":[{"failures":[],"tindex":"5bdd45a5-4c5f-11e5-848e-b3076948d7c1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1218","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.internal.storage.pack.ObjectToPack != null) && (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isEdge())) {\n    org.eclipse.jgit.internal.storage.pack.ObjectToPack.setDoNotDelta();\n    continue;\n} "},"variableMap":{"otp":"target"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:975","type":"CtIfImpl","sourcecode":"if (java.util.Set<org.eclipse.jgit.lib.Ref> != null) {\n    if ((java.util.Set<org.eclipse.jgit.lib.Ref>.size()) == 1) {\n        java.util.Set<org.eclipse.jgit.lib.Ref> = new java.util.HashSet<org.eclipse.jgit.lib.Ref>(java.util.Set<org.eclipse.jgit.lib.Ref>);\n    } \n    java.util.Map<org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.lib.Ref>>.put(org.eclipse.jgit.lib.AnyObjectId, java.util.Set<org.eclipse.jgit.lib.Ref>);\n    java.util.Set<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n} "},"status":-2},{"failures":[],"tindex":"5bdd6cb6-4c5f-11e5-848e-eb81b8ca317b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.Candidate:337","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\" regions:\")"},"variableMap":{"r":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:415","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"->\")"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"5bdd93c7-4c5f-11e5-848e-f3c84ab28d00","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:663","type":"CtInvocationImpl","sourcecode":"java.lang.System.gc()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1052","type":"CtIfImpl","sourcecode":"if ((';' == char) || ('#' == char)) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = java.lang.String.valueOf(char);\n} else if (((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null) && (java.lang.Character.isWhitespace(char))) {\n    if ((org.eclipse.jgit.lib.ConfigLine.java.lang.String) == null)\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String += char;\n} else if ('[' == char) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readSectionName(org.eclipse.jgit.lib.Config.StringReader);\n    int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if ('\\\"' == int) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, true, '\\\"');\n        int = org.eclipse.jgit.lib.Config.StringReader.read();\n    } \n    if (']' != int)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = \"\";\n} else if (org.eclipse.jgit.lib.ConfigLine != null) {\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String;\n    org.eclipse.jgit.lib.Config.StringReader.reset();\n    org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readKeyName(org.eclipse.jgit.lib.Config.StringReader);\n    if (org.eclipse.jgit.lib.ConfigLine.java.lang.String.endsWith(\"\\n\")) {\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.ConfigLine.java.lang.String.substring(0, ((org.eclipse.jgit.lib.ConfigLine.java.lang.String.length()) - 1));\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.java.lang.String;\n    } else\n        org.eclipse.jgit.lib.ConfigLine.java.lang.String = org.eclipse.jgit.lib.Config.org.eclipse.jgit.lib.Config.readValue(org.eclipse.jgit.lib.Config.StringReader, false, -1);\n    \n} else\n    throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"status":-2},{"failures":[],"tindex":"5bdd93c8-4c5f-11e5-848e-616bd31f4b30","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:237","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref)"},"status":-2},{"failures":[],"tindex":"5bdd93c9-4c5f-11e5-848e-29b3a05a183d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:287","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((byte[][int]) == '/'))\n    return int;\n"},"variableMap":{"data":"p","pos":"mid","length":"pLen","hash":"mid"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:779","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    while ((int > 0) && (org.eclipse.jgit.dircache.DirCache.(org.eclipse.jgit.dircache.DirCache.cmp(byte[], int, org.eclipse.jgit.dircache.DirCacheEntry[][(int - 1)])) == 0))\n        int--;\n    return int;\n} else\n    int = int + 1;\n"},"status":-2},{"failures":[77],"tindex":"5bde571a-4c5f-11e5-848e-35e49a433484","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:335","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream[][0].write(byte[], int, (int - int))"},"status":-1},{"failures":[],"tindex":"5bde7e2b-4c5f-11e5-848e-edace1d4cd98","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchProcess:441","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = (org.eclipse.jgit.lib.Ref != null) && ((org.eclipse.jgit.lib.Ref.getObjectId()) != null) ? org.eclipse.jgit.lib.Ref.getObjectId() : org.eclipse.jgit.lib.ObjectId.zeroId()"},"variableMap":{"ref":"advertisedRef"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.PushProcess:188","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref == null ? org.eclipse.jgit.lib.ObjectId.zeroId() : org.eclipse.jgit.lib.Ref.getObjectId()"},"status":0},{"failures":[],"tindex":"5bde7e2c-4c5f-11e5-848e-ed93cb02e84e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:221","type":"CtIfImpl","sourcecode":"if (byte[] == null)\n    continue;\n"},"variableMap":{"b":"subtreeId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:256","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheTree.getObjectId().copyRawTo(byte[], 0)"},"status":-2},{"failures":[],"tindex":"5bde7e2d-4c5f-11e5-848e-b7df9861cabe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleWriter:208","type":"CtIfImpl","sourcecode":"if ((java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.size()) == 0)\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setTagTargets(java.util.Set<org.eclipse.jgit.lib.ObjectId>);\n"},"status":0},{"failures":[],"tindex":"5bdea53e-4c5f-11e5-848e-87e3dc162adc","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.GitDateParser:278","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = java.lang.String.split(\"\\\\.| \")"},"variableMap":{"dateStr":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:259","type":"CtLocalVariableImpl","sourcecode":"java.lang.String[] java.lang.String[] = new java.io.File(java.io.File , java.lang.String).list()"},"status":-2},{"failures":[78,79],"tindex":"5bdea53f-4c5f-11e5-848e-2f1667a6762d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:91","type":"CtReturnImpl","sourcecode":"return \"None\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:1272","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length())"},"status":-1},{"failures":[],"tindex":"5bdea540-4c5f-11e5-848e-a13e566c6535","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:318","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.util.zip.DataFormatException();\n"},"variableMap":{"n":"entrySpan"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:362","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheTree.contains(byte[], int, byte[].int)) {\n    final int int = (int + (org.eclipse.jgit.dircache.DirCacheTree.nameLength())) + 1;\n    org.eclipse.jgit.dircache.DirCacheTree.writeTree(org.eclipse.jgit.dircache.DirCacheEntry[], int, int, org.eclipse.jgit.lib.ObjectInserter);\n    int += org.eclipse.jgit.lib.TreeFormatter.org.eclipse.jgit.lib.TreeFormatter.entrySize(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.dircache.DirCacheTree.nameLength());\n    int += org.eclipse.jgit.dircache.DirCacheTree.int;\n    int++;\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"5bdef361-4c5f-11e5-848e-316ae5499388","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:385","type":"CtIfImpl","sourcecode":"if (!(java.util.BitSet.get(java.lang.Integer.intValue()))) {\n    java.util.TreeSet<java.lang.Integer>.remove(java.lang.Integer);\n    return java.lang.Integer.intValue();\n} "},"status":0},{"failures":[],"tindex":"5bdf1a72-4c5f-11e5-848e-4b903967022d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:381","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    break;\n"},"variableMap":{"r":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:275","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; ++int) {\n    byte byte = byte[][int];\n    if (byte == '%') {\n        if ((int + 2) >= (byte[].int))\n            throw new java.net.URISyntaxException(java.lang.String , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        \n        byte byte = byte[][(int + 1)];\n        byte byte = byte[][(int + 2)];\n        int int;\n        try {\n            int = org.eclipse.jgit.transport.URIish.org.eclipse.jgit.transport.URIish.parseHexByte(byte, byte);\n        } catch (java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new java.net.URISyntaxException(java.lang.String , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        }\n        byte[][int++] = ((byte)(int));\n        int += 2;\n    } else\n        byte[][int++] = byte;\n    \n}"},"status":-2},{"failures":[],"tindex":"5bdf1a73-4c5f-11e5-848e-8fdb739efee4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:695","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.setDeltaBaseAsOffset(true)"},"variableMap":{"pw":"pw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:696","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.PackWriter.setReuseDeltaCommits(false)"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}