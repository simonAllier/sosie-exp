{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":71,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":134,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":158,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":124,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":41,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":170,"org.eclipse.jgit.api.RebaseCommandTest.testOnlyCommentRebaseTodo":172,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":24,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":94,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":34,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":130,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":96,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":25,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":55,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":171,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":85,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":103,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":44,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":76,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":98,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":125,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":27,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":57,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":153,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":88,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":164,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":169,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":151,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":62,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":49,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":51,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":9,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":26,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":43,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":106,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":166,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":148,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":155,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":46,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":60,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":149,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":31,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":108,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":135,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":152,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":99,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":21,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":105,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":147,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":52,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":146,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":64,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":133,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":167,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":110,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":145,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":73,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":66,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":91,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":90,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":123,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":56,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":122,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":54,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":7,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":141,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":77,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":144,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":23,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":127,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":165,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":140,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":32,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":95,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":143,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":29,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":113,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":15,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":36,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":74,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":87,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":160,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":120,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":168,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":163,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":47,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":102,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":162,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":61,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":107,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":111,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":114,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":59,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":28,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":17,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":67,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":101,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":11,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":14,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":118,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":70,"org.eclipse.jgit.revwalk.RevFlagSetTest.testAddTwo":6,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":12,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":13,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":30,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":19,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":132,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":63,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":115,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":136,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":104,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":18,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":45,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":48,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":93,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":112,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":137,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":65,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":58,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":117,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":68,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":75,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":16,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":139,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":33,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":53,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":84,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":100,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":157,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":83,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":138,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":8,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":2,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":86,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":92,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":97,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":161,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":154,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":0,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":121,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":131,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":116,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":69,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":78,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":80,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":40,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":81,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":10,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":50,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":35,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":142,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":109,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":126,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":150,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":39,"org.eclipse.jgit.util.NBTest.testEncodeInt64":1,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":38,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":128,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":82,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":22,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":89,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":159,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":156,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":129,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":4,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":3,"org.eclipse.jgit.revwalk.RevFlagSetTest.testAddOne":5,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":119,"org.eclipse.jgit.api.RevertCommandTest.testRevert":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":79},"transformations":[{"failures":[],"tindex":"456efe98-4c73-11e5-a861-f74bb7fc25b2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityIndex:127","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"456efe99-4c73-11e5-a861-4ba0ef6713a3","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1:129","type":"CtInvocationImpl","sourcecode":"com.googlecode.javaewah.EWAHCompressedBitmap.serialize(java.io.DataOutput)"},"status":-2},{"failures":[0],"tindex":"456efe9a-4c73-11e5-a861-eb9cca6bfd43","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:417","type":"CtInvocationImpl","sourcecode":"java.io.File.setLastModified(java.lang.System.currentTimeMillis())"},"variableMap":{"lck":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:221","type":"CtInvocationImpl","sourcecode":"java.util.List<java.io.File>.add(java.io.File)"},"status":-1},{"failures":[1,2,3,4],"tindex":"456efe9b-4c73-11e5-a861-d139a997c4ca","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaTask:216","type":"CtOperatorAssignmentImpl","sourcecode":"long <<= 10"},"variableMap":{"bytesPerUnit":"v"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.NB:236","type":"CtOperatorAssignmentImpl","sourcecode":"long >>>= 8"},"status":-1},{"failures":[],"tindex":"456f25ac-4c73-11e5-a861-b53943ba1e57","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:700","type":"CtIfImpl","sourcecode":"if (java.lang.String != null)\n    return java.lang.String;\n"},"variableMap":{"name":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:709","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Repository.resolveSimple(java.lang.String)"},"status":-2},{"failures":[],"tindex":"456f25ad-4c73-11e5-a861-231c55c3ea4b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:167","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.io.EOFException();\n"},"variableMap":{"n":"cx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:154","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.drawLine(TColor, int, (int / 2), int, 0, org.eclipse.jgit.revplot.AbstractPlotRenderer.int)"},"status":-2},{"failures":[],"tindex":"456f25ae-4c73-11e5-a861-5f74019d9cc0","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:174","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.transport.HttpAuthMethod.java.lang.String"},"variableMap":{"org.eclipse.jgit.transport.HttpAuthMethod.EMPTY_STRING":"name","param":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:74","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length())"},"status":-2},{"failures":[5,6],"tindex":"456f25af-4c73-11e5-a861-0d2a55a5e1a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevFlagSet:113","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.revwalk.RevFlag>.add(int, org.eclipse.jgit.revwalk.RevFlag)"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"tindex":"456f25b0-4c73-11e5-a861-57728320e1d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:1065","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n    if (!org.eclipse.jgit.merge.ResolveMerger.(processEntry(org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.treewalk.CanonicalTreeParser.org.eclipse.jgit.treewalk.CanonicalTreeParser), org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.treewalk.CanonicalTreeParser.org.eclipse.jgit.treewalk.CanonicalTreeParser), org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.treewalk.CanonicalTreeParser.org.eclipse.jgit.treewalk.CanonicalTreeParser), org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.dircache.DirCacheBuildIterator.org.eclipse.jgit.dircache.DirCacheBuildIterator), (boolean ? org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.merge.ResolveMerger.int, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator) : null), boolean))) {\n        org.eclipse.jgit.merge.ResolveMerger.cleanUp();\n        return false;\n    } \n    if ((org.eclipse.jgit.treewalk.TreeWalk.isSubtree()) && (boolean))\n        org.eclipse.jgit.treewalk.TreeWalk.enterSubtree();\n    \n}"},"status":-1},{"failures":[],"tindex":"456f25b1-4c73-11e5-a861-59b8bf95cf68","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1238","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = java.io.File.createTempFile((\"._\" + (java.io.File.getName())), null, java.io.File)"},"variableMap":{"parentDir":"f","f":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:470","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = java.io.File.getParentFile()"},"status":-2},{"failures":[],"tindex":"456f4cc2-4c73-11e5-a861-a98bc783797f","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1077","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[172],"tindex":"456f4cc3-4c73-11e5-a861-b7612d4b3fa0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:99","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"456f4cc4-4c73-11e5-a861-115b3aabda3c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:840","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"This is a combination of (.*) commits\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:314","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.util.List<java.lang.String>.get(int)"},"status":-2},{"failures":[],"tindex":"456f4cc5-4c73-11e5-a861-e5a863db595d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:291","type":"CtIfImpl","sourcecode":"if (int == 0)\n    break TRY_LOCATIONS;\n"},"variableMap":{"np":"org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.IS_OFFSET_64"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexWriterV2:91","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.transport.PackedObjectInfo org.eclipse.jgit.transport.PackedObjectInfo : java.util.List<? extends org.eclipse.jgit.transport.PackedObjectInfo>) {\n    final long long = org.eclipse.jgit.transport.PackedObjectInfo.getOffset();\n    if (long <= (org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.int))\n        org.eclipse.jgit.util.NB.encodeInt32(byte[], 0, ((int)(long)));\n    else\n        org.eclipse.jgit.util.NB.encodeInt32(byte[], 0, ((org.eclipse.jgit.internal.storage.file.PackIndexWriterV2.int) | (int++)));\n    \n    java.security.DigestOutputStream.write(byte[], 0, 4);\n}"},"status":-2},{"failures":[],"tindex":"456f4cc6-4c73-11e5-a861-a9f143de891e","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Config:650","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.ConfigSnapshot org.eclipse.jgit.lib.ConfigSnapshot"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:653","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.ConfigSnapshot org.eclipse.jgit.lib.ConfigSnapshot = org.eclipse.jgit.lib.Config.getBaseState()"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}