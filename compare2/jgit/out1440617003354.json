{"failureDictionary":{"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":4,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":17,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":14,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":13,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":20,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":26,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFlat":3,"org.eclipse.jgit.util.RefMapTest.testPut_NoPrefix":6,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":23,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":10,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":24,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":2,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":22,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":19,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":12,"org.eclipse.jgit.util.RefMapTest.testEntryTypeSet":9,"org.eclipse.jgit.transport.OpenSshConfigTest.testAlias_ConnectionAttempts":5,"org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38":1,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":11,"org.eclipse.jgit.util.RefMapTest.testPut_WithPrefix":8,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":16,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":25,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":21,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":15,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":0,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":18,"org.eclipse.jgit.util.RefMapTest.testPut_CollapseResolved":7},"transformations":[{"failures":[0,1,2,3,4],"tindex":"eaef8793-4c27-11e5-b4cd-1d4d62f4f5a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteParser:199","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.notes.NonNoteEntry) != null)\n    org.eclipse.jgit.notes.NonNoteEntry.org.eclipse.jgit.notes.NonNoteEntry = org.eclipse.jgit.notes.NonNoteEntry;\n"},"status":-1},{"failures":[],"tindex":"eaefaea4-4c27-11e5-b4cd-1f4369fee722","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Tree:553","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.TreeEntry org.eclipse.jgit.lib.TreeEntry"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:475","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.lib.TreeEntry org.eclipse.jgit.lib.TreeEntry = org.eclipse.jgit.lib.TreeEntry[][int]"},"status":-2},{"failures":[5],"tindex":"eaefaea5-4c27-11e5-b4cd-e3cdc0454ab4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.OpenSshConfig:251","type":"CtTryImpl","sourcecode":"try {\n    final int int = java.lang.Integer.parseInt(org.eclipse.jgit.transport.OpenSshConfig.org.eclipse.jgit.transport.OpenSshConfig.dequote(java.lang.String));\n    if (int > 0) {\n        for (final org.eclipse.jgit.transport.OpenSshConfig.Host org.eclipse.jgit.transport.OpenSshConfig.Host : java.util.List<org.eclipse.jgit.transport.OpenSshConfig.Host>)\n            if ((org.eclipse.jgit.transport.OpenSshConfig.Host.int) == 0)\n                org.eclipse.jgit.transport.OpenSshConfig.Host.int = int;\n            \n    } \n} catch (java.lang.NumberFormatException nfe) {\n}"},"status":-1},{"failures":[6,7,8,9],"tindex":"eaefaea6-4c27-11e5-b4cd-7fa8433bc555","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportHttp:470","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = (\"application/x-\" + java.lang.String) + \"-advertisement\""},"variableMap":{"service":"keyName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:166","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.util.RefMap.toRefName(java.lang.String)"},"status":-1},{"failures":[],"tindex":"eaefd5b7-4c27-11e5-b4cd-b1ef91881686","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:752","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.HunkHeader:242","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.eclipse.jgit.patch.FileHeader.byte[]"},"status":-2},{"failures":[10],"tindex":"eaefd5b8-4c27-11e5-b4cd-a12c46543f04","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:681","type":"CtInvocationImpl","sourcecode":"java.util.HashSet<java.lang.String>.add(org.eclipse.jgit.dircache.DirCache.getEntry(int).getPathString())"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21],"tindex":"eaefd5b9-4c27-11e5-b4cd-5937e6eb9e3a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.URIish:352","type":"CtIfImpl","sourcecode":"if (((((java.lang.String.length()) >= 3) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(2)) == ':')) && ((((java.lang.String.charAt(1)) >= 'A') && ((java.lang.String.charAt(1)) <= 'Z')) || (((java.lang.String.charAt(1)) >= 'a') && ((java.lang.String.charAt(1)) <= 'z'))))\n    return java.lang.String.substring(1);\nelse if ((((java.lang.String != null) && ((java.lang.String.length()) >= 2)) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(1)) == '~'))\n    return java.lang.String.substring(1);\nelse\n    return java.lang.String;\n"},"variableMap":{"p":"ourCommitName","s":"ourCommitName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:328","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null)\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"eaefd5ba-4c27-11e5-b4cd-fd20d7aa5915","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:140","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n    org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n    if (org.eclipse.jgit.dircache.DirCacheEntry != null) {\n        if (org.eclipse.jgit.dircache.DirCacheEntry.isAssumeValid())\n            return false;\n        \n        if ((org.eclipse.jgit.dircache.DirCacheEntry.getStage()) != 0)\n            return true;\n        \n    } \n} "},"variableMap":{"di":"dcIt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1072","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry(), true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())) {\n    return true;\n} "},"status":0},{"failures":[22,23,24,25,26],"tindex":"eaeffccb-4c27-11e5-b4cd-8717e45a6be6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:517","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) {\n    org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode = org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode;\n    org.eclipse.jgit.submodule.SubmoduleWalk org.eclipse.jgit.submodule.SubmoduleWalk = org.eclipse.jgit.submodule.SubmoduleWalk.forIndex(org.eclipse.jgit.lib.Repository);\n    while (org.eclipse.jgit.submodule.SubmoduleWalk.next()) {\n        try {\n            if (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode == null)\n                org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode = org.eclipse.jgit.submodule.SubmoduleWalk.getModulesIgnore();\n            \n            if (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.equals(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode))\n                continue;\n            \n        } catch (org.eclipse.jgit.errors.ConfigInvalidException e) {\n            java.io.IOException java.io.IOException = new java.io.IOException((\"Found invalid ignore param for submodule \" + (org.eclipse.jgit.submodule.SubmoduleWalk.getPath())));\n            java.io.IOException.initCause(org.eclipse.jgit.errors.ConfigInvalidException);\n            throw java.io.IOException;\n        }\n        org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.submodule.SubmoduleWalk.getRepository();\n        if (org.eclipse.jgit.lib.Repository != null) {\n            try {\n                org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(\"HEAD\");\n                if ((org.eclipse.jgit.lib.ObjectId != null) && (!(org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId()))))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                else if ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) {\n                    org.eclipse.jgit.lib.IndexDiff org.eclipse.jgit.lib.IndexDiff = java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.get(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                    if (org.eclipse.jgit.lib.IndexDiff == null) {\n                        org.eclipse.jgit.lib.IndexDiff = new org.eclipse.jgit.lib.IndexDiff(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId() , org.eclipse.jgit.lib.IndexDiff.WorkingTreeIteratorFactory.getWorkingTreeIterator(org.eclipse.jgit.lib.Repository));\n                        java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.put(org.eclipse.jgit.submodule.SubmoduleWalk.getPath(), org.eclipse.jgit.lib.IndexDiff);\n                    } \n                    if (org.eclipse.jgit.lib.IndexDiff.diff()) {\n                        if ((((((((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) == (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && (org.eclipse.jgit.lib.IndexDiff.getAdded().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getChanged().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getConflicting().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getMissing().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getModified().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getRemoved().isEmpty())) {\n                            continue;\n                        } \n                        java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                    } \n                } \n            } finally {\n                org.eclipse.jgit.lib.Repository.close();\n            }\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"eaf023dc-4c27-11e5-b4cd-1b6856ef4f80","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:238","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.RefUpdate.setNewObjectId(org.eclipse.jgit.revwalk.RevCommit.getId())"},"status":-2},{"failures":[],"tindex":"eaf023dd-4c27-11e5-b4cd-c927f1073afb","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:201","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.diff.HistogramDiffIndex.int"},"variableMap":{"org.eclipse.jgit.diff.HistogramDiffIndex.MAX_CNT":"resultStart","newCnt":"resultStart"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.Region:103","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":0},{"failures":[],"tindex":"eaf023de-4c27-11e5-b4cd-55c0af5d9158","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:167","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    throw new java.io.EOFException();\n"},"variableMap":{"n":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IO:356","type":"CtIfImpl","sourcecode":"if ((int + 1) < (java.lang.String.length())) {\n    char = java.lang.String.charAt(++int);\n    java.util.List<java.lang.String>.add(java.lang.StringBuilder.toString());\n    java.lang.StringBuilder.setLength(0);\n    if (char != '\\n')\n        java.lang.StringBuilder.append(char);\n    \n    continue;\n} else {\n    java.util.List<java.lang.String>.add(java.lang.StringBuilder.toString());\n    break;\n}"},"status":-2},{"failures":[],"tindex":"eaf023df-4c27-11e5-b4cd-854d3dbea080","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.Status:192","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:113","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<java.lang.String> java.util.Set<java.lang.String> = org.eclipse.jgit.api.CleanCommand.filterFolders(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>)"},"status":-2},{"failures":[],"tindex":"eaf023e0-4c27-11e5-b4cd-97525f204916","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:899","type":"CtLocalVariableImpl","sourcecode":"final int int = 4096"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameResult:338","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.blame.BlameGenerator.getSourceStart()"},"status":-2},{"failures":[],"tindex":"eaf023e1-4c27-11e5-b4cd-fffd1f45f9df","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.diff.RenameDetector:179","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > 100))\n    throw new java.lang.IllegalArgumentException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"variableMap":{"score":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH","similarityScoreMustBeWithinBounds":"pruneLoosePackedObjects"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:252","type":"CtIfImpl","sourcecode":"if ((java.lang.String[] != null) && ((java.lang.String[].int) > 0)) {\n    org.eclipse.jgit.lib.ProgressMonitor.beginTask(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.String[].int);\n    try {\n        for (java.lang.String java.lang.String : java.lang.String[]) {\n            org.eclipse.jgit.lib.ProgressMonitor.update(1);\n            if ((java.lang.String.length()) != 2)\n                continue;\n            \n            java.lang.String[] java.lang.String[] = new java.io.File(java.io.File , java.lang.String).list();\n            if (java.lang.String[] == null)\n                continue;\n            \n            for (java.lang.String java.lang.String : java.lang.String[]) {\n                if ((java.lang.String.length()) != ((org.eclipse.jgit.lib.Constants.int) - 2))\n                    continue;\n                \n                org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId;\n                try {\n                    org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString((java.lang.String + java.lang.String));\n                } catch (java.lang.IllegalArgumentException notAnObject) {\n                    continue;\n                }\n                boolean boolean = false;\n                for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)\n                    if (org.eclipse.jgit.internal.storage.file.PackFile.hasObject(org.eclipse.jgit.lib.ObjectId)) {\n                        boolean = true;\n                        break;\n                    } \n                if (boolean)\n                    org.eclipse.jgit.util.FileUtils.delete(org.eclipse.jgit.internal.storage.file.ObjectDirectory.fileFor(org.eclipse.jgit.lib.ObjectId), (((org.eclipse.jgit.util.FileUtils.int) | (org.eclipse.jgit.util.FileUtils.int)) | (org.eclipse.jgit.util.FileUtils.int)));\n                \n            }\n        }\n    } finally {\n        org.eclipse.jgit.lib.ProgressMonitor.endTask();\n    }\n} "},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}