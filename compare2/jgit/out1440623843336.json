{"failureDictionary":{"org.eclipse.jgit.internal.storage.pack.IntSetTest.testAdd":0,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":2,"org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_DeltaNotAllowed":1,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":9,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":12,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":8,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":15,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":5,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":14,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":11,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":13,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":6,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":7,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":10,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":3,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":4},"transformations":[{"failures":[0],"tindex":"d7e9bc95-4c37-11e5-9c73-13b302a606dc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.IntSet:70","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"d7e9e3a6-4c37-11e5-9c73-37d0b715b76c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:248","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.addTree(org.eclipse.jgit.treewalk.NameConflictTreeWalk, org.eclipse.jgit.lib.ObjectId)"},"status":-2},{"failures":[1],"tindex":"d7e9e3a7-4c37-11e5-9c73-9932e85a702b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:166","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-1},{"failures":[],"tindex":"d7e9e3a8-4c37-11e5-9c73-711cf50649d4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.Transport:134","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"META-INF/services/\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:125","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.eclipse.jgit.transport.BundleFetchConnection.readLine(new byte[1024])"},"status":-2},{"failures":[],"tindex":"d7e9e3a9-4c37-11e5-9c73-bbe7bb9dbc42","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.blame.BlameResult:335","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.PersonIdent org.eclipse.jgit.lib.PersonIdent = org.eclipse.jgit.blame.BlameGenerator.getSourceAuthor()"},"variableMap":{"gen":"gen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameResult:336","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.lib.PersonIdent org.eclipse.jgit.lib.PersonIdent = org.eclipse.jgit.blame.BlameGenerator.getSourceCommitter()"},"status":0},{"failures":[],"tindex":"d7eaf51a-4c37-11e5-9c73-1756256c22f6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter:109","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(\"^\"))) && (!(java.lang.String.startsWith(\".*\"))))\n    java.lang.String = \".*\" + java.lang.String;\n"},"variableMap":{"pattern":"org.eclipse.jgit.transport.RemoteConfig.SECTION"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:231","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Config.setStringList(org.eclipse.jgit.transport.RemoteConfig.java.lang.String, org.eclipse.jgit.transport.RemoteConfig.getName(), org.eclipse.jgit.transport.RemoteConfig.java.lang.String, java.util.List<java.lang.String>)"},"status":-2},{"failures":[2,3,4,5,6],"tindex":"d7eb1c2b-4c37-11e5-9c73-03e44bc08e2d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BaseReceivePack:717","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.String>) == null)\n    throw new org.eclipse.jgit.transport.RequestNotYetReadException();\n"},"variableMap":{"enabledCapabilities":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:517","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) {\n    org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode = org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode;\n    org.eclipse.jgit.submodule.SubmoduleWalk org.eclipse.jgit.submodule.SubmoduleWalk = org.eclipse.jgit.submodule.SubmoduleWalk.forIndex(org.eclipse.jgit.lib.Repository);\n    while (org.eclipse.jgit.submodule.SubmoduleWalk.next()) {\n        try {\n            if (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode == null)\n                org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode = org.eclipse.jgit.submodule.SubmoduleWalk.getModulesIgnore();\n            \n            if (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.equals(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode))\n                continue;\n            \n        } catch (org.eclipse.jgit.errors.ConfigInvalidException e) {\n            java.io.IOException java.io.IOException = new java.io.IOException((\"Found invalid ignore param for submodule \" + (org.eclipse.jgit.submodule.SubmoduleWalk.getPath())));\n            java.io.IOException.initCause(org.eclipse.jgit.errors.ConfigInvalidException);\n            throw java.io.IOException;\n        }\n        org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.submodule.SubmoduleWalk.getRepository();\n        if (org.eclipse.jgit.lib.Repository != null) {\n            try {\n                org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(\"HEAD\");\n                if ((org.eclipse.jgit.lib.ObjectId != null) && (!(org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId()))))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                else if ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) {\n                    org.eclipse.jgit.lib.IndexDiff org.eclipse.jgit.lib.IndexDiff = java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.get(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                    if (org.eclipse.jgit.lib.IndexDiff == null) {\n                        org.eclipse.jgit.lib.IndexDiff = new org.eclipse.jgit.lib.IndexDiff(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId() , org.eclipse.jgit.lib.IndexDiff.WorkingTreeIteratorFactory.getWorkingTreeIterator(org.eclipse.jgit.lib.Repository));\n                        java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.put(org.eclipse.jgit.submodule.SubmoduleWalk.getPath(), org.eclipse.jgit.lib.IndexDiff);\n                    } \n                    if (org.eclipse.jgit.lib.IndexDiff.diff()) {\n                        if ((((((((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) == (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && (org.eclipse.jgit.lib.IndexDiff.getAdded().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getChanged().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getConflicting().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getMissing().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getModified().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getRemoved().isEmpty())) {\n                            continue;\n                        } \n                        java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                    } \n                } \n            } finally {\n                org.eclipse.jgit.lib.Repository.close();\n            }\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"d7eb1c2c-4c37-11e5-9c73-cb0cdadbd6e1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:682","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = new byte[1]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:709","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = null"},"status":-2},{"failures":[],"tindex":"d7eb1c2d-4c37-11e5-9c73-5b249ca91c84","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:465","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:372","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(byte[] , int)"},"status":-2},{"failures":[],"tindex":"d7eb1c2e-4c37-11e5-9c73-b5b25e32dcb1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.TreeFormatter:351","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"*** ERROR: \")"},"variableMap":{"r":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:300","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('\\\\').append(']')"},"status":0},{"failures":[7,8],"tindex":"d7eb1c2f-4c37-11e5-9c73-1749e47e4d7a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CreateBranchCommand:167","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"branch: Reset start-point to branch \" + java.lang.String"},"variableMap":{"refLogMessage":"message","startPointFullName":"message"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddNoteCommand:129","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = java.lang.String"},"status":-1},{"failures":[],"tindex":"d7eb1c30-4c37-11e5-9c73-21c7d3cf68f9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PacketLineIn:189","type":"CtIfImpl","sourcecode":"if ((int != 0) && (int < 4))\n    throw new java.lang.ArrayIndexOutOfBoundsException();\n"},"variableMap":{"len":"oldSize"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.LongMap:125","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.eclipse.jgit.transport.LongMap.Node<V> org.eclipse.jgit.transport.LongMap.Node<V> = org.eclipse.jgit.transport.LongMap.Node<V>[][int];\n    while (org.eclipse.jgit.transport.LongMap.Node<V> != null) {\n        final org.eclipse.jgit.transport.LongMap.Node<V> org.eclipse.jgit.transport.LongMap.Node<V> = org.eclipse.jgit.transport.LongMap.Node<V>.org.eclipse.jgit.transport.LongMap.Node<V>;\n        org.eclipse.jgit.transport.LongMap<V>.insert(org.eclipse.jgit.transport.LongMap.Node<V>);\n        org.eclipse.jgit.transport.LongMap.Node<V> = org.eclipse.jgit.transport.LongMap.Node<V>;\n    }\n}"},"status":0},{"failures":[],"tindex":"d7eb1c31-4c37-11e5-9c73-2b76934d5bbe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:591","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.FooterLine.matches(org.eclipse.jgit.revwalk.FooterKey))\n    java.util.ArrayList<java.lang.String>.add(org.eclipse.jgit.revwalk.FooterLine.getValue());\n"},"status":-2},{"failures":[9,10,11,12,13,14,15],"tindex":"d7eb1c32-4c37-11e5-9c73-09fd1dc98f5e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.DateRevQueue:170","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"last":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackOutputStream:214","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"status":-1},{"failures":[],"tindex":"d7eb4343-4c37-11e5-9c73-4d51958673fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:289","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.PlotCommit.addForkingOffLane(org.eclipse.jgit.revplot.PlotLane)"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}