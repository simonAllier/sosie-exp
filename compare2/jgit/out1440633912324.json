{"failureDictionary":{"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors2":21,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_IgnoreWhitespace":15,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors1":20,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":7,"org.eclipse.jgit.revwalk.FooterLineTest.testFilterFootersIgnoreCase":16,"org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueNoLF":18,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserWithLF":9,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile":0,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_DeleteFile":3,"org.eclipse.jgit.revwalk.FooterLineTest.testMatchesBugId":13,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":6,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_ManyUsers":19,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_SkipNonFooter":17,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcDeleteFile":1,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":5,"org.eclipse.jgit.revwalk.FooterLineTest.testNonDelimtedEmail":14,"org.eclipse.jgit.revwalk.FooterLineTest.testNotEmail":10,"org.eclipse.jgit.patch.FileHeaderTest.testParseUnicodeName_NewFile":2,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":4,"org.eclipse.jgit.revwalk.FooterLineTest.testEmptyValueWithLF":11,"org.eclipse.jgit.revwalk.FooterLineTest.testSignedOffBy_OneUserNoLF":12,"org.eclipse.jgit.api.RevertCommandTest.testRevert":8},"transformations":[{"failures":[0,1,2,3],"tindex":"4978d13f-4c4f-11e5-81bb-93b97b4a5929","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:243","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"PBEWithMD5AndDES\""},"variableMap":{"cAlg":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:535","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.diff.DiffEntry.java.lang.String"},"status":-1},{"failures":[],"tindex":"4978f850-4c4f-11e5-81bb-dd3973124d4e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:304","type":"CtIfImpl","sourcecode":"if (boolean)\n    org.eclipse.jgit.dircache.DirCache.unlock();\n"},"status":-2},{"failures":[],"tindex":"4978f851-4c4f-11e5-81bb-89ad35829884","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.FileMode:185","type":"CtWhileImpl","sourcecode":"while (int != 0) {\n    byte[][--int] = ((byte)('0' + (int & 7)));\n    int >>= 3;\n}"},"variableMap":{"mode":"org.eclipse.jgit.dircache.DirCacheEntry.P_MODE","p":"org.eclipse.jgit.dircache.DirCacheEntry.P_MODE","tmp":"info"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:504","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.NB.encodeInt32(byte[], ((int) + (org.eclipse.jgit.dircache.DirCacheEntry.int)), org.eclipse.jgit.lib.FileMode.getBits())"},"status":-2},{"failures":[],"tindex":"49791f62-4c4f-11e5-81bb-03e9c987b009","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:107","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter.this(int, int, true)"},"variableMap":{"this":"indexDiffFilter","dirCacheIndex":"org.eclipse.jgit.lib.IndexDiff.WORKDIR","workingTreeIndex":"org.eclipse.jgit.lib.IndexDiff.WORKDIR"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:428","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter = new org.eclipse.jgit.treewalk.filter.IndexDiffFilter(org.eclipse.jgit.lib.IndexDiff.int , org.eclipse.jgit.lib.IndexDiff.int)"},"status":-2},{"failures":[4,5],"tindex":"49791f63-4c4f-11e5-81bb-35fc756becb3","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:835","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle[] = new org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle[0]"},"variableMap":{"alt":"alt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:830","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle[] = java.util.concurrent.atomic.AtomicReference<org.eclipse.jgit.internal.storage.file.ObjectDirectory.AlternateHandle[]>.get()"},"status":-1},{"failures":[],"tindex":"49791f64-4c4f-11e5-81bb-9b5488c5612e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1292","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.SystemReader.getInstance().checkPath(java.lang.String)"},"variableMap":{"path":"badEntryName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1152","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if (int < 0)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    if ('=' == int)\n        break;\n    \n    if ((' ' == int) || ('\\t' == int)) {\n        for ( ;  ; ) {\n            int = org.eclipse.jgit.lib.Config.StringReader.read();\n            if (int < 0)\n                throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            \n            if ('=' == int)\n                break;\n            \n            if (((';' == int) || ('#' == int)) || ('\\n' == int)) {\n                org.eclipse.jgit.lib.Config.StringReader.reset();\n                break;\n            } \n            if ((' ' == int) || ('\\t' == int))\n                continue;\n            \n            throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        }\n        break;\n    } \n    if ((java.lang.Character.isLetterOrDigit(((char)(int)))) || (int == '-')) {\n        java.lang.StringBuilder.append(((char)(int)));\n    } else if ('\\n' == int) {\n        org.eclipse.jgit.lib.Config.StringReader.reset();\n        java.lang.StringBuilder.append(((char)(int)));\n        break;\n    } else\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.StringBuilder));\n    \n}"},"status":-2},{"failures":[6,7,8],"tindex":"49791f65-4c4f-11e5-81bb-353a0c359fa5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.RevertCommand:184","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.checkout()"},"status":-1},{"failures":[],"tindex":"49791f66-4c4f-11e5-81bb-db10320d105b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PackParser:746","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.transport.PackParser.UnresolvedDelta == null)\n    return org.eclipse.jgit.transport.PackParser.UnresolvedDelta;\n"},"variableMap":{"a":"delta","b":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:252","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.transport.PackParser.UnresolvedDelta"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19],"tindex":"49791f67-4c4f-11e5-81bb-6f27a93cf55e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:102","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.RawParseUtils.byte[]['-'] = 1"},"status":-1},{"failures":[],"tindex":"49794678-4c4f-11e5-81bb-01d256264267","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.fnmatch.FileNameMatcher:410","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.FastIgnoreRule:206","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"49794679-4c4f-11e5-81bb-4f0073f978a0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:395","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode())"},"variableMap":{"newEntry":"entry","e":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:978","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.treewalk.AbstractTreeIterator != null) && (!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode())))) {\n    org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryPathString() , org.eclipse.jgit.dircache.DirCacheEntry.int);\n    org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode());\n    org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId());\n    org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry);\n} "},"status":-2},{"failures":[],"tindex":"4979467a-4c4f-11e5-81bb-7d7678101492","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:560","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.attributes.AttributesNode:123","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableList(java.util.List<org.eclipse.jgit.attributes.AttributesRule>)"},"status":0},{"failures":[20,21],"tindex":"4979949b-4c4f-11e5-81bb-1dd4e06aa520","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.StartGenerator:182","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.FixUninterestingGenerator(org.eclipse.jgit.revwalk.Generator)"},"variableMap":{"g":"g"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:181","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.Generator = new org.eclipse.jgit.revwalk.DelayRevQueue(org.eclipse.jgit.revwalk.Generator)"},"status":-1},{"failures":[],"tindex":"4979949c-4c4f-11e5-81bb-fb9ae7ad92a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:146","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.WalkResult) {\n    if (!(org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.contains(org.eclipse.jgit.revwalk.RevCommit)))\n        continue;\n    \n    int++;\n    int--;\n    org.eclipse.jgit.lib.ProgressMonitor.update(1);\n    if (org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.WalkResult.java.util.Set<? extends org.eclipse.jgit.lib.ObjectId>.remove(org.eclipse.jgit.revwalk.RevCommit)) {\n        if (int > 0)\n            int = 0;\n        \n    } else if ((!boolean) && ((int > 0) || (((org.eclipse.jgit.revwalk.RevCommit.getParentCount()) <= 1) && (int > (-(int)))))) {\n        continue;\n    } \n    int int = int;\n    int = org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.nextSelectionDistance(int, int);\n    int = int == (int) ? org.eclipse.jgit.internal.storage.file.PackBitmapIndex.int : 0;\n    boolean = int == 0;\n    org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder = org.eclipse.jgit.internal.storage.file.BitmapIndexImpl.newBitmapBuilder();\n    org.eclipse.jgit.revwalk.RevWalk.reset();\n    org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommit);\n    for (org.eclipse.jgit.lib.AnyObjectId org.eclipse.jgit.lib.AnyObjectId : org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.WalkResult.java.lang.Iterable<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>)\n        org.eclipse.jgit.revwalk.RevWalk.markUninteresting(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.AnyObjectId));\n    org.eclipse.jgit.revwalk.RevWalk.setRevFilter(org.eclipse.jgit.internal.storage.pack.PackWriterBitmapWalker.newRevFilter(null, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder));\n    while ((org.eclipse.jgit.revwalk.RevWalk.next()) != null) {\n    }\n    java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>> java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>> = new java.util.ArrayList<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>();\n    for (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> : java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>) {\n        org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit = java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.get(((java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()) - 1));\n        if (org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder.contains(org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit))\n            java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.add(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>);\n        \n    }\n    java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>;\n    if (java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.isEmpty()) {\n        java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = new java.util.ArrayList<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>();\n        java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.add(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>);\n    } else {\n        java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>.get(0);\n        for (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> : java.util.List<java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>>) {\n            if ((java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()) > (java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.size()))\n                java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit> = java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>;\n            \n        }\n    }\n    java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.add(new org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit(org.eclipse.jgit.revwalk.RevCommit , !(java.util.List<org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer.BitmapCommit>.isEmpty()) , int));\n    org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.addBitmap(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.lib.BitmapIndex.BitmapBuilder, 0);\n}"},"status":0},{"failures":[],"tindex":"4979949d-4c4f-11e5-81bb-a9505c1d76a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommit:106","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revplot.PlotLane[] = new org.eclipse.jgit.revplot.PlotLane[]{ org.eclipse.jgit.revplot.PlotLane }"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}