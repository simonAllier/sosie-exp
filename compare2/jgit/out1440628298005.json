{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":69,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":40,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":138,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":33,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":75,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":103,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":107,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":43,"org.eclipse.jgit.util.FileUtilTest.testDeleteRecursiveEmpty":7,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":140,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":130,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":104,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":123,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":47,"org.eclipse.jgit.util.FileUtilTest.testDeleteEmptyTreeOk":2,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":25,"org.eclipse.jgit.util.FileUtilTest.testDeleteNotEmptyTreeNotOk":3,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":134,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":44,"org.eclipse.jgit.util.FileUtilTest.testRenameOverNonExistingFile":6,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":34,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict":150,"org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits":132,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":89,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":131,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":1,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":125,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":98,"org.eclipse.jgit.util.FileUtilTest.testDeleteRecursive":10,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":76,"org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge":147,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":60,"org.eclipse.jgit.util.FileUtilTest.testRenameOverExistingNonEmptyDirectory":4,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":30,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":126,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":24,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":114,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":77,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":100,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict":151,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":85,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":27,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":59,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":86,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":41,"org.eclipse.jgit.util.FileUtilTest.testDeleteRecursiveEmptyDirectoriesOnlyButIsFile":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":88,"org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict":148,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":45,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":111,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":17,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":127,"org.eclipse.jgit.util.FileUtilTest.testRenameOverExistingEmptyDirectory":11,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":62,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":101,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":51,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":71,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":64,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":22,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":21,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":32,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":56,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":129,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":16,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":70,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":84,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":135,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":99,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":113,"org.eclipse.jgit.util.FileUtilTest.testMkdirs":8,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":15,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":106,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":83,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":116,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":52,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":72,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":94,"org.eclipse.jgit.notes.LeafBucketTest.testSetFive_ReverseOrder":142,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":102,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":97,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":28,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":96,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":133,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":49,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":58,"org.eclipse.jgit.notes.LeafBucketTest.testSetFive_MixedOrder":143,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":115,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":42,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":65,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":55,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":68,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":141,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":39,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":53,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":61,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":78,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":48,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":26,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":29,"org.eclipse.jgit.util.FileUtilTest.testDeleteRecursiveEmptyNeedsToCheckFilesFirst":12,"org.eclipse.jgit.api.GitConstructionTest.testClose":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":79,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":63,"org.eclipse.jgit.util.FileUtilTest.testRenameOverExistingFile":9,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":54,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":57,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":66,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":73,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":81,"org.eclipse.jgit.notes.NoteMapTest.testLeafSplitsWhenFull":146,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":128,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":46,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":92,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":80,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":122,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":23,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":152,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":137,"org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithConflict":149,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":124,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":95,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":117,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":90,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":14,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":67,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":119,"org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38":145,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":74,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":120,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":31,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":105,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":82,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":108,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":35,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":87,"org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch":139,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":0,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":110,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":37,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":121,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":20,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":112,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":93,"org.eclipse.jgit.notes.NoteMapTest.testEditFlat":144,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":91,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":38,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":136,"org.eclipse.jgit.api.RevertCommandTest.testRevert":109,"org.eclipse.jgit.util.FileUtilTest.testDeleteNotEmptyTreeNotOkButIgnoreFail":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":118},"transformations":[{"failures":[],"tindex":"3712cea1-4c42-11e5-a32f-0f2403023279","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase:358","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache org.eclipse.jgit.internal.storage.dfs.DfsBlockCache = org.eclipse.jgit.internal.storage.dfs.DfsBlockCache.getInstance()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:111","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache org.eclipse.jgit.internal.storage.dfs.DfsBlockCache = new org.eclipse.jgit.internal.storage.dfs.DfsBlockCache(org.eclipse.jgit.internal.storage.dfs.DfsBlockCacheConfig)"},"status":-2},{"failures":[],"tindex":"37131cc2-4c42-11e5-a32f-3de5007d5887","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:1157","type":"CtIfImpl","sourcecode":"if ('=' == int)\n    break;\n"},"variableMap":{"c":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:354","type":"CtForImpl","sourcecode":"for ( ;  ; int++) {\n    byte = byte[][int++];\n    if (byte == 0)\n        break;\n    \n    try {\n        byte[][int] = byte;\n    } catch (java.lang.ArrayIndexOutOfBoundsException e) {\n        org.eclipse.jgit.treewalk.AbstractTreeIterator.growPath(int);\n        byte[][int] = byte;\n    }\n}"},"status":-2},{"failures":[],"tindex":"37131cc3-4c42-11e5-a32f-071c18c7a8bd","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1020","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCache.read(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:144","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.dircache.DirCache(null , null)"},"status":-2},{"failures":[0,1,2,2,3,3,4,5,6,7,8,8,9,10,10,11,11,12,13,13,14,15,16,17,18,19,20,21,22],"tindex":"37131cc4-4c42-11e5-a32f-75c8caaa5369","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:793","type":"CtInvocationImpl","sourcecode":"java.io.File.mkdirs()"},"variableMap":{"parentFolder":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:142","type":"CtInvocationImpl","sourcecode":"java.util.List<java.io.File>.add(java.io.File)"},"status":-1},{"failures":[],"tindex":"371343d5-4c42-11e5-a32f-bf5d694f01e9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.SideBandInputStream:140","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.SideBandInputStream.needDataPacket()"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,14,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,15,16,82,83,84,17,18,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,20,21,22,126,127,128,129],"tindex":"371343d6-4c42-11e5-a32f-119d9a8ac653","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:1020","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    org.eclipse.jgit.merge.ResolveMerger.checkout();\n    if (!(org.eclipse.jgit.dircache.DirCacheBuilder.commit())) {\n        org.eclipse.jgit.merge.ResolveMerger.cleanUp();\n        throw new org.eclipse.jgit.errors.IndexWriteException();\n    } \n    org.eclipse.jgit.dircache.DirCacheBuilder = null;\n} else {\n    org.eclipse.jgit.dircache.DirCacheBuilder.finish();\n    org.eclipse.jgit.dircache.DirCacheBuilder = null;\n}"},"status":-1},{"failures":[86,130,56,131,57,58,59,132,133,60,61,62,63,64,65,66,67,68,69,70,71,72,73,134,135,136,137,138,139,140,141],"tindex":"37136ae7-4c42-11e5-a32f-f385aa1ab96a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:599","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"upstream\")) {\n    if (java.lang.String == null)\n        java.lang.String = new java.lang.String(char[] , int , int);\n    \n    if (java.lang.String.equals(\"\"))\n        java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n    \n    if (!(org.eclipse.jgit.lib.Repository.isValidRefName((\"x/\" + java.lang.String))))\n        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n    \n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n    java.lang.String = null;\n    if (org.eclipse.jgit.lib.Ref == null)\n        return null;\n    \n    if (org.eclipse.jgit.lib.Ref.isSymbolic())\n        org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getLeaf();\n    \n    java.lang.String = org.eclipse.jgit.lib.Ref.getName();\n    org.eclipse.jgit.transport.RemoteConfig org.eclipse.jgit.transport.RemoteConfig;\n    try {\n        org.eclipse.jgit.transport.RemoteConfig = new org.eclipse.jgit.transport.RemoteConfig(org.eclipse.jgit.lib.Repository.getConfig() , \"origin\");\n    } catch (java.net.URISyntaxException e) {\n        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n    }\n    java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.getConfig().getString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()), org.eclipse.jgit.lib.ConfigConstants.java.lang.String);\n    java.util.List<org.eclipse.jgit.transport.RefSpec> java.util.List<org.eclipse.jgit.transport.RefSpec> = org.eclipse.jgit.transport.RemoteConfig.getFetchRefSpecs();\n    for (org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec : java.util.List<org.eclipse.jgit.transport.RefSpec>) {\n        if (org.eclipse.jgit.transport.RefSpec.matchSource(java.lang.String)) {\n            org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = org.eclipse.jgit.transport.RefSpec.expandFromSource(java.lang.String);\n            java.lang.String = org.eclipse.jgit.transport.RefSpec.getDestination();\n            break;\n        } \n    }\n    if (java.lang.String == null)\n        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n    \n} else if (java.lang.String.matches(\"^-\\\\d+$\")) {\n    if (java.lang.String != null)\n        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n    else {\n        java.lang.String java.lang.String = org.eclipse.jgit.lib.Repository.resolveReflogCheckout(-(java.lang.Integer.parseInt(java.lang.String)));\n        if (org.eclipse.jgit.lib.ObjectId.isId(java.lang.String))\n            org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.parseSimple(org.eclipse.jgit.revwalk.RevWalk, java.lang.String);\n        else\n            java.lang.String = java.lang.String;\n        \n    }\n} else {\n    if (java.lang.String == null)\n        java.lang.String = new java.lang.String(char[] , int , int);\n    \n    if (java.lang.String.equals(\"\"))\n        java.lang.String = org.eclipse.jgit.lib.Constants.java.lang.String;\n    \n    if (!(org.eclipse.jgit.lib.Repository.isValidRefName((\"x/\" + java.lang.String))))\n        throw new org.eclipse.jgit.errors.RevisionSyntaxException(java.lang.String);\n    \n    org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.getRef(java.lang.String);\n    java.lang.String = null;\n    if (org.eclipse.jgit.lib.Ref == null)\n        return null;\n    \n    if (org.eclipse.jgit.lib.Ref.isSymbolic())\n        org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Ref.getLeaf();\n    \n    org.eclipse.jgit.revwalk.RevObject = org.eclipse.jgit.lib.Repository.resolveReflog(org.eclipse.jgit.revwalk.RevWalk, org.eclipse.jgit.lib.Ref, java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"371391f8-4c42-11e5-a32f-b57dbafa1367","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.io.AutoCRLFOutputStream:160","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.io.AutoCRLFOutputStream.flush()"},"variableMap":{"this":"channel"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1243","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.lib.ObjectLoader.copyTo(java.io.OutputStream);\n} finally {\n    java.io.OutputStream.close();\n}"},"status":0},{"failures":[],"tindex":"371391f9-4c42-11e5-a32f-475f1265ab54","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:280","type":"CtIfImpl","sourcecode":"if ((int > 0) || (int != 0)) {\n    org.eclipse.jgit.merge.MergeResult<S>.add(1, (int + int), (int - int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    org.eclipse.jgit.merge.MergeResult<S>.add(2, (int + int), (int - int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n} "},"variableMap":{"result":"result","oursBeginB":"current","org.eclipse.jgit.merge.MergeChunk.ConflictState.FIRST_CONFLICTING_RANGE":"org.eclipse.jgit.merge.MergeChunk.ConflictState.NO_CONFLICT","commonPrefix":"current","theirsBeginB":"current","oursEndB":"current","theirsEndB":"current","commonSuffix":"current","minBSize":"current","BSizeDelta":"current","org.eclipse.jgit.merge.MergeChunk.ConflictState.NEXT_CONFLICTING_RANGE":"org.eclipse.jgit.merge.MergeChunk.ConflictState.NO_CONFLICT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:178","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.diff.Edit.getBeginA()) != int) && ((org.eclipse.jgit.diff.Edit.getBeginA()) != int)) {\n    org.eclipse.jgit.merge.MergeResult<S>.add(0, int, java.lang.Math.min(org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.diff.Edit.getBeginA()), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n} "},"status":-2},{"failures":[],"tindex":"3713b90a-4c42-11e5-a32f-79a4642e3822","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.FetchHeadRecord:72","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"tag\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else if (java.lang.String.startsWith(org.eclipse.jgit.lib.Constants.java.lang.String)) {\n    java.lang.String = \"remote branch\";\n    java.lang.String = java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length());\n} else {\n    java.lang.String = \"\";\n    java.lang.String = java.lang.String;\n}"},"variableMap":{"org.eclipse.jgit.lib.Constants.R_REMOTES":"org.eclipse.jgit.internal.storage.file.GC.PRUNE_EXPIRE_DEFAULT","name":"pruneExpireStr","sourceName":"org.eclipse.jgit.internal.storage.file.GC.PRUNE_EXPIRE_DEFAULT","org.eclipse.jgit.lib.Constants.R_TAGS":"pruneExpireStr","type":"org.eclipse.jgit.internal.storage.file.GC.PRUNE_EXPIRE_DEFAULT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:312","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    java.lang.String = org.eclipse.jgit.internal.storage.file.GC.java.lang.String;\n"},"status":-2},{"failures":[],"tindex":"3713b90b-4c42-11e5-a32f-5f3ac3bb5d25","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase:349","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList == org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList)\n    return org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList;\n"},"variableMap":{"n":"o","o":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase:346","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.dfs.DfsObjDatabase.PackList"},"status":0},{"failures":[142,143,144,145,146,147,148,149,150,151,152],"tindex":"3713b90c-4c42-11e5-a32f-7f100a94ae73","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RawText:271","type":"CtIfImpl","sourcecode":"if (int > (org.eclipse.jgit.diff.RawText.int))\n    int = org.eclipse.jgit.diff.RawText.int;\n"},"variableMap":{"length":"p","org.eclipse.jgit.diff.RawText.FIRST_FEW_BYTES":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:167","type":"CtIfImpl","sourcecode":"if (int < (int))\n    java.lang.System.arraycopy(org.eclipse.jgit.notes.Note[], int, org.eclipse.jgit.notes.Note[], (int + 1), ((int) - int));\n"},"status":-1},{"failures":[],"tindex":"3713e01d-4c42-11e5-a32f-37356c94726d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:357","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf('/', (int + 1))"},"variableMap":{"p1":"pnum","s":"parentnum"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:467","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.String)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":13,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}