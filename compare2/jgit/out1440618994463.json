{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":21,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":1,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":6,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":33,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":37,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":38,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":36,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":44,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":3,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":43,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":29,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":40,"org.eclipse.jgit.attributes.AttributesMatcherTest.testFileNameWildcards":9,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":45,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":19,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":2,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":5,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":16,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":20,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":27,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":46,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":17,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":51,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":14,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":50,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":49,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":18,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":28,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":0,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":55,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":53,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":13,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":25,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":26,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":32,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":31,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":34,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":15,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":41,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":7,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":52,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":12,"org.eclipse.jgit.attributes.AttributesMatcherTest.testNameOnlyMatches":11,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":22,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":47,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":8,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":30,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":42,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":54,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":4,"org.eclipse.jgit.attributes.AttributesMatcherTest.testTargetWithoutLeadingSlash":10,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":23,"org.eclipse.jgit.api.RevertCommandTest.testRevert":35,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":24},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"8dba594d-4c2c-11e5-911e-9f6bcc294eb4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:350","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheBuildIterator.getDirCacheEntry())"},"variableMap":{"this":"this","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:365","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.remove(org.eclipse.jgit.dircache.DirCacheBuildIterator.getEntryPathString())"},"status":-1},{"failures":[],"tindex":"8dba594e-4c2c-11e5-911e-9992b9b992fb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CloneCommand:191","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = new org.eclipse.jgit.transport.RefSpec()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefSpec:224","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.transport.RefSpec org.eclipse.jgit.transport.RefSpec = new org.eclipse.jgit.transport.RefSpec(this)"},"status":-2},{"failures":[],"tindex":"8dba805f-4c2c-11e5-911e-dbcb3c449369","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.DiffFormatter:930","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.diff.EditList org.eclipse.jgit.diff.EditList"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:139","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.diff.EditList org.eclipse.jgit.diff.EditList = org.eclipse.jgit.diff.DiffAlgorithm.diff(org.eclipse.jgit.diff.SequenceComparator<S>, S, S)"},"status":-2},{"failures":[],"tindex":"8dba8060-4c2c-11e5-911e-35cba6a7e765","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GSSManagerFactory:64","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.util.GSSManagerFactory.SunGSSManagerFactory.isSupported()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ListNotesCommand:95","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.notes.Note>.add(java.util.Iterator<org.eclipse.jgit.notes.Note>.next())"},"status":-2},{"failures":[],"tindex":"8dba8061-4c2c-11e5-911e-2755b1a82c80","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1509","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isWritten())\n    return ;\n"},"variableMap":{"otp":"newId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.FetchProcess:423","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.transport.TrackingRefUpdate.getOldObjectId()))\n    return ;\n"},"status":-2},{"failures":[9,10,11],"tindex":"8dba8062-4c2c-11e5-911e-67a04e661f27","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:313","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"8dba8063-4c2c-11e5-911e-0daf4a02d045","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.PersonIdent:274","type":"CtAssignmentImpl","sourcecode":"char = '-'"},"status":-2},{"failures":[],"tindex":"8dba8064-4c2c-11e5-911e-2f4f118eac82","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevWalk:280","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.parseHeaders(this)"},"variableMap":{"c":"headCommitTree"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:247","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheCheckout.addTree(org.eclipse.jgit.treewalk.NameConflictTreeWalk, org.eclipse.jgit.lib.ObjectId)"},"status":-2},{"failures":[],"tindex":"8dbaa775-4c2c-11e5-911e-29091e569a1c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedFileHeader:205","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.eclipse.jgit.lib.FileMode[].int) ; int++)\n    org.eclipse.jgit.lib.FileMode[][int] = org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode;"},"status":-2},{"failures":[],"tindex":"8dbaa776-4c2c-11e5-911e-9727669dec90","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:196","type":"CtLocalVariableImpl","sourcecode":"final int int = (int) - ((int) + int)"},"variableMap":{"nContext":"length","newLineCount":"length","nAdded":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:589","type":"CtLocalVariableImpl","sourcecode":"final int int = byte[].int"},"status":-2},{"failures":[],"tindex":"8dbaa777-4c2c-11e5-911e-31af7ca6de71","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:186","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.internal.storage.dfs.DfsRepository)"},"variableMap":{"repository":"repo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.ListNotesCommand:83","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk org.eclipse.jgit.revwalk.RevWalk = new org.eclipse.jgit.revwalk.RevWalk(org.eclipse.jgit.lib.Repository)"},"status":-2},{"failures":[],"tindex":"8dbaa778-4c2c-11e5-911e-43e15c5e22c7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.WorkingTreeIterator:770","type":"CtIfImpl","sourcecode":"if ((int) == 0)\n    int = int;\n"},"variableMap":{"pathLen":"current","pathOffset":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:149","type":"CtWhileImpl","sourcecode":"while ((org.eclipse.jgit.diff.Edit != (org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.diff.Edit)) || (org.eclipse.jgit.diff.Edit != (org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.diff.Edit))) {\n    if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        if (int != (org.eclipse.jgit.diff.Edit.getBeginA())) {\n            org.eclipse.jgit.merge.MergeResult<S>.add(0, int, org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        } \n        org.eclipse.jgit.merge.MergeResult<S>.add(1, org.eclipse.jgit.diff.Edit.getBeginB(), org.eclipse.jgit.diff.Edit.getEndB(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        int = org.eclipse.jgit.diff.Edit.getEndA();\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n    } else if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        if (int != (org.eclipse.jgit.diff.Edit.getBeginA())) {\n            org.eclipse.jgit.merge.MergeResult<S>.add(0, int, org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        } \n        org.eclipse.jgit.merge.MergeResult<S>.add(2, org.eclipse.jgit.diff.Edit.getBeginB(), org.eclipse.jgit.diff.Edit.getEndB(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        int = org.eclipse.jgit.diff.Edit.getEndA();\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n    } else {\n        if (((org.eclipse.jgit.diff.Edit.getBeginA()) != int) && ((org.eclipse.jgit.diff.Edit.getBeginA()) != int)) {\n            org.eclipse.jgit.merge.MergeResult<S>.add(0, int, java.lang.Math.min(org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.diff.Edit.getBeginA()), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        } \n        int int = org.eclipse.jgit.diff.Edit.getBeginB();\n        int int = org.eclipse.jgit.diff.Edit.getBeginB();\n        if ((org.eclipse.jgit.diff.Edit.getBeginA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n            int -= (org.eclipse.jgit.diff.Edit.getBeginA()) - (org.eclipse.jgit.diff.Edit.getBeginA());\n        } else {\n            int -= (org.eclipse.jgit.diff.Edit.getBeginA()) - (org.eclipse.jgit.diff.Edit.getBeginA());\n        }\n        org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n        org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n        for ( ;  ; ) {\n            if ((org.eclipse.jgit.diff.Edit.getEndA()) >= (org.eclipse.jgit.diff.Edit.getBeginA())) {\n                org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n                org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n            } else if ((org.eclipse.jgit.diff.Edit.getEndA()) >= (org.eclipse.jgit.diff.Edit.getBeginA())) {\n                org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n                org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n            } else {\n                break;\n            }\n        }\n        int int = org.eclipse.jgit.diff.Edit.getEndB();\n        int int = org.eclipse.jgit.diff.Edit.getEndB();\n        if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getEndA())) {\n            int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n        } else {\n            int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n        }\n        int int = int - int;\n        int int = int - (int - int);\n        if (int > 0)\n            int -= int;\n        \n        int int = 0;\n        while ((int < int) && (org.eclipse.jgit.diff.SequenceComparator<S>.equals(S, (int + int), S, (int + int))))\n            int++;\n        int -= int;\n        int int = 0;\n        while ((int < int) && (org.eclipse.jgit.diff.SequenceComparator<S>.equals(S, ((int - int) - 1), S, ((int - int) - 1))))\n            int++;\n        int -= int;\n        if (int > 0)\n            org.eclipse.jgit.merge.MergeResult<S>.add(1, int, (int + int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        \n        if ((int > 0) || (int != 0)) {\n            org.eclipse.jgit.merge.MergeResult<S>.add(1, (int + int), (int - int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n            org.eclipse.jgit.merge.MergeResult<S>.add(2, (int + int), (int - int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        } \n        if (int > 0)\n            org.eclipse.jgit.merge.MergeResult<S>.add(1, (int - int), int, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        \n        int = java.lang.Math.max(org.eclipse.jgit.diff.Edit.getEndA(), org.eclipse.jgit.diff.Edit.getEndA());\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n        org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n    }\n}"},"status":0},{"failures":[],"tindex":"8dbace89-4c2c-11e5-911e-af586ca2b9c4","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:183","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit[] org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit[]"},"variableMap":{"pList":"parents"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:185","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.revwalk.RevCommit[] org.eclipse.jgit.revwalk.RevCommit[] = org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[]"},"status":-2},{"failures":[],"tindex":"8dbace8a-4c2c-11e5-911e-27f552aff65c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:416","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(25)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefAdvertiser:268","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n    if (!(java.util.Set<java.lang.String>.isEmpty())) {\n        java.lang.StringBuilder.append('\u0000');\n        for (final java.lang.String java.lang.String : java.util.Set<java.lang.String>) {\n            java.lang.StringBuilder.append(' ');\n            java.lang.StringBuilder.append(java.lang.String);\n        }\n        java.lang.StringBuilder.append(' ');\n    } \n} "},"status":-2},{"failures":[12,13,14,15,16,1,17,2,3,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,8,49,50,51,52,53,54,55,56],"tindex":"8dbace8b-4c2c-11e5-911e-d12fa8e7475b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:547","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.dircache.DirCacheEntry)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}