{"failureDictionary":{"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack":4,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase3":3,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase2":2,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase1":1,"org.eclipse.jgit.fnmatch.FileNameMatcherTest.testDigitGroupCase0":0},"transformations":[{"failures":[],"tindex":"a8f6cd54-4c41-11e5-929c-d9b185941037","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1509","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.pack.ObjectToPack.isWritten())\n    return ;\n"},"variableMap":{"otp":"iId"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:841","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n    if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n        if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n            return ;\n        else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    } else\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    \n} else\n    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n"},"status":-2},{"failures":[0,1,2,3],"tindex":"a8fc99b5-4c41-11e5-929c-b353dd843433","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.fnmatch.GroupHead:91","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.fnmatch.GroupHead.CharacterPattern>.add(org.eclipse.jgit.fnmatch.GroupHead.DigitPattern.org.eclipse.jgit.fnmatch.GroupHead.DigitPattern)"},"status":-1},{"failures":[],"tindex":"a902b436-4c41-11e5-929c-0f565777da38","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.filter.RevFilter:142","type":"CtReturnImpl","sourcecode":"return \"NONE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.errors.CheckoutConflictException:83","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"a903ecb7-4c41-11e5-929c-cb026f7bea09","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.FileUtils:379","type":"CtLocalVariableImpl","sourcecode":"final int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:256","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.diff.HistogramDiffIndex<S>.org.eclipse.jgit.diff.HistogramDiffIndex.recCnt(long)"},"status":-2},{"failures":[],"tindex":"a90413c8-4c41-11e5-929c-1fb572221df1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RepositoryCache:177","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.incrementOpen()"},"variableMap":{"db":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:221","type":"CtTryImpl","sourcecode":"try {\n    final org.eclipse.jgit.revwalk.RevFlag org.eclipse.jgit.revwalk.RevFlag = org.eclipse.jgit.revwalk.RevWalk.newFlag(\"PREREQ\");\n    final org.eclipse.jgit.revwalk.RevFlag org.eclipse.jgit.revwalk.RevFlag = org.eclipse.jgit.revwalk.RevWalk.newFlag(\"SEEN\");\n    final java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String> = new java.util.HashMap<org.eclipse.jgit.lib.ObjectId, java.lang.String>();\n    final java.util.List<org.eclipse.jgit.revwalk.RevObject> java.util.List<org.eclipse.jgit.revwalk.RevObject> = new java.util.ArrayList<org.eclipse.jgit.revwalk.RevObject>();\n    for (final java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String> java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String> : java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.entrySet()) {\n        org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String>.getKey();\n        try {\n            final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n            if (!(org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag))) {\n                org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag);\n                java.util.List<org.eclipse.jgit.revwalk.RevObject>.add(org.eclipse.jgit.revwalk.RevCommit);\n            } \n        } catch (org.eclipse.jgit.errors.MissingObjectException notFound) {\n            java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.lib.ObjectId, java.util.Map.Entry<org.eclipse.jgit.lib.ObjectId, java.lang.String>.getValue());\n        } catch (java.io.IOException err) {\n            throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.lib.ObjectId.name()) , java.io.IOException);\n        }\n    }\n    if (!(java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.isEmpty()))\n        throw new org.eclipse.jgit.errors.MissingBundlePrerequisiteException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>);\n    \n    java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>;\n    try {\n        java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.transport.Transport.org.eclipse.jgit.lib.Repository.getRefDatabase().getRefs(org.eclipse.jgit.lib.RefDatabase.java.lang.String);\n    } catch (java.io.IOException e) {\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , java.io.IOException.getMessage() , java.io.IOException);\n    }\n    for (final org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>.values()) {\n        try {\n            org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.Ref.getObjectId()));\n        } catch (java.io.IOException readError) {\n        }\n    }\n    int int = java.util.List<org.eclipse.jgit.revwalk.RevObject>.size();\n    try {\n        org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit;\n        while ((org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.next()) != null) {\n            if (org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag)) {\n                org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag);\n                if ((--int) == 0)\n                    break;\n                \n            } \n        }\n    } catch (java.io.IOException err) {\n        throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n    }\n    if (int > 0) {\n        for (final org.eclipse.jgit.revwalk.RevObject org.eclipse.jgit.revwalk.RevObject : java.util.List<org.eclipse.jgit.revwalk.RevObject>) {\n            if (!(org.eclipse.jgit.revwalk.RevObject.has(org.eclipse.jgit.revwalk.RevFlag)))\n                java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.put(org.eclipse.jgit.revwalk.RevObject, java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>.get(org.eclipse.jgit.revwalk.RevObject));\n            \n        }\n        throw new org.eclipse.jgit.errors.MissingBundlePrerequisiteException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , java.util.Map<org.eclipse.jgit.lib.ObjectId, java.lang.String>);\n    } \n} finally {\n    org.eclipse.jgit.revwalk.RevWalk.release();\n}"},"status":-2},{"failures":[],"tindex":"a9043ad9-4c41-11e5-929c-89807cce504e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:347","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryFileMode())"},"status":0},{"failures":[],"tindex":"a9043ada-4c41-11e5-929c-8bf5918be094","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:237","type":"CtUnaryOperatorImpl","sourcecode":"~(org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)"},"variableMap":{"org.eclipse.jgit.internal.storage.pack.ObjectToPack.REUSE_AS_IS":"rewriteFlag"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:164","type":"CtOperatorAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevCommit.int |= int"},"status":-2},{"failures":[],"tindex":"a90461eb-4c41-11e5-929c-a989df2f1a1c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ApplyCommand:254","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileSnapshot:196","type":"CtReturnImpl","sourcecode":"return (long) == (org.eclipse.jgit.internal.storage.file.FileSnapshot.long)"},"status":-2},{"failures":[4],"tindex":"a90461ec-4c41-11e5-929c-bf5a2c669227","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:500","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.ObjectIdRef"},"variableMap":{"leaf":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:695","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.ObjectIdRef.PeeledTag(org.eclipse.jgit.lib.Ref.Storage.org.eclipse.jgit.lib.Ref.Storage , org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref.getObjectId() , org.eclipse.jgit.lib.Ref.getPeeledObjectId())"},"status":-1},{"failures":[],"tindex":"a90461ed-4c41-11e5-929c-b5b06c1df008","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:95","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.open(new java.io.ByteArrayInputStream(byte[]), null, org.eclipse.jgit.lib.AnyObjectId, org.eclipse.jgit.internal.storage.file.WindowCursor);\n} finally {\n    org.eclipse.jgit.internal.storage.file.WindowCursor.release();\n}"},"variableMap":{"this":"this","raw":"hdr","id":"id","wc":"wc"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:176","type":"CtIfImpl","sourcecode":"if ((long < (org.eclipse.jgit.internal.storage.file.WindowCursor.getStreamFileThreshold())) || (java.io.File == null)) {\n    java.io.InputStream.reset();\n    org.eclipse.jgit.util.IO.skipFully(java.io.InputStream, int);\n    java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.internal.storage.file.WindowCursor.inflater();\n    java.io.InputStream java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, java.util.zip.Inflater);\n    byte[] byte[] = new byte[((int)(long))];\n    org.eclipse.jgit.util.IO.readFully(java.io.InputStream, byte[], 0, byte[].int);\n    org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.checkValidEndOfStream(java.io.InputStream, java.util.zip.Inflater, org.eclipse.jgit.lib.AnyObjectId, byte[]);\n    return new org.eclipse.jgit.lib.ObjectLoader.SmallObject(int , byte[]);\n} "},"status":-2},{"failures":[],"tindex":"a90488fe-4c41-11e5-929c-616870ae8eb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.ReceivePack:179","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.BaseReceivePack.sendAdvertisedRefs(new org.eclipse.jgit.transport.RefAdvertiser.PacketLineOutRefAdvertiser(org.eclipse.jgit.transport.PacketLineOut))"},"status":-2},{"failures":[],"tindex":"a90488ff-4c41-11e5-929c-71e8657de71a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:433","type":"CtIfImpl","sourcecode":"if (java.lang.String == null)\n    if (int == 0)\n        java.lang.String = new java.lang.String(char[] , int , int);\n    else {\n        int = int + 1;\n        break;\n    }\n"},"variableMap":{"revChars":"buf","name":"in","i":"length","done":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.StringUtils:294","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (char[].int) ; ++int) {\n    char char = java.lang.String.charAt(int);\n    if (char == '\\r') {\n        if (((int + 1) < (char[].int)) && ((java.lang.String.charAt((int + 1))) == '\\n')) {\n            char[][int++] = ' ';\n            ++int;\n        } else\n            char[][int++] = ' ';\n        \n    } else if (char == '\\n')\n        char[][int++] = ' ';\n    else\n        char[][int++] = char;\n    \n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":12,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}