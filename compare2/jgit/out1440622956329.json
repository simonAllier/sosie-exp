{"failureDictionary":{"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":89,"org.eclipse.jgit.api.BlameCommandTest.testRename":36,"org.eclipse.jgit.dircache.DirCacheBuilderIteratorTest.testPathFilterGroup_DoesNotSkipTail":10,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":90,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":88,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":24,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":67,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":40,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":68,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":69,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":41,"org.eclipse.jgit.dircache.DirCacheFindTest.testEntriesWithin":0,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":84,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":6,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":82,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":83,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":45,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":56,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":55,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":57,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":14,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":100,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":34,"org.eclipse.jgit.api.CleanCommandTest.testClean":13,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":20,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":21,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":101,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":104,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":25,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":99,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":98,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":15,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":22,"org.eclipse.jgit.util.RefMapTest.testPut_KeyMustMatchName_WithPrefix":2,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":9,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":12,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":27,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":87,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":7,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":5,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":75,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":85,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":86,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":73,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":74,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":52,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":3,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":42,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":53,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":23,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":54,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":18,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":19,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":93,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":96,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":97,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":28,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":35,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":11,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":32,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":30,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":46,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename":107,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":33,"org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename":106,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":4,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":77,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":16,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":78,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":29,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":76,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":102,"org.eclipse.jgit.util.RefMapTest.testPut_KeyMustMatchName_NoPrefix":1,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":50,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":72,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":26,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":49,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":51,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":71,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":70,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":62,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":61,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":63,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":94,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":65,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":64,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":66,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":91,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":103,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":44,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":43,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":79,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":37,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":80,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":105,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":38,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":81,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":95,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":47,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":58,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":48,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":59,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":60,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":8,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":92,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":17},"transformations":[{"failures":[],"tindex":"c749852e-4c35-11e5-951a-f742040a6047","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:528","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0],"tindex":"c74b59ef-4c35-11e5-951a-0943b6f3ecdf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RefMap:352","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"cmp":"eIdx"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:886","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(org.eclipse.jgit.dircache.DirCacheEntry[], int, org.eclipse.jgit.dircache.DirCacheEntry[], 0, org.eclipse.jgit.dircache.DirCacheEntry[].int)"},"status":-1},{"failures":[],"tindex":"c74bf630-4c35-11e5-951a-878b61e3995c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:196","type":"CtIfImpl","sourcecode":"if (0 <= int)\n    int = int;\nelse\n    break;\n"},"variableMap":{"s":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH","cr":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleWriter:198","type":"CtTryImpl","sourcecode":"try {\n    final java.util.HashSet<org.eclipse.jgit.lib.ObjectId> java.util.HashSet<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    final java.util.HashSet<org.eclipse.jgit.lib.ObjectId> java.util.HashSet<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.addAll(java.util.Map<java.lang.String, org.eclipse.jgit.lib.ObjectId>.values());\n    for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : java.util.Set<org.eclipse.jgit.revwalk.RevCommit>)\n        java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.revwalk.RevCommit.getId());\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setIndexDisabled(true);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setDeltaBaseAsOffset(true);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setThin(((java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.size()) > 0));\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setReuseValidatingObjects(false);\n    if ((java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.size()) == 0)\n        org.eclipse.jgit.internal.storage.pack.PackWriter.setTagTargets(java.util.Set<org.eclipse.jgit.lib.ObjectId>);\n    \n    org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>);\n    final java.io.Writer java.io.Writer = new java.io.OutputStreamWriter(java.io.OutputStream , org.eclipse.jgit.lib.Constants.java.nio.charset.Charset);\n    java.io.Writer.write(org.eclipse.jgit.transport.TransportBundle.java.lang.String);\n    java.io.Writer.write('\\n');\n    final char[] char[] = new char[org.eclipse.jgit.lib.Constants.int];\n    for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : java.util.Set<org.eclipse.jgit.revwalk.RevCommit>) {\n        java.io.Writer.write('-');\n        org.eclipse.jgit.revwalk.RevCommit.copyTo(char[], java.io.Writer);\n        if ((org.eclipse.jgit.revwalk.RevCommit.getRawBuffer()) != null) {\n            java.io.Writer.write(' ');\n            java.io.Writer.write(org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n        } \n        java.io.Writer.write('\\n');\n    }\n    for (final java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId> java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId> : java.util.Map<java.lang.String, org.eclipse.jgit.lib.ObjectId>.entrySet()) {\n        java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId>.getValue().copyTo(char[], java.io.Writer);\n        java.io.Writer.write(' ');\n        java.io.Writer.write(java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId>.getKey());\n        java.io.Writer.write('\\n');\n    }\n    java.io.Writer.write('\\n');\n    java.io.Writer.flush();\n    org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream);\n} finally {\n    org.eclipse.jgit.internal.storage.pack.PackWriter.release();\n}"},"status":-2},{"failures":[],"tindex":"c74c1d41-4c35-11e5-951a-557de1accd5e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BaseSearch:180","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.pack.ObjectToPack.setEdge()"},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:387","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.pack.DeltaIndex = new org.eclipse.jgit.internal.storage.pack.DeltaIndex(org.eclipse.jgit.internal.storage.pack.DeltaWindow.buffer(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry));\n} catch (java.lang.OutOfMemoryError noMemory) {\n    org.eclipse.jgit.errors.LargeObjectException.OutOfMemory org.eclipse.jgit.errors.LargeObjectException.OutOfMemory;\n    org.eclipse.jgit.errors.LargeObjectException.OutOfMemory = new org.eclipse.jgit.errors.LargeObjectException.OutOfMemory(java.lang.OutOfMemoryError);\n    org.eclipse.jgit.errors.LargeObjectException.OutOfMemory.setObjectId(org.eclipse.jgit.internal.storage.pack.DeltaWindowEntry.org.eclipse.jgit.internal.storage.pack.ObjectToPack);\n    throw org.eclipse.jgit.errors.LargeObjectException.OutOfMemory;\n}"},"status":-2},{"failures":[],"tindex":"c74c1d42-4c35-11e5-951a-19f17740ead9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.TransportAmazonS3:233","type":"CtWhileImpl","sourcecode":"while (java.lang.String.startsWith(org.eclipse.jgit.transport.WalkRemoteObjectDatabase.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(0, java.lang.String.lastIndexOf('/'));\n    java.lang.String = java.lang.String.substring(3);\n}"},"variableMap":{"subpath":"unexpectedEndOfConfigFile","k":"badEntryName","org.eclipse.jgit.transport.WalkRemoteObjectDatabase.ROOT_DIR":"badEntryName"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1152","type":"CtForImpl","sourcecode":"for ( ;  ; ) {\n    int int = org.eclipse.jgit.lib.Config.StringReader.read();\n    if (int < 0)\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    if ('=' == int)\n        break;\n    \n    if ((' ' == int) || ('\\t' == int)) {\n        for ( ;  ; ) {\n            int = org.eclipse.jgit.lib.Config.StringReader.read();\n            if (int < 0)\n                throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n            \n            if ('=' == int)\n                break;\n            \n            if (((';' == int) || ('#' == int)) || ('\\n' == int)) {\n                org.eclipse.jgit.lib.Config.StringReader.reset();\n                break;\n            } \n            if ((' ' == int) || ('\\t' == int))\n                continue;\n            \n            throw new org.eclipse.jgit.errors.ConfigInvalidException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n        }\n        break;\n    } \n    if ((java.lang.Character.isLetterOrDigit(((char)(int)))) || (int == '-')) {\n        java.lang.StringBuilder.append(((char)(int)));\n    } else if ('\\n' == int) {\n        org.eclipse.jgit.lib.Config.StringReader.reset();\n        java.lang.StringBuilder.append(((char)(int)));\n        break;\n    } else\n        throw new org.eclipse.jgit.errors.ConfigInvalidException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.lang.StringBuilder));\n    \n}"},"status":-2},{"failures":[1,2],"tindex":"c74c4453-4c35-11e5-951a-c17c66d95a28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RefMap:168","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.equals(org.eclipse.jgit.lib.Ref.getName())))\n    throw new java.lang.IllegalArgumentException();\n"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"c74c4454-4c35-11e5-951a-5bbf2ac6eaf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheBuildIterator:131","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheBuilder.keep(int, (int - int))"},"status":-1},{"failures":[],"tindex":"c74c4455-4c35-11e5-951a-b321e0c1d59a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:234","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.NB.compareUInt32(int, int[][int])"},"status":-2},{"failures":[],"tindex":"c74c4456-4c35-11e5-951a-037edd9571ab","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Repository.getGlobalListenerList().dispatch(new org.eclipse.jgit.internal.storage.dfs.BeforeDfsPackIndexLoadedEvent(this))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.FileHeader:153","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.patch.FileHeader.addHunk(new org.eclipse.jgit.patch.HunkHeader(this , org.eclipse.jgit.diff.EditList))"},"status":-2},{"failures":[],"tindex":"c74c6b67-4c35-11e5-951a-c3914a0e2a58","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:182","type":"CtIfImpl","sourcecode":"if (int == 0)\n    break;\n"},"variableMap":{"c":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:568","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int += 46;\n"},"status":-2},{"failures":[],"tindex":"c74c6b68-4c35-11e5-951a-5b6e295acae6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:192","type":"CtIfImpl","sourcecode":"if ((0 <= int) && (0 <= int))\n    int = java.lang.Math.min(int, int);\nelse if (0 <= int)\n    int = int;\nelse if (0 <= int)\n    int = int;\nelse\n    break;\n"},"variableMap":{"s":"length","lf":"i","cr":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:486","type":"CtForImpl","sourcecode":"for (int = int + 2 ; int < (char[].int) ; ++int) {\n    if ((char[][int]) == '}') {\n        java.lang.String = new java.lang.String(char[] , (int + 2) , ((int - int) - 2));\n        break;\n    } \n}"},"status":-2},{"failures":[106,107],"tindex":"c74c6b69-4c35-11e5-951a-51a8c10dc86c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:664","type":"CtInvocationImpl","sourcecode":"java.lang.System.runFinalization()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:287","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RenameCallback.renamed(org.eclipse.jgit.diff.DiffEntry)"},"status":-1},{"failures":[],"tindex":"c74c6b6a-4c35-11e5-951a-ff119c0d3a8b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:87","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.parse(new org.eclipse.jgit.revwalk.RevWalk(((org.eclipse.jgit.lib.ObjectReader)(null))), byte[])"},"variableMap":{"this":"this","raw":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:86","type":"CtTryImpl","sourcecode":"try {\n    return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.parse(new org.eclipse.jgit.revwalk.RevWalk(((org.eclipse.jgit.lib.ObjectReader)(null))), byte[]);\n} catch (java.io.IOException ex) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"c74c6b6b-4c35-11e5-951a-af39757ba1ba","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommitList:381","type":"CtReturnImpl","sourcecode":"return (int)++"},"variableMap":{"positionsAllocated":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:311","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"c74c6b6c-4c35-11e5-951a-8190c6a43c70","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.pack.PackConfig:737","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", buildBitmaps=\")"},"variableMap":{"b":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.Strings:321","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":0}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}