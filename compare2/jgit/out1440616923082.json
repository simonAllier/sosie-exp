{"failureDictionary":{"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":35,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.absoluteGitDirRef":306,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":14,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":37,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":36,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":256,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":31,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":4,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":34,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":106,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":317,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":213,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":155,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutMergeBranch":223,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":61,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":258,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":332,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule":177,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":255,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":153,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withBOM":195,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":266,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":268,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":348,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":168,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":38,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":265,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":5,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":198,"org.eclipse.jgit.transport.RemoteConfigTest.testRemoveLastURI":1,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":208,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.relativeGitDirRef":305,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":130,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":183,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":145,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":263,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":28,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":107,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":19,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":68,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":108,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":147,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":125,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":133,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":188,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":270,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":15,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleTimeout":205,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":275,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldHandleNormalCaseForRemoteTrackingBranch":229,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":278,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":123,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":20,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":122,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":52,"org.eclipse.jgit.lib.ConfigTest.testNoFinalNewline":246,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":221,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":323,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":320,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":3,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":51,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testSystemEncoding":196,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":22,"org.eclipse.jgit.submodule.SubmoduleWalkTest.testTreeIteratorWithGitmodules":175,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":165,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":252,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":319,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":29,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":120,"org.eclipse.jgit.lib.ConfigTest.test010_readNamesInSubSection":247,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":58,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":18,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":76,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":75,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":293,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":338,"org.eclipse.jgit.lib.ConfigTest.testGetEnum":240,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":50,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_1":33,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":342,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":141,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":277,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":140,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":214,"org.eclipse.jgit.lib.BranchConfigTest.isRebase":224,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":30,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":257,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":281,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":271,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":83,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":267,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":143,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":189,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":203,"org.eclipse.jgit.lib.ConfigTest.testCombinedMergeOptions":243,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":70,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":318,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":105,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":47,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":98,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":81,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":314,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":99,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":100,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef":171,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":311,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":53,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":109,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":185,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testBare_CreateRepositoryFromGitDirOnlyWithBareConfigTrue":316,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":158,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":187,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":59,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":339,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":269,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":135,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMergeoptions":235,"org.eclipse.jgit.api.GitConstructionTest.testClose":283,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":74,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":167,"org.eclipse.jgit.lib.ConfigTest.test009_readNamesInSection":242,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":79,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":253,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":21,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":154,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":111,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":200,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileSimple":26,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":212,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithUnconfiguredSubmodule":170,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule":180,"org.eclipse.jgit.transport.RemoteConfigTest.testRemoveFirstURI":2,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":102,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":142,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoSubmoduleRepository":176,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":54,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":84,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_alternate_index_file_and_objdirs":312,"org.eclipse.jgit.lib.ConfigTest.test_ReadNamesInSectionRecursive":238,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.emptyRepositoryFormatVersion":304,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldReturnNullWithoutFetchSpec":225,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":254,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":288,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":162,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":48,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":192,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":116,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":6,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":71,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":301,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":127,"org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenExisting":231,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":169,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":346,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testHasFlags":160,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":42,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":260,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesInCore":10,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":273,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":103,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":290,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":206,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":134,"org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum":248,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":9,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":16,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":344,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleNoTags":207,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.scanWithGitDirRef":303,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":181,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":124,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":157,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":138,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":164,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":334,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":152,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":56,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":11,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":32,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testUTF8withoutBOM":194,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test007_Open":313,"org.eclipse.jgit.api.FetchCommandTest.testFetch":291,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":276,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":66,"org.eclipse.jgit.submodule.SubmoduleWalkTest.indexWithGitmodules":173,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":186,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_workDirSet":315,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":218,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff1":233,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":210,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_OnOff2":234,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":341,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":119,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":215,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":92,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":262,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":166,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":151,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":340,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":202,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":289,"org.eclipse.jgit.dircache.DirCachePathEditTest.testPathEditShouldBeCalledForEachStage":161,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":128,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":264,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":191,"org.eclipse.jgit.storage.file.FileBasedConfigTest.testLeadingWhitespaces":193,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":347,"org.eclipse.jgit.transport.RemoteConfigTest.testSimpleAlwaysTags":211,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":280,"org.eclipse.jgit.lib.ConfigTest.testEmptyString":245,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":136,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":126,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":57,"org.eclipse.jgit.lib.ConfigTest.readNamesInSubSectionRecursive":239,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":129,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleNormalCase":226,"org.eclipse.jgit.api.PushCommandTest.testPush":299,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test006_ReadUglyConfig":309,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":63,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":148,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":163,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":96,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":330,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare":345,"org.eclipse.jgit.submodule.SubmoduleWalkTest.treeIdWithGitmodules":172,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":184,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":331,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":329,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":149,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirSet":308,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":72,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":121,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":298,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnNullWithoutMergeBranchForLocalBranch":227,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":25,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":43,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":328,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":219,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":217,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":322,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":95,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":94,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":321,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":85,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":199,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":294,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":97,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":115,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":261,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":7,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":104,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":146,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":114,"org.eclipse.jgit.transport.RemoteConfigTest.testRemoveMiddleURI":0,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":60,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":117,"org.eclipse.jgit.lib.ConfigTest.testUnsetBranchSection":241,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse1":250,"org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion":307,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":201,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":46,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_TrueFalse2":251,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule":179,"org.eclipse.jgit.api.GitConstructionTest.testWrap":285,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":336,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":86,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":41,"org.eclipse.jgit.lib.RepositoryCacheTest.testCacheOpen":230,"org.eclipse.jgit.api.GitConstructionTest.testOpen":284,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":150,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":144,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":65,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":40,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":182,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":343,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":69,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":73,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":23,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":39,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":282,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":45,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":292,"org.eclipse.jgit.lib.BranchConfigTest.getRemoteTrackingBranchShouldHandleOtherMapping":228,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":349,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":295,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":80,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":216,"org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef":174,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":13,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":77,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":67,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":101,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":44,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":190,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":337,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":131,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":110,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":300,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":49,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":197,"org.eclipse.jgit.lib.BranchConfigTest.getTrackingBranchShouldReturnMergeBranchForLocalBranch":222,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":112,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":27,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":64,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":137,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":274,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":90,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":297,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":17,"org.eclipse.jgit.lib.ConfigTest.testReadLong":244,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":55,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":159,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":302,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":91,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":24,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":132,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":12,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":62,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":279,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":78,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":327,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":204,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_gitDirAndWorkTreeSet":310,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":326,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":272,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":325,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":324,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":88,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":89,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":259,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":333,"org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithUninitializedSubmodule":178,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":113,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":156,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":287,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":296,"org.eclipse.jgit.lib.ConfigTest.testUnsetSingleSection":249,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":335,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":8,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":220,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":93,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":139,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":286,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":118,"org.eclipse.jgit.lib.ConfigTest.testGetFastForwardMerge":232,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":82,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo1":236,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":87,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":209,"org.eclipse.jgit.lib.ConfigTest.testReadBoolean_YesNo2":237},"transformations":[{"failures":[],"tindex":"bb299d03-4c27-11e5-aa96-fd692380228f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:108","type":"CtAssignmentImpl","sourcecode":"int = com.googlecode.javaewah.IntIterator.next()"},"status":-2},{"failures":[0,1,2],"tindex":"bb2afc94-4c27-11e5-aa96-5fbfabefbadb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.URIish:587","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.transport.URIish.(org.eclipse.jgit.transport.URIish.eq(org.eclipse.jgit.transport.URIish.getPath(), org.eclipse.jgit.transport.URIish.getPath())))\n    return false;\n"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"tindex":"bb2b23a5-4c27-11e5-aa96-1753f9e8410c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.HttpSupport:143","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0))\n    return ;\n"},"variableMap":{"key":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:749","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))) {\n        if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) && (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict())) {\n            if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))))\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n        \n    } else\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    \n} else if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    } else {\n        if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n                if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n                    return ;\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    }\n} else {\n    if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    else if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n        if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        }\n    } else {\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n}"},"status":-1},{"failures":[160],"tindex":"bb2b71c6-4c27-11e5-aa96-a7f90b0ecd11","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:143","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.BlockRevQueue.Block.org.eclipse.jgit.revwalk.RevCommit[][int].int) & int) != 0)\n    return true;\n"},"status":-1},{"failures":[161,162,106,107,108],"tindex":"bb2b71c7-4c27-11e5-aa96-618d71a9d67f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheIterator:187","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry = null"},"variableMap":{"currentEntry":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCache:807","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheEntry"},"status":-1},{"failures":[],"tindex":"bb2b71c8-4c27-11e5-aa96-b1b2c5b49f9e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsRefDatabase:209","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.SymbolicRef(org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.Ref)"},"variableMap":{"dst":"foundBranch","old":"foundBranch"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:295","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.lib.Ref"},"status":0},{"failures":[163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,44,45,46,253,47,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,86,272,87,88,89,273,90,274,275,276,91,277,92,93,94,95,278,279,280,281,282,283,283,284,284,285,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,157,337,338,158,339,340,159,341,342,343,344,345,346,347,348],"tindex":"bb2b98d9-4c27-11e5-aa96-a15c3c0990f7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:267","type":"CtIfImpl","sourcecode":"if ((--int) == 0)\n    break;\n"},"variableMap":{"remaining":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Config:1166","type":"CtIfImpl","sourcecode":"if ('=' == int)\n    break;\n"},"status":-1},{"failures":[],"tindex":"bb2b98da-4c27-11e5-aa96-47b4c51d0a67","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:1020","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCache.read(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.BaseDirCacheEditor:92","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.dircache.DirCache"},"status":-2},{"failures":[],"tindex":"bb2b98db-4c27-11e5-aa96-1fcc8623426b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.PlotCommitList:289","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revplot.PlotCommit.addForkingOffLane(org.eclipse.jgit.revplot.PlotLane)"},"status":-2},{"failures":[],"tindex":"bb2bbfec-4c27-11e5-aa96-f31674050cb8","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.Base64:69","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 64 ; int++)\n    org.eclipse.jgit.util.Base64.byte[][org.eclipse.jgit.util.Base64.byte[][int]] = ((byte)(int));"},"variableMap":{"org.eclipse.jgit.util.Base64.ENC":"buffer","org.eclipse.jgit.util.Base64.DEC":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:130","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, org.eclipse.jgit.util.TemporaryBuffer.Block.byte[], org.eclipse.jgit.util.TemporaryBuffer.Block.int, int)"},"status":-2},{"failures":[],"tindex":"bb2bbfed-4c27-11e5-aa96-6b05f80dbd5f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.ignore.IgnoreRule:105","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.startsWith(\"/\"))) {\n    java.lang.String = \"/\" + (java.lang.String);\n} "},"variableMap":{"pattern":"cannotCombineTreeFilterWithRevFilter"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.StartGenerator:94","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.filter.TreeFilter != (org.eclipse.jgit.treewalk.filter.TreeFilter.org.eclipse.jgit.treewalk.filter.TreeFilter))\n    throw new java.lang.IllegalStateException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, org.eclipse.jgit.treewalk.filter.TreeFilter, org.eclipse.jgit.revwalk.filter.RevFilter));\n"},"status":-2},{"failures":[],"tindex":"bb2bbfee-4c27-11e5-aa96-c780fb7532fa","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.ObjectWalk:384","type":"CtIfImpl","sourcecode":"if ((int & (org.eclipse.jgit.revwalk.RevWalk.int)) != 0)\n    continue;\n"},"variableMap":{"flags":"v","org.eclipse.jgit.revwalk.RevWalk.SEEN":"v"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AnyObjectId:351","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write((int >>> 16))"},"status":-2},{"failures":[],"tindex":"bb2be6ff-4c27-11e5-aa96-ed3d4f7ef572","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:269","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.purge(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:392","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.storage.file.FileBasedConfig.isOutdated()) {\n    try {\n        org.eclipse.jgit.internal.storage.file.FileRepository.loadRepoConfig();\n    } catch (java.io.IOException e) {\n        throw new java.lang.RuntimeException(java.io.IOException);\n    }\n} "},"status":-2},{"failures":[26,28,349,33,35,37,40],"tindex":"bb2be700-4c27-11e5-aa96-09afb7a5579e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FileUtils:170","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException e) {\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1063","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.NameConflictTreeWalk.setRecursive(true)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}