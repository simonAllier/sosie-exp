{"failureDictionary":{"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":10,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":108,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":147,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":105,"org.eclipse.jgit.util.GitDateParserTest.shortWithDots":164,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":160,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":13,"org.eclipse.jgit.transport.RemoteConfigTest.testMirror":99,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":0,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":45,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":37,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":4,"org.eclipse.jgit.api.FetchCommandTest.testFetch":39,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":161,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":75,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":132,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":53,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":55,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":84,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":88,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":52,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveAddURI":94,"org.eclipse.jgit.util.GitDateParserTest.now":169,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":6,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveLastURI":96,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":119,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":141,"org.eclipse.jgit.transport.RemoteConfigTest.noInsteadOf":100,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":115,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":85,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":129,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":49,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":78,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":50,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":153,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":159,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":113,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":64,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":51,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":154,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":83,"org.eclipse.jgit.util.GitDateParserTest.weeksAgo":166,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":176,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":137,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":24,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":143,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":7,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":17,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":57,"org.eclipse.jgit.api.PushCommandTest.testPush":27,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":74,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":139,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldTryToParseValidLineMarkedAsComment":158,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":136,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":135,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":8,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":120,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":19,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":91,"org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf":97,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":155,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":133,"org.eclipse.jgit.util.GitDateParserTest.local":171,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":12,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":89,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":87,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":81,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":80,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":5,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":177,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":145,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":42,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":11,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":48,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":126,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":130,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":18,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":125,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":128,"org.eclipse.jgit.api.RebaseCommandTest.testParseRewordCommand":134,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":41,"org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf":92,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":110,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent":181,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":33,"org.eclipse.jgit.util.GitDateParserTest.yesterday":165,"org.eclipse.jgit.util.GitDateParserTest.rfc":170,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":116,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":77,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":149,"org.eclipse.jgit.transport.RemoteConfigTest.testSimple":101,"org.eclipse.jgit.api.GitConstructionTest.testWrap":22,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":107,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":3,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":66,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":38,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":59,"org.eclipse.jgit.api.GitConstructionTest.testOpen":21,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":58,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":54,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":156,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":152,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":151,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":104,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":117,"org.eclipse.jgit.api.RebaseCommandTest.testLeadingSpacesRebaseTodo":157,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":60,"org.eclipse.jgit.util.GitDateParserTest.iso":168,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":35,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":32,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":40,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":43,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":86,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":1,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":2,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":122,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":121,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":15,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":31,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":111,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":112,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":56,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":109,"org.eclipse.jgit.api.GitConstructionTest.testClose":20,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":123,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":28,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":9,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":34,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":124,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackRepoWithNoRefs":178,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":73,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":146,"org.eclipse.jgit.util.GitDateParserTest.shortFmt":167,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":16,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":72,"org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.badlyFormattedWithExplicitRef":162,"org.eclipse.jgit.util.GitDateParserTest.shortWithSlash":174,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":25,"org.eclipse.jgit.transport.RemoteConfigTest.testBackup":98,"org.eclipse.jgit.util.GitDateParserTest.defaultFmt":172,"org.eclipse.jgit.util.GitDateParserTest.daysAndWeeksAgo":175,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleLinesWithoutCommitMessageInRebaseTodoFile":140,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":30,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":114,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":76,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":150,"org.eclipse.jgit.util.GitDateParserBadlyFormattedTest.badlyFormattedWithoutRef":163,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":36,"org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef":179,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":63,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":67,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":142,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":14,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":69,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":46,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":70,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":62,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":127,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":29,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":44,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldBeAbleToHandleEmptyLinesInRebaseTodoFile":131,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":138,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":102,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":82,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":106,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":47,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":90,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":71,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":65,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":79,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":61,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":148,"org.eclipse.jgit.transport.RemoteConfigTest.testUploadPack":93,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":180,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":144,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":118,"org.eclipse.jgit.util.GitDateParserTest.shortWithDotsReverse":173,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":103,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":68,"org.eclipse.jgit.transport.RemoteConfigTest.testSaveRemoveFirstURI":95},"transformations":[{"failures":[],"tindex":"c124cebd-4c44-11e5-95e6-2381d8b326bf","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.HttpAuthMethod:486","type":"CtIfImpl","sourcecode":"if (int < 0)\n    int = java.lang.String.length();\n"},"variableMap":{"auth":"org.eclipse.jgit.transport.TransportBundle.V2_BUNDLE_SIGNATURE","space":"org.eclipse.jgit.lib.Constants.OBJECT_ID_STRING_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleWriter:198","type":"CtTryImpl","sourcecode":"try {\n    final java.util.HashSet<org.eclipse.jgit.lib.ObjectId> java.util.HashSet<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    final java.util.HashSet<org.eclipse.jgit.lib.ObjectId> java.util.HashSet<org.eclipse.jgit.lib.ObjectId> = new java.util.HashSet<org.eclipse.jgit.lib.ObjectId>();\n    java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.addAll(java.util.Map<java.lang.String, org.eclipse.jgit.lib.ObjectId>.values());\n    for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : java.util.Set<org.eclipse.jgit.revwalk.RevCommit>)\n        java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.revwalk.RevCommit.getId());\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setIndexDisabled(true);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setDeltaBaseAsOffset(true);\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setThin(((java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.size()) > 0));\n    org.eclipse.jgit.internal.storage.pack.PackWriter.setReuseValidatingObjects(false);\n    if ((java.util.HashSet<org.eclipse.jgit.lib.ObjectId>.size()) == 0)\n        org.eclipse.jgit.internal.storage.pack.PackWriter.setTagTargets(java.util.Set<org.eclipse.jgit.lib.ObjectId>);\n    \n    org.eclipse.jgit.internal.storage.pack.PackWriter.preparePack(org.eclipse.jgit.lib.ProgressMonitor, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>, java.util.HashSet<org.eclipse.jgit.lib.ObjectId>);\n    final java.io.Writer java.io.Writer = new java.io.OutputStreamWriter(java.io.OutputStream , org.eclipse.jgit.lib.Constants.java.nio.charset.Charset);\n    java.io.Writer.write(org.eclipse.jgit.transport.TransportBundle.java.lang.String);\n    java.io.Writer.write('\\n');\n    final char[] char[] = new char[org.eclipse.jgit.lib.Constants.int];\n    for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : java.util.Set<org.eclipse.jgit.revwalk.RevCommit>) {\n        java.io.Writer.write('-');\n        org.eclipse.jgit.revwalk.RevCommit.copyTo(char[], java.io.Writer);\n        if ((org.eclipse.jgit.revwalk.RevCommit.getRawBuffer()) != null) {\n            java.io.Writer.write(' ');\n            java.io.Writer.write(org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n        } \n        java.io.Writer.write('\\n');\n    }\n    for (final java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId> java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId> : java.util.Map<java.lang.String, org.eclipse.jgit.lib.ObjectId>.entrySet()) {\n        java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId>.getValue().copyTo(char[], java.io.Writer);\n        java.io.Writer.write(' ');\n        java.io.Writer.write(java.util.Map.Entry<java.lang.String, org.eclipse.jgit.lib.ObjectId>.getKey());\n        java.io.Writer.write('\\n');\n    }\n    java.io.Writer.write('\\n');\n    java.io.Writer.flush();\n    org.eclipse.jgit.internal.storage.pack.PackWriter.writePack(org.eclipse.jgit.lib.ProgressMonitor, org.eclipse.jgit.lib.ProgressMonitor, java.io.OutputStream);\n} finally {\n    org.eclipse.jgit.internal.storage.pack.PackWriter.release();\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"c1251cde-4c44-11e5-95e6-151a1be7d3d2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashCreateCommand:354","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEditor.add(org.eclipse.jgit.dircache.DirCacheEditor.PathEdit)"},"status":-1},{"failures":[19],"tindex":"c1251cdf-4c44-11e5-95e6-1361c9bb5a7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:227","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit"},"status":-1},{"failures":[],"tindex":"c1251ce0-4c44-11e5-95e6-fdb136795b0a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:195","type":"CtOperatorAssignmentImpl","sourcecode":"int += int & 1"},"variableMap":{"d":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:137","type":"CtAssignmentImpl","sourcecode":"int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int)"},"status":-2},{"failures":[20,20,21,21,22,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"c1251ce1-4c44-11e5-95e6-6d43f77a57ca","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.io.InterruptTimer:209","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupted()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:174","type":"CtInvocationImpl","sourcecode":"java.util.List<org.eclipse.jgit.transport.URIish>.add(new org.eclipse.jgit.transport.URIish(org.eclipse.jgit.transport.RemoteConfig.replaceUri(java.lang.String, java.util.Map<java.lang.String, java.lang.String>)))"},"status":-1},{"failures":[],"tindex":"c12543f2-4c44-11e5-95e6-3f4ebdb6da75","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:548","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:262","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile = new org.eclipse.jgit.internal.storage.file.PackFile(java.io.File , int)"},"status":-2},{"failures":[32,33,35,68,69,70,79,80,81,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,17,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,18,154,155,156,157,158,159,160,161],"tindex":"c12543f3-4c44-11e5-95e6-c52a041f84f0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:178","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 0 :\n        java.lang.String java.lang.String = new java.lang.String(byte[] , int , ((int - int) - 1));\n        int = int;\n        org.eclipse.jgit.lib.RebaseTodoLine.Action = org.eclipse.jgit.lib.RebaseTodoLine.Action.parse(java.lang.String);\n        if (org.eclipse.jgit.lib.RebaseTodoLine.Action == null)\n            return null;\n        \n        break;\n    case 1 :\n        int = org.eclipse.jgit.util.RawParseUtils.next(byte[], int, ' ');\n        java.lang.String java.lang.String = new java.lang.String(byte[] , int , ((int - int) - 1));\n        int = int;\n        org.eclipse.jgit.lib.AbbreviatedObjectId = org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(java.lang.String);\n        break;\n    case 2 :\n        return new org.eclipse.jgit.lib.RebaseTodoLine(org.eclipse.jgit.lib.RebaseTodoLine.Action , org.eclipse.jgit.lib.AbbreviatedObjectId , org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, (1 + int)));\n}"},"variableMap":{"nextSpace":"lineEnd","buf":"buf","commit":"commit","tokenCount":"nextSpace","action":"action","tokenBegin":"tokenCount","lineEnd":"lineEnd"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:177","type":"CtWhileImpl","sourcecode":"while ((int < 3) && (int < int)) {\n    switch (int) {\n        case 0 :\n            java.lang.String java.lang.String = new java.lang.String(byte[] , int , ((int - int) - 1));\n            int = int;\n            org.eclipse.jgit.lib.RebaseTodoLine.Action = org.eclipse.jgit.lib.RebaseTodoLine.Action.parse(java.lang.String);\n            if (org.eclipse.jgit.lib.RebaseTodoLine.Action == null)\n                return null;\n            \n            break;\n        case 1 :\n            int = org.eclipse.jgit.util.RawParseUtils.next(byte[], int, ' ');\n            java.lang.String java.lang.String = new java.lang.String(byte[] , int , ((int - int) - 1));\n            int = int;\n            org.eclipse.jgit.lib.AbbreviatedObjectId = org.eclipse.jgit.lib.AbbreviatedObjectId.fromString(java.lang.String);\n            break;\n        case 2 :\n            return new org.eclipse.jgit.lib.RebaseTodoLine(org.eclipse.jgit.lib.RebaseTodoLine.Action , org.eclipse.jgit.lib.AbbreviatedObjectId , org.eclipse.jgit.util.RawParseUtils.decode(byte[], int, (1 + int)));\n    }\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"c12543f4-4c44-11e5-95e6-b766c15f660d","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Config:1265","type":"CtAssignmentImpl","sourcecode":"boolean = !boolean"},"variableMap":{"quote":"cloneAllBranches"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CloneCommand:441","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":0},{"failures":[],"tindex":"c1256b05-4c44-11e5-95e6-156f8c25678f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.DepthGenerator:159","type":"CtUnaryOperatorImpl","sourcecode":"~(org.eclipse.jgit.revwalk.RevWalk.int)"},"variableMap":{"org.eclipse.jgit.revwalk.RevWalk.UNINTERESTING":"resPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:412","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-2},{"failures":[],"tindex":"c1256b06-4c44-11e5-95e6-753c890c9bfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:619","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(' ')"},"status":0},{"failures":[162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"c1256b07-4c44-11e5-95e6-fb97698b9a1a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.GitDateParser:221","type":"CtIfImpl","sourcecode":"if (java.util.Date != null)\n    return java.util.Date;\n"},"variableMap":{"ret":"org.eclipse.jgit.util.GitDateParser.NEVER"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:218","type":"CtIfImpl","sourcecode":"if (\"never\".equalsIgnoreCase(java.lang.String))\n    return org.eclipse.jgit.util.GitDateParser.java.util.Date;\n"},"status":-1},{"failures":[179,180],"tindex":"c1256b08-4c44-11e5-95e6-ad11bbbaa062","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineOut:164","type":"CtWhileImpl","sourcecode":"while ((int >= 0) && (int != 0)) {\n    byte[][int--] = org.eclipse.jgit.transport.PacketLineOut.byte[][(int & 15)];\n    int >>>= 4;\n}"},"variableMap":{"w":"p","org.eclipse.jgit.transport.PacketLineOut.hexchar":"ib","lenbuffer":"ib","o":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:1005","type":"CtWhileImpl","sourcecode":"while ((int & 128) != 0)\n    int = (byte[][int++]) & 255;"},"status":-2},{"failures":[181],"tindex":"c1256b09-4c44-11e5-95e6-45d508d3360b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilter:82","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"c125921a-4c44-11e5-95e6-7178a9d06ae2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:176","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.GarbageCollectCommand.org.eclipse.jgit.api.GarbageCollectCommand.toProperties(org.eclipse.jgit.internal.storage.file.GC.getStatistics())"},"variableMap":{"this":"this","gc":"gc"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:174","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.GC.gc();\n    return org.eclipse.jgit.api.GarbageCollectCommand.org.eclipse.jgit.api.GarbageCollectCommand.toProperties(org.eclipse.jgit.internal.storage.file.GC.getStatistics());\n} catch (java.text.ParseException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.text.ParseException);\n}"},"status":0},{"failures":[],"tindex":"c125921b-4c44-11e5-95e6-03f527093b8d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:192","type":"CtIfImpl","sourcecode":"if ((0 <= int) && (0 <= int))\n    int = java.lang.Math.min(int, int);\nelse if (0 <= int)\n    int = int;\nelse if (0 <= int)\n    int = int;\nelse\n    break;\n"},"variableMap":{"s":"options","lf":"options","cr":"options"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexWriterV1:115","type":"CtInvocationImpl","sourcecode":"java.io.DataOutput.writeShort(int)"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}