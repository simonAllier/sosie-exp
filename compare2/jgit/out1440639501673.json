{"failureDictionary":{"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":13,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository":58,"org.eclipse.jgit.transport.RemoteConfigTest.singlePushInsteadOf":165,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":10,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit":113,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":133,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_Defaults":171,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":177,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitsEmptyTree":130,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":33,"org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward":90,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy":152,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads":57,"org.eclipse.jgit.api.FetchCommandTest.testFetch":83,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":100,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":76,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":41,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":43,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":9,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitTwoTreeTwoBlob":128,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":30,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":40,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":105,"org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned":139,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":2,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined":160,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":20,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtyRootWorktree":27,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":37,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":79,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":123,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":38,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned":97,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":18,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":6,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":54,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":39,"org.eclipse.jgit.revwalk.RevWalkMergedIntoTest.testOldCommitWalk":94,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":8,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":137,"org.eclipse.jgit.transport.RemoteConfigTest.multiplePushInsteadOf":163,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":66,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":106,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":121,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":45,"org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository":75,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":65,"org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge":95,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":122,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward":102,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":150,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":138,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule":24,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs":151,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":32,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex":144,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":149,"org.eclipse.jgit.transport.RemoteConfigTest.singleInsteadOf":166,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":89,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2":99,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":148,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":104,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":162,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":29,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs":143,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":82,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":81,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets":141,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog":135,"org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote":92,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":3,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects":86,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":36,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":140,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":15,"org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal":85,"org.eclipse.jgit.transport.RemoteConfigTest.multipleInsteadOf":164,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate":5,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":62,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":21,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":78,"org.eclipse.jgit.api.GitConstructionTest.testWrap":48,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":12,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":67,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":49,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote":59,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice":154,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":46,"org.eclipse.jgit.api.GitConstructionTest.testOpen":47,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":42,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":7,"org.eclipse.jgit.revwalk.ObjectWalkTest.testEmptyTreeCorruption":129,"org.eclipse.jgit.revwalk.ObjectWalkTest.testCull":125,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule":159,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":22,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":115,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":50,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":114,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":64,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooFewFiles":170,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":61,"org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow":161,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude":142,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches":84,"org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal":87,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":116,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":176,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":28,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1":98,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain":175,"org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri":25,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog":134,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":60,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":178,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":16,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":17,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":14,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":44,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree1":126,"org.eclipse.jgit.revwalk.ObjectWalkTest.testTwoCommitDeepTree2":127,"org.eclipse.jgit.internal.storage.file.WindowCacheGetTest.testCache_TooSmallLimit":169,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":1,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":63,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":74,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly":112,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":73,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":117,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails":4,"org.eclipse.jgit.internal.storage.file.T0004_PackReaderTest.test004_lookupDeltifiedObject":168,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":107,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":108,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":19,"org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate":110,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":77,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":120,"org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled":93,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders":111,"org.eclipse.jgit.revwalk.ObjectWalkTest.testOneCommitOneTreeTwoBlob":124,"org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags":56,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":53,"org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection":91,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4":147,"org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository":0,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":136,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":173,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":68,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":146,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":145,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":70,"org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce":96,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":34,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":71,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":153,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":118,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":52,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate":101,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne":156,"org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag":88,"org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule":26,"org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_FailsOver2GiB":174,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":157,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":131,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":11,"org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles":132,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":103,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":31,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":35,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":72,"org.eclipse.jgit.api.MergeCommandTest.testFastForward":109,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":55,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":80,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":51,"org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle":167,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":119,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":23,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps":172,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack":155,"org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule":158,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":69},"transformations":[{"failures":[],"tindex":"4cfa6b21-4c5c-11e5-9af4-e92487942853","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CommitCommand:529","type":"CtIfImpl","sourcecode":"if ((java.lang.String) == null)\n    throw new org.eclipse.jgit.api.errors.NoMessageException(org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n"},"variableMap":{"message":"org.eclipse.jgit.lib.Constants.R_REMOTES","commitMessageNotSpecified":"org.eclipse.jgit.lib.Constants.R_TAGS"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeMessageFormatter:83","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()))) + \"\\'\"));\nelse if (org.eclipse.jgit.lib.Ref.getName().startsWith(org.eclipse.jgit.lib.Constants.java.lang.String))\n    java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Repository.shortenRefName(org.eclipse.jgit.lib.Ref.getName()))) + \"\\'\"));\nelse if (org.eclipse.jgit.lib.Ref.getName().equals(org.eclipse.jgit.lib.Ref.getObjectId().getName()))\n    java.util.List<java.lang.String>.add(((\"\\'\" + (org.eclipse.jgit.lib.Ref.getName())) + \"\\'\"));\nelse\n    java.util.List<java.lang.String>.add(org.eclipse.jgit.lib.Ref.getName());\n"},"status":-2},{"failures":[],"tindex":"4cfa9232-4c5c-11e5-9af4-79e601c98d2b","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:113","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.drawLine(TColor, int, int, int, ((int + int) / 2), org.eclipse.jgit.revplot.AbstractPlotRenderer.int);\n    for (int int = 0 ; int < (org.eclipse.jgit.revplot.PlotCommit<TLane>.org.eclipse.jgit.revplot.PlotLane[].int) ; int++) {\n        final TLane TLane = ((TLane)(org.eclipse.jgit.revplot.PlotCommit<TLane>.org.eclipse.jgit.revplot.PlotLane[][int]));\n        final TColor TColor = org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.laneColor(TLane);\n        final int int = org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.org.eclipse.jgit.revplot.AbstractPlotRenderer.laneC(TLane);\n        if ((java.lang.Math.abs((int - int))) > (org.eclipse.jgit.revplot.AbstractPlotRenderer.int)) {\n            final int int;\n            if (int < int)\n                int = int - ((org.eclipse.jgit.revplot.AbstractPlotRenderer.int) / 2);\n            else\n                int = int + ((org.eclipse.jgit.revplot.AbstractPlotRenderer.int) / 2);\n            \n            org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.drawLine(TColor, int, (int / 2), int, (int / 2), org.eclipse.jgit.revplot.AbstractPlotRenderer.int);\n            org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.drawLine(TColor, int, (int / 2), int, int, org.eclipse.jgit.revplot.AbstractPlotRenderer.int);\n        } else\n            org.eclipse.jgit.revplot.AbstractPlotRenderer<TLane, TColor>.drawLine(TColor, int, (int / 2), int, int, org.eclipse.jgit.revplot.AbstractPlotRenderer.int);\n        \n        int = java.lang.Math.max(int, int);\n    }\n} "},"status":-2},{"failures":[],"tindex":"4cfa9233-4c5c-11e5-9af4-75b9d59837a0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.TemporaryBuffer:199","type":"CtLocalVariableImpl","sourcecode":"final org.eclipse.jgit.util.TemporaryBuffer.Block org.eclipse.jgit.util.TemporaryBuffer.Block = org.eclipse.jgit.util.TemporaryBuffer.last()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.TemporaryBuffer:103","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.util.TemporaryBuffer.Block org.eclipse.jgit.util.TemporaryBuffer.Block = org.eclipse.jgit.util.TemporaryBuffer.last()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"4cfab944-4c5c-11e5-9af4-b19c7d66eb3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefAdvertiser:188","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.RefAdvertiser.advertiseAny(org.eclipse.jgit.lib.Ref.getObjectId(), org.eclipse.jgit.lib.Ref.getName())"},"status":-1},{"failures":[],"tindex":"4cfab945-4c5c-11e5-9af4-0ba004597b66","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.TransportGitSsh:212","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.util.SystemReader.getInstance().getenv(\"GIT_SSH\")) != null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.blame.BlameGenerator:669","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"4cfab946-4c5c-11e5-9af4-e1b112f18715","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.RebaseTodoLine:217","type":"CtIfImpl","sourcecode":"if (((java.lang.String.trim().length()) == 0) || (java.lang.String.startsWith(\"#\"))) {\n    this.java.lang.String = java.lang.String;\n    return ;\n} "},"variableMap":{"newComment":"name","comment":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:749","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) || (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))) {\n        if ((org.eclipse.jgit.treewalk.CanonicalTreeParser == null) && (org.eclipse.jgit.treewalk.NameConflictTreeWalk.isDirectoryFileConflict())) {\n            if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator == null) || (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))))\n                org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n            else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n        \n    } else\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    \n} else if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    } else {\n        if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n                if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n                    return ;\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    }\n} else {\n    if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    else if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n        if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        }\n    } else {\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n}"},"status":0},{"failures":[90,91,92,93,94,95,6,96,97,20,98,99,100,101,102,103,104,105,60,106,107,108,109,110,111,112,113,114,115,116,67,117,118,119,120,121,122,123],"tindex":"4cfb0767-4c5c-11e5-9af4-7bb50723cac7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:394","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk.markStart(org.eclipse.jgit.revwalk.RevCommit)"},"status":-1},{"failures":[124,125,126,127,128,129,130,131,8,9,1,2,3,6,7,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,10,11,12,13,14,15,16,17,18,19,20,21,22,23,154,155,156,157,158,159,26,160,24,25,161,27,28,29,30,162,31,32,33,34,35,36,38,39,40,41,43,44,45,46,49,50,56,57,59,65,66,60,61,62,63,64,85,108,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"4cfb0768-4c5c-11e5-9af4-ed101eeb053e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.PlotCommit:127","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revplot.PlotCommit.getId().equals(org.eclipse.jgit.revplot.PlotCommit.getId()))\n    return ;\n"},"variableMap":{"c":"c","pc":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.BlockObjQueue:60","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.revwalk.BlockObjQueue.Block == null) {\n    org.eclipse.jgit.revwalk.BlockObjQueue.Block = org.eclipse.jgit.revwalk.BlockObjQueue.BlockFreeList.newBlock();\n    org.eclipse.jgit.revwalk.BlockObjQueue.Block.add(org.eclipse.jgit.revwalk.RevObject);\n    org.eclipse.jgit.revwalk.BlockObjQueue.Block = org.eclipse.jgit.revwalk.BlockObjQueue.Block;\n    org.eclipse.jgit.revwalk.BlockObjQueue.Block = org.eclipse.jgit.revwalk.BlockObjQueue.Block;\n    return ;\n} else if (org.eclipse.jgit.revwalk.BlockObjQueue.Block.isFull()) {\n    org.eclipse.jgit.revwalk.BlockObjQueue.Block = org.eclipse.jgit.revwalk.BlockObjQueue.BlockFreeList.newBlock();\n    org.eclipse.jgit.revwalk.BlockObjQueue.Block.org.eclipse.jgit.revwalk.BlockObjQueue.Block = org.eclipse.jgit.revwalk.BlockObjQueue.Block;\n    org.eclipse.jgit.revwalk.BlockObjQueue.Block = org.eclipse.jgit.revwalk.BlockObjQueue.Block;\n} "},"status":-1},{"failures":[163,164,165,166],"tindex":"4cfb0769-4c5c-11e5-9af4-85a1f2f09eb7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.URIish:352","type":"CtIfImpl","sourcecode":"if (((((java.lang.String.length()) >= 3) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(2)) == ':')) && ((((java.lang.String.charAt(1)) >= 'A') && ((java.lang.String.charAt(1)) <= 'Z')) || (((java.lang.String.charAt(1)) >= 'a') && ((java.lang.String.charAt(1)) <= 'z'))))\n    return java.lang.String.substring(1);\nelse if ((((java.lang.String != null) && ((java.lang.String.length()) >= 2)) && ((java.lang.String.charAt(0)) == '/')) && ((java.lang.String.charAt(1)) == '~'))\n    return java.lang.String.substring(1);\nelse\n    return java.lang.String;\n"},"variableMap":{"p":"uri","s":"uri"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RemoteConfig:284","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.lang.String>.isEmpty())\n    return java.lang.String;\n"},"status":-1},{"failures":[],"tindex":"4cfb2e7a-4c5c-11e5-9af4-75f8b98b5b8f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.CanonicalTreeParser:331","type":"CtOperatorAssignmentImpl","sourcecode":"int += (org.eclipse.jgit.lib.Constants.int) + 1"},"variableMap":{"org.eclipse.jgit.lib.Constants.OBJECT_ID_LENGTH":"position","ptr":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Constants:506","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.MutableInteger.int = int + 4"},"status":-2},{"failures":[],"tindex":"4cfb2e7b-4c5c-11e5-9af4-b94b4013c13c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.NonNoteEntry:84","type":"CtWhileImpl","sourcecode":"while ((int < int) && (int < int)) {\n    int int = ((byte[][int++]) & 255) - ((byte[][int++]) & 255);\n    if (int != 0)\n        return int;\n    \n}"},"variableMap":{"bEnd":"cnt","aEnd":"cnt","bBuf":"dstbuf","aPos":"cnt","bPos":"cnt","aBuf":"dstbuf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ByteWindow:102","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.ByteWindow.copy(((int)(long - (long))), byte[], int, int)"},"status":-2},{"failures":[],"tindex":"4cfb2e7c-4c5c-11e5-9af4-bf0a5989be65","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevObjectList:129","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObjectList.Block = new org.eclipse.jgit.revwalk.RevObjectList.Block(0)"},"variableMap":{"contents":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:327","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevObjectList.Block = ((org.eclipse.jgit.revwalk.RevObjectList.Block)(org.eclipse.jgit.revwalk.RevObjectList.Block.java.lang.Object[][int]))"},"status":0},{"failures":[],"tindex":"4cfb2e7d-4c5c-11e5-9af4-d311a2b8393c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:315","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, java.lang.String.lastIndexOf('.'))"},"variableMap":{"name":"org.eclipse.jgit.lib.Constants.R_TAGS"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:389","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(org.eclipse.jgit.lib.Constants.java.lang.String.length())"},"status":-2},{"failures":[],"tindex":"4cfb2e7e-4c5c-11e5-9af4-db40554b8bbb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsGarbageCollector:307","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.pack.PackConfig.setDeltaCompress(false)"},"variableMap":{"cfg":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.storage.pack.PackConfig:707","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.storage.pack.PackConfig.setIndexVersion(org.eclipse.jgit.lib.Config.getInt(\"pack\", \"indexversion\", org.eclipse.jgit.storage.pack.PackConfig.getIndexVersion()))"},"status":0},{"failures":[167,168,6,169,170,171,141,172,143,144,145,146,173,147,148,149,150,151,152,153,174,175,176,177,178,98,99,100,101,102,38],"tindex":"4cfb558f-4c5c-11e5-9af4-4b7e98f2aa68","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:683","type":"CtLocalVariableImpl","sourcecode":"final long long = org.eclipse.jgit.util.NB.decodeUInt32(byte[], 8)"},"variableMap":{"buf":"cmds"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:818","type":"CtLocalVariableImpl","sourcecode":"final long long = org.eclipse.jgit.internal.storage.pack.BinaryDelta.getResultSize(byte[])"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}