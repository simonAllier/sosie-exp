{"failureDictionary":{"org.eclipse.jgit.diff.HistogramDiffTest.testFallbackToMyersDiff":21,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_ReplaceCommonDelete":22,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":3,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll":9,"org.eclipse.jgit.lib.IndexDiffTest.testModified":2,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog":14,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InvertBlocks":28,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward":18,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_InsertNearCommonTail":26,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":32,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":46,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_MoveBlock":24,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":45,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_CommonReplaceCommonDeleteCommon":30,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded":38,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_UniqueCommonLargerThanMatchPoint":27,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided":16,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2":7,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4":8,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce":12,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_LinuxBug":23,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":31,"org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment":4,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit":10,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch":15,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":39,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":33,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded":34,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit":6,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":49,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":17,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":47,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames4":44,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":1,"org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks":5,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded":40,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test012_SubtreeExternalSorting":0,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded":35,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_DuplicateAButCommonUniqueInB":25,"org.eclipse.jgit.diff.MyersDiffTest.testEdit_CommonGrowsPrefixAndSuffix":29,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1":41,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided":20,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames2":42,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames3":43,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":48,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2":37,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog":19,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked":13,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields":36,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":11},"transformations":[{"failures":[],"tindex":"ad20b3ef-4c59-11e5-b9d0-49e58d7caaee","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.CachedObjectDirectory:239","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.FileObjectDatabase.InsertLooseObjectResult"},"variableMap":{"result":"org.eclipse.jgit.internal.storage.file.FileObjectDatabase.InsertLooseObjectResult.EXISTS_LOOSE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:562","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.FileObjectDatabase.InsertLooseObjectResult.org.eclipse.jgit.internal.storage.file.FileObjectDatabase.InsertLooseObjectResult"},"status":-2},{"failures":[],"tindex":"ad20db00-4c59-11e5-b9d0-9db47b309b58","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:465","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.TreeRevFilter:287","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.revwalk.RenameCallback.renamed(org.eclipse.jgit.diff.DiffEntry)"},"status":-2},{"failures":[],"tindex":"ad20db01-4c59-11e5-b9d0-37a63a41b32e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackParser:349","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.io.EOFException();\n"},"variableMap":{"n":"w1"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.AbbreviatedObjectId:358","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.AnyObjectId.formatHexChar(char[], 0, int)"},"status":-2},{"failures":[],"tindex":"ad210212-4c59-11e5-b9d0-d7f5ad76f02a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.Repository:1573","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(org.eclipse.jgit.lib.Repository.getDirectory() , java.lang.String)"},"variableMap":{"filename":"p","this":"repo"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CleanCommand:106","type":"CtLocalVariableImpl","sourcecode":"java.io.File java.io.File = new java.io.File(org.eclipse.jgit.lib.Repository.getWorkTree() , java.lang.String)"},"status":-2},{"failures":[],"tindex":"ad210213-4c59-11e5-b9d0-bd0607029520","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsInserter:471","type":"CtIfImpl","sourcecode":"if (int == 0)\n    throw new java.util.zip.DataFormatException();\n"},"variableMap":{"n":"block"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:114","type":"CtIfImpl","sourcecode":"if (int == int) {\n    long |= long;\n} else {\n    long[][int] = long;\n    int = int;\n    long = long;\n}"},"status":-2},{"failures":[0,1,2,3],"tindex":"ad210214-4c59-11e5-b9d0-0b110bf1c300","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectIdOwnerMap:243","type":"CtIfImpl","sourcecode":"if ((++(int)) >= (1 << (int)))\n    throw new java.util.NoSuchElementException();\n"},"variableMap":{"dirIdx":"p","bits":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:296","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.Tree.insertEntry(int, org.eclipse.jgit.lib.Tree)"},"status":-1},{"failures":[],"tindex":"ad210215-4c59-11e5-b9d0-2dd82770e9f9","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsBlockCache:239","type":"CtIfImpl","sourcecode":"if (long == 0)\n    return 0;\n"},"variableMap":{"total":"resLen"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:103","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[4,5,6,7,8,9,10],"tindex":"ad210216-4c59-11e5-b9d0-f915b1ccb338","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackCompactor:256","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk = null"},"variableMap":{"rw":"walker"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommitList:268","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.revwalk.RevWalk = org.eclipse.jgit.revwalk.RevWalk"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20],"tindex":"ad210217-4c59-11e5-b9d0-29486b0d9267","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.PatternMatchRevFilter:109","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(\"^\"))) && (!(java.lang.String.startsWith(\".*\"))))\n    java.lang.String = \".*\" + java.lang.String;\n"},"variableMap":{"pattern":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:566","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList = org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs();\n    int int = org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList.find(java.lang.String);\n    if (0 <= int)\n        org.eclipse.jgit.internal.storage.file.RefDirectory.commitPackedRefs(org.eclipse.jgit.internal.storage.file.LockFile, org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList.remove(int), org.eclipse.jgit.internal.storage.file.RefDirectory.PackedRefList);\n    \n} finally {\n    org.eclipse.jgit.internal.storage.file.LockFile.unlock();\n}"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30],"tindex":"ad212928-4c59-11e5-b9d0-6fabe7751af4","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.BlockRevQueue:144","type":"CtUnaryOperatorImpl","sourcecode":"--(int)"},"variableMap":{"headIndex":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.LongList:116","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"ad212929-4c59-11e5-b9d0-b9df9fb268f1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:330","type":"CtIfImpl","sourcecode":"if ((int + 1) == int)\n    return false;\n"},"variableMap":{"nextNamePos":"length","nextPtr":"position"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.InflatingBitSet:128","type":"CtReturnImpl","sourcecode":"return (int < (long[].int)) && (((long[][int]) & org.eclipse.jgit.internal.storage.file.InflatingBitSet.(org.eclipse.jgit.internal.storage.file.InflatingBitSet.mask(int))) != 0)"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40],"tindex":"ad21292a-4c59-11e5-b9d0-6387945eb84d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.SimilarityRenameDetector:408","type":"CtReturnImpl","sourcecode":"return (org.eclipse.jgit.diff.SimilarityRenameDetector.int) - int"},"variableMap":{"v":"m","org.eclipse.jgit.diff.SimilarityRenameDetector.INDEX_MASK":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:621","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[41,42,43,44],"tindex":"ad21292b-4c59-11e5-b9d0-cfbd3aa0e1b2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:316","type":"CtIfImpl","sourcecode":"if (' ' == byte)\n    break;\n"},"variableMap":{"c":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:327","type":"CtIfImpl","sourcecode":"if (byte == 0)\n    break;\n"},"status":-1},{"failures":[45,46,47,48,49],"tindex":"ad21292c-4c59-11e5-b9d0-536349544ee9","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.NetRCCredentialsProvider:65","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.transport.CredentialsProvider.setDefault(new org.eclipse.jgit.transport.NetRCCredentialsProvider())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:517","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) {\n    org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode = org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode;\n    org.eclipse.jgit.submodule.SubmoduleWalk org.eclipse.jgit.submodule.SubmoduleWalk = org.eclipse.jgit.submodule.SubmoduleWalk.forIndex(org.eclipse.jgit.lib.Repository);\n    while (org.eclipse.jgit.submodule.SubmoduleWalk.next()) {\n        try {\n            if (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode == null)\n                org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode = org.eclipse.jgit.submodule.SubmoduleWalk.getModulesIgnore();\n            \n            if (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.equals(org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode))\n                continue;\n            \n        } catch (org.eclipse.jgit.errors.ConfigInvalidException e) {\n            java.io.IOException java.io.IOException = new java.io.IOException((\"Found invalid ignore param for submodule \" + (org.eclipse.jgit.submodule.SubmoduleWalk.getPath())));\n            java.io.IOException.initCause(org.eclipse.jgit.errors.ConfigInvalidException);\n            throw java.io.IOException;\n        }\n        org.eclipse.jgit.lib.Repository org.eclipse.jgit.lib.Repository = org.eclipse.jgit.submodule.SubmoduleWalk.getRepository();\n        if (org.eclipse.jgit.lib.Repository != null) {\n            try {\n                org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Repository.resolve(\"HEAD\");\n                if ((org.eclipse.jgit.lib.ObjectId != null) && (!(org.eclipse.jgit.lib.ObjectId.equals(org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId()))))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                else if ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) {\n                    org.eclipse.jgit.lib.IndexDiff org.eclipse.jgit.lib.IndexDiff = java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.get(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                    if (org.eclipse.jgit.lib.IndexDiff == null) {\n                        org.eclipse.jgit.lib.IndexDiff = new org.eclipse.jgit.lib.IndexDiff(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.submodule.SubmoduleWalk.getObjectId() , org.eclipse.jgit.lib.IndexDiff.WorkingTreeIteratorFactory.getWorkingTreeIterator(org.eclipse.jgit.lib.Repository));\n                        java.util.Map<java.lang.String, org.eclipse.jgit.lib.IndexDiff>.put(org.eclipse.jgit.submodule.SubmoduleWalk.getPath(), org.eclipse.jgit.lib.IndexDiff);\n                    } \n                    if (org.eclipse.jgit.lib.IndexDiff.diff()) {\n                        if ((((((((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) == (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && (org.eclipse.jgit.lib.IndexDiff.getAdded().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getChanged().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getConflicting().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getMissing().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getModified().isEmpty())) && (org.eclipse.jgit.lib.IndexDiff.getRemoved().isEmpty())) {\n                            continue;\n                        } \n                        java.util.Set<java.lang.String>.add(org.eclipse.jgit.submodule.SubmoduleWalk.getPath());\n                    } \n                } \n            } finally {\n                org.eclipse.jgit.lib.Repository.close();\n            }\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"ad21503d-4c59-11e5-b9d0-9bc19910d701","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.SideBandInputStream:196","type":"CtIfImpl","sourcecode":"if (0 <= int)\n    int = int;\nelse\n    break;\n"},"variableMap":{"s":"org.eclipse.jgit.revwalk.PendingGenerator.PARSED","cr":"org.eclipse.jgit.revwalk.PendingGenerator.PARSED"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.PendingGenerator:144","type":"CtForEachImpl","sourcecode":"for (final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit : org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit[]) {\n    if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.PendingGenerator.int)) != 0)\n        continue;\n    \n    if (((org.eclipse.jgit.revwalk.RevCommit.int) & (org.eclipse.jgit.revwalk.PendingGenerator.int)) == 0)\n        org.eclipse.jgit.revwalk.RevCommit.parseHeaders(org.eclipse.jgit.revwalk.RevWalk);\n    \n    org.eclipse.jgit.revwalk.RevCommit.int |= org.eclipse.jgit.revwalk.PendingGenerator.int;\n    org.eclipse.jgit.revwalk.DateRevQueue.add(org.eclipse.jgit.revwalk.RevCommit);\n}"},"status":-2}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}