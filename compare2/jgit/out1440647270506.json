{"failureDictionary":{"org.eclipse.jgit.util.RawSubStringPatternTest.testCaseInsensitive":3,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromFallback":13,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterSmallObjects":12,"org.eclipse.jgit.util.Base64Test.testDecode":4,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit":7,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":6,"org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits":8,"org.eclipse.jgit.util.Base64Test.testEncodeMatchesDecode":5,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":0,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":11,"org.eclipse.jgit.util.RawSubStringPatternTest.testBoundary":2,"org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReadFromInserterLargerObjects":14,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":10,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":1},"transformations":[{"failures":[0],"tindex":"638fccf1-4c6e-11e5-890c-8140269aceb2","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:1455","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"setUpstreamName must be called after setUpstream.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:240","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.api.errors.StashApplyFailureException(org.eclipse.jgit.internal.JGitText.get().java.lang.String)"},"status":-1},{"failures":[],"tindex":"638ff402-4c6e-11e5-890c-e54d22994570","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1329","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int = java.lang.Runtime.getRuntime().availableProcessors();\n"},"variableMap":{"threads":"org.eclipse.jgit.lib.IndexDiff.TREE"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.IndexDiff:432","type":"CtWhileImpl","sourcecode":"while (org.eclipse.jgit.treewalk.TreeWalk.next()) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator);\n    org.eclipse.jgit.dircache.DirCacheIterator org.eclipse.jgit.dircache.DirCacheIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.dircache.DirCacheIterator.org.eclipse.jgit.dircache.DirCacheIterator);\n    org.eclipse.jgit.treewalk.WorkingTreeIterator org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.TreeWalk.getTree(org.eclipse.jgit.lib.IndexDiff.int, org.eclipse.jgit.treewalk.WorkingTreeIterator.org.eclipse.jgit.treewalk.WorkingTreeIterator);\n    if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n        final org.eclipse.jgit.dircache.DirCacheEntry org.eclipse.jgit.dircache.DirCacheEntry = org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry();\n        if (org.eclipse.jgit.dircache.DirCacheEntry != null) {\n            int int = org.eclipse.jgit.dircache.DirCacheEntry.getStage();\n            if (int > 0) {\n                java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n                org.eclipse.jgit.lib.IndexDiff.addConflict(java.lang.String, int);\n                continue;\n            } \n        } \n    } \n    if (org.eclipse.jgit.treewalk.AbstractTreeIterator != null) {\n        if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n            if ((!(org.eclipse.jgit.treewalk.AbstractTreeIterator.idEqual(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryRawMode()) != (org.eclipse.jgit.dircache.DirCacheIterator.getEntryRawMode()))) {\n                if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator)))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n                \n            } \n        } else {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.AbstractTreeIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n            if (org.eclipse.jgit.treewalk.WorkingTreeIterator != null)\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        }\n    } else {\n        if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        } else {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (!(org.eclipse.jgit.treewalk.WorkingTreeIterator.isEntryIgnored()))) {\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            } \n        }\n    }\n    if (org.eclipse.jgit.dircache.DirCacheIterator != null) {\n        if (org.eclipse.jgit.treewalk.WorkingTreeIterator == null) {\n            if ((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)))\n                java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n            \n        } else {\n            if (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheIterator.getDirCacheEntry(), true, org.eclipse.jgit.treewalk.TreeWalk.getObjectReader())) {\n                if (((!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.dircache.DirCacheIterator))) || (!org.eclipse.jgit.lib.IndexDiff.(isEntryGitLink(org.eclipse.jgit.treewalk.WorkingTreeIterator)))) || (((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode)) && ((org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode) != (org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode.org.eclipse.jgit.submodule.SubmoduleWalk.IgnoreSubmoduleMode))))\n                    java.util.Set<java.lang.String>.add(org.eclipse.jgit.treewalk.TreeWalk.getPathString());\n                \n            } \n        }\n    } \n    for (int int = 0 ; int < (org.eclipse.jgit.treewalk.TreeWalk.getTreeCount()) ; int++) {\n        java.util.Set<java.lang.String> java.util.Set<java.lang.String> = java.util.Map<org.eclipse.jgit.lib.FileMode, java.util.Set<java.lang.String>>.get(org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int));\n        java.lang.String java.lang.String = org.eclipse.jgit.treewalk.TreeWalk.getPathString();\n        if (java.lang.String != null) {\n            if (java.util.Set<java.lang.String> == null)\n                java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>();\n            \n            java.util.Set<java.lang.String>.add(java.lang.String);\n            java.util.Map<org.eclipse.jgit.lib.FileMode, java.util.Set<java.lang.String>>.put(org.eclipse.jgit.treewalk.TreeWalk.getFileMode(int), java.util.Set<java.lang.String>);\n        } \n    }\n}"},"status":-2},{"failures":[1],"tindex":"63901b13-4c6e-11e5-890c-9d5160c7ca4e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.errors.CheckoutConflictException:79","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.StringBuilder.append(\"\\n\");\n    java.lang.StringBuilder.append(java.lang.String);\n}"},"variableMap":{"builder":"sb","files":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:307","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.patch.HunkHeader.copyLine(java.lang.StringBuilder, java.lang.String[], int[], int)"},"status":-1},{"failures":[2,3],"tindex":"63901b14-4c6e-11e5-890c-15b342081259","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawSubStringPattern:98","type":"CtForImpl","sourcecode":"OUTER : for ( ; int <= int ; int++) {\n    if (org.eclipse.jgit.util.RawSubStringPattern.org.eclipse.jgit.util.RawSubStringPattern.neq(byte, byte[][int])) {\n        while (((++int) <= int) && org.eclipse.jgit.util.RawSubStringPattern.(org.eclipse.jgit.util.RawSubStringPattern.neq(byte, byte[][int]))) {\n        }\n        if (int > int)\n            return -1;\n        \n    } \n    int int = int + 1;\n    for (int int = 1 ; int < int ; int++ , int++) {\n        if (org.eclipse.jgit.util.RawSubStringPattern.org.eclipse.jgit.util.RawSubStringPattern.neq(byte[][int], byte[][int]))\n            continue OUTER;\n        \n    }\n    return int;\n}"},"status":-1},{"failures":[],"tindex":"63904225-4c6e-11e5-890c-ff9729f610bc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:402","type":"CtIfImpl","sourcecode":"if (int > int)\n    throw new org.eclipse.jgit.errors.CorruptObjectException(\"truncated in object id\");\n"},"variableMap":{"sz":"resPtr","ptr":"srcPtr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:401","type":"CtIfImpl","sourcecode":"if ((byte[][int]) != (byte[][int]))\n    break;\n"},"status":-2},{"failures":[],"tindex":"63904226-4c6e-11e5-890c-2da914a7c3db","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.PacketLineOut:163","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:88","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[4,5],"tindex":"63904227-4c6e-11e5-890c-77a2bedbe4f8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.QuotedString:245","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.QuotedString.GitPathStyle.byte[]['\\b'] = 'b'"},"variableMap":{"org.eclipse.jgit.util.QuotedString.GitPathStyle.quote":"destination"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:243","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 1)] = ((byte)(int >> 8))"},"status":-1},{"failures":[],"tindex":"63904228-4c6e-11e5-890c-6b1e8f108f3c","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:569","type":"CtOperatorAssignmentImpl","sourcecode":"int += 46"},"variableMap":{"ptr":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:106","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.MutableInteger.int = org.eclipse.jgit.util.RawParseUtils.org.eclipse.jgit.util.RawParseUtils.nextLF(byte[], int, ' ')"},"status":-2},{"failures":[],"tindex":"63904229-4c6e-11e5-890c-173c95b15607","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.LockFile:261","type":"CtAssignmentImpl","sourcecode":"byte[][org.eclipse.jgit.lib.Constants.int] = '\\n'"},"status":0},{"failures":[6,7,8],"tindex":"6390422a-4c6e-11e5-890c-e74cd4ee91aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.GarbageCollectCommand:222","type":"CtInvocationImpl","sourcecode":"java.util.Properties.put(\"numberOfLooseRefs\", org.eclipse.jgit.internal.storage.file.GC.RepoStatistics.long)"},"status":-1},{"failures":[9,10,11],"tindex":"6390422b-4c6e-11e5-890c-7d6b2a7e315c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.ResolveMerger:470","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.merge.ResolveMerger.org.eclipse.jgit.merge.ResolveMerger.nonTree(int)) {\n    org.eclipse.jgit.dircache.DirCacheEntry = new org.eclipse.jgit.dircache.DirCacheEntry(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getRawPath());\n    org.eclipse.jgit.dircache.DirCacheEntry.setObjectId(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectId(org.eclipse.jgit.merge.ResolveMerger.int));\n    org.eclipse.jgit.dircache.DirCacheEntry.setFileMode(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getFileMode(org.eclipse.jgit.merge.ResolveMerger.int));\n} "},"variableMap":{"org.eclipse.jgit.merge.ResolveMerger.T_OURS":"modeT","tw":"tw","ourDce":"e","this":"this","modeO":"modeT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.ResolveMerger:630","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.merge.ResolveMerger.org.eclipse.jgit.merge.ResolveMerger.nonTree(int)) {\n    if (org.eclipse.jgit.dircache.DirCacheEntry != null)\n        java.util.Map<java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry>.put(org.eclipse.jgit.treewalk.NameConflictTreeWalk.getPathString(), org.eclipse.jgit.dircache.DirCacheEntry);\n    \n} "},"status":-1},{"failures":[],"tindex":"6390693c-4c6e-11e5-890c-ff2af95d7a60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:290","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"6390693d-4c6e-11e5-890c-8576f19d1abe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:447","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.FileRepository.detectIndexChanges()"},"variableMap":{"this":"repository"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.events.RepositoryEvent:68","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.Repository) == null)\n    org.eclipse.jgit.lib.Repository = org.eclipse.jgit.lib.Repository;\n"},"status":-2},{"failures":[12,13,14],"tindex":"6390693e-4c6e-11e5-890c-6b9e8ff75618","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:369","type":"CtAssignmentImpl","sourcecode":"java.util.zip.Inflater = null"},"variableMap":{"inf":"inf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReader:648","type":"CtAssignmentImpl","sourcecode":"java.util.zip.Inflater = org.eclipse.jgit.lib.InflaterCache.get()"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}