{"failureDictionary":{"org.eclipse.jgit.lib.T0002_TreeTest.test000_sort_05":7,"org.eclipse.jgit.lib.T0002_TreeTest.test000_sort_03":6,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":50,"org.eclipse.jgit.lib.T0002_TreeTest.test000_sort_01":5,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories":36,"org.eclipse.jgit.api.NameRevCommandTest.annotatedTags":61,"org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink":3,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":2,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":25,"org.eclipse.jgit.lib.IndexDiffTest.testModified":1,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":22,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":15,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":20,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":24,"org.eclipse.jgit.lib.RepositoryResolveTest.testDerefTag":35,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":26,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":40,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":27,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance":33,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent":65,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath":31,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":45,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":19,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":39,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":37,"org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput":34,"org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root":30,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":52,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":46,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":12,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":29,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":68,"org.eclipse.jgit.api.NameRevCommandTest.prefix":60,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":28,"org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames":32,"org.eclipse.jgit.api.NameRevCommandTest.onePathMerge":64,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":51,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":14,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":38,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":42,"org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_close_Timeout":57,"org.eclipse.jgit.lib.T0002_TreeTest.test006_addDeepTree":10,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":44,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":16,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":17,"org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor":63,"org.eclipse.jgit.lib.T0002_TreeTest.test002_addFile":9,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":18,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":13,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testObjectDirectorySnapshot":70,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":54,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":23,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":41,"org.eclipse.jgit.api.NameRevCommandTest.nameExact":67,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":21,"org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack":56,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":47,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":0,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent":59,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth1":71,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth2":72,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test012_SubtreeExternalSorting":11,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testDepth3":73,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":43,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":55,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":69,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":49,"org.eclipse.jgit.api.NameRevCommandTest.ref":62,"org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath":66,"org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge":58,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":48,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":53,"org.eclipse.jgit.lib.T0002_TreeTest.test008_SubtreeInternalSorting":8,"org.eclipse.jgit.lib.T0002_TreeTest.test004_addTree":4},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"74eae834-4c4e-11e5-82b5-2ddf235c2c9a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:206","type":"CtIfImpl","sourcecode":"if ((int == int) || ((byte[][(int - 1)]) != '>'))\n    return -1;\n"},"variableMap":{"emailB":"j","raw":"nameUTF8","emailE":"nameStart"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Tree:93","type":"CtForImpl","sourcecode":"for (int = 0, int = int ; (int < (byte[].int)) && (int < int) ; int++ , int++) {\n    final int int = (byte[][int]) & 255;\n    final int int = (byte[][int]) & 255;\n    if (int < int)\n        return -1;\n    else if (int > int)\n        return 1;\n    \n}"},"status":-1},{"failures":[],"tindex":"74eb0f45-4c4e-11e5-82b5-79cd586079c0","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revplot.AbstractPlotRenderer:125","type":"CtAssignmentImpl","sourcecode":"int = int - ((org.eclipse.jgit.revplot.AbstractPlotRenderer.int) / 2)"},"variableMap":{"cx":"dist","org.eclipse.jgit.revplot.AbstractPlotRenderer.LANE_WIDTH":"dist","ix":"dist"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:570","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"74eb0f46-4c4e-11e5-82b5-1fbc7051ef9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:180","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.merge.MergeResult<S>.add(0, int, java.lang.Math.min(org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.diff.Edit.getBeginA()), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState)"},"status":-1},{"failures":[],"tindex":"74eb0f47-4c4e-11e5-82b5-c3e3dd727184","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCache:909","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheTree) == null)\n    org.eclipse.jgit.dircache.DirCacheTree = new org.eclipse.jgit.dircache.DirCacheTree();\n"},"variableMap":{"tree":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheTree:382","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.dircache.DirCacheTree) != null) {\n    org.eclipse.jgit.dircache.DirCacheTree.appendName(java.lang.StringBuilder);\n    java.lang.StringBuilder.append(org.eclipse.jgit.dircache.DirCacheTree.getNameString());\n    java.lang.StringBuilder.append('/');\n} else if (org.eclipse.jgit.dircache.DirCacheTree.(nameLength()) > 0) {\n    java.lang.StringBuilder.append(org.eclipse.jgit.dircache.DirCacheTree.getNameString());\n    java.lang.StringBuilder.append('/');\n} "},"status":-2},{"failures":[],"tindex":"74eb0f48-4c4e-11e5-82b5-0bea8d96e52d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.BinaryDelta:145","type":"CtOperatorAssignmentImpl","sourcecode":"int |= ((long)((int & 127))) << int"},"variableMap":{"c":"distance","shift":"distance","baseLen":"distance"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:164","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int = (org.eclipse.jgit.api.NameRevCommand.NameRevCommit.int) + 1"},"status":-2},{"failures":[],"tindex":"74eb0f49-4c4e-11e5-82b5-530260fb9fbe","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.RevCommit:230","type":"CtIfImpl","sourcecode":"if (int == (org.eclipse.jgit.revwalk.RevCommit.int))\n    return org.eclipse.jgit.revwalk.RevCommit.org.eclipse.jgit.revwalk.RevCommit.defer(org.eclipse.jgit.revwalk.RevCommit);\n"},"variableMap":{"org.eclipse.jgit.revwalk.RevCommit.STACK_DEPTH":"carry","depth":"flags","c":"c","this":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevCommit:244","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.revwalk.RevCommit.int) & int) == int)\n    return null;\n"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"74eb0f4a-4c4e-11e5-82b5-b91248c2d552","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Repository:459","type":"CtForImpl","sourcecode":"for (int = int + 1 ; int < (char[].int) ; ++int) {\n    if (!(java.lang.Character.isDigit(char[][int])))\n        break;\n    \n}"},"variableMap":{"revChars":"revChars","length":"i","i":"i","j":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:540","type":"CtIfImpl","sourcecode":"if (int == 0)\n    java.lang.String = new java.lang.String(char[] , int , int);\nelse {\n    int = int + 1;\n    break;\n}"},"status":-1},{"failures":[],"tindex":"74eb365b-4c4e-11e5-82b5-e54fa255a533","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.Config:1264","type":"CtIfImpl","sourcecode":"if ('\\\"' == int) {\n    boolean = !boolean;\n    continue;\n} "},"variableMap":{"c":"options","quote":"delete"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.FileUtils:155","type":"CtIfImpl","sourcecode":"if (java.io.File.isDirectory()) {\n    boolean = true;\n} else {\n    if ((int & (org.eclipse.jgit.util.FileUtils.int)) == 0)\n        throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File.getAbsolutePath()));\n    \n}"},"status":-2},{"failures":[],"tindex":"74eb365c-4c4e-11e5-82b5-016929f13839","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.CherryPickCommand:188","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.api.CherryPickResult.org.eclipse.jgit.api.CherryPickResult"},"variableMap":{"org.eclipse.jgit.api.CherryPickResult.CONFLICT":"org.eclipse.jgit.api.CherryPickResult.CONFLICT"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.CherryPickCommand:138","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : java.util.List<org.eclipse.jgit.lib.Ref>) {\n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getPeeledObjectId();\n    if (org.eclipse.jgit.lib.ObjectId == null)\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.Ref.getObjectId();\n    \n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.parseCommit(org.eclipse.jgit.lib.ObjectId);\n    final org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.api.CherryPickCommand.getParentCommit(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevWalk);\n    java.lang.String java.lang.String = org.eclipse.jgit.api.CherryPickCommand.calculateOurName(org.eclipse.jgit.lib.Ref);\n    java.lang.String java.lang.String = ((org.eclipse.jgit.revwalk.RevCommit.getId().abbreviate(7).name()) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage());\n    org.eclipse.jgit.merge.ResolveMerger org.eclipse.jgit.merge.ResolveMerger = ((org.eclipse.jgit.merge.ResolveMerger)(org.eclipse.jgit.merge.MergeStrategy.newMerger(org.eclipse.jgit.lib.Repository)));\n    org.eclipse.jgit.merge.ResolveMerger.setWorkingTreeIterator(new org.eclipse.jgit.treewalk.FileTreeIterator(org.eclipse.jgit.lib.Repository));\n    org.eclipse.jgit.merge.ResolveMerger.setBase(org.eclipse.jgit.revwalk.RevCommit.getTree());\n    org.eclipse.jgit.merge.ResolveMerger.setCommitNames(new java.lang.String[]{ \"BASE\" , java.lang.String , java.lang.String });\n    if (org.eclipse.jgit.merge.ResolveMerger.merge(org.eclipse.jgit.revwalk.RevCommit, org.eclipse.jgit.revwalk.RevCommit)) {\n        if (org.eclipse.jgit.lib.AnyObjectId.equals(org.eclipse.jgit.revwalk.RevCommit.getTree().getId(), org.eclipse.jgit.merge.ResolveMerger.getResultTreeId()))\n            continue;\n        \n        org.eclipse.jgit.dircache.DirCacheCheckout org.eclipse.jgit.dircache.DirCacheCheckout = new org.eclipse.jgit.dircache.DirCacheCheckout(org.eclipse.jgit.lib.Repository , org.eclipse.jgit.revwalk.RevCommit.getTree() , org.eclipse.jgit.lib.Repository.lockDirCache() , org.eclipse.jgit.merge.ResolveMerger.getResultTreeId());\n        org.eclipse.jgit.dircache.DirCacheCheckout.setFailOnConflict(true);\n        org.eclipse.jgit.dircache.DirCacheCheckout.checkout();\n        if (!(boolean))\n            org.eclipse.jgit.revwalk.RevCommit = new org.eclipse.jgit.api.Git(org.eclipse.jgit.api.GitCommand<org.eclipse.jgit.api.CherryPickResult>.getRepository()).commit().setMessage(org.eclipse.jgit.revwalk.RevCommit.getFullMessage()).setReflogComment((((java.lang.String) + \" \") + (org.eclipse.jgit.revwalk.RevCommit.getShortMessage()))).setAuthor(org.eclipse.jgit.revwalk.RevCommit.getAuthorIdent()).call();\n        \n        java.util.List<org.eclipse.jgit.lib.Ref>.add(org.eclipse.jgit.lib.Ref);\n    } else {\n        if (org.eclipse.jgit.merge.ResolveMerger.failed())\n            return new org.eclipse.jgit.api.CherryPickResult(org.eclipse.jgit.merge.ResolveMerger.getFailingPaths());\n        \n        java.lang.String java.lang.String = new org.eclipse.jgit.merge.MergeMessageFormatter().formatWithConflicts(org.eclipse.jgit.revwalk.RevCommit.getFullMessage(), org.eclipse.jgit.merge.ResolveMerger.getUnmergedPaths());\n        if (!(boolean))\n            org.eclipse.jgit.lib.Repository.writeCherryPickHead(org.eclipse.jgit.revwalk.RevCommit.getId());\n        \n        org.eclipse.jgit.lib.Repository.writeMergeCommitMsg(java.lang.String);\n        return org.eclipse.jgit.api.CherryPickResult.org.eclipse.jgit.api.CherryPickResult;\n    }\n}"},"status":-2},{"failures":[57],"tindex":"74eb5d6d-4c4e-11e5-82b5-070d3e6da4c8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.api.ArchiveCommand:203","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.io.TimeoutOutputStream:139","type":"CtThrowImpl","sourcecode":"throw org.eclipse.jgit.util.io.TimeoutOutputStream.writeTimedOut()"},"status":-1},{"failures":[],"tindex":"74eb5d6e-4c4e-11e5-82b5-b7d78810f2f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.RevWalk:1406","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"74eb5d6f-4c4e-11e5-82b5-d92f775baedb","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.revwalk.filter.MessageRevFilter:84","type":"CtLocalVariableImpl","sourcecode":"final int int = org.eclipse.jgit.util.RawParseUtils.commitMessage(byte[], 0)"},"variableMap":{"raw":"res"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:298","type":"CtLocalVariableImpl","sourcecode":"int int = org.eclipse.jgit.internal.storage.pack.DeltaIndex.org.eclipse.jgit.internal.storage.pack.DeltaIndex.hashBlock(byte[], 0)"},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67],"tindex":"74eb5d70-4c4e-11e5-82b5-07a815d14fa7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.NameRevCommand:343","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String) == null)\n    org.eclipse.jgit.api.NameRevCommand.NameRevCommit.java.lang.String = org.eclipse.jgit.lib.Ref.getName();\n"},"status":-1},{"failures":[68,69,70,71,72,73],"tindex":"74eb5d71-4c4e-11e5-82b5-af4cdd23ca5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:643","type":"CtTryImpl","sourcecode":"try {\n    java.lang.String java.lang.String;\n    while ((java.lang.String = java.io.BufferedReader.readLine()) != null)\n        java.util.Set<org.eclipse.jgit.lib.ObjectId>.add(org.eclipse.jgit.lib.ObjectId.fromString(java.lang.String));\n} finally {\n    java.io.BufferedReader.close();\n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":14,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}