{"failureDictionary":{"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":4,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertHeadMiddle":23,"org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld":75,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl":67,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testWorkdirIsParent_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":32,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":38,"org.eclipse.jgit.patch.PatchCcTest.testParse_CcNewFile":74,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtStart":54,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithWorktreeConfig":33,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":42,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":46,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":3,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":39,"org.eclipse.jgit.merge.MergeAlgorithmTest.testOneAgainstTwoConflictingModifications":57,"org.eclipse.jgit.merge.MergeAlgorithmTest.testDeleteVsModify":62,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":37,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_relative_workdirconfig":36,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":48,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyZeros_Length128":18,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":52,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":10,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":63,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl":71,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openrepo_default_absolute_workdirconfig":35,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":0,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testCopyWholeObject_Length128":20,"org.eclipse.jgit.merge.MergeAlgorithmTest.testAdjacentModifications":61,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":13,"org.eclipse.jgit.submodule.SubmoduleInitTest.repositoryWithUninitializedModule":69,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":1,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":17,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":51,"org.eclipse.jgit.merge.MergeAlgorithmTest.testConflictAtEnd":53,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl":70,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":64,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects":30,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoSimilarModsAndOneInsert":56,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":9,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testLimitObjectSize_InsertFrontFails":19,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":8,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testInsertTail":22,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":50,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":41,"org.eclipse.jgit.merge.MergeAlgorithmTest.testInsertVsModify":58,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoConflictingModifications":59,"org.eclipse.jgit.merge.MergeAlgorithmTest.testSameModification":60,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl":66,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":11,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":55,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":47,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":44,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3":26,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse":27,"org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow":29,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2":25,"org.eclipse.jgit.patch.GetTextTest.testGetText_DiffCc":72,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1":24,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":6,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":7,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":16,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas":28,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":15,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":49,"org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl":68,"org.eclipse.jgit.internal.storage.pack.DeltaIndexTest.testIndexSize":21,"org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits":31,"org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testNotBare_CreateRepositoryFromGitDirOnlyWithBareConfigFalse":34,"org.eclipse.jgit.patch.PatchCcTest.testParse_OneFileCc":73,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":43,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":65,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":40,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":45,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":14,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":2,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":12,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":5},"transformations":[{"failures":[],"tindex":"6542233f-4c3c-11e5-a151-4144c78b15d5","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectory:263","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.ObjectDirectory.insertPack(org.eclipse.jgit.internal.storage.file.PackFile)"},"status":-2},{"failures":[],"tindex":"65424a50-4c3c-11e5-a151-0bdc25c08841","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.LeafBucket:209","type":"CtForImpl","sourcecode":"for ( ; org.eclipse.jgit.notes.NonNoteEntry != null ; org.eclipse.jgit.notes.NonNoteEntry = org.eclipse.jgit.notes.NonNoteEntry.org.eclipse.jgit.notes.NonNoteEntry)\n    org.eclipse.jgit.notes.NonNoteEntry.format(org.eclipse.jgit.lib.TreeFormatter);"},"status":-1},{"failures":[],"tindex":"65424a51-4c3c-11e5-a151-8db208e88c54","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.FooterLine:96","type":"CtOperatorAssignmentImpl","sourcecode":"byte += 'a' - 'A'"},"variableMap":{"b":"org.eclipse.jgit.util.Base64.WHITE_SPACE_DEC"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.Base64:75","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.util.Base64.byte[]['\\r'] = org.eclipse.jgit.util.Base64.byte"},"status":-2},{"failures":[],"tindex":"65424a52-4c3c-11e5-a151-c5be0c2ba516","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.api.RebaseCommand:826","type":"CtReturnImpl","sourcecode":"return \"rd\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.UserConfig:125","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"65424a53-4c3c-11e5-a151-53dd5ac916c1","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.ObjectToPack:297","type":"CtOperatorAssignmentImpl","sourcecode":"int |= (int & (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)) << (org.eclipse.jgit.internal.storage.pack.ObjectToPack.int)"},"variableMap":{"org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_SHIFT":"hash","flag":"ptr","flags":"hash","org.eclipse.jgit.internal.storage.pack.ObjectToPack.EXT_MASK":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:452","type":"CtAssignmentImpl","sourcecode":"int = ((int << 8) | ((byte[][(int + 5)]) & 255)) ^ (org.eclipse.jgit.internal.storage.pack.DeltaIndex.int[][(int >>> 23)])"},"status":-1},{"failures":[],"tindex":"65424a54-4c3c-11e5-a151-b3f355c3d440","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:895","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef"},"variableMap":{"ref":"ref"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:938","type":"CtIfImpl","sourcecode":"if (((org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef != null) && (!(org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.isSymbolic()))) && (org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef.getTarget().getObjectId().equals(org.eclipse.jgit.lib.ObjectId))) {\n    org.eclipse.jgit.internal.storage.file.FileSnapshot.setClean(org.eclipse.jgit.internal.storage.file.FileSnapshot);\n    return org.eclipse.jgit.internal.storage.file.RefDirectory.LooseRef;\n} "},"status":-2},{"failures":[32,33,34,35,36],"tindex":"65427165-4c3c-11e5-a151-99b8dd3da43b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:690","type":"CtReturnImpl","sourcecode":"return new org.eclipse.jgit.lib.Config()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BaseRepositoryBuilder:674","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.(getGitDir()) != null) {\n    java.io.File java.io.File = org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.safeFS().resolve(org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.getGitDir(), org.eclipse.jgit.lib.Constants.java.lang.String);\n    org.eclipse.jgit.storage.file.FileBasedConfig org.eclipse.jgit.storage.file.FileBasedConfig = new org.eclipse.jgit.storage.file.FileBasedConfig(java.io.File , org.eclipse.jgit.lib.BaseRepositoryBuilder<B, R>.safeFS());\n    try {\n        org.eclipse.jgit.storage.file.FileBasedConfig.load();\n    } catch (org.eclipse.jgit.errors.ConfigInvalidException err) {\n        throw new java.lang.IllegalArgumentException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File.getAbsolutePath(), org.eclipse.jgit.errors.ConfigInvalidException.getMessage()));\n    }\n    return org.eclipse.jgit.storage.file.FileBasedConfig;\n} else {\n    return new org.eclipse.jgit.lib.Config();\n}"},"status":-1},{"failures":[37,2,38,39,40,41,42,43,44,45,10,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"65427166-4c3c-11e5-a151-5906b4cbec2a","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:241","type":"CtOperatorAssignmentImpl","sourcecode":"int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA())"},"variableMap":{"theirsEdit":"theirsEdit","oursEndB":"current","oursEdit":"theirsEdit"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:294","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(org.eclipse.jgit.diff.Edit.getEndA(), org.eclipse.jgit.diff.Edit.getEndA())"},"status":-1},{"failures":[],"tindex":"65427167-4c3c-11e5-a151-abae5fe78cf7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsReaderOptions:85","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(0, int)"},"variableMap":{"deltaBaseCacheLimit":"startLine","maxBytes":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:109","type":"CtAssignmentImpl","sourcecode":"org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage[][int].int = -org.eclipse.jgit.util.RawParseUtils.(org.eclipse.jgit.util.RawParseUtils.parseBase10(byte[], org.eclipse.jgit.util.MutableInteger.int, org.eclipse.jgit.util.MutableInteger))"},"status":-2},{"failures":[],"tindex":"65427168-4c3c-11e5-a151-add1019227bc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.ObjectDirectoryPackParser:228","type":"CtInvocationImpl","sourcecode":"java.util.zip.CRC32.reset()"},"status":-1},{"failures":[],"tindex":"65429879-4c3c-11e5-a151-6b6ac9062028","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.ObjectChecker:394","type":"CtThrowImpl","sourcecode":"throw new org.eclipse.jgit.errors.CorruptObjectException(\"incorrectly sorted\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:615","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(java.text.MessageFormat.format(org.eclipse.jgit.internal.JGitText.get().java.lang.String, java.io.File))"},"status":0},{"failures":[],"tindex":"6542987a-4c3c-11e5-a151-e72f067cc0ce","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:319","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<org.eclipse.jgit.internal.storage.file.PackLock>emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.WindowCursor:135","type":"CtReturnImpl","sourcecode":"return java.util.HashSet<org.eclipse.jgit.lib.ObjectId>"},"status":-2},{"failures":[65,17,66,67,68,69,70,71],"tindex":"6542987b-4c3c-11e5-a151-d543d6a76e29","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.lib.BatchRefUpdate:359","type":"CtReturnImpl","sourcecode":"return java.util.Collection<java.lang.String>"},"variableMap":{"ret":"paths"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.SubmoduleInitCommand:97","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.submodule.SubmoduleWalk org.eclipse.jgit.submodule.SubmoduleWalk = org.eclipse.jgit.submodule.SubmoduleWalk.forIndex(org.eclipse.jgit.lib.Repository);\n    if (!(java.util.Collection<java.lang.String>.isEmpty()))\n        org.eclipse.jgit.submodule.SubmoduleWalk.setFilter(org.eclipse.jgit.treewalk.filter.PathFilterGroup.createFromStrings(java.util.Collection<java.lang.String>));\n    \n    org.eclipse.jgit.lib.StoredConfig org.eclipse.jgit.lib.StoredConfig = org.eclipse.jgit.lib.Repository.getConfig();\n    java.util.List<java.lang.String> java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n    while (org.eclipse.jgit.submodule.SubmoduleWalk.next()) {\n        if ((org.eclipse.jgit.submodule.SubmoduleWalk.getConfigUrl()) != null)\n            continue;\n        \n        java.lang.String java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.getPath();\n        java.lang.String java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.getRemoteUrl();\n        java.lang.String java.lang.String = org.eclipse.jgit.submodule.SubmoduleWalk.getModulesUpdate();\n        if (java.lang.String != null)\n            org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n        \n        if (java.lang.String != null)\n            org.eclipse.jgit.lib.StoredConfig.setString(org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String, org.eclipse.jgit.lib.ConfigConstants.java.lang.String, java.lang.String);\n        \n        if ((java.lang.String != null) || (java.lang.String != null))\n            java.util.List<java.lang.String>.add(java.lang.String);\n        \n    }\n    if (!(java.util.List<java.lang.String>.isEmpty()))\n        org.eclipse.jgit.lib.StoredConfig.save();\n    \n    return java.util.List<java.lang.String>;\n} catch (java.io.IOException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(java.io.IOException.getMessage() , java.io.IOException);\n} catch (org.eclipse.jgit.errors.ConfigInvalidException e) {\n    throw new org.eclipse.jgit.api.errors.JGitInternalException(org.eclipse.jgit.errors.ConfigInvalidException.getMessage() , org.eclipse.jgit.errors.ConfigInvalidException);\n}"},"status":-1},{"failures":[],"tindex":"6542bf8c-4c3c-11e5-a151-79e3496f7515","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.WindowCacheConfig:225","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.WindowCache.reconfigure(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.EmptyTreeIterator:143","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator.stopWalk()"},"status":-2},{"failures":[72,73,74,75],"tindex":"6542bf8d-4c3c-11e5-a151-a17496a1a1ca","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriter:1329","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int = java.lang.Runtime.getRuntime().availableProcessors();\n"},"variableMap":{"threads":"localcontext"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.patch.CombinedHunkHeader:160","type":"CtSwitchImpl","sourcecode":"switch (byte[][(int + int)]) {\n    case ' ' :\n        int++;\n        (org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage[][int].int)++;\n        continue;\n    case '-' :\n        (org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage[][int].int)++;\n        continue;\n    case '+' :\n        (org.eclipse.jgit.patch.CombinedHunkHeader.CombinedOldImage[][int].int)++;\n        int++;\n        continue;\n    default :\n        break SCAN;\n}"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}