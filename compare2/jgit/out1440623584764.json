{"failureDictionary":{"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict2":411,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_leftDFconflict1":410,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualNewTrees":587,"org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict":193,"org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit":271,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail":149,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir":120,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":137,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":195,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict":330,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName":130,"org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile":351,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules4thru13_IndexEntryNotInHead":374,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef":265,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree":176,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles":319,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit":457,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwice":110,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_concurrentSubtreeChange":414,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate":481,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked":109,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules":125,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_DetectConflict":36,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit":451,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted":88,"org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes":254,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.idOffset":74,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow":70,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage":450,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag":317,"org.eclipse.jgit.merge.CherryPickTest.testRevert":416,"org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet":184,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":146,"org.eclipse.jgit.merge.ResolveMergerTest.checkForCorrectIndex":598,"org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate":54,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2":448,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1":447,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint":307,"org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges":144,"org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch":281,"org.eclipse.jgit.treewalk.TreeWalkBasicDiffTest.testMissingSubtree_DetectFileAdded_FileModified":39,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit":100,"org.eclipse.jgit.api.BranchCommandTest.testDelete":286,"org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge":348,"org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits":59,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d":556,"org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate":115,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e":557,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile":92,"org.eclipse.jgit.merge.ResolveMergerTest.checkLockedFilesToBeDeleted":586,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a":553,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b":554,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c":555,"org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout":321,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate":363,"org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout":325,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted":98,"org.eclipse.jgit.lib.IndexModificationTimesTest.testModify":255,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":214,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_validSubtreeSort":409,"org.eclipse.jgit.revwalk.RevTagParseTest.testParseAllFields":2,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration":400,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflictsX0":364,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty":133,"org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree":223,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty":474,"org.eclipse.jgit.api.MergeCommandTest.testMergeMessage":216,"org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick":177,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch":316,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory":342,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified":93,"org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge":157,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees":430,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflictSubtreeChange":412,"org.eclipse.jgit.api.RmCommandTest.testRemoveCached":48,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test021_createTreeTag":8,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting":24,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c":560,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d":561,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":142,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e":562,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":141,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs":268,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex":168,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit":309,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a":558,"org.eclipse.jgit.api.StashApplyCommandTest.indexAdd":338,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b":559,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted":95,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup":431,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a":533,"org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits":273,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c":535,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable2":489,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b":534,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e":537,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepository":131,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d":536,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict":358,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex":213,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":139,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount":180,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict":219,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource":229,"org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem":148,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations":299,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash":433,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict":389,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7":20,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6":19,"org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains":282,"org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches":473,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleMediumSizeFileWithNewLine":113,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit":224,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFInput":375,"org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch":284,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag":270,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b":564,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase":60,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c":565,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d":566,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_checkOtherFiles":494,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e":567,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":439,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":329,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a":563,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableTreesWithoutIndex":589,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b":529,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a":528,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex":75,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d":531,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c":530,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testHasFlags":11,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e":532,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag":275,"org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict":395,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick":171,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch":287,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict":463,"org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits":256,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedFolderIsNotAConflict":592,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias":253,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit":449,"org.eclipse.jgit.api.DiffCommandTest.testDiffModified":179,"org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits":258,"org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile":486,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d":581,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c":580,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e":582,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b":579,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a":578,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst":68,"org.eclipse.jgit.api.PullCommandTest.testPullConflict":398,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_nonmergeable":488,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored":99,"org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward":197,"org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge":52,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_SkipsSeenSubtree":38,"org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines":161,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge":332,"org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository":124,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig":401,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a":523,"org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart":277,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c":525,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b":524,"org.eclipse.jgit.api.BranchCommandTest.testCreateForce":278,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e":527,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d":526,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths":186,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch":285,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok":407,"org.eclipse.jgit.api.ResetCommandTest.testPathsReset":267,"org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase":126,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":493,"org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged":269,"org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule":58,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification":466,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply":452,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations":209,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint":322,"org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions":202,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testPathFilterOrOtherFilter":33,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit":198,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay":408,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution":170,"org.eclipse.jgit.api.ResetCommandTest.testSoftReset":261,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile":479,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount":234,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored":107,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin":585,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a":513,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk":49,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored":87,"org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack":584,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2":25,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict":482,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":211,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":328,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict":446,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":140,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleHEAD":422,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testInitiallyClean":420,"org.eclipse.jgit.revwalk.FIFORevQueueTest.testEmpty":10,"org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount":237,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b":519,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a":518,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d":521,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c":520,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName":123,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2":438,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit":352,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e":522,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore":191,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash":477,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingTreesWithoutIndex":590,"org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1":437,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution":147,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":178,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameSameAssumeValidDifferentContent":42,"org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree":429,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":228,"org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers":53,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":143,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit":117,"org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption":201,"org.eclipse.jgit.lib.IndexDiffTest.testRemoved":298,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile":252,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge":354,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree":200,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":227,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b":509,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a":508,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2":32,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete":51,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts":361,"org.eclipse.jgit.diff.DiffFormatterTest.testDiff":425,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy":362,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict":413,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktreeUntracked":419,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex":145,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeEqualTreesWithoutIndex":595,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange":456,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory":73,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c":515,"org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion":204,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b":514,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e":517,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d":516,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrue":386,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":492,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit":96,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit":460,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive":304,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a":538,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c":540,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b":539,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e":542,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckout":303,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d":541,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_NoGap":35,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded":350,"org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch":69,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCloseNameConflicts1":359,"org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch":397,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits":426,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_mixed_encoded":0,"org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines":159,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":257,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff":418,"org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig":399,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile":44,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard":355,"org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff":417,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches":461,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a":503,"org.eclipse.jgit.merge.ResolveMergerTest.checkUntrackedEmpytFolderIsNotAConflictWithFile":594,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict":436,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c":505,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b":504,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree":218,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail":459,"org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit":272,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames4":18,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a":495,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd":121,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b":496,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c":497,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d":498,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete":435,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e":499,"org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple":150,"org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie":283,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d":511,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c":510,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e":512,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1":15,"org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare":241,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames2":16,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames3":17,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag":276,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded2":3,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config":402,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue":470,"org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits":441,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified":108,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_7":371,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6":370,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_9":373,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":597,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_8":372,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict":365,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_2":367,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5":369,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs":61,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_4":368,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":173,"org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits":181,"org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent":259,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b":500,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":487,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c":501,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedSimple":290,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch":128,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator":77,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch":127,"org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged":296,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingNewTrees":588,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive":105,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_5b":382,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testRules1thru3_NoIndexEntry":356,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e":507,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d":506,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":476,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges":360,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk":85,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs":67,"org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare":353,"org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory":337,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug":292,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts":101,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit":89,"org.eclipse.jgit.api.MergeCommandTest.testMergeTag":206,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup":478,"org.eclipse.jgit.api.CleanCommandTest.testClean":185,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict2":406,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":462,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge":490,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches":132,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir":308,"org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_rightDFconflict1":405,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3":31,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption":205,"org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified":295,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1":29,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirs":187,"org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2":30,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip":238,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange":468,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndexAndWorktree":424,"org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete":50,"org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes":183,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored":91,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored":102,"org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries":56,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders":293,"org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged":114,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting":28,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict":306,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleBinaryFile":118,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit":331,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond":66,"org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug":294,"org.eclipse.jgit.lib.IndexDiffTest.testConflicting":301,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e":502,"org.eclipse.jgit.api.AddCommandTest.testExecutableRetention":116,"org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict":388,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue":444,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore":190,"org.eclipse.jgit.api.LogCommandTest.logAllCommits":235,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted":104,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted":106,"org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads":215,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare":245,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue":305,"org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines":156,"org.eclipse.jgit.api.NotesCommandTest.testListNotes":599,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups":251,"org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded":349,"org.eclipse.jgit.api.BlameCommandTest.testTwoRenames":160,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster":472,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange":471,"org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog":233,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch":318,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare":129,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_mergeable":491,"org.eclipse.jgit.lib.IndexDiffTest.testAdded":291,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSameDifferByAssumeValid":41,"org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles":208,"org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch":260,"org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog":232,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStates":79,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet":230,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":221,"org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange":428,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1":164,"org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2":165,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles":315,"org.eclipse.jgit.api.ResetCommandTest.testMixedReset":262,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag":326,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a":548,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_bad_encoded":4,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":135,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e":552,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d":551,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c":550,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b":549,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag":246,"org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict":192,"org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag":247,"org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort":458,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath":47,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData":464,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored":84,"org.eclipse.jgit.api.RebaseCommandTest.testUpToDate":480,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test020_createBlobTag":7,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked":86,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged":343,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFtrueBinary":387,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":9,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_6b":383,"org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote":600,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit":169,"org.eclipse.jgit.api.LogCommandTest.logPathWithSkip":239,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit":312,"org.eclipse.jgit.lib.IndexDiffTest.testUnchangedComplex":289,"org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException":134,"org.eclipse.jgit.api.MergeCommandTest.testSquashMerge":210,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_implicit_UTF8_encoded":1,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword":453,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange":65,"org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset":154,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":153,"org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules":122,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge":384,"org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir":158,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified":90,"org.eclipse.jgit.treewalk.AbstractTreeIteratorTest.testPathCompare":43,"org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime":263,"org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId":57,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk":94,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify":346,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch":243,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict":469,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare":240,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths":310,"org.eclipse.jgit.api.BlameCommandTest.testRename":163,"org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries":320,"org.eclipse.jgit.lib.IndexDiffTest.testModified":297,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeConflictingFilesWithTreeInIndex":593,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile":366,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":174,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a":543,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b":544,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c":545,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d":546,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e":547,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit":445,"org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict":203,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e":572,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleWorktree":421,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a":568,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b":569,"org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders":300,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c":570,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d":571,"org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare":250,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines":442,"org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths":80,"org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName":311,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict":485,"org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes":248,"org.eclipse.jgit.api.BlameCommandTest.testEditAllLines":162,"org.eclipse.jgit.api.BranchCommandTest.testCreateAndList":280,"org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir":155,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile":454,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset":175,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex":76,"org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange":82,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":83,"org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleSmallFileWithNewLine":119,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex":72,"org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge":266,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder":335,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps":455,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit":484,"org.eclipse.jgit.api.AddCommandTest.testAddWithConflicts":111,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange":339,"org.eclipse.jgit.merge.ResolveMergerTest.mergeWithCrlfInWT":596,"org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint":288,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutUncachedChanges":357,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d":576,"org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles":46,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile":385,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e":577,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit":341,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a":573,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3":404,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b":574,"org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout":314,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2":403,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c":575,"org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies":225,"org.eclipse.jgit.api.ResetCommandTest.testHardReset":264,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail":465,"org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch":347,"org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog":231,"org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges":81,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge":172,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting1":12,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex":194,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion":440,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting2":13,"org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery":302,"org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting3":14,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch":323,"org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree":151,"org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions":166,"org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo":242,"org.eclipse.jgit.api.PullCommandTest.testPullFastForward":390,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_17":381,"org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath":45,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip":483,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue":475,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_13":378,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_14":379,"org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict":336,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_16":380,"org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder":207,"org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed":212,"org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream":324,"org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits":334,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirectoryFileConflicts_11":377,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testNoDF_NoGap":34,"org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChangesAutoCRLFfalse":376,"org.eclipse.jgit.api.StashApplyCommandTest.indexDelete":345,"org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory":583,"org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward":220,"org.eclipse.jgit.api.DiffCommandTest.testDiffCached":182,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":138,"org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun":188,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting":27,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":217,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem":167,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward":226,"org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest":244,"org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName":327,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits":432,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting":26,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd":340,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory":63,"org.eclipse.jgit.treewalk.NameConflictTreeWalkTest.testDF_GapByOne":37,"org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead":78,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify":333,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_PublicParseMethod":5,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash":434,"org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge":199,"org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead":467,"org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2":396,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored":97,"org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists":313,"org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees":427,"org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision":249,"org.eclipse.jgit.treewalk.filter.InterIndexDiffFilterTest.testTwoSame":40,"org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent":196,"org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange":443,"org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention":55,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository":64,"org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete":344,"org.eclipse.jgit.api.PullCommandTest.testPullMerge":391,"org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit":274,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2":393,"org.eclipse.jgit.revwalk.RevTagParseTest.testParse_explicit_encoded":6,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3":394,"org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2":71,"org.eclipse.jgit.merge.CherryPickTest.testPick":415,"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeMergeableFilesWithTreeInIndex":591,"org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount":236,"org.eclipse.jgit.lib.IndexDiffSubmoduleTest.testDirtySubmoduleIndex":423,"org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun":189,"org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch":279,"org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified":103,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1":21,"org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple":62,"org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate":112,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3":23,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":136,"org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2":22,"org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree":222,"org.eclipse.jgit.api.RevertCommandTest.testRevert":152,"org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1":392},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"3dc2639e-4c37-11e5-8f6c-cf15a6aa0637","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackIndexV2:287","type":"CtIfImpl","sourcecode":"if (int == 0)\n    return -1;\n"},"variableMap":{"high":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:620","type":"CtIfImpl","sourcecode":"if (int >= 0)\n    return int;\n"},"status":-1},{"failures":[],"tindex":"3dc2639f-4c37-11e5-8f6c-1dbebce0db40","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.dfs.DfsPackFile:315","type":"CtIfImpl","sourcecode":"if (int <= 0)\n    int = int;\n"},"variableMap":{"bs":"i","wantSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:209","type":"CtForImpl","sourcecode":"for ( ; int < (java.lang.String[].int) ; ++int) {\n    java.lang.StringBuilder.append(java.lang.String[][int]);\n    java.lang.StringBuilder.append(\"\\n\");\n}"},"status":-2},{"failures":[],"tindex":"3dc263a0-4c37-11e5-8f6c-f90444edf861","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.DiffCommand:114","type":"CtIfImpl","sourcecode":"if (((java.io.OutputStream) != null) && (!(boolean)))\n    org.eclipse.jgit.diff.DiffFormatter = new org.eclipse.jgit.diff.DiffFormatter(new java.io.BufferedOutputStream(java.io.OutputStream));\nelse\n    org.eclipse.jgit.diff.DiffFormatter = new org.eclipse.jgit.diff.DiffFormatter(org.eclipse.jgit.util.io.NullOutputStream.org.eclipse.jgit.util.io.NullOutputStream);\n"},"status":-2},{"failures":[10,11],"tindex":"3dc28ab1-4c37-11e5-8f6c-b98e8e42c0ef","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.FS_POSIX:104","type":"CtReturnImpl","sourcecode":"return !(org.eclipse.jgit.util.SystemReader.getInstance().isMacOS())"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.revwalk.FIFORevQueue:146","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[12,13,14,15,16,17,18],"tindex":"3dc28ab2-4c37-11e5-8f6c-db0089d52789","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.util.RawParseUtils:125","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++ , int++)\n    if ((byte[][int]) != (byte[][int]))\n        return -1;\n    "},"variableMap":{"b":"raw","src":"raw","length":"bEnd","ptr":"aPos"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.ObjectChecker:293","type":"CtWhileImpl","sourcecode":"while ((int < int) && (int < int)) {\n    final int int = ((byte[][int++]) & 255) - ((byte[][int++]) & 255);\n    if (int != 0)\n        return int;\n    \n}"},"status":-1},{"failures":[],"tindex":"3dc28ab3-4c37-11e5-8f6c-c5695353eb8b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaEncoder:256","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:220","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Math.min(((long[].int) << 1), (1 + (org.eclipse.jgit.diff.Edit.getLengthA())))"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598],"tindex":"3dc28ab4-4c37-11e5-8f6c-d52d63620806","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:341","type":"CtIfImpl","sourcecode":"if (int > (int))\n    return (int) - ((int ^ (int)) & 1);\n"},"variableMap":{"maxK":"bEnd","k":"bEnd"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:344","type":"CtForImpl","sourcecode":"for ( ; (int < int) && (int < int) ; int++ , int++) {\n    final int int = ((byte[][int]) & 255) - ((byte[][int]) & 255);\n    if (int != 0)\n        return int;\n    \n}"},"status":-1},{"failures":[599,600,231,232,233],"tindex":"3dc2b1c5-4c37-11e5-8f6c-79217d36c65d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.AddNoteCommand:140","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.CommitBuilder.setTreeId(org.eclipse.jgit.notes.NoteMap.writeTree(org.eclipse.jgit.lib.ObjectInserter))"},"status":-1},{"failures":[38,172,355,360,375,376,378,379,386,387,406,409,199,207,432,437,438,440,447,448,494],"tindex":"3dc2b1c6-4c37-11e5-8f6c-f1688c640090","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.NameConflictTreeWalk:155","type":"CtIfImpl","sourcecode":"if ((((boolean) && org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator))) && (!org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.isTree(org.eclipse.jgit.treewalk.AbstractTreeIterator)))) && org.eclipse.jgit.treewalk.NameConflictTreeWalk.(org.eclipse.jgit.treewalk.NameConflictTreeWalk.nameEqual(org.eclipse.jgit.treewalk.AbstractTreeIterator, org.eclipse.jgit.treewalk.AbstractTreeIterator))) {\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    boolean = true;\n} else {\n    boolean = false;\n    org.eclipse.jgit.treewalk.AbstractTreeIterator.org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n    org.eclipse.jgit.treewalk.AbstractTreeIterator = org.eclipse.jgit.treewalk.AbstractTreeIterator;\n}"},"status":-1},{"failures":[],"tindex":"3dc2b1c7-4c37-11e5-8f6c-e51b8450798b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.MyersDiff:548","type":"CtInvocationImpl","sourcecode":"java.lang.System.exit(1)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.FetchCommand:280","type":"CtInvocationImpl","sourcecode":"this.java.util.List<org.eclipse.jgit.transport.RefSpec>.clear()"},"status":-1},{"failures":[57],"tindex":"3dc2b1c8-4c37-11e5-8f6c-ff7c57546f42","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.revwalk.MergeBaseGenerator:117","type":"CtOperatorAssignmentImpl","sourcecode":"int |= int"},"variableMap":{"flag":"i","branchMask":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:543","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-1},{"failures":[],"tindex":"3dc2b1c9-4c37-11e5-8f6c-47d32f75f5cc","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.notes.LeafBucket:232","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.notes.LeafBucket.growIfFull()"},"variableMap":{"this":"leaf"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.notes.NoteParser:141","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.notes.NoteParser.parseObjectId(org.eclipse.jgit.lib.MutableObjectId))\n    org.eclipse.jgit.notes.LeafBucket.parseOneEntry(org.eclipse.jgit.lib.MutableObjectId, org.eclipse.jgit.treewalk.AbstractTreeIterator.getEntryObjectId());\nelse\n    org.eclipse.jgit.notes.NoteParser.storeNonNote();\n"},"status":-2},{"failures":[],"tindex":"3dc2d8da-4c37-11e5-8f6c-bb6ef8c01564","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:333","type":"CtIfImpl","sourcecode":"if (int == 0)\n    int = 1;\n"},"variableMap":{"bits":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.MergeAlgorithm:150","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n    if (int != (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        org.eclipse.jgit.merge.MergeResult<S>.add(0, int, org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    } \n    org.eclipse.jgit.merge.MergeResult<S>.add(1, org.eclipse.jgit.diff.Edit.getBeginB(), org.eclipse.jgit.diff.Edit.getEndB(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    int = org.eclipse.jgit.diff.Edit.getEndA();\n    org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n} else if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n    if (int != (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        org.eclipse.jgit.merge.MergeResult<S>.add(0, int, org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    } \n    org.eclipse.jgit.merge.MergeResult<S>.add(2, org.eclipse.jgit.diff.Edit.getBeginB(), org.eclipse.jgit.diff.Edit.getEndB(), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    int = org.eclipse.jgit.diff.Edit.getEndA();\n    org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n} else {\n    if (((org.eclipse.jgit.diff.Edit.getBeginA()) != int) && ((org.eclipse.jgit.diff.Edit.getBeginA()) != int)) {\n        org.eclipse.jgit.merge.MergeResult<S>.add(0, int, java.lang.Math.min(org.eclipse.jgit.diff.Edit.getBeginA(), org.eclipse.jgit.diff.Edit.getBeginA()), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    } \n    int int = org.eclipse.jgit.diff.Edit.getBeginB();\n    int int = org.eclipse.jgit.diff.Edit.getBeginB();\n    if ((org.eclipse.jgit.diff.Edit.getBeginA()) < (org.eclipse.jgit.diff.Edit.getBeginA())) {\n        int -= (org.eclipse.jgit.diff.Edit.getBeginA()) - (org.eclipse.jgit.diff.Edit.getBeginA());\n    } else {\n        int -= (org.eclipse.jgit.diff.Edit.getBeginA()) - (org.eclipse.jgit.diff.Edit.getBeginA());\n    }\n    org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n    org.eclipse.jgit.diff.Edit org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n    for ( ;  ; ) {\n        if ((org.eclipse.jgit.diff.Edit.getEndA()) >= (org.eclipse.jgit.diff.Edit.getBeginA())) {\n            org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n            org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n        } else if ((org.eclipse.jgit.diff.Edit.getEndA()) >= (org.eclipse.jgit.diff.Edit.getBeginA())) {\n            org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n            org.eclipse.jgit.diff.Edit = org.eclipse.jgit.merge.MergeAlgorithm.org.eclipse.jgit.merge.MergeAlgorithm.nextEdit(java.util.Iterator<org.eclipse.jgit.diff.Edit>);\n        } else {\n            break;\n        }\n    }\n    int int = org.eclipse.jgit.diff.Edit.getEndB();\n    int int = org.eclipse.jgit.diff.Edit.getEndB();\n    if ((org.eclipse.jgit.diff.Edit.getEndA()) < (org.eclipse.jgit.diff.Edit.getEndA())) {\n        int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n    } else {\n        int += (org.eclipse.jgit.diff.Edit.getEndA()) - (org.eclipse.jgit.diff.Edit.getEndA());\n    }\n    int int = int - int;\n    int int = int - (int - int);\n    if (int > 0)\n        int -= int;\n    \n    int int = 0;\n    while ((int < int) && (org.eclipse.jgit.diff.SequenceComparator<S>.equals(S, (int + int), S, (int + int))))\n        int++;\n    int -= int;\n    int int = 0;\n    while ((int < int) && (org.eclipse.jgit.diff.SequenceComparator<S>.equals(S, ((int - int) - 1), S, ((int - int) - 1))))\n        int++;\n    int -= int;\n    if (int > 0)\n        org.eclipse.jgit.merge.MergeResult<S>.add(1, int, (int + int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    \n    if ((int > 0) || (int != 0)) {\n        org.eclipse.jgit.merge.MergeResult<S>.add(1, (int + int), (int - int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n        org.eclipse.jgit.merge.MergeResult<S>.add(2, (int + int), (int - int), org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    } \n    if (int > 0)\n        org.eclipse.jgit.merge.MergeResult<S>.add(1, (int - int), int, org.eclipse.jgit.merge.MergeChunk.ConflictState.org.eclipse.jgit.merge.MergeChunk.ConflictState);\n    \n    int = java.lang.Math.max(org.eclipse.jgit.diff.Edit.getEndA(), org.eclipse.jgit.diff.Edit.getEndA());\n    org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n    org.eclipse.jgit.diff.Edit = org.eclipse.jgit.diff.Edit;\n}"},"status":-2},{"failures":[],"tindex":"3dc2d8db-4c37-11e5-8f6c-53c8af31097f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.BatchingProgressMonitor:132","type":"CtIfImpl","sourcecode":"if ((org.eclipse.jgit.lib.BatchingProgressMonitor.Task) != null) {\n    org.eclipse.jgit.lib.BatchingProgressMonitor.Task.end(this);\n    org.eclipse.jgit.lib.BatchingProgressMonitor.Task = null;\n} "},"status":0},{"failures":[331,333,334,335,337,338,339,340,341,343,344,346,349,350,433,477],"tindex":"3dc2d8dc-4c37-11e5-8f6c-f51dbca36172","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.api.StashApplyCommand:318","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheBuilder.add(org.eclipse.jgit.dircache.DirCacheEntry)"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}