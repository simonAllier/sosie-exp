{"failureDictionary":{"org.eclipse.jgit.merge.ResolveMergerTest.checkMergeCrissCross":24,"org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip":21,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeid":7,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_DuplicateAButCommonUniqueInB":16,"org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone":2,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_MoveBlock":15,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLine":10,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_UniqueCommonLargerThanMatchPoint":17,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementWithChangeIdInCommitMessage":5,"org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned":0,"org.eclipse.jgit.merge.MergeAlgorithmTest.testTwoComplicatedModifications":20,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacement":13,"org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned":1,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_CommonGrowsPrefixAndSuffix":19,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySet":12,"org.eclipse.jgit.util.ChangeIdUtilTest.testChangeIdAlreadySetWithReplacement":8,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_InvertBlocks":18,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ThreeCommonPredecessors":22,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithSpacesBeforeId":9,"org.eclipse.jgit.diff.RawTextTest.testLineDelimiter":4,"org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned":3,"org.eclipse.jgit.diff.HistogramDiffTest.testEdit_LcsContainsUnique":14,"org.eclipse.jgit.merge.RecursiveMergerTest.crissCrossMerge_ParentsNotMergeable":23,"org.eclipse.jgit.util.ChangeIdUtilTest.testIndexOfChangeId":6,"org.eclipse.jgit.util.ChangeIdUtilTest.testHasChangeidWithReplacementInLastLineNoLineBreak":11},"transformations":[{"failures":[],"tindex":"8b9f6eb6-4c34-11e5-b991-354278af4d49","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.ReceivePack:224","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(500)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.RebaseTodoFile:221","type":"CtTryImpl","sourcecode":"try {\n    java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    for (org.eclipse.jgit.lib.RebaseTodoLine org.eclipse.jgit.lib.RebaseTodoLine : java.util.List<org.eclipse.jgit.lib.RebaseTodoLine>) {\n        java.lang.StringBuilder.setLength(0);\n        if (org.eclipse.jgit.lib.RebaseTodoLine.Action.org.eclipse.jgit.lib.RebaseTodoLine.Action.equals(org.eclipse.jgit.lib.RebaseTodoLine.org.eclipse.jgit.lib.RebaseTodoLine.Action))\n            java.lang.StringBuilder.append(org.eclipse.jgit.lib.RebaseTodoLine.getComment());\n        else {\n            java.lang.StringBuilder.append(org.eclipse.jgit.lib.RebaseTodoLine.getAction().toToken());\n            java.lang.StringBuilder.append(\" \");\n            java.lang.StringBuilder.append(org.eclipse.jgit.lib.RebaseTodoLine.getCommit().name());\n            java.lang.StringBuilder.append(\" \");\n            java.lang.StringBuilder.append(org.eclipse.jgit.lib.RebaseTodoLine.getShortMessage().trim());\n        }\n        java.lang.StringBuilder.append('\\n');\n        java.io.OutputStream.write(org.eclipse.jgit.lib.Constants.encode(java.lang.StringBuilder.toString()));\n    }\n} finally {\n    java.io.OutputStream.close();\n}"},"status":-2},{"failures":[0,1,2,3],"tindex":"8b9f95c7-4c34-11e5-b991-7558b4c365ae","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.GC:366","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.isEmpty())\n    return ;\n"},"variableMap":{"deletionCandidates":"id2File"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:460","type":"CtIfImpl","sourcecode":"if ((java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.remove(org.eclipse.jgit.revwalk.RevObject.getId())) != null)\n    if (java.util.Map<org.eclipse.jgit.lib.ObjectId, java.io.File>.isEmpty())\n        return ;\n    \n"},"status":-1},{"failures":[],"tindex":"8b9f95c8-4c34-11e5-b991-61b091412a3e","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaWindow:186","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.internal.storage.pack.DeltaIndex.estimateIndexSize(org.eclipse.jgit.internal.storage.pack.ObjectToPack.getWeight())"},"variableMap":{"ent":"id"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.UnpackedObject:202","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.isStandardFormat(byte[])) {\n    java.io.InputStream.reset();\n    java.util.zip.Inflater java.util.zip.Inflater = org.eclipse.jgit.internal.storage.file.WindowCursor.inflater();\n    java.io.InputStream java.io.InputStream = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.inflate(java.io.InputStream, java.util.zip.Inflater);\n    int int = org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(java.io.InputStream, byte[], 0, 64);\n    if (int < 5)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    final org.eclipse.jgit.util.MutableInteger org.eclipse.jgit.util.MutableInteger = new org.eclipse.jgit.util.MutableInteger();\n    org.eclipse.jgit.lib.Constants.decodeTypeString(org.eclipse.jgit.lib.AnyObjectId, byte[], ((byte)(' ')), org.eclipse.jgit.util.MutableInteger);\n    long long = org.eclipse.jgit.util.RawParseUtils.parseLongBase10(byte[], org.eclipse.jgit.util.MutableInteger.int, org.eclipse.jgit.util.MutableInteger);\n    if (long < 0)\n        throw new org.eclipse.jgit.errors.CorruptObjectException(org.eclipse.jgit.lib.AnyObjectId , org.eclipse.jgit.internal.JGitText.get().java.lang.String);\n    \n    return long;\n} else {\n    org.eclipse.jgit.internal.storage.file.UnpackedObject.org.eclipse.jgit.internal.storage.file.UnpackedObject.readSome(java.io.InputStream, byte[], 2, 18);\n    int int = (byte[][0]) & 255;\n    long long = int & 15;\n    int int = 4;\n    int int = 1;\n    while ((int & 128) != 0) {\n        int = (byte[][int++]) & 255;\n        long += ((long)((int & 127))) << int;\n        int += 7;\n    }\n    return long;\n}"},"status":-2},{"failures":[],"tindex":"8b9f95c9-4c34-11e5-b991-e15d27cae45b","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.pack.PackWriterBitmapPreparer:156","type":"CtIfImpl","sourcecode":"if (int > 0)\n    int = 0;\n"},"variableMap":{"nextIn":"oldSize","nextFlg":"oldSize"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.filter.ByteArraySet:199","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final byte[] byte[] = byte[][][int];\n    if (byte[] != null) {\n        org.eclipse.jgit.treewalk.filter.ByteArraySet.Hasher.init(byte[], byte[].int);\n        org.eclipse.jgit.treewalk.filter.ByteArraySet.insert(byte[], org.eclipse.jgit.treewalk.filter.ByteArraySet.Hasher.hash());\n    } \n}"},"status":-2},{"failures":[],"tindex":"8b9fbcda-4c34-11e5-b991-c32bb7a81af7","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.merge.MergeMessageFormatter:154","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Conflicts:\\n\")"},"variableMap":{"sb":"r"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.TagBuilder:232","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(((java.lang.String) != null ? java.lang.String : \"\"))"},"status":0},{"failures":[],"tindex":"8b9fbcdb-4c34-11e5-b991-334944d9f643","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:330","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) > 0) && (!(java.lang.String.endsWith(\"/\"))))\n    java.lang.String += \"/\";\n"},"variableMap":{"prefix":"cannotReadObject"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BundleFetchConnection:262","type":"CtTryImpl","sourcecode":"try {\n    org.eclipse.jgit.revwalk.RevCommit org.eclipse.jgit.revwalk.RevCommit;\n    while ((org.eclipse.jgit.revwalk.RevCommit = org.eclipse.jgit.revwalk.RevWalk.next()) != null) {\n        if (org.eclipse.jgit.revwalk.RevCommit.has(org.eclipse.jgit.revwalk.RevFlag)) {\n            org.eclipse.jgit.revwalk.RevCommit.add(org.eclipse.jgit.revwalk.RevFlag);\n            if ((--int) == 0)\n                break;\n            \n        } \n    }\n} catch (java.io.IOException err) {\n    throw new org.eclipse.jgit.errors.TransportException(org.eclipse.jgit.transport.Transport.org.eclipse.jgit.transport.URIish , org.eclipse.jgit.internal.JGitText.get().java.lang.String , java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"8b9fe3ec-4c34-11e5-b991-fdb88e6f4561","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.Transport:134","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"META-INF/services/\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.TransportHttp:257","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.eclipse.jgit.transport.URIish.toString()"},"status":-2},{"failures":[4],"tindex":"8b9fe3ed-4c34-11e5-b991-311139c20d99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.RawText:290","type":"CtIfImpl","sourcecode":"if ((byte[][(int - 1)]) != '\\n')\n    return null;\n"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13],"tindex":"8b9fe3ee-4c34-11e5-b991-f7576ebca3b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.ChangeIdUtil:248","type":"CtOperatorAssignmentImpl","sourcecode":"int += (java.lang.String[][int].length()) + (java.lang.String.length())"},"status":-1},{"failures":[],"tindex":"8b9fe3ef-4c34-11e5-b991-774ba2d69ee4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:540","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.RefDirectory.putLooseRef(new org.eclipse.jgit.internal.storage.file.RefDirectory.LooseUnpeeled(org.eclipse.jgit.internal.storage.file.FileSnapshot , org.eclipse.jgit.lib.Ref.getName() , org.eclipse.jgit.lib.ObjectId))"},"status":0},{"failures":[],"tindex":"8b9fe3f0-4c34-11e5-b991-552a16df9438","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.FileRepository:380","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.internal.storage.file.FileRepository.loadSystemConfig()"},"variableMap":{"this":"repository"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.RefAdvertiser:184","type":"CtForEachImpl","sourcecode":"for (org.eclipse.jgit.lib.Ref org.eclipse.jgit.lib.Ref : org.eclipse.jgit.transport.RefAdvertiser.getSortedRefs(java.util.Map<java.lang.String, org.eclipse.jgit.lib.Ref>)) {\n    if ((org.eclipse.jgit.lib.Ref.getObjectId()) == null)\n        continue;\n    \n    org.eclipse.jgit.transport.RefAdvertiser.advertiseAny(org.eclipse.jgit.lib.Ref.getObjectId(), org.eclipse.jgit.lib.Ref.getName());\n    if (!(boolean))\n        continue;\n    \n    if (!(org.eclipse.jgit.lib.Ref.isPeeled())) {\n        if ((org.eclipse.jgit.lib.Repository) == null)\n            continue;\n        \n        org.eclipse.jgit.lib.Ref = org.eclipse.jgit.lib.Repository.peel(org.eclipse.jgit.lib.Ref);\n    } \n    if ((org.eclipse.jgit.lib.Ref.getPeeledObjectId()) != null)\n        org.eclipse.jgit.transport.RefAdvertiser.advertiseAny(org.eclipse.jgit.lib.Ref.getPeeledObjectId(), ((org.eclipse.jgit.lib.Ref.getName()) + \"^{}\"));\n    \n}"},"status":-2},{"failures":[],"tindex":"8ba00b01-4c34-11e5-b991-c979db7539c0","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectoryUpdate:114","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > 0)\n    java.lang.String = (java.lang.String + \": \") + java.lang.String;\nelse\n    java.lang.String = java.lang.String;\n"},"variableMap":{"msg":"d","strResult":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.GC:262","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    if ((java.lang.String.length()) != ((org.eclipse.jgit.lib.Constants.int) - 2))\n        continue;\n    \n    org.eclipse.jgit.lib.ObjectId org.eclipse.jgit.lib.ObjectId;\n    try {\n        org.eclipse.jgit.lib.ObjectId = org.eclipse.jgit.lib.ObjectId.fromString((java.lang.String + java.lang.String));\n    } catch (java.lang.IllegalArgumentException notAnObject) {\n        continue;\n    }\n    boolean boolean = false;\n    for (org.eclipse.jgit.internal.storage.file.PackFile org.eclipse.jgit.internal.storage.file.PackFile : java.util.Collection<org.eclipse.jgit.internal.storage.file.PackFile>)\n        if (org.eclipse.jgit.internal.storage.file.PackFile.hasObject(org.eclipse.jgit.lib.ObjectId)) {\n            boolean = true;\n            break;\n        } \n    if (boolean)\n        org.eclipse.jgit.util.FileUtils.delete(org.eclipse.jgit.internal.storage.file.ObjectDirectory.fileFor(org.eclipse.jgit.lib.ObjectId), (((org.eclipse.jgit.util.FileUtils.int) | (org.eclipse.jgit.util.FileUtils.int)) | (org.eclipse.jgit.util.FileUtils.int)));\n    \n}"},"status":0},{"failures":[],"tindex":"8ba00b02-4c34-11e5-b991-57ba6668f355","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.AmazonS3:152","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"GMT\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.IgnoreRule:198","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String[][int]"},"status":-2},{"failures":[],"tindex":"8ba00b03-4c34-11e5-b991-370a158a6600","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.patch.FileHeader:529","type":"CtIfImpl","sourcecode":"if (int == int)\n    int = int;\n"},"variableMap":{"tab":"len","end":"len","ptr":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.treewalk.AbstractTreeIterator:282","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.treewalk.AbstractTreeIterator.setPathCapacity(int, int)"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24],"tindex":"8ba00b04-4c34-11e5-b991-c9965a6f6f8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.diff.HistogramDiffIndex:219","type":"CtIfImpl","sourcecode":"if (int == (long[].int)) {\n    int int = java.lang.Math.min(((long[].int) << 1), (1 + (org.eclipse.jgit.diff.Edit.getLengthA())));\n    long[] long[] = new long[int];\n    java.lang.System.arraycopy(long[], 0, long[], 0, long[].int);\n    long[] = long[];\n} "},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}