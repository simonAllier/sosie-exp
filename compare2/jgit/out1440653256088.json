{"failureDictionary":{"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify":34,"org.eclipse.jgit.revwalk.MaxCountRevFilterTest.testMaxCountRevFilter":9,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testCommitTimeRevFilter":13,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails":41,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers":57,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test024_createCommitNonAscii":4,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder":25,"org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths":60,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName":58,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict":42,"org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits":56,"org.eclipse.jgit.api.MergeCommandTest.testContentMerge":64,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict":46,"org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream":2,"org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilter":21,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod":8,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails":38,"org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree":26,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged":30,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit":29,"org.eclipse.jgit.api.DescribeCommandTest.testDescribe":53,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge":63,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify":23,"org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange":55,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD":45,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO":20,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder2":18,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_COMMIT_TIME_DESC_OutOfOrder1":17,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess":40,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitEntirelyShallow":15,"org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig":69,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails":37,"org.eclipse.jgit.revwalk.DateRevQueueTest.testCloneFIFO":11,"org.eclipse.jgit.api.StashCreateCommandTest.indexDelete":33,"org.eclipse.jgit.api.StashCreateCommandTest.indexAdd":27,"org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter":54,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test022_createCommitTag":3,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded":35,"org.eclipse.jgit.api.DescribeCommandTest.testDescribeBranch":49,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii":7,"org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers":47,"org.eclipse.jgit.api.PushCommandTest.testPushAfterGC":66,"org.eclipse.jgit.api.PushCommandTest.testPush":68,"org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch":1,"org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test1":22,"org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate":71,"org.eclipse.jgit.revwalk.RevWalkSortTest.testSort_TOPO_REVERSE":19,"org.eclipse.jgit.api.DescribeCommandTest.t1nearerT2":52,"org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict":61,"org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate":67,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd":28,"org.eclipse.jgit.api.DescribeCommandTest.t1DominatesT2":51,"org.eclipse.jgit.revwalk.RevWalkCullTest.testProperlyCullAllAncestors_LongHistory":14,"org.eclipse.jgit.util.IntListTest.testSet":0,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents":6,"org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict":44,"org.eclipse.jgit.revwalk.RevWalkFilterTest.testFilter_NO_MERGES":12,"org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec":70,"org.eclipse.jgit.revwalk.RevWalkShallowTest.testMergeCommitOneParentShallow":16,"org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete":32,"org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails":39,"org.eclipse.jgit.revwalk.DateRevQueueTest.testInsertOutOfOrder":10,"org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName":48,"org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit":59,"org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage":31,"org.eclipse.jgit.api.DescribeCommandTest.t1sameDepthT2":50,"org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree":62,"org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat":5,"org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits":24,"org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict":43,"org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessageWithCRLF":65,"org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded":36},"transformations":[{"failures":[],"tindex":"533fe4bf-4c7c-11e5-9ae1-0774874c758d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:841","type":"CtIfImpl","sourcecode":"if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n    if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n        if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n            return ;\n        else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    } else\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    \n} else\n    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n"},"variableMap":{"iMode":"mMode","headCommitTree":"hId","hId":"headCommitTree","iId":"mergeCommitTree","f":"f","dce":"dce","h":"h","this":"this","m":"m","hMode":"iMode","org.eclipse.jgit.lib.FileMode.TREE":"org.eclipse.jgit.lib.FileMode.GITLINK","name":"name","walk":"walk"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:814","type":"CtIfImpl","sourcecode":"if (org.eclipse.jgit.treewalk.CanonicalTreeParser == null) {\n    if (org.eclipse.jgit.lib.FileMode == (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode)) {\n        org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n    } else {\n        if (!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n            if ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader()))) {\n                if ((!(org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.treewalk.WorkingTreeIterator.getEntryFileMode()))) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.lib.FileMode)))\n                    return ;\n                else\n                    org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n                \n            } else\n                org.eclipse.jgit.dircache.DirCacheCheckout.remove(java.lang.String);\n            \n        } else\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        \n    }\n} else {\n    if (((!org.eclipse.jgit.dircache.DirCacheCheckout.(equalIdAndMode(org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId)))\n        org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n    else if ((!org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) && org.eclipse.jgit.dircache.DirCacheCheckout.(isModified_IndexTree(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode, org.eclipse.jgit.lib.ObjectId))) {\n        if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && (org.eclipse.jgit.lib.FileMode.org.eclipse.jgit.lib.FileMode.equals(org.eclipse.jgit.dircache.DirCacheEntry.getFileMode()))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        } else if ((org.eclipse.jgit.dircache.DirCacheEntry != null) && ((org.eclipse.jgit.treewalk.WorkingTreeIterator != null) && (org.eclipse.jgit.treewalk.WorkingTreeIterator.isModified(org.eclipse.jgit.dircache.DirCacheEntry, true, this.org.eclipse.jgit.treewalk.NameConflictTreeWalk.getObjectReader())))) {\n            org.eclipse.jgit.dircache.DirCacheCheckout.conflict(java.lang.String, org.eclipse.jgit.dircache.DirCacheEntry, org.eclipse.jgit.treewalk.CanonicalTreeParser, org.eclipse.jgit.treewalk.CanonicalTreeParser);\n        } else {\n            org.eclipse.jgit.dircache.DirCacheCheckout.update(java.lang.String, org.eclipse.jgit.lib.ObjectId, org.eclipse.jgit.lib.FileMode);\n        }\n    } else {\n        org.eclipse.jgit.dircache.DirCacheCheckout.keep(org.eclipse.jgit.dircache.DirCacheEntry);\n    }\n}"},"status":-2},{"failures":[0],"tindex":"53400bd0-4c7c-11e5-9ae1-7dfee52a7dac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.IntList:113","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(int)"},"status":-1},{"failures":[],"tindex":"53400bd1-4c7c-11e5-9ae1-5fb31da8f2f6","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.JschConfigSessionFactory:139","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(1000)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:155","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.events.ListenerList.dispatch(org.eclipse.jgit.events.RepositoryEvent<?>)"},"status":-2},{"failures":[1],"tindex":"53400bd2-4c7c-11e5-9ae1-df65b27ec2d8","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.treewalk.filter.TreeFilter:159","type":"CtReturnImpl","sourcecode":"return \"ANY_DIFF\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:765","type":"CtIfImpl","sourcecode":"if ((int--) == 1)\n    return org.eclipse.jgit.lib.CheckoutEntry.getFromBranch();\n"},"status":-1},{"failures":[2],"tindex":"53400bd3-4c7c-11e5-9ae1-1ff4142a8140","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.Repository:634","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.eclipse.jgit.transport.RefSpec.getDestination()"},"status":-1},{"failures":[],"tindex":"534032e4-4c7c-11e5-9ae1-5385fee6c71a","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.util.GitDateParser:219","type":"CtReturnImpl","sourcecode":"return org.eclipse.jgit.util.GitDateParser.java.util.Date"},"variableMap":{"org.eclipse.jgit.util.GitDateParser.NEVER":"ret"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.GitDateParser:222","type":"CtReturnImpl","sourcecode":"return java.util.Date"},"status":-2},{"failures":[],"tindex":"534032e5-4c7c-11e5-9ae1-fd90182dfd63","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:620","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.file.RefDirectory.readPackedRefs()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.RefDirectory:216","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> org.eclipse.jgit.util.RefList<org.eclipse.jgit.lib.Ref> = org.eclipse.jgit.internal.storage.file.RefDirectory.getPackedRefs()"},"status":0},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"534032e6-4c7c-11e5-9ae1-d7fcdd34e27d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.storage.file.FileBasedConfig:196","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(191)"},"variableMap":{"bos":"os"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.lib.CommitBuilder:285","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(' ')"},"status":-1},{"failures":[],"tindex":"534032e7-4c7c-11e5-9ae1-f383c9686e8f","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.diff.RawTextComparator:67","type":"CtIfImpl","sourcecode":"if ((int - int) != (int - int))\n    return false;\n"},"variableMap":{"bs":"subLenth","as":"subLenth","be":"subLenth","ae":"subLenth"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.ignore.internal.TrailingAsteriskMatcher:67","type":"CtIfImpl","sourcecode":"if (int == 0)\n    return true;\n"},"status":0},{"failures":[65],"tindex":"534032e8-4c7c-11e5-9ae1-531515f2031d","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.internal.storage.file.PackFile:403","type":"CtOperatorAssignmentImpl","sourcecode":"int += 20"},"variableMap":{"headerCnt":"ptr"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.util.RawParseUtils:1080","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"534059f9-4c7c-11e5-9ae1-f58668c85c27","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.treewalk.filter.IndexDiffFilter:194","type":"CtIfImpl","sourcecode":"if ((int == (int)) || (int == (int)))\n    continue;\n"},"variableMap":{"i":"i","workingTree":"i","dirCache":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder:124","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.lib.ObjectIdOwnerMap<org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry>.add(new org.eclipse.jgit.internal.storage.file.PackBitmapIndexBuilder.PositionEntry(org.eclipse.jgit.internal.storage.pack.ObjectToPack[][int] , int))"},"status":0},{"failures":[],"tindex":"534059fa-4c7c-11e5-9ae1-9df9a75cf54c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.dircache.DirCacheCheckout:1066","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.WorkingTreeIterator org.eclipse.jgit.treewalk.WorkingTreeIterator"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.merge.RecursiveMerger:179","type":"CtLocalVariableImpl","sourcecode":"org.eclipse.jgit.treewalk.WorkingTreeIterator org.eclipse.jgit.treewalk.WorkingTreeIterator = org.eclipse.jgit.treewalk.WorkingTreeIterator"},"status":-2},{"failures":[],"tindex":"534059fb-4c7c-11e5-9ae1-75b85412f48c","series":0,"name":"replace","transplant":{"position":"org.eclipse.jgit.transport.BasePackFetchConnection:550","type":"CtIfImpl","sourcecode":"if ((31 & int) != 0) {\n    continue;\n} "},"variableMap":{"havesSent":"org.eclipse.jgit.dircache.DirCacheEntry.P_MTIME"},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.dircache.DirCacheEntry:548","type":"CtInvocationImpl","sourcecode":"org.eclipse.jgit.dircache.DirCacheEntry.encodeTS(org.eclipse.jgit.dircache.DirCacheEntry.int, long)"},"status":-2},{"failures":[],"tindex":"534059fc-4c7c-11e5-9ae1-833b400bf6c7","series":0,"name":"add","transplant":{"position":"org.eclipse.jgit.transport.PacketLineOut:163","type":"CtLocalVariableImpl","sourcecode":"int int = 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.internal.storage.pack.DeltaIndex:162","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[40,66,67,68,69,70,71],"tindex":"534059fd-4c7c-11e5-9ae1-43339a2f3041","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.eclipse.jgit.transport.BasePackPushConnection:238","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.eclipse.jgit.transport.RemoteRefUpdate.getNewObjectId().name())"},"status":-1}],"header":{"groupId":"org.eclipse.jgit","transformationCount":15,"projectType":"maven","artifactId":"org.eclipse.jgit-parent","generatorVersion":"1.0","version":"3.7.0-SNAPSHOT"}}